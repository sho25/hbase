begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright 2009 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|tableindexed
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Writable
import|;
end_import

begin_comment
comment|/** Holds an array of index specifications.  *   */
end_comment

begin_class
specifier|public
class|class
name|IndexSpecificationArray
implements|implements
name|Writable
block|{
specifier|private
name|IndexSpecification
index|[]
name|indexSpecifications
decl_stmt|;
specifier|public
name|IndexSpecificationArray
parameter_list|()
block|{
comment|// FOr writable
block|}
specifier|public
name|IndexSpecificationArray
parameter_list|(
name|IndexSpecification
index|[]
name|specs
parameter_list|)
block|{
name|this
operator|.
name|indexSpecifications
operator|=
name|specs
expr_stmt|;
block|}
specifier|public
name|void
name|readFields
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|int
name|size
init|=
name|in
operator|.
name|readInt
argument_list|()
decl_stmt|;
name|indexSpecifications
operator|=
operator|new
name|IndexSpecification
index|[
name|size
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|size
condition|;
name|i
operator|++
control|)
block|{
name|indexSpecifications
index|[
name|i
index|]
operator|=
operator|new
name|IndexSpecification
argument_list|()
expr_stmt|;
name|indexSpecifications
index|[
name|i
index|]
operator|.
name|readFields
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|write
parameter_list|(
name|DataOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|writeInt
argument_list|(
name|indexSpecifications
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|IndexSpecification
name|indexSpec
range|:
name|indexSpecifications
control|)
block|{
name|indexSpec
operator|.
name|write
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
block|}
comment|/** Get indexSpecifications.    * @return indexSpecifications    */
specifier|public
name|IndexSpecification
index|[]
name|getIndexSpecifications
parameter_list|()
block|{
return|return
name|indexSpecifications
return|;
block|}
block|}
end_class

end_unit

