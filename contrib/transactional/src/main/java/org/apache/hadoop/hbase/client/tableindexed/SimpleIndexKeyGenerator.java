begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright 2009 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|tableindexed
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataInput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|DataOutput
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_comment
comment|/**Creates indexed keys for a single column. Index key consists of the column  * value followed by the row key of the indexed table to disambiguate.  *   * If the column values are guaranteed to be unique, consider  * {@link UniqueIndexKeyGenerator}.  *   */
end_comment

begin_class
specifier|public
class|class
name|SimpleIndexKeyGenerator
implements|implements
name|IndexKeyGenerator
block|{
specifier|private
name|byte
index|[]
name|column
decl_stmt|;
specifier|public
name|SimpleIndexKeyGenerator
parameter_list|(
name|byte
index|[]
name|column
parameter_list|)
block|{
name|this
operator|.
name|column
operator|=
name|column
expr_stmt|;
block|}
specifier|public
name|SimpleIndexKeyGenerator
parameter_list|()
block|{
comment|// For Writable
block|}
comment|/** {@inheritDoc} */
specifier|public
name|byte
index|[]
name|createIndexKey
parameter_list|(
name|byte
index|[]
name|rowKey
parameter_list|,
name|Map
argument_list|<
name|byte
index|[]
argument_list|,
name|byte
index|[]
argument_list|>
name|columns
parameter_list|)
block|{
return|return
name|Bytes
operator|.
name|add
argument_list|(
name|columns
operator|.
name|get
argument_list|(
name|column
argument_list|)
argument_list|,
name|rowKey
argument_list|)
return|;
block|}
comment|/** {@inheritDoc} */
specifier|public
name|void
name|readFields
parameter_list|(
name|DataInput
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|column
operator|=
name|Bytes
operator|.
name|readByteArray
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
comment|/** {@inheritDoc} */
specifier|public
name|void
name|write
parameter_list|(
name|DataOutput
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|Bytes
operator|.
name|writeByteArray
argument_list|(
name|out
argument_list|,
name|column
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

