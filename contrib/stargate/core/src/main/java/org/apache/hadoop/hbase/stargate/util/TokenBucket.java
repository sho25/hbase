begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2010 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|stargate
operator|.
name|util
package|;
end_package

begin_class
specifier|public
class|class
name|TokenBucket
block|{
specifier|private
name|int
name|tokens
decl_stmt|;
specifier|private
name|int
name|rate
decl_stmt|;
specifier|private
name|int
name|size
decl_stmt|;
specifier|private
name|long
name|lastUpdated
decl_stmt|;
comment|/**    * Constructor    * @param rate limit in units per second    * @param size maximum burst in units per second    */
specifier|public
name|TokenBucket
parameter_list|(
name|int
name|rate
parameter_list|,
name|int
name|size
parameter_list|)
block|{
name|this
operator|.
name|rate
operator|=
name|rate
expr_stmt|;
name|this
operator|.
name|tokens
operator|=
name|this
operator|.
name|size
operator|=
name|size
expr_stmt|;
block|}
comment|/**    * @return the number of remaining tokens in the bucket    */
specifier|public
name|int
name|available
parameter_list|()
block|{
name|long
name|now
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|long
name|elapsed
init|=
name|now
operator|-
name|lastUpdated
decl_stmt|;
name|lastUpdated
operator|=
name|now
expr_stmt|;
name|tokens
operator|+=
name|elapsed
operator|*
name|rate
expr_stmt|;
if|if
condition|(
name|tokens
operator|>
name|size
condition|)
block|{
name|tokens
operator|=
name|size
expr_stmt|;
block|}
return|return
name|tokens
return|;
block|}
comment|/**    * @param t the number of tokens to consume from the bucket    */
specifier|public
name|void
name|remove
parameter_list|(
name|int
name|t
parameter_list|)
block|{
name|tokens
operator|-=
name|t
expr_stmt|;
block|}
block|}
end_class

end_unit

