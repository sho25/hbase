begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2010 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|stargate
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Generic storage for per user information.  */
end_comment

begin_class
specifier|public
class|class
name|UserData
block|{
specifier|public
specifier|static
specifier|final
name|int
name|TOKENBUCKET
init|=
literal|1
decl_stmt|;
name|Map
argument_list|<
name|Integer
argument_list|,
name|Object
argument_list|>
name|data
init|=
operator|new
name|HashMap
argument_list|<
name|Integer
argument_list|,
name|Object
argument_list|>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
specifier|public
specifier|synchronized
name|boolean
name|has
parameter_list|(
specifier|final
name|int
name|sel
parameter_list|)
block|{
return|return
name|data
operator|.
name|get
argument_list|(
name|sel
argument_list|)
operator|!=
literal|null
return|;
block|}
specifier|public
specifier|synchronized
name|Object
name|get
parameter_list|(
specifier|final
name|int
name|sel
parameter_list|)
block|{
return|return
name|data
operator|.
name|get
argument_list|(
name|sel
argument_list|)
return|;
block|}
specifier|public
specifier|synchronized
name|Object
name|put
parameter_list|(
specifier|final
name|int
name|sel
parameter_list|,
specifier|final
name|Object
name|o
parameter_list|)
block|{
return|return
name|data
operator|.
name|put
argument_list|(
name|sel
argument_list|,
name|o
argument_list|)
return|;
block|}
specifier|public
specifier|synchronized
name|Object
name|remove
parameter_list|(
name|int
name|sel
parameter_list|)
block|{
return|return
name|data
operator|.
name|remove
argument_list|(
name|sel
argument_list|)
return|;
block|}
block|}
end_class

end_unit

