begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright 2011 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|io
operator|.
name|hfile
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Tests the BlockCacheColumnFamilySummary class  *   */
end_comment

begin_class
specifier|public
class|class
name|TestBlockCacheColumnFamilySummary
block|{
comment|/**    *     */
annotation|@
name|Test
specifier|public
name|void
name|testEquals
parameter_list|()
block|{
name|BlockCacheColumnFamilySummary
name|e1
init|=
operator|new
name|BlockCacheColumnFamilySummary
argument_list|()
decl_stmt|;
name|e1
operator|.
name|setTable
argument_list|(
literal|"table1"
argument_list|)
expr_stmt|;
name|e1
operator|.
name|setColumnFamily
argument_list|(
literal|"cf1"
argument_list|)
expr_stmt|;
name|BlockCacheColumnFamilySummary
name|e2
init|=
operator|new
name|BlockCacheColumnFamilySummary
argument_list|()
decl_stmt|;
name|e2
operator|.
name|setTable
argument_list|(
literal|"table1"
argument_list|)
expr_stmt|;
name|e2
operator|.
name|setColumnFamily
argument_list|(
literal|"cf1"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"bcse"
argument_list|,
name|e1
argument_list|,
name|e2
argument_list|)
expr_stmt|;
block|}
comment|/**    *     */
annotation|@
name|Test
specifier|public
name|void
name|testNotEquals
parameter_list|()
block|{
name|BlockCacheColumnFamilySummary
name|e1
init|=
operator|new
name|BlockCacheColumnFamilySummary
argument_list|()
decl_stmt|;
name|e1
operator|.
name|setTable
argument_list|(
literal|"table1"
argument_list|)
expr_stmt|;
name|e1
operator|.
name|setColumnFamily
argument_list|(
literal|"cf1"
argument_list|)
expr_stmt|;
name|BlockCacheColumnFamilySummary
name|e2
init|=
operator|new
name|BlockCacheColumnFamilySummary
argument_list|()
decl_stmt|;
name|e2
operator|.
name|setTable
argument_list|(
literal|"tablexxxxxx"
argument_list|)
expr_stmt|;
name|e2
operator|.
name|setColumnFamily
argument_list|(
literal|"cf1"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"bcse"
argument_list|,
operator|!
name|e1
operator|.
name|equals
argument_list|(
name|e2
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    *     */
annotation|@
name|Test
specifier|public
name|void
name|testMapLookup
parameter_list|()
block|{
name|Map
argument_list|<
name|BlockCacheColumnFamilySummary
argument_list|,
name|BlockCacheColumnFamilySummary
argument_list|>
name|bcs
init|=
operator|new
name|HashMap
argument_list|<
name|BlockCacheColumnFamilySummary
argument_list|,
name|BlockCacheColumnFamilySummary
argument_list|>
argument_list|()
decl_stmt|;
name|BlockCacheColumnFamilySummary
name|e1
init|=
operator|new
name|BlockCacheColumnFamilySummary
argument_list|(
literal|"table1"
argument_list|,
literal|"cf1"
argument_list|)
decl_stmt|;
name|BlockCacheColumnFamilySummary
name|lookup
init|=
name|bcs
operator|.
name|get
argument_list|(
name|e1
argument_list|)
decl_stmt|;
if|if
condition|(
name|lookup
operator|==
literal|null
condition|)
block|{
name|lookup
operator|=
name|BlockCacheColumnFamilySummary
operator|.
name|create
argument_list|(
name|e1
argument_list|)
expr_stmt|;
name|bcs
operator|.
name|put
argument_list|(
name|e1
argument_list|,
name|lookup
argument_list|)
expr_stmt|;
name|lookup
operator|.
name|incrementBlocks
argument_list|()
expr_stmt|;
name|lookup
operator|.
name|incrementHeapSize
argument_list|(
literal|100L
argument_list|)
expr_stmt|;
block|}
name|BlockCacheColumnFamilySummary
name|e2
init|=
operator|new
name|BlockCacheColumnFamilySummary
argument_list|(
literal|"table1"
argument_list|,
literal|"cf1"
argument_list|)
decl_stmt|;
name|BlockCacheColumnFamilySummary
name|l2
init|=
name|bcs
operator|.
name|get
argument_list|(
name|e2
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"blocks"
argument_list|,
literal|1
argument_list|,
name|l2
operator|.
name|getBlocks
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"heap"
argument_list|,
literal|100L
argument_list|,
name|l2
operator|.
name|getHeapSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    *     */
annotation|@
name|Test
specifier|public
name|void
name|testMapEntry
parameter_list|()
block|{
name|Map
argument_list|<
name|BlockCacheColumnFamilySummary
argument_list|,
name|BlockCacheColumnFamilySummary
argument_list|>
name|bcs
init|=
operator|new
name|HashMap
argument_list|<
name|BlockCacheColumnFamilySummary
argument_list|,
name|BlockCacheColumnFamilySummary
argument_list|>
argument_list|()
decl_stmt|;
name|BlockCacheColumnFamilySummary
name|e1
init|=
operator|new
name|BlockCacheColumnFamilySummary
argument_list|(
literal|"table1"
argument_list|,
literal|"cf1"
argument_list|)
decl_stmt|;
name|bcs
operator|.
name|put
argument_list|(
name|e1
argument_list|,
name|e1
argument_list|)
expr_stmt|;
name|BlockCacheColumnFamilySummary
name|e2
init|=
operator|new
name|BlockCacheColumnFamilySummary
argument_list|(
literal|"table1"
argument_list|,
literal|"cf1"
argument_list|)
decl_stmt|;
name|bcs
operator|.
name|put
argument_list|(
name|e2
argument_list|,
name|e2
argument_list|)
expr_stmt|;
name|BlockCacheColumnFamilySummary
name|e3
init|=
operator|new
name|BlockCacheColumnFamilySummary
argument_list|(
literal|"table1"
argument_list|,
literal|"cf1"
argument_list|)
decl_stmt|;
name|bcs
operator|.
name|put
argument_list|(
name|e3
argument_list|,
name|e3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"mapSize"
argument_list|,
literal|1
argument_list|,
name|bcs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

