begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotSame
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HRegionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|KeyValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ServerName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|executor
operator|.
name|EventHandler
operator|.
name|EventType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Threads
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Writables
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|zookeeper
operator|.
name|ZKAssign
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|zookeeper
operator|.
name|ZooKeeperWatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|zookeeper
operator|.
name|KeeperException
import|;
end_import

begin_comment
comment|/**  * Package scoped mocking utility.  */
end_comment

begin_class
specifier|public
class|class
name|Mocking
block|{
comment|/**    * @param sn ServerName to use making startcode and server in meta    * @param hri Region to serialize into HRegionInfo    * @return A mocked up Result that fakes a Get on a row in the    *<code>.META.</code> table.    * @throws IOException     */
specifier|static
name|Result
name|getMetaTableRowResult
parameter_list|(
specifier|final
name|HRegionInfo
name|hri
parameter_list|,
specifier|final
name|ServerName
name|sn
parameter_list|)
throws|throws
name|IOException
block|{
comment|// TODO: Move to a utilities class.  More than one test case can make use
comment|// of this facility.
name|List
argument_list|<
name|KeyValue
argument_list|>
name|kvs
init|=
operator|new
name|ArrayList
argument_list|<
name|KeyValue
argument_list|>
argument_list|()
decl_stmt|;
name|kvs
operator|.
name|add
argument_list|(
operator|new
name|KeyValue
argument_list|(
name|HConstants
operator|.
name|EMPTY_BYTE_ARRAY
argument_list|,
name|HConstants
operator|.
name|CATALOG_FAMILY
argument_list|,
name|HConstants
operator|.
name|REGIONINFO_QUALIFIER
argument_list|,
name|Writables
operator|.
name|getBytes
argument_list|(
name|hri
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|kvs
operator|.
name|add
argument_list|(
operator|new
name|KeyValue
argument_list|(
name|HConstants
operator|.
name|EMPTY_BYTE_ARRAY
argument_list|,
name|HConstants
operator|.
name|CATALOG_FAMILY
argument_list|,
name|HConstants
operator|.
name|SERVER_QUALIFIER
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|sn
operator|.
name|getHostAndPort
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|kvs
operator|.
name|add
argument_list|(
operator|new
name|KeyValue
argument_list|(
name|HConstants
operator|.
name|EMPTY_BYTE_ARRAY
argument_list|,
name|HConstants
operator|.
name|CATALOG_FAMILY
argument_list|,
name|HConstants
operator|.
name|STARTCODE_QUALIFIER
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|sn
operator|.
name|getStartcode
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
operator|new
name|Result
argument_list|(
name|kvs
argument_list|)
return|;
block|}
comment|/**    * Fakes the regionserver-side zk transitions of a region open.    * @param w ZooKeeperWatcher to use.    * @param sn Name of the regionserver doing the 'opening'    * @param hri Region we're 'opening'.    * @throws KeeperException    */
specifier|static
name|void
name|fakeRegionServerRegionOpenInZK
parameter_list|(
specifier|final
name|ZooKeeperWatcher
name|w
parameter_list|,
specifier|final
name|ServerName
name|sn
parameter_list|,
specifier|final
name|HRegionInfo
name|hri
parameter_list|)
throws|throws
name|KeeperException
block|{
comment|// Wait till we see the OFFLINE zk node before we proceed.
while|while
condition|(
operator|!
name|ZKAssign
operator|.
name|verifyRegionState
argument_list|(
name|w
argument_list|,
name|hri
argument_list|,
name|EventType
operator|.
name|M_ZK_REGION_OFFLINE
argument_list|)
condition|)
block|{
name|Threads
operator|.
name|sleep
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
comment|// Get current versionid else will fail on transition from OFFLINE to OPENING below
name|int
name|versionid
init|=
name|ZKAssign
operator|.
name|getVersion
argument_list|(
name|w
argument_list|,
name|hri
argument_list|)
decl_stmt|;
name|assertNotSame
argument_list|(
operator|-
literal|1
argument_list|,
name|versionid
argument_list|)
expr_stmt|;
comment|// This uglyness below is what the openregionhandler on RS side does.  I
comment|// looked at exposing the method over in openregionhandler but its just a
comment|// one liner and its deep over in another package so just repeat it below.
name|versionid
operator|=
name|ZKAssign
operator|.
name|transitionNode
argument_list|(
name|w
argument_list|,
name|hri
argument_list|,
name|sn
argument_list|,
name|EventType
operator|.
name|M_ZK_REGION_OFFLINE
argument_list|,
name|EventType
operator|.
name|RS_ZK_REGION_OPENING
argument_list|,
name|versionid
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
operator|-
literal|1
argument_list|,
name|versionid
argument_list|)
expr_stmt|;
comment|// Move znode from OPENING to OPENED as RS does on successful open.
name|versionid
operator|=
name|ZKAssign
operator|.
name|transitionNodeOpened
argument_list|(
name|w
argument_list|,
name|hri
argument_list|,
name|sn
argument_list|,
name|versionid
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
operator|-
literal|1
argument_list|,
name|versionid
argument_list|)
expr_stmt|;
comment|// We should be done now.  The master open handler will notice the
comment|// transition and remove this regions znode.
block|}
block|}
end_class

end_unit

