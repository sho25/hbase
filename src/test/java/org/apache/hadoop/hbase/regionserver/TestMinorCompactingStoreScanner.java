begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2009 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|KeyValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|KeyValueTestUtil
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|KeyValueScanFixture
operator|.
name|scanFixture
import|;
end_import

begin_class
specifier|public
class|class
name|TestMinorCompactingStoreScanner
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testDeleteFamiliy
parameter_list|()
throws|throws
name|IOException
block|{
name|KeyValue
index|[]
name|kvs
init|=
operator|new
name|KeyValue
index|[]
block|{
name|KeyValueTestUtil
operator|.
name|create
argument_list|(
literal|"R1"
argument_list|,
literal|"cf"
argument_list|,
literal|"a"
argument_list|,
literal|100
argument_list|,
name|KeyValue
operator|.
name|Type
operator|.
name|DeleteFamily
argument_list|,
literal|"dont-care"
argument_list|)
block|,
name|KeyValueTestUtil
operator|.
name|create
argument_list|(
literal|"R1"
argument_list|,
literal|"cf"
argument_list|,
literal|"b"
argument_list|,
literal|11
argument_list|,
name|KeyValue
operator|.
name|Type
operator|.
name|Put
argument_list|,
literal|"dont-care"
argument_list|)
block|,
name|KeyValueTestUtil
operator|.
name|create
argument_list|(
literal|"R1"
argument_list|,
literal|"cf"
argument_list|,
literal|"c"
argument_list|,
literal|11
argument_list|,
name|KeyValue
operator|.
name|Type
operator|.
name|Put
argument_list|,
literal|"dont-care"
argument_list|)
block|,
name|KeyValueTestUtil
operator|.
name|create
argument_list|(
literal|"R1"
argument_list|,
literal|"cf"
argument_list|,
literal|"d"
argument_list|,
literal|11
argument_list|,
name|KeyValue
operator|.
name|Type
operator|.
name|Put
argument_list|,
literal|"dont-care"
argument_list|)
block|,
name|KeyValueTestUtil
operator|.
name|create
argument_list|(
literal|"R1"
argument_list|,
literal|"cf"
argument_list|,
literal|"e"
argument_list|,
literal|11
argument_list|,
name|KeyValue
operator|.
name|Type
operator|.
name|Put
argument_list|,
literal|"dont-care"
argument_list|)
block|,
name|KeyValueTestUtil
operator|.
name|create
argument_list|(
literal|"R1"
argument_list|,
literal|"cf"
argument_list|,
literal|"e"
argument_list|,
literal|11
argument_list|,
name|KeyValue
operator|.
name|Type
operator|.
name|DeleteColumn
argument_list|,
literal|"dont-care"
argument_list|)
block|,
name|KeyValueTestUtil
operator|.
name|create
argument_list|(
literal|"R1"
argument_list|,
literal|"cf"
argument_list|,
literal|"f"
argument_list|,
literal|11
argument_list|,
name|KeyValue
operator|.
name|Type
operator|.
name|Put
argument_list|,
literal|"dont-care"
argument_list|)
block|,
name|KeyValueTestUtil
operator|.
name|create
argument_list|(
literal|"R1"
argument_list|,
literal|"cf"
argument_list|,
literal|"g"
argument_list|,
literal|11
argument_list|,
name|KeyValue
operator|.
name|Type
operator|.
name|Put
argument_list|,
literal|"dont-care"
argument_list|)
block|,
name|KeyValueTestUtil
operator|.
name|create
argument_list|(
literal|"R1"
argument_list|,
literal|"cf"
argument_list|,
literal|"g"
argument_list|,
literal|11
argument_list|,
name|KeyValue
operator|.
name|Type
operator|.
name|Delete
argument_list|,
literal|"dont-care"
argument_list|)
block|,
name|KeyValueTestUtil
operator|.
name|create
argument_list|(
literal|"R1"
argument_list|,
literal|"cf"
argument_list|,
literal|"h"
argument_list|,
literal|11
argument_list|,
name|KeyValue
operator|.
name|Type
operator|.
name|Put
argument_list|,
literal|"dont-care"
argument_list|)
block|,
name|KeyValueTestUtil
operator|.
name|create
argument_list|(
literal|"R1"
argument_list|,
literal|"cf"
argument_list|,
literal|"i"
argument_list|,
literal|11
argument_list|,
name|KeyValue
operator|.
name|Type
operator|.
name|Put
argument_list|,
literal|"dont-care"
argument_list|)
block|,
name|KeyValueTestUtil
operator|.
name|create
argument_list|(
literal|"R2"
argument_list|,
literal|"cf"
argument_list|,
literal|"a"
argument_list|,
literal|11
argument_list|,
name|KeyValue
operator|.
name|Type
operator|.
name|Put
argument_list|,
literal|"dont-care"
argument_list|)
block|,     }
decl_stmt|;
name|List
argument_list|<
name|KeyValueScanner
argument_list|>
name|scanners
init|=
name|scanFixture
argument_list|(
name|kvs
argument_list|)
decl_stmt|;
name|InternalScanner
name|scan
init|=
operator|new
name|MinorCompactingStoreScanner
argument_list|(
literal|"cf"
argument_list|,
name|KeyValue
operator|.
name|COMPARATOR
argument_list|,
name|scanners
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|KeyValue
argument_list|>
name|results
init|=
operator|new
name|ArrayList
argument_list|<
name|KeyValue
argument_list|>
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|scan
operator|.
name|next
argument_list|(
name|results
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|11
argument_list|,
name|results
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
literal|0
index|]
argument_list|,
name|results
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
literal|1
index|]
argument_list|,
name|results
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
literal|2
index|]
argument_list|,
name|results
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
literal|3
index|]
argument_list|,
name|results
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
literal|5
index|]
argument_list|,
name|results
operator|.
name|get
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
literal|4
index|]
argument_list|,
name|results
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
literal|6
index|]
argument_list|,
name|results
operator|.
name|get
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
literal|8
index|]
argument_list|,
name|results
operator|.
name|get
argument_list|(
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
literal|7
index|]
argument_list|,
name|results
operator|.
name|get
argument_list|(
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
literal|9
index|]
argument_list|,
name|results
operator|.
name|get
argument_list|(
literal|9
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
literal|10
index|]
argument_list|,
name|results
operator|.
name|get
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|results
operator|.
name|clear
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
name|scan
operator|.
name|next
argument_list|(
name|results
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|results
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
name|kvs
operator|.
name|length
operator|-
literal|1
index|]
argument_list|,
name|results
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDeleteVersion
parameter_list|()
throws|throws
name|IOException
block|{
name|KeyValue
index|[]
name|kvs
init|=
operator|new
name|KeyValue
index|[]
block|{
name|KeyValueTestUtil
operator|.
name|create
argument_list|(
literal|"R1"
argument_list|,
literal|"cf"
argument_list|,
literal|"a"
argument_list|,
literal|15
argument_list|,
name|KeyValue
operator|.
name|Type
operator|.
name|Put
argument_list|,
literal|"dont-care"
argument_list|)
block|,
name|KeyValueTestUtil
operator|.
name|create
argument_list|(
literal|"R1"
argument_list|,
literal|"cf"
argument_list|,
literal|"a"
argument_list|,
literal|10
argument_list|,
name|KeyValue
operator|.
name|Type
operator|.
name|Delete
argument_list|,
literal|"dont-care"
argument_list|)
block|,
name|KeyValueTestUtil
operator|.
name|create
argument_list|(
literal|"R1"
argument_list|,
literal|"cf"
argument_list|,
literal|"a"
argument_list|,
literal|10
argument_list|,
name|KeyValue
operator|.
name|Type
operator|.
name|Put
argument_list|,
literal|"dont-care"
argument_list|)
block|}
decl_stmt|;
name|List
argument_list|<
name|KeyValueScanner
argument_list|>
name|scanners
init|=
name|scanFixture
argument_list|(
name|kvs
argument_list|)
decl_stmt|;
name|InternalScanner
name|scan
init|=
operator|new
name|MinorCompactingStoreScanner
argument_list|(
literal|"cf"
argument_list|,
name|KeyValue
operator|.
name|COMPARATOR
argument_list|,
name|scanners
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|KeyValue
argument_list|>
name|results
init|=
operator|new
name|ArrayList
argument_list|<
name|KeyValue
argument_list|>
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
name|scan
operator|.
name|next
argument_list|(
name|results
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|results
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
literal|0
index|]
argument_list|,
name|results
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
literal|1
index|]
argument_list|,
name|results
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
literal|2
index|]
argument_list|,
name|results
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

