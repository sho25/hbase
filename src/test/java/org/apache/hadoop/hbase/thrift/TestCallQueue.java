begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements. See the NOTICE file distributed with this  * work for additional information regarding copyright ownership. The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|thrift
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|LinkedBlockingQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseTestingUtility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|SmallTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|thrift
operator|.
name|CallQueue
operator|.
name|Call
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics
operator|.
name|ContextFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics
operator|.
name|MetricsContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics
operator|.
name|MetricsUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics
operator|.
name|spi
operator|.
name|NoEmitMetricsContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics
operator|.
name|spi
operator|.
name|OutputRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|Parameters
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Unit testing for CallQueue, a part of the  * org.apache.hadoop.hbase.thrift package.  */
end_comment

begin_class
annotation|@
name|Category
argument_list|(
name|SmallTests
operator|.
name|class
argument_list|)
annotation|@
name|RunWith
argument_list|(
name|Parameterized
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestCallQueue
block|{
specifier|public
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|TestCallQueue
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|HBaseTestingUtility
name|UTIL
init|=
operator|new
name|HBaseTestingUtility
argument_list|()
decl_stmt|;
specifier|private
name|int
name|elementsAdded
decl_stmt|;
specifier|private
name|int
name|elementsRemoved
decl_stmt|;
annotation|@
name|Parameters
specifier|public
specifier|static
name|Collection
argument_list|<
name|Object
index|[]
argument_list|>
name|getParameters
parameter_list|()
block|{
name|Collection
argument_list|<
name|Object
index|[]
argument_list|>
name|parameters
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
index|[]
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|elementsAdded
range|:
operator|new
name|int
index|[]
block|{
literal|100
block|,
literal|200
block|,
literal|300
block|}
control|)
block|{
for|for
control|(
name|int
name|elementsRemoved
range|:
operator|new
name|int
index|[]
block|{
literal|0
block|,
literal|20
block|,
literal|100
block|}
control|)
block|{
name|parameters
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
operator|new
name|Integer
argument_list|(
name|elementsAdded
argument_list|)
block|,
operator|new
name|Integer
argument_list|(
name|elementsRemoved
argument_list|)
block|}
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|parameters
return|;
block|}
specifier|public
name|TestCallQueue
parameter_list|(
name|int
name|elementsAdded
parameter_list|,
name|int
name|elementsRemoved
parameter_list|)
block|{
name|this
operator|.
name|elementsAdded
operator|=
name|elementsAdded
expr_stmt|;
name|this
operator|.
name|elementsRemoved
operator|=
name|elementsRemoved
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"elementsAdded:"
operator|+
name|elementsAdded
operator|+
literal|" elementsRemoved:"
operator|+
name|elementsRemoved
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|3000
argument_list|)
specifier|public
name|void
name|testPutTake
parameter_list|()
throws|throws
name|Exception
block|{
name|ThriftMetrics
name|metrics
init|=
name|createMetrics
argument_list|()
decl_stmt|;
name|CallQueue
name|callQueue
init|=
operator|new
name|CallQueue
argument_list|(
operator|new
name|LinkedBlockingQueue
argument_list|<
name|Call
argument_list|>
argument_list|()
argument_list|,
name|metrics
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|elementsAdded
condition|;
operator|++
name|i
control|)
block|{
name|callQueue
operator|.
name|put
argument_list|(
name|createDummyRunnable
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|elementsRemoved
condition|;
operator|++
name|i
control|)
block|{
name|callQueue
operator|.
name|take
argument_list|()
expr_stmt|;
block|}
name|verifyMetrics
argument_list|(
name|metrics
argument_list|,
literal|"timeInQueue_num_ops"
argument_list|,
name|elementsRemoved
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|3000
argument_list|)
specifier|public
name|void
name|testOfferPoll
parameter_list|()
throws|throws
name|Exception
block|{
name|ThriftMetrics
name|metrics
init|=
name|createMetrics
argument_list|()
decl_stmt|;
name|CallQueue
name|callQueue
init|=
operator|new
name|CallQueue
argument_list|(
operator|new
name|LinkedBlockingQueue
argument_list|<
name|Call
argument_list|>
argument_list|()
argument_list|,
name|metrics
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|elementsAdded
condition|;
operator|++
name|i
control|)
block|{
name|callQueue
operator|.
name|offer
argument_list|(
name|createDummyRunnable
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|elementsRemoved
condition|;
operator|++
name|i
control|)
block|{
name|callQueue
operator|.
name|poll
argument_list|()
expr_stmt|;
block|}
name|verifyMetrics
argument_list|(
name|metrics
argument_list|,
literal|"timeInQueue_num_ops"
argument_list|,
name|elementsRemoved
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|ThriftMetrics
name|createMetrics
parameter_list|()
throws|throws
name|Exception
block|{
name|setupMetricsContext
argument_list|()
expr_stmt|;
name|Configuration
name|conf
init|=
name|UTIL
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
return|return
operator|new
name|ThriftMetrics
argument_list|(
name|ThriftServerRunner
operator|.
name|DEFAULT_LISTEN_PORT
argument_list|,
name|conf
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|void
name|setupMetricsContext
parameter_list|()
throws|throws
name|Exception
block|{
name|ContextFactory
name|factory
init|=
name|ContextFactory
operator|.
name|getFactory
argument_list|()
decl_stmt|;
name|factory
operator|.
name|setAttribute
argument_list|(
name|ThriftMetrics
operator|.
name|CONTEXT_NAME
operator|+
literal|".class"
argument_list|,
name|NoEmitMetricsContext
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|MetricsUtil
operator|.
name|getContext
argument_list|(
name|ThriftMetrics
operator|.
name|CONTEXT_NAME
argument_list|)
operator|.
name|createRecord
argument_list|(
name|ThriftMetrics
operator|.
name|CONTEXT_NAME
argument_list|)
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|verifyMetrics
parameter_list|(
name|ThriftMetrics
name|metrics
parameter_list|,
name|String
name|name
parameter_list|,
name|int
name|expectValue
parameter_list|)
throws|throws
name|Exception
block|{
name|MetricsContext
name|context
init|=
name|MetricsUtil
operator|.
name|getContext
argument_list|(
name|ThriftMetrics
operator|.
name|CONTEXT_NAME
argument_list|)
decl_stmt|;
name|metrics
operator|.
name|doUpdates
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|OutputRecord
name|record
init|=
name|context
operator|.
name|getAllRecords
argument_list|()
operator|.
name|get
argument_list|(
name|ThriftMetrics
operator|.
name|CONTEXT_NAME
argument_list|)
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expectValue
argument_list|,
name|record
operator|.
name|getMetric
argument_list|(
name|name
argument_list|)
operator|.
name|intValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|Runnable
name|createDummyRunnable
parameter_list|()
block|{
return|return
operator|new
name|Runnable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{       }
block|}
return|;
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Rule
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ResourceCheckerJUnitRule
name|cu
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ResourceCheckerJUnitRule
argument_list|()
decl_stmt|;
block|}
end_class

end_unit

