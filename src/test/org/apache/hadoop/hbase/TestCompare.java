begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_comment
comment|/**  * Test comparing HBase objects.  */
end_comment

begin_class
specifier|public
class|class
name|TestCompare
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testHRegionInfo
parameter_list|()
block|{
name|HRegionInfo
name|a
init|=
operator|new
name|HRegionInfo
argument_list|(
literal|1
argument_list|,
operator|new
name|HTableDescriptor
argument_list|(
literal|"a"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|HRegionInfo
name|b
init|=
operator|new
name|HRegionInfo
argument_list|(
literal|2
argument_list|,
operator|new
name|HTableDescriptor
argument_list|(
literal|"b"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|a
operator|.
name|compareTo
argument_list|(
name|b
argument_list|)
operator|!=
literal|0
argument_list|)
expr_stmt|;
name|HTableDescriptor
name|t
init|=
operator|new
name|HTableDescriptor
argument_list|(
literal|"t"
argument_list|)
decl_stmt|;
name|Text
name|midway
init|=
operator|new
name|Text
argument_list|(
literal|"midway"
argument_list|)
decl_stmt|;
name|a
operator|=
operator|new
name|HRegionInfo
argument_list|(
literal|1
argument_list|,
name|t
argument_list|,
literal|null
argument_list|,
name|midway
argument_list|)
expr_stmt|;
name|b
operator|=
operator|new
name|HRegionInfo
argument_list|(
literal|2
argument_list|,
name|t
argument_list|,
name|midway
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|a
operator|.
name|compareTo
argument_list|(
name|b
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|b
operator|.
name|compareTo
argument_list|(
name|a
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|a
argument_list|,
name|a
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|a
operator|.
name|compareTo
argument_list|(
name|a
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
name|a
operator|=
operator|new
name|HRegionInfo
argument_list|(
literal|1
argument_list|,
name|t
argument_list|,
operator|new
name|Text
argument_list|(
literal|"a"
argument_list|)
argument_list|,
operator|new
name|Text
argument_list|(
literal|"d"
argument_list|)
argument_list|)
expr_stmt|;
name|b
operator|=
operator|new
name|HRegionInfo
argument_list|(
literal|2
argument_list|,
name|t
argument_list|,
operator|new
name|Text
argument_list|(
literal|"e"
argument_list|)
argument_list|,
operator|new
name|Text
argument_list|(
literal|"g"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|a
operator|.
name|compareTo
argument_list|(
name|b
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|a
operator|=
operator|new
name|HRegionInfo
argument_list|(
literal|1
argument_list|,
name|t
argument_list|,
operator|new
name|Text
argument_list|(
literal|"aaaa"
argument_list|)
argument_list|,
operator|new
name|Text
argument_list|(
literal|"dddd"
argument_list|)
argument_list|)
expr_stmt|;
name|b
operator|=
operator|new
name|HRegionInfo
argument_list|(
literal|2
argument_list|,
name|t
argument_list|,
operator|new
name|Text
argument_list|(
literal|"e"
argument_list|)
argument_list|,
operator|new
name|Text
argument_list|(
literal|"g"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|a
operator|.
name|compareTo
argument_list|(
name|b
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
name|a
operator|=
operator|new
name|HRegionInfo
argument_list|(
literal|1
argument_list|,
name|t
argument_list|,
operator|new
name|Text
argument_list|(
literal|"aaaa"
argument_list|)
argument_list|,
operator|new
name|Text
argument_list|(
literal|"dddd"
argument_list|)
argument_list|)
expr_stmt|;
name|b
operator|=
operator|new
name|HRegionInfo
argument_list|(
literal|2
argument_list|,
name|t
argument_list|,
operator|new
name|Text
argument_list|(
literal|"aaaa"
argument_list|)
argument_list|,
operator|new
name|Text
argument_list|(
literal|"eeee"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|a
operator|.
name|compareTo
argument_list|(
name|b
argument_list|)
operator|<
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

