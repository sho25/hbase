begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2009 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|KeyValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_class
specifier|public
class|class
name|TestScanDeleteTracker
extends|extends
name|HBaseTestCase
implements|implements
name|HConstants
block|{
specifier|private
name|ScanDeleteTracker
name|sdt
decl_stmt|;
specifier|private
name|long
name|timestamp
init|=
literal|10L
decl_stmt|;
specifier|private
name|byte
name|deleteType
init|=
literal|0
decl_stmt|;
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|sdt
operator|=
operator|new
name|ScanDeleteTracker
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testDeletedBy_Delete
parameter_list|()
block|{
name|byte
index|[]
name|qualifier
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"qualifier"
argument_list|)
decl_stmt|;
name|deleteType
operator|=
name|KeyValue
operator|.
name|Type
operator|.
name|Delete
operator|.
name|getCode
argument_list|()
expr_stmt|;
name|sdt
operator|.
name|add
argument_list|(
name|qualifier
argument_list|,
literal|0
argument_list|,
name|qualifier
operator|.
name|length
argument_list|,
name|timestamp
argument_list|,
name|deleteType
argument_list|)
expr_stmt|;
name|boolean
name|ret
init|=
name|sdt
operator|.
name|isDeleted
argument_list|(
name|qualifier
argument_list|,
literal|0
argument_list|,
name|qualifier
operator|.
name|length
argument_list|,
name|timestamp
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|ret
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDeletedBy_DeleteColumn
parameter_list|()
block|{
name|byte
index|[]
name|qualifier
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"qualifier"
argument_list|)
decl_stmt|;
name|deleteType
operator|=
name|KeyValue
operator|.
name|Type
operator|.
name|DeleteColumn
operator|.
name|getCode
argument_list|()
expr_stmt|;
name|sdt
operator|.
name|add
argument_list|(
name|qualifier
argument_list|,
literal|0
argument_list|,
name|qualifier
operator|.
name|length
argument_list|,
name|timestamp
argument_list|,
name|deleteType
argument_list|)
expr_stmt|;
name|timestamp
operator|-=
literal|5
expr_stmt|;
name|boolean
name|ret
init|=
name|sdt
operator|.
name|isDeleted
argument_list|(
name|qualifier
argument_list|,
literal|0
argument_list|,
name|qualifier
operator|.
name|length
argument_list|,
name|timestamp
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|ret
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDeletedBy_DeleteFamily
parameter_list|()
block|{
name|byte
index|[]
name|qualifier
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"qualifier"
argument_list|)
decl_stmt|;
name|deleteType
operator|=
name|KeyValue
operator|.
name|Type
operator|.
name|DeleteFamily
operator|.
name|getCode
argument_list|()
expr_stmt|;
name|sdt
operator|.
name|add
argument_list|(
name|qualifier
argument_list|,
literal|0
argument_list|,
name|qualifier
operator|.
name|length
argument_list|,
name|timestamp
argument_list|,
name|deleteType
argument_list|)
expr_stmt|;
name|timestamp
operator|-=
literal|5
expr_stmt|;
name|boolean
name|ret
init|=
name|sdt
operator|.
name|isDeleted
argument_list|(
name|qualifier
argument_list|,
literal|0
argument_list|,
name|qualifier
operator|.
name|length
argument_list|,
name|timestamp
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|ret
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDelete_DeleteColumn
parameter_list|()
block|{
name|byte
index|[]
name|qualifier
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"qualifier"
argument_list|)
decl_stmt|;
name|deleteType
operator|=
name|KeyValue
operator|.
name|Type
operator|.
name|Delete
operator|.
name|getCode
argument_list|()
expr_stmt|;
name|sdt
operator|.
name|add
argument_list|(
name|qualifier
argument_list|,
literal|0
argument_list|,
name|qualifier
operator|.
name|length
argument_list|,
name|timestamp
argument_list|,
name|deleteType
argument_list|)
expr_stmt|;
name|timestamp
operator|-=
literal|5
expr_stmt|;
name|deleteType
operator|=
name|KeyValue
operator|.
name|Type
operator|.
name|DeleteColumn
operator|.
name|getCode
argument_list|()
expr_stmt|;
name|sdt
operator|.
name|add
argument_list|(
name|qualifier
argument_list|,
literal|0
argument_list|,
name|qualifier
operator|.
name|length
argument_list|,
name|timestamp
argument_list|,
name|deleteType
argument_list|)
expr_stmt|;
name|timestamp
operator|-=
literal|5
expr_stmt|;
name|boolean
name|ret
init|=
name|sdt
operator|.
name|isDeleted
argument_list|(
name|qualifier
argument_list|,
literal|0
argument_list|,
name|qualifier
operator|.
name|length
argument_list|,
name|timestamp
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|ret
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDeleteColumn_Delete
parameter_list|()
block|{
name|byte
index|[]
name|qualifier
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"qualifier"
argument_list|)
decl_stmt|;
name|deleteType
operator|=
name|KeyValue
operator|.
name|Type
operator|.
name|DeleteColumn
operator|.
name|getCode
argument_list|()
expr_stmt|;
name|sdt
operator|.
name|add
argument_list|(
name|qualifier
argument_list|,
literal|0
argument_list|,
name|qualifier
operator|.
name|length
argument_list|,
name|timestamp
argument_list|,
name|deleteType
argument_list|)
expr_stmt|;
name|qualifier
operator|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"qualifier1"
argument_list|)
expr_stmt|;
name|deleteType
operator|=
name|KeyValue
operator|.
name|Type
operator|.
name|Delete
operator|.
name|getCode
argument_list|()
expr_stmt|;
name|sdt
operator|.
name|add
argument_list|(
name|qualifier
argument_list|,
literal|0
argument_list|,
name|qualifier
operator|.
name|length
argument_list|,
name|timestamp
argument_list|,
name|deleteType
argument_list|)
expr_stmt|;
name|boolean
name|ret
init|=
name|sdt
operator|.
name|isDeleted
argument_list|(
name|qualifier
argument_list|,
literal|0
argument_list|,
name|qualifier
operator|.
name|length
argument_list|,
name|timestamp
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|ret
argument_list|)
expr_stmt|;
block|}
comment|//Testing new way where we save the Delete in case of a Delete for specific
comment|//ts, could have just added the last line to the first test, but rather keep
comment|//them separated
specifier|public
name|void
name|testDelete_KeepDelete
parameter_list|()
block|{
name|byte
index|[]
name|qualifier
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"qualifier"
argument_list|)
decl_stmt|;
name|deleteType
operator|=
name|KeyValue
operator|.
name|Type
operator|.
name|Delete
operator|.
name|getCode
argument_list|()
expr_stmt|;
name|sdt
operator|.
name|add
argument_list|(
name|qualifier
argument_list|,
literal|0
argument_list|,
name|qualifier
operator|.
name|length
argument_list|,
name|timestamp
argument_list|,
name|deleteType
argument_list|)
expr_stmt|;
name|sdt
operator|.
name|isDeleted
argument_list|(
name|qualifier
argument_list|,
literal|0
argument_list|,
name|qualifier
operator|.
name|length
argument_list|,
name|timestamp
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|sdt
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

