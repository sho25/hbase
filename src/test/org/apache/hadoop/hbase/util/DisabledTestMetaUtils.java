begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright 2008 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseClusterTestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HColumnDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HTableDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|MiniHBaseCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|HBaseAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|HTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|HConnectionManager
import|;
end_import

begin_comment
comment|/**  * Test is flakey.  Needs work.  Fails too often on hudson.  */
end_comment

begin_class
specifier|public
class|class
name|DisabledTestMetaUtils
extends|extends
name|HBaseClusterTestCase
block|{
specifier|public
name|void
name|testColumnEdits
parameter_list|()
throws|throws
name|Exception
block|{
name|HBaseAdmin
name|admin
init|=
operator|new
name|HBaseAdmin
argument_list|(
name|this
operator|.
name|conf
argument_list|)
decl_stmt|;
specifier|final
name|String
name|oldColumn
init|=
literal|"oldcolumn:"
decl_stmt|;
comment|// Add three tables
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|5
condition|;
name|i
operator|++
control|)
block|{
name|HTableDescriptor
name|htd
init|=
operator|new
name|HTableDescriptor
argument_list|(
name|getName
argument_list|()
operator|+
name|i
argument_list|)
decl_stmt|;
name|htd
operator|.
name|addFamily
argument_list|(
operator|new
name|HColumnDescriptor
argument_list|(
name|oldColumn
argument_list|)
argument_list|)
expr_stmt|;
name|admin
operator|.
name|createTable
argument_list|(
name|htd
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|cluster
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|this
operator|.
name|cluster
operator|=
literal|null
expr_stmt|;
name|MetaUtils
name|utils
init|=
operator|new
name|MetaUtils
argument_list|(
name|this
operator|.
name|conf
argument_list|)
decl_stmt|;
comment|// Add a new column to the third table, getName() + '2', and remove the old.
specifier|final
name|byte
index|[]
name|editTable
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
name|getName
argument_list|()
operator|+
literal|2
argument_list|)
decl_stmt|;
specifier|final
name|byte
index|[]
name|newColumn
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"newcolumn:"
argument_list|)
decl_stmt|;
name|utils
operator|.
name|addColumn
argument_list|(
name|editTable
argument_list|,
operator|new
name|HColumnDescriptor
argument_list|(
name|newColumn
argument_list|)
argument_list|)
expr_stmt|;
name|utils
operator|.
name|deleteColumn
argument_list|(
name|editTable
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|oldColumn
argument_list|)
argument_list|)
expr_stmt|;
name|utils
operator|.
name|shutdown
argument_list|()
expr_stmt|;
comment|// Delete again so we go get it all fresh.
name|HConnectionManager
operator|.
name|deleteConnectionInfo
argument_list|()
expr_stmt|;
comment|// Now assert columns were added and deleted.
name|this
operator|.
name|cluster
operator|=
operator|new
name|MiniHBaseCluster
argument_list|(
name|this
operator|.
name|conf
argument_list|,
literal|1
argument_list|)
expr_stmt|;
comment|// Now assert columns were added and deleted.
name|HTable
name|t
init|=
operator|new
name|HTable
argument_list|(
name|conf
argument_list|,
name|editTable
argument_list|)
decl_stmt|;
name|HTableDescriptor
name|htd
init|=
name|t
operator|.
name|getTableDescriptor
argument_list|()
decl_stmt|;
name|HColumnDescriptor
name|hcd
init|=
name|htd
operator|.
name|getFamily
argument_list|(
name|newColumn
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|hcd
operator|!=
literal|null
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|htd
operator|.
name|getFamily
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|oldColumn
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

