begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright 2010 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HRegionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HServerAddress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Delete
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|HConnectionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|HTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ipc
operator|.
name|HMasterInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ipc
operator|.
name|HRegionInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|zookeeper
operator|.
name|ZKAssign
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|zookeeper
operator|.
name|ZooKeeperWatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|zookeeper
operator|.
name|KeeperException
import|;
end_import

begin_class
specifier|public
class|class
name|HBaseFsckRepair
block|{
specifier|public
specifier|static
name|void
name|fixDupeAssignment
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|HRegionInfo
name|region
parameter_list|,
name|List
argument_list|<
name|HServerAddress
argument_list|>
name|servers
parameter_list|)
throws|throws
name|IOException
block|{
name|HRegionInfo
name|actualRegion
init|=
operator|new
name|HRegionInfo
argument_list|(
name|region
argument_list|)
decl_stmt|;
comment|// Clear status in master and zk
name|clearInMaster
argument_list|(
name|conf
argument_list|,
name|actualRegion
argument_list|)
expr_stmt|;
name|clearInZK
argument_list|(
name|conf
argument_list|,
name|actualRegion
argument_list|)
expr_stmt|;
comment|// Close region on the servers
for|for
control|(
name|HServerAddress
name|server
range|:
name|servers
control|)
block|{
name|closeRegion
argument_list|(
name|conf
argument_list|,
name|server
argument_list|,
name|actualRegion
argument_list|)
expr_stmt|;
block|}
comment|// It's unassigned so fix it as such
name|fixUnassigned
argument_list|(
name|conf
argument_list|,
name|actualRegion
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|fixUnassigned
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|HRegionInfo
name|region
parameter_list|)
throws|throws
name|IOException
block|{
name|HRegionInfo
name|actualRegion
init|=
operator|new
name|HRegionInfo
argument_list|(
name|region
argument_list|)
decl_stmt|;
comment|// Clear status in master and zk
name|clearInMaster
argument_list|(
name|conf
argument_list|,
name|actualRegion
argument_list|)
expr_stmt|;
name|clearInZK
argument_list|(
name|conf
argument_list|,
name|actualRegion
argument_list|)
expr_stmt|;
comment|// Clear assignment in META or ROOT
name|clearAssignment
argument_list|(
name|conf
argument_list|,
name|actualRegion
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|clearInMaster
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|HRegionInfo
name|region
parameter_list|)
throws|throws
name|IOException
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Region being cleared in master: "
operator|+
name|region
argument_list|)
expr_stmt|;
name|HMasterInterface
name|master
init|=
name|HConnectionManager
operator|.
name|getConnection
argument_list|(
name|conf
argument_list|)
operator|.
name|getMaster
argument_list|()
decl_stmt|;
name|long
name|masterVersion
init|=
name|master
operator|.
name|getProtocolVersion
argument_list|(
literal|"org.apache.hadoop.hbase.ipc.HMasterInterface"
argument_list|,
literal|25
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Master protocol version: "
operator|+
name|masterVersion
argument_list|)
expr_stmt|;
try|try
block|{
comment|// TODO: Do we want to do it this way?
comment|//       Better way is to tell master to fix the issue itself?
comment|//       That way it can use in-memory state to determine best plan
comment|//      master.clearFromTransition(region);
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{}
block|}
specifier|private
specifier|static
name|void
name|clearInZK
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|HRegionInfo
name|region
parameter_list|)
throws|throws
name|IOException
block|{
name|ZooKeeperWatcher
name|zkw
init|=
name|HConnectionManager
operator|.
name|getConnection
argument_list|(
name|conf
argument_list|)
operator|.
name|getZooKeeperWatcher
argument_list|()
decl_stmt|;
try|try
block|{
name|ZKAssign
operator|.
name|deleteNodeFailSilent
argument_list|(
name|zkw
argument_list|,
name|region
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|KeeperException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Unexpected ZK exception"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
specifier|static
name|void
name|closeRegion
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|HServerAddress
name|server
parameter_list|,
name|HRegionInfo
name|region
parameter_list|)
throws|throws
name|IOException
block|{
name|HRegionInterface
name|rs
init|=
name|HConnectionManager
operator|.
name|getConnection
argument_list|(
name|conf
argument_list|)
operator|.
name|getHRegionConnection
argument_list|(
name|server
argument_list|)
decl_stmt|;
name|rs
operator|.
name|closeRegion
argument_list|(
name|region
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|clearAssignment
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|HRegionInfo
name|region
parameter_list|)
throws|throws
name|IOException
block|{
name|HTable
name|ht
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|region
operator|.
name|isMetaTable
argument_list|()
condition|)
block|{
comment|// Clear assignment in ROOT
name|ht
operator|=
operator|new
name|HTable
argument_list|(
name|conf
argument_list|,
name|HConstants
operator|.
name|ROOT_TABLE_NAME
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// Clear assignment in META
name|ht
operator|=
operator|new
name|HTable
argument_list|(
name|conf
argument_list|,
name|HConstants
operator|.
name|META_TABLE_NAME
argument_list|)
expr_stmt|;
block|}
name|Delete
name|del
init|=
operator|new
name|Delete
argument_list|(
name|region
operator|.
name|getRegionName
argument_list|()
argument_list|)
decl_stmt|;
name|del
operator|.
name|deleteColumns
argument_list|(
name|HConstants
operator|.
name|CATALOG_FAMILY
argument_list|,
name|HConstants
operator|.
name|SERVER_QUALIFIER
argument_list|)
expr_stmt|;
name|del
operator|.
name|deleteColumns
argument_list|(
name|HConstants
operator|.
name|CATALOG_FAMILY
argument_list|,
name|HConstants
operator|.
name|STARTCODE_QUALIFIER
argument_list|)
expr_stmt|;
name|ht
operator|.
name|delete
argument_list|(
name|del
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

