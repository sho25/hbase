begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|NavigableMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|DeserializationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|DoNotRetryIOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HRegionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|KeyValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ServerName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Append
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Delete
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Get
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Increment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Mutation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Put
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Row
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|RowMutations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Scan
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|coprocessor
operator|.
name|Exec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|filter
operator|.
name|WritableByteArrayComparable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|CloseRegionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|CompactRegionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|FlushRegionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|GetOnlineRegionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|GetRegionInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|GetServerInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|GetStoreFileRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|OpenRegionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|ReplicateWALEntryRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|RollWALWriterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|SplitRegionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|StopServerRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|WALEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|WALEntry
operator|.
name|WALEdit
operator|.
name|FamilyScope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|WALEntry
operator|.
name|WALEdit
operator|.
name|ScopeType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|WALEntry
operator|.
name|WALKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|BulkLoadHFileRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|BulkLoadHFileRequest
operator|.
name|FamilyPath
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|Column
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|Condition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|Condition
operator|.
name|CompareType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|ExecCoprocessorRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|GetRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|LockRowRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|MultiAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|MultiRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|Mutate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|Mutate
operator|.
name|ColumnValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|Mutate
operator|.
name|ColumnValue
operator|.
name|QualifierValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|Mutate
operator|.
name|MutateType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|MutateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|ScanRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|UnlockRowRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|RegionSpecifierType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|AssignRegionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|MoveRegionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|UnassignRegionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|wal
operator|.
name|HLog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|wal
operator|.
name|HLogKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|wal
operator|.
name|WALEdit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Pair
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
import|;
end_import

begin_comment
comment|/**  * Helper utility to build protocol buffer requests,  * or build components for protocol buffer requests.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
specifier|final
class|class
name|RequestConverter
block|{
specifier|private
name|RequestConverter
parameter_list|()
block|{   }
comment|// Start utilities for Client
comment|/**    * Create a new protocol buffer GetRequest to get a row, all columns in a family.    * If there is no such row, return the closest row before it.    *    * @param regionName the name of the region to get    * @param row the row to get    * @param family the column family to get    * should return the immediate row before    * @return a protocol buffer GetReuqest    */
specifier|public
specifier|static
name|GetRequest
name|buildGetRowOrBeforeRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|byte
index|[]
name|row
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|)
block|{
name|GetRequest
operator|.
name|Builder
name|builder
init|=
name|GetRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setClosestRowBefore
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|Column
operator|.
name|Builder
name|columnBuilder
init|=
name|Column
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|columnBuilder
operator|.
name|setFamily
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|family
argument_list|)
argument_list|)
expr_stmt|;
name|ClientProtos
operator|.
name|Get
operator|.
name|Builder
name|getBuilder
init|=
name|ClientProtos
operator|.
name|Get
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|getBuilder
operator|.
name|setRow
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|row
argument_list|)
argument_list|)
expr_stmt|;
name|getBuilder
operator|.
name|addColumn
argument_list|(
name|columnBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setGet
argument_list|(
name|getBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer GetRequest for a client Get    *    * @param regionName the name of the region to get    * @param get the client Get    * @return a protocol buffer GetReuqest    */
specifier|public
specifier|static
name|GetRequest
name|buildGetRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|Get
name|get
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|buildGetRequest
argument_list|(
name|regionName
argument_list|,
name|get
argument_list|,
literal|false
argument_list|)
return|;
block|}
comment|/**    * Create a protocol buffer GetRequest for a client Get    *    * @param regionName the name of the region to get    * @param get the client Get    * @param existenceOnly indicate if check row existence only    * @return a protocol buffer GetReuqest    */
specifier|public
specifier|static
name|GetRequest
name|buildGetRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|Get
name|get
parameter_list|,
specifier|final
name|boolean
name|existenceOnly
parameter_list|)
throws|throws
name|IOException
block|{
name|GetRequest
operator|.
name|Builder
name|builder
init|=
name|GetRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setExistenceOnly
argument_list|(
name|existenceOnly
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setGet
argument_list|(
name|ProtobufUtil
operator|.
name|toGet
argument_list|(
name|get
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer MutateRequest for a client increment    *    * @param regionName    * @param row    * @param family    * @param qualifier    * @param amount    * @param writeToWAL    * @return a mutate request    */
specifier|public
specifier|static
name|MutateRequest
name|buildMutateRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|byte
index|[]
name|row
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|,
specifier|final
name|byte
index|[]
name|qualifier
parameter_list|,
specifier|final
name|long
name|amount
parameter_list|,
specifier|final
name|boolean
name|writeToWAL
parameter_list|)
block|{
name|MutateRequest
operator|.
name|Builder
name|builder
init|=
name|MutateRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|Mutate
operator|.
name|Builder
name|mutateBuilder
init|=
name|Mutate
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|mutateBuilder
operator|.
name|setRow
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|row
argument_list|)
argument_list|)
expr_stmt|;
name|mutateBuilder
operator|.
name|setMutateType
argument_list|(
name|MutateType
operator|.
name|INCREMENT
argument_list|)
expr_stmt|;
name|mutateBuilder
operator|.
name|setWriteToWAL
argument_list|(
name|writeToWAL
argument_list|)
expr_stmt|;
name|ColumnValue
operator|.
name|Builder
name|columnBuilder
init|=
name|ColumnValue
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|columnBuilder
operator|.
name|setFamily
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|family
argument_list|)
argument_list|)
expr_stmt|;
name|QualifierValue
operator|.
name|Builder
name|valueBuilder
init|=
name|QualifierValue
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|valueBuilder
operator|.
name|setValue
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|amount
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|valueBuilder
operator|.
name|setQualifier
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|qualifier
argument_list|)
argument_list|)
expr_stmt|;
name|columnBuilder
operator|.
name|addQualifierValue
argument_list|(
name|valueBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|mutateBuilder
operator|.
name|addColumnValue
argument_list|(
name|columnBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setMutate
argument_list|(
name|mutateBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer MutateRequest for a conditioned put    *    * @param regionName    * @param row    * @param family    * @param qualifier    * @param comparator    * @param compareType    * @param put    * @return a mutate request    * @throws IOException    */
specifier|public
specifier|static
name|MutateRequest
name|buildMutateRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|byte
index|[]
name|row
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|,
specifier|final
name|byte
index|[]
name|qualifier
parameter_list|,
specifier|final
name|WritableByteArrayComparable
name|comparator
parameter_list|,
specifier|final
name|CompareType
name|compareType
parameter_list|,
specifier|final
name|Put
name|put
parameter_list|)
throws|throws
name|IOException
block|{
name|MutateRequest
operator|.
name|Builder
name|builder
init|=
name|MutateRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|Condition
name|condition
init|=
name|buildCondition
argument_list|(
name|row
argument_list|,
name|family
argument_list|,
name|qualifier
argument_list|,
name|comparator
argument_list|,
name|compareType
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setMutate
argument_list|(
name|ProtobufUtil
operator|.
name|toMutate
argument_list|(
name|MutateType
operator|.
name|PUT
argument_list|,
name|put
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setCondition
argument_list|(
name|condition
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer MutateRequest for a conditioned delete    *    * @param regionName    * @param row    * @param family    * @param qualifier    * @param comparator    * @param compareType    * @param delete    * @return a mutate request    * @throws IOException    */
specifier|public
specifier|static
name|MutateRequest
name|buildMutateRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|byte
index|[]
name|row
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|,
specifier|final
name|byte
index|[]
name|qualifier
parameter_list|,
specifier|final
name|WritableByteArrayComparable
name|comparator
parameter_list|,
specifier|final
name|CompareType
name|compareType
parameter_list|,
specifier|final
name|Delete
name|delete
parameter_list|)
throws|throws
name|IOException
block|{
name|MutateRequest
operator|.
name|Builder
name|builder
init|=
name|MutateRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|Condition
name|condition
init|=
name|buildCondition
argument_list|(
name|row
argument_list|,
name|family
argument_list|,
name|qualifier
argument_list|,
name|comparator
argument_list|,
name|compareType
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setMutate
argument_list|(
name|ProtobufUtil
operator|.
name|toMutate
argument_list|(
name|MutateType
operator|.
name|DELETE
argument_list|,
name|delete
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setCondition
argument_list|(
name|condition
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer MutateRequest for a put    *    * @param regionName    * @param put    * @return a mutate request    * @throws IOException    */
specifier|public
specifier|static
name|MutateRequest
name|buildMutateRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|Put
name|put
parameter_list|)
throws|throws
name|IOException
block|{
name|MutateRequest
operator|.
name|Builder
name|builder
init|=
name|MutateRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setMutate
argument_list|(
name|ProtobufUtil
operator|.
name|toMutate
argument_list|(
name|MutateType
operator|.
name|PUT
argument_list|,
name|put
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer MutateRequest for an append    *    * @param regionName    * @param append    * @return a mutate request    * @throws IOException    */
specifier|public
specifier|static
name|MutateRequest
name|buildMutateRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|Append
name|append
parameter_list|)
throws|throws
name|IOException
block|{
name|MutateRequest
operator|.
name|Builder
name|builder
init|=
name|MutateRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setMutate
argument_list|(
name|ProtobufUtil
operator|.
name|toMutate
argument_list|(
name|MutateType
operator|.
name|APPEND
argument_list|,
name|append
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer MutateRequest for a client increment    *    * @param regionName    * @param increment    * @return a mutate request    */
specifier|public
specifier|static
name|MutateRequest
name|buildMutateRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|Increment
name|increment
parameter_list|)
block|{
name|MutateRequest
operator|.
name|Builder
name|builder
init|=
name|MutateRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setMutate
argument_list|(
name|ProtobufUtil
operator|.
name|toMutate
argument_list|(
name|increment
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer MutateRequest for a delete    *    * @param regionName    * @param delete    * @return a mutate request    * @throws IOException    */
specifier|public
specifier|static
name|MutateRequest
name|buildMutateRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|Delete
name|delete
parameter_list|)
throws|throws
name|IOException
block|{
name|MutateRequest
operator|.
name|Builder
name|builder
init|=
name|MutateRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setMutate
argument_list|(
name|ProtobufUtil
operator|.
name|toMutate
argument_list|(
name|MutateType
operator|.
name|DELETE
argument_list|,
name|delete
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer MultiRequest for a row mutations    *    * @param regionName    * @param rowMutations    * @return a multi request    * @throws IOException    */
specifier|public
specifier|static
name|MultiRequest
name|buildMultiRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|RowMutations
name|rowMutations
parameter_list|)
throws|throws
name|IOException
block|{
name|MultiRequest
operator|.
name|Builder
name|builder
init|=
name|MultiRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setAtomic
argument_list|(
literal|true
argument_list|)
expr_stmt|;
for|for
control|(
name|Mutation
name|mutation
range|:
name|rowMutations
operator|.
name|getMutations
argument_list|()
control|)
block|{
name|MutateType
name|mutateType
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|mutation
operator|instanceof
name|Put
condition|)
block|{
name|mutateType
operator|=
name|MutateType
operator|.
name|PUT
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|mutation
operator|instanceof
name|Delete
condition|)
block|{
name|mutateType
operator|=
name|MutateType
operator|.
name|DELETE
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|DoNotRetryIOException
argument_list|(
literal|"RowMutations supports only put and delete, not "
operator|+
name|mutation
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
throw|;
block|}
name|Mutate
name|mutate
init|=
name|ProtobufUtil
operator|.
name|toMutate
argument_list|(
name|mutateType
argument_list|,
name|mutation
argument_list|)
decl_stmt|;
name|builder
operator|.
name|addAction
argument_list|(
name|MultiAction
operator|.
name|newBuilder
argument_list|()
operator|.
name|setMutate
argument_list|(
name|mutate
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer ScanRequest for a client Scan    *    * @param regionName    * @param scan    * @param numberOfRows    * @param closeScanner    * @return a scan request    * @throws IOException    */
specifier|public
specifier|static
name|ScanRequest
name|buildScanRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|Scan
name|scan
parameter_list|,
specifier|final
name|int
name|numberOfRows
parameter_list|,
specifier|final
name|boolean
name|closeScanner
parameter_list|)
throws|throws
name|IOException
block|{
name|ScanRequest
operator|.
name|Builder
name|builder
init|=
name|ScanRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setNumberOfRows
argument_list|(
name|numberOfRows
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setCloseScanner
argument_list|(
name|closeScanner
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setScan
argument_list|(
name|ProtobufUtil
operator|.
name|toScan
argument_list|(
name|scan
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer ScanRequest for a scanner id    *    * @param scannerId    * @param numberOfRows    * @param closeScanner    * @return a scan request    */
specifier|public
specifier|static
name|ScanRequest
name|buildScanRequest
parameter_list|(
specifier|final
name|long
name|scannerId
parameter_list|,
specifier|final
name|int
name|numberOfRows
parameter_list|,
specifier|final
name|boolean
name|closeScanner
parameter_list|)
block|{
name|ScanRequest
operator|.
name|Builder
name|builder
init|=
name|ScanRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setNumberOfRows
argument_list|(
name|numberOfRows
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setCloseScanner
argument_list|(
name|closeScanner
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setScannerId
argument_list|(
name|scannerId
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer LockRowRequest    *    * @param regionName    * @param row    * @return a lock row request    */
specifier|public
specifier|static
name|LockRowRequest
name|buildLockRowRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|byte
index|[]
name|row
parameter_list|)
block|{
name|LockRowRequest
operator|.
name|Builder
name|builder
init|=
name|LockRowRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addRow
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|row
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer UnlockRowRequest    *    * @param regionName    * @param lockId    * @return a unlock row request    */
specifier|public
specifier|static
name|UnlockRowRequest
name|buildUnlockRowRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|long
name|lockId
parameter_list|)
block|{
name|UnlockRowRequest
operator|.
name|Builder
name|builder
init|=
name|UnlockRowRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setLockId
argument_list|(
name|lockId
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer bulk load request    *    * @param familyPaths    * @param regionName    * @return a bulk load request    */
specifier|public
specifier|static
name|BulkLoadHFileRequest
name|buildBulkLoadHFileRequest
parameter_list|(
specifier|final
name|List
argument_list|<
name|Pair
argument_list|<
name|byte
index|[]
argument_list|,
name|String
argument_list|>
argument_list|>
name|familyPaths
parameter_list|,
specifier|final
name|byte
index|[]
name|regionName
parameter_list|)
block|{
name|BulkLoadHFileRequest
operator|.
name|Builder
name|builder
init|=
name|BulkLoadHFileRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|FamilyPath
operator|.
name|Builder
name|familyPathBuilder
init|=
name|FamilyPath
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|Pair
argument_list|<
name|byte
index|[]
argument_list|,
name|String
argument_list|>
name|familyPath
range|:
name|familyPaths
control|)
block|{
name|familyPathBuilder
operator|.
name|setFamily
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|familyPath
operator|.
name|getFirst
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|familyPathBuilder
operator|.
name|setPath
argument_list|(
name|familyPath
operator|.
name|getSecond
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addFamilyPath
argument_list|(
name|familyPathBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer coprocessor exec request    *    * @param regionName    * @param exec    * @return a coprocessor exec request    * @throws IOException    */
specifier|public
specifier|static
name|ExecCoprocessorRequest
name|buildExecCoprocessorRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|Exec
name|exec
parameter_list|)
throws|throws
name|IOException
block|{
name|ExecCoprocessorRequest
operator|.
name|Builder
name|builder
init|=
name|ExecCoprocessorRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setCall
argument_list|(
name|ProtobufUtil
operator|.
name|toExec
argument_list|(
name|exec
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer multi request for a list of actions.    * RowMutations in the list (if any) will be ignored.    *    * @param regionName    * @param actions    * @return a multi request    * @throws IOException    */
specifier|public
specifier|static
parameter_list|<
name|R
parameter_list|>
name|MultiRequest
name|buildMultiRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|List
argument_list|<
name|Action
argument_list|<
name|R
argument_list|>
argument_list|>
name|actions
parameter_list|)
throws|throws
name|IOException
block|{
name|MultiRequest
operator|.
name|Builder
name|builder
init|=
name|MultiRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
for|for
control|(
name|Action
argument_list|<
name|R
argument_list|>
name|action
range|:
name|actions
control|)
block|{
name|MultiAction
operator|.
name|Builder
name|protoAction
init|=
name|MultiAction
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|Row
name|row
init|=
name|action
operator|.
name|getAction
argument_list|()
decl_stmt|;
if|if
condition|(
name|row
operator|instanceof
name|Get
condition|)
block|{
name|protoAction
operator|.
name|setGet
argument_list|(
name|ProtobufUtil
operator|.
name|toGet
argument_list|(
operator|(
name|Get
operator|)
name|row
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|row
operator|instanceof
name|Put
condition|)
block|{
name|protoAction
operator|.
name|setMutate
argument_list|(
name|ProtobufUtil
operator|.
name|toMutate
argument_list|(
name|MutateType
operator|.
name|PUT
argument_list|,
operator|(
name|Put
operator|)
name|row
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|row
operator|instanceof
name|Delete
condition|)
block|{
name|protoAction
operator|.
name|setMutate
argument_list|(
name|ProtobufUtil
operator|.
name|toMutate
argument_list|(
name|MutateType
operator|.
name|DELETE
argument_list|,
operator|(
name|Delete
operator|)
name|row
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|row
operator|instanceof
name|Exec
condition|)
block|{
name|protoAction
operator|.
name|setExec
argument_list|(
name|ProtobufUtil
operator|.
name|toExec
argument_list|(
operator|(
name|Exec
operator|)
name|row
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|row
operator|instanceof
name|Append
condition|)
block|{
name|protoAction
operator|.
name|setMutate
argument_list|(
name|ProtobufUtil
operator|.
name|toMutate
argument_list|(
name|MutateType
operator|.
name|APPEND
argument_list|,
operator|(
name|Append
operator|)
name|row
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|row
operator|instanceof
name|Increment
condition|)
block|{
name|protoAction
operator|.
name|setMutate
argument_list|(
name|ProtobufUtil
operator|.
name|toMutate
argument_list|(
operator|(
name|Increment
operator|)
name|row
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|row
operator|instanceof
name|RowMutations
condition|)
block|{
continue|continue;
comment|// ignore RowMutations
block|}
else|else
block|{
throw|throw
operator|new
name|DoNotRetryIOException
argument_list|(
literal|"multi doesn't support "
operator|+
name|row
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
throw|;
block|}
name|builder
operator|.
name|addAction
argument_list|(
name|protoAction
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|// End utilities for Client
comment|//Start utilities for Admin
comment|/**   * Create a protocol buffer GetRegionInfoRequest for a given region name   *   * @param regionName the name of the region to get info   * @return a protocol buffer GetRegionInfoRequest   */
specifier|public
specifier|static
name|GetRegionInfoRequest
name|buildGetRegionInfoRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|)
block|{
name|GetRegionInfoRequest
operator|.
name|Builder
name|builder
init|=
name|GetRegionInfoRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a protocol buffer GetStoreFileRequest for a given region name   *   * @param regionName the name of the region to get info   * @param family the family to get store file list   * @return a protocol buffer GetStoreFileRequest   */
specifier|public
specifier|static
name|GetStoreFileRequest
name|buildGetStoreFileRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|)
block|{
name|GetStoreFileRequest
operator|.
name|Builder
name|builder
init|=
name|GetStoreFileRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addFamily
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|family
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a protocol buffer GetOnlineRegionRequest   *   * @return a protocol buffer GetOnlineRegionRequest   */
specifier|public
specifier|static
name|GetOnlineRegionRequest
name|buildGetOnlineRegionRequest
parameter_list|()
block|{
return|return
name|GetOnlineRegionRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a protocol buffer FlushRegionRequest for a given region name   *   * @param regionName the name of the region to get info   * @return a protocol buffer FlushRegionRequest   */
specifier|public
specifier|static
name|FlushRegionRequest
name|buildFlushRegionRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|)
block|{
name|FlushRegionRequest
operator|.
name|Builder
name|builder
init|=
name|FlushRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a protocol buffer OpenRegionRequest to open a list of regions   *   * @param regions the list of regions to open   * @return a protocol buffer OpenRegionRequest   */
specifier|public
specifier|static
name|OpenRegionRequest
name|buildOpenRegionRequest
parameter_list|(
specifier|final
name|List
argument_list|<
name|HRegionInfo
argument_list|>
name|regions
parameter_list|)
block|{
name|OpenRegionRequest
operator|.
name|Builder
name|builder
init|=
name|OpenRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|HRegionInfo
name|region
range|:
name|regions
control|)
block|{
name|builder
operator|.
name|addRegion
argument_list|(
name|ProtobufUtil
operator|.
name|toRegionInfo
argument_list|(
name|region
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a protocol buffer OpenRegionRequest for a given region   *   * @param region the region to open   * @return a protocol buffer OpenRegionRequest   */
specifier|public
specifier|static
name|OpenRegionRequest
name|buildOpenRegionRequest
parameter_list|(
specifier|final
name|HRegionInfo
name|region
parameter_list|)
block|{
return|return
name|buildOpenRegionRequest
argument_list|(
name|region
argument_list|,
operator|-
literal|1
argument_list|)
return|;
block|}
comment|/**   * Create a protocol buffer OpenRegionRequest for a given region   *   * @param region the region to open   * @param versionOfOfflineNode that needs to be present in the offline node   * @return a protocol buffer OpenRegionRequest   */
specifier|public
specifier|static
name|OpenRegionRequest
name|buildOpenRegionRequest
parameter_list|(
specifier|final
name|HRegionInfo
name|region
parameter_list|,
specifier|final
name|int
name|versionOfOfflineNode
parameter_list|)
block|{
name|OpenRegionRequest
operator|.
name|Builder
name|builder
init|=
name|OpenRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|addRegion
argument_list|(
name|ProtobufUtil
operator|.
name|toRegionInfo
argument_list|(
name|region
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|versionOfOfflineNode
operator|>=
literal|0
condition|)
block|{
name|builder
operator|.
name|setVersionOfOfflineNode
argument_list|(
name|versionOfOfflineNode
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a CloseRegionRequest for a given region name   *   * @param regionName the name of the region to close   * @param transitionInZK indicator if to transition in ZK   * @return a CloseRegionRequest   */
specifier|public
specifier|static
name|CloseRegionRequest
name|buildCloseRegionRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|boolean
name|transitionInZK
parameter_list|)
block|{
name|CloseRegionRequest
operator|.
name|Builder
name|builder
init|=
name|CloseRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setTransitionInZK
argument_list|(
name|transitionInZK
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a CloseRegionRequest for a given region name   *   * @param regionName the name of the region to close   * @param versionOfClosingNode   *   the version of znode to compare when RS transitions the znode from   *   CLOSING state.   * @return a CloseRegionRequest   */
specifier|public
specifier|static
name|CloseRegionRequest
name|buildCloseRegionRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|int
name|versionOfClosingNode
parameter_list|)
block|{
name|CloseRegionRequest
operator|.
name|Builder
name|builder
init|=
name|CloseRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setVersionOfClosingNode
argument_list|(
name|versionOfClosingNode
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|CloseRegionRequest
name|buildCloseRegionRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|int
name|versionOfClosingNode
parameter_list|,
name|ServerName
name|destinationServer
parameter_list|)
block|{
name|CloseRegionRequest
operator|.
name|Builder
name|builder
init|=
name|CloseRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setVersionOfClosingNode
argument_list|(
name|versionOfClosingNode
argument_list|)
expr_stmt|;
if|if
condition|(
name|destinationServer
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setDestinationServer
argument_list|(
name|ProtobufUtil
operator|.
name|toServerName
argument_list|(
name|destinationServer
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a CloseRegionRequest for a given encoded region name   *   * @param encodedRegionName the name of the region to close   * @param transitionInZK indicator if to transition in ZK   * @return a CloseRegionRequest   */
specifier|public
specifier|static
name|CloseRegionRequest
name|buildCloseRegionRequest
parameter_list|(
specifier|final
name|String
name|encodedRegionName
parameter_list|,
specifier|final
name|boolean
name|transitionInZK
parameter_list|)
block|{
name|CloseRegionRequest
operator|.
name|Builder
name|builder
init|=
name|CloseRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|ENCODED_REGION_NAME
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|encodedRegionName
argument_list|)
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setTransitionInZK
argument_list|(
name|transitionInZK
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a SplitRegionRequest for a given region name   *   * @param regionName the name of the region to split   * @param splitPoint the split point   * @return a SplitRegionRequest   */
specifier|public
specifier|static
name|SplitRegionRequest
name|buildSplitRegionRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|byte
index|[]
name|splitPoint
parameter_list|)
block|{
name|SplitRegionRequest
operator|.
name|Builder
name|builder
init|=
name|SplitRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
if|if
condition|(
name|splitPoint
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setSplitPoint
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|splitPoint
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a  CompactRegionRequest for a given region name   *   * @param regionName the name of the region to get info   * @param major indicator if it is a major compaction   * @return a CompactRegionRequest   */
specifier|public
specifier|static
name|CompactRegionRequest
name|buildCompactRegionRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|boolean
name|major
parameter_list|)
block|{
name|CompactRegionRequest
operator|.
name|Builder
name|builder
init|=
name|CompactRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setMajor
argument_list|(
name|major
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a new ReplicateWALEntryRequest from a list of HLog entries   *   * @param entries the HLog entries to be replicated   * @return a ReplicateWALEntryRequest   */
specifier|public
specifier|static
name|ReplicateWALEntryRequest
name|buildReplicateWALEntryRequest
parameter_list|(
specifier|final
name|HLog
operator|.
name|Entry
index|[]
name|entries
parameter_list|)
block|{
name|FamilyScope
operator|.
name|Builder
name|scopeBuilder
init|=
name|FamilyScope
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|WALEntry
operator|.
name|Builder
name|entryBuilder
init|=
name|WALEntry
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|ReplicateWALEntryRequest
operator|.
name|Builder
name|builder
init|=
name|ReplicateWALEntryRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|HLog
operator|.
name|Entry
name|entry
range|:
name|entries
control|)
block|{
name|entryBuilder
operator|.
name|clear
argument_list|()
expr_stmt|;
name|WALKey
operator|.
name|Builder
name|keyBuilder
init|=
name|entryBuilder
operator|.
name|getKeyBuilder
argument_list|()
decl_stmt|;
name|HLogKey
name|key
init|=
name|entry
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|keyBuilder
operator|.
name|setEncodedRegionName
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|key
operator|.
name|getEncodedRegionName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|keyBuilder
operator|.
name|setTableName
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|key
operator|.
name|getTablename
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|keyBuilder
operator|.
name|setLogSequenceNumber
argument_list|(
name|key
operator|.
name|getLogSeqNum
argument_list|()
argument_list|)
expr_stmt|;
name|keyBuilder
operator|.
name|setWriteTime
argument_list|(
name|key
operator|.
name|getWriteTime
argument_list|()
argument_list|)
expr_stmt|;
name|UUID
name|clusterId
init|=
name|key
operator|.
name|getClusterId
argument_list|()
decl_stmt|;
if|if
condition|(
name|clusterId
operator|!=
literal|null
condition|)
block|{
name|AdminProtos
operator|.
name|UUID
operator|.
name|Builder
name|uuidBuilder
init|=
name|keyBuilder
operator|.
name|getClusterIdBuilder
argument_list|()
decl_stmt|;
name|uuidBuilder
operator|.
name|setLeastSigBits
argument_list|(
name|clusterId
operator|.
name|getLeastSignificantBits
argument_list|()
argument_list|)
expr_stmt|;
name|uuidBuilder
operator|.
name|setMostSigBits
argument_list|(
name|clusterId
operator|.
name|getMostSignificantBits
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|WALEdit
name|edit
init|=
name|entry
operator|.
name|getEdit
argument_list|()
decl_stmt|;
name|WALEntry
operator|.
name|WALEdit
operator|.
name|Builder
name|editBuilder
init|=
name|entryBuilder
operator|.
name|getEditBuilder
argument_list|()
decl_stmt|;
name|NavigableMap
argument_list|<
name|byte
index|[]
argument_list|,
name|Integer
argument_list|>
name|scopes
init|=
name|edit
operator|.
name|getScopes
argument_list|()
decl_stmt|;
if|if
condition|(
name|scopes
operator|!=
literal|null
operator|&&
operator|!
name|scopes
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|byte
index|[]
argument_list|,
name|Integer
argument_list|>
name|scope
range|:
name|scopes
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|scopeBuilder
operator|.
name|setFamily
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|scope
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|ScopeType
name|scopeType
init|=
name|ScopeType
operator|.
name|valueOf
argument_list|(
name|scope
operator|.
name|getValue
argument_list|()
operator|.
name|intValue
argument_list|()
argument_list|)
decl_stmt|;
name|scopeBuilder
operator|.
name|setScopeType
argument_list|(
name|scopeType
argument_list|)
expr_stmt|;
name|editBuilder
operator|.
name|addFamilyScope
argument_list|(
name|scopeBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|List
argument_list|<
name|KeyValue
argument_list|>
name|keyValues
init|=
name|edit
operator|.
name|getKeyValues
argument_list|()
decl_stmt|;
for|for
control|(
name|KeyValue
name|value
range|:
name|keyValues
control|)
block|{
name|editBuilder
operator|.
name|addKeyValueBytes
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|value
operator|.
name|getBuffer
argument_list|()
argument_list|,
name|value
operator|.
name|getOffset
argument_list|()
argument_list|,
name|value
operator|.
name|getLength
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|addEntry
argument_list|(
name|entryBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a new RollWALWriterRequest   *   * @return a ReplicateWALEntryRequest   */
specifier|public
specifier|static
name|RollWALWriterRequest
name|buildRollWALWriterRequest
parameter_list|()
block|{
name|RollWALWriterRequest
operator|.
name|Builder
name|builder
init|=
name|RollWALWriterRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a new GetServerInfoRequest   *   * @return a GetServerInfoRequest   */
specifier|public
specifier|static
name|GetServerInfoRequest
name|buildGetServerInfoRequest
parameter_list|()
block|{
name|GetServerInfoRequest
operator|.
name|Builder
name|builder
init|=
name|GetServerInfoRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a new StopServerRequest   *   * @param reason the reason to stop the server   * @return a StopServerRequest   */
specifier|public
specifier|static
name|StopServerRequest
name|buildStopServerRequest
parameter_list|(
specifier|final
name|String
name|reason
parameter_list|)
block|{
name|StopServerRequest
operator|.
name|Builder
name|builder
init|=
name|StopServerRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setReason
argument_list|(
name|reason
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|//End utilities for Admin
comment|/**    * Convert a byte array to a protocol buffer RegionSpecifier    *    * @param type the region specifier type    * @param value the region specifier byte array value    * @return a protocol buffer RegionSpecifier    */
specifier|public
specifier|static
name|RegionSpecifier
name|buildRegionSpecifier
parameter_list|(
specifier|final
name|RegionSpecifierType
name|type
parameter_list|,
specifier|final
name|byte
index|[]
name|value
parameter_list|)
block|{
name|RegionSpecifier
operator|.
name|Builder
name|regionBuilder
init|=
name|RegionSpecifier
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|regionBuilder
operator|.
name|setValue
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
name|regionBuilder
operator|.
name|setType
argument_list|(
name|type
argument_list|)
expr_stmt|;
return|return
name|regionBuilder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer Condition    *    * @param row    * @param family    * @param qualifier    * @param comparator    * @param compareType    * @return a Condition    * @throws IOException    */
specifier|private
specifier|static
name|Condition
name|buildCondition
parameter_list|(
specifier|final
name|byte
index|[]
name|row
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|,
specifier|final
name|byte
index|[]
name|qualifier
parameter_list|,
specifier|final
name|WritableByteArrayComparable
name|comparator
parameter_list|,
specifier|final
name|CompareType
name|compareType
parameter_list|)
throws|throws
name|IOException
block|{
name|Condition
operator|.
name|Builder
name|builder
init|=
name|Condition
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setRow
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|row
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setFamily
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|family
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setQualifier
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|qualifier
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setComparator
argument_list|(
name|ProtobufUtil
operator|.
name|toParameter
argument_list|(
name|comparator
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setCompareType
argument_list|(
name|compareType
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer MoveRegionRequest    *    * @param encodedRegionName    * @param destServerName    * @return A MoveRegionRequest    * @throws DeserializationException    */
specifier|public
specifier|static
name|MoveRegionRequest
name|buildMoveRegionRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|encodedRegionName
parameter_list|,
specifier|final
name|byte
index|[]
name|destServerName
parameter_list|)
throws|throws
name|DeserializationException
block|{
name|MoveRegionRequest
operator|.
name|Builder
name|builder
init|=
name|MoveRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|ENCODED_REGION_NAME
argument_list|,
name|encodedRegionName
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|destServerName
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setDestServerName
argument_list|(
name|ProtobufUtil
operator|.
name|toServerName
argument_list|(
operator|new
name|ServerName
argument_list|(
name|Bytes
operator|.
name|toString
argument_list|(
name|destServerName
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer AssignRegionRequest    *    * @param regionName    * @return An AssignRegionRequest    */
specifier|public
specifier|static
name|AssignRegionRequest
name|buildAssignRegionRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|)
block|{
name|AssignRegionRequest
operator|.
name|Builder
name|builder
init|=
name|AssignRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Creates a protocol buffer UnassignRegionRequest    *    * @param regionName    * @param force    * @return An UnassignRegionRequest    */
specifier|public
specifier|static
name|UnassignRegionRequest
name|buildUnassignRegionRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|boolean
name|force
parameter_list|)
block|{
name|UnassignRegionRequest
operator|.
name|Builder
name|builder
init|=
name|UnassignRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
operator|.
name|Builder
name|rspec
init|=
name|RegionSpecifier
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setForce
argument_list|(
name|force
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
block|}
end_class

end_unit

