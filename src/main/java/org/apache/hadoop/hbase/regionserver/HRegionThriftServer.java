begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright 2011 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetSocketAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HRegionLocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|KeyValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|NotServingRegionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Get
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|HTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|thrift
operator|.
name|ThriftServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|thrift
operator|.
name|ThriftUtilities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|thrift
operator|.
name|generated
operator|.
name|Hbase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|thrift
operator|.
name|generated
operator|.
name|IOError
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|thrift
operator|.
name|generated
operator|.
name|TRowResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|protocol
operator|.
name|TBinaryProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|protocol
operator|.
name|TCompactProtocol
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|protocol
operator|.
name|TProtocolFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|server
operator|.
name|TNonblockingServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|server
operator|.
name|TServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|server
operator|.
name|TThreadPoolServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|transport
operator|.
name|TFramedTransport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|transport
operator|.
name|TNonblockingServerSocket
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|transport
operator|.
name|TNonblockingServerTransport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|transport
operator|.
name|TServerSocket
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|transport
operator|.
name|TServerTransport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|transport
operator|.
name|TTransportFactory
import|;
end_import

begin_comment
comment|/**  * HRegionThriftServer - this class starts up a Thrift server in the same  * JVM where the RegionServer is running. It inherits most of the  * functionality from the standard ThriftServer. This is good because  * we can maintain compatibility with applications that use the  * standard Thrift interface. For performance reasons, we can override  * methods to directly invoke calls into the HRegionServer and avoid the hop.  *<p>  * This can be enabled with<i>hbase.regionserver.export.thrift</i> set to true.  */
end_comment

begin_class
specifier|public
class|class
name|HRegionThriftServer
extends|extends
name|Thread
block|{
specifier|public
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|HRegionThriftServer
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_LISTEN_PORT
init|=
literal|9090
decl_stmt|;
specifier|private
name|HRegionServer
name|rs
decl_stmt|;
specifier|private
name|Configuration
name|conf
decl_stmt|;
specifier|private
name|int
name|port
decl_stmt|;
specifier|private
name|boolean
name|nonblocking
decl_stmt|;
specifier|private
name|String
name|bindIpAddress
decl_stmt|;
specifier|private
name|String
name|transport
decl_stmt|;
specifier|private
name|String
name|protocol
decl_stmt|;
specifier|volatile
specifier|private
name|TServer
name|tserver
decl_stmt|;
comment|/**    * Create an instance of the glue object that connects the    * RegionServer with the standard ThriftServer implementation    */
name|HRegionThriftServer
parameter_list|(
name|HRegionServer
name|regionServer
parameter_list|,
name|Configuration
name|conf
parameter_list|)
block|{
name|this
operator|.
name|rs
operator|=
name|regionServer
expr_stmt|;
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
block|}
comment|/**    * Inherit the Handler from the standard ThriftServer. This allows us    * to use the default implementation for most calls. We override certain calls    * for performance reasons    */
specifier|private
class|class
name|HBaseHandlerRegion
extends|extends
name|ThriftServer
operator|.
name|HBaseHandler
block|{
name|HBaseHandlerRegion
parameter_list|(
specifier|final
name|Configuration
name|conf
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|initialize
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
comment|// TODO: Override more methods to short-circuit for performance
comment|/**      * Get a record. Short-circuit to get better performance.      */
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|TRowResult
argument_list|>
name|getRowWithColumnsTs
parameter_list|(
name|ByteBuffer
name|tableName
parameter_list|,
name|ByteBuffer
name|rowb
parameter_list|,
name|List
argument_list|<
name|ByteBuffer
argument_list|>
name|columns
parameter_list|,
name|long
name|timestamp
parameter_list|)
throws|throws
name|IOError
block|{
try|try
block|{
name|byte
index|[]
name|row
init|=
name|rowb
operator|.
name|array
argument_list|()
decl_stmt|;
name|HTable
name|table
init|=
name|getTable
argument_list|(
name|tableName
operator|.
name|array
argument_list|()
argument_list|)
decl_stmt|;
name|HRegionLocation
name|location
init|=
name|table
operator|.
name|getRegionLocation
argument_list|(
name|row
argument_list|)
decl_stmt|;
name|byte
index|[]
name|regionName
init|=
name|location
operator|.
name|getRegionInfo
argument_list|()
operator|.
name|getEncodedNameAsBytes
argument_list|()
decl_stmt|;
if|if
condition|(
name|columns
operator|==
literal|null
condition|)
block|{
name|Get
name|get
init|=
operator|new
name|Get
argument_list|(
name|row
argument_list|)
decl_stmt|;
name|get
operator|.
name|setTimeRange
argument_list|(
name|Long
operator|.
name|MIN_VALUE
argument_list|,
name|timestamp
argument_list|)
expr_stmt|;
name|Result
name|result
init|=
name|rs
operator|.
name|get
argument_list|(
name|regionName
argument_list|,
name|get
argument_list|)
decl_stmt|;
return|return
name|ThriftUtilities
operator|.
name|rowResultFromHBase
argument_list|(
name|result
argument_list|)
return|;
block|}
name|ByteBuffer
index|[]
name|columnArr
init|=
name|columns
operator|.
name|toArray
argument_list|(
operator|new
name|ByteBuffer
index|[
name|columns
operator|.
name|size
argument_list|()
index|]
argument_list|)
decl_stmt|;
name|Get
name|get
init|=
operator|new
name|Get
argument_list|(
name|row
argument_list|)
decl_stmt|;
for|for
control|(
name|ByteBuffer
name|column
range|:
name|columnArr
control|)
block|{
name|byte
index|[]
index|[]
name|famAndQf
init|=
name|KeyValue
operator|.
name|parseColumn
argument_list|(
name|column
operator|.
name|array
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|famAndQf
operator|.
name|length
operator|==
literal|1
condition|)
block|{
name|get
operator|.
name|addFamily
argument_list|(
name|famAndQf
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|get
operator|.
name|addColumn
argument_list|(
name|famAndQf
index|[
literal|0
index|]
argument_list|,
name|famAndQf
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
block|}
name|get
operator|.
name|setTimeRange
argument_list|(
name|Long
operator|.
name|MIN_VALUE
argument_list|,
name|timestamp
argument_list|)
expr_stmt|;
name|Result
name|result
init|=
name|rs
operator|.
name|get
argument_list|(
name|regionName
argument_list|,
name|get
argument_list|)
decl_stmt|;
return|return
name|ThriftUtilities
operator|.
name|rowResultFromHBase
argument_list|(
name|result
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|NotServingRegionException
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"ThriftServer redirecting getRowWithColumnsTs"
argument_list|)
expr_stmt|;
return|return
name|super
operator|.
name|getRowWithColumnsTs
argument_list|(
name|tableName
argument_list|,
name|rowb
argument_list|,
name|columns
argument_list|,
name|timestamp
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOError
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
throw|;
block|}
block|}
block|}
comment|/**    * Read and initialize config parameters    */
specifier|private
name|void
name|initialize
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|this
operator|.
name|port
operator|=
name|conf
operator|.
name|getInt
argument_list|(
literal|"hbase.regionserver.thrift.port"
argument_list|,
name|DEFAULT_LISTEN_PORT
argument_list|)
expr_stmt|;
name|this
operator|.
name|bindIpAddress
operator|=
name|conf
operator|.
name|get
argument_list|(
literal|"hbase.regionserver.thrift.ipaddress"
argument_list|)
expr_stmt|;
name|this
operator|.
name|protocol
operator|=
name|conf
operator|.
name|get
argument_list|(
literal|"hbase.regionserver.thrift.protocol"
argument_list|)
expr_stmt|;
name|this
operator|.
name|transport
operator|=
name|conf
operator|.
name|get
argument_list|(
literal|"hbase.regionserver.thrift.transport"
argument_list|)
expr_stmt|;
name|this
operator|.
name|nonblocking
operator|=
name|conf
operator|.
name|getBoolean
argument_list|(
literal|"hbase.regionserver.thrift.nonblocking"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
comment|/**    * Stop ThriftServer    */
name|void
name|shutdown
parameter_list|()
block|{
if|if
condition|(
name|tserver
operator|!=
literal|null
condition|)
block|{
name|tserver
operator|.
name|stop
argument_list|()
expr_stmt|;
name|tserver
operator|=
literal|null
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
name|HBaseHandlerRegion
name|handler
init|=
operator|new
name|HBaseHandlerRegion
argument_list|(
name|this
operator|.
name|conf
argument_list|)
decl_stmt|;
name|Hbase
operator|.
name|Processor
name|processor
init|=
operator|new
name|Hbase
operator|.
name|Processor
argument_list|(
name|handler
argument_list|)
decl_stmt|;
name|TProtocolFactory
name|protocolFactory
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|protocol
operator|!=
literal|null
operator|&&
name|this
operator|.
name|protocol
operator|.
name|equals
argument_list|(
literal|"compact"
argument_list|)
condition|)
block|{
name|protocolFactory
operator|=
operator|new
name|TCompactProtocol
operator|.
name|Factory
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|protocolFactory
operator|=
operator|new
name|TBinaryProtocol
operator|.
name|Factory
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|nonblocking
condition|)
block|{
name|TNonblockingServerTransport
name|serverTransport
init|=
operator|new
name|TNonblockingServerSocket
argument_list|(
name|this
operator|.
name|port
argument_list|)
decl_stmt|;
name|TFramedTransport
operator|.
name|Factory
name|transportFactory
init|=
operator|new
name|TFramedTransport
operator|.
name|Factory
argument_list|()
decl_stmt|;
name|TNonblockingServer
operator|.
name|Args
name|serverArgs
init|=
operator|new
name|TNonblockingServer
operator|.
name|Args
argument_list|(
name|serverTransport
argument_list|)
decl_stmt|;
name|serverArgs
operator|.
name|processor
argument_list|(
name|processor
argument_list|)
expr_stmt|;
name|serverArgs
operator|.
name|transportFactory
argument_list|(
name|transportFactory
argument_list|)
expr_stmt|;
name|serverArgs
operator|.
name|protocolFactory
argument_list|(
name|protocolFactory
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"starting HRegionServer Nonblocking Thrift server on "
operator|+
name|this
operator|.
name|port
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"HRegionServer Nonblocking Thrift server does not "
operator|+
literal|"support address binding."
argument_list|)
expr_stmt|;
name|tserver
operator|=
operator|new
name|TNonblockingServer
argument_list|(
name|serverArgs
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|InetAddress
name|listenAddress
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|bindIpAddress
operator|!=
literal|null
condition|)
block|{
name|listenAddress
operator|=
name|InetAddress
operator|.
name|getByName
argument_list|(
name|this
operator|.
name|bindIpAddress
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|listenAddress
operator|=
name|InetAddress
operator|.
name|getLocalHost
argument_list|()
expr_stmt|;
block|}
name|TServerTransport
name|serverTransport
init|=
operator|new
name|TServerSocket
argument_list|(
operator|new
name|InetSocketAddress
argument_list|(
name|listenAddress
argument_list|,
name|port
argument_list|)
argument_list|)
decl_stmt|;
name|TTransportFactory
name|transportFactory
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|transport
operator|!=
literal|null
operator|&&
name|this
operator|.
name|transport
operator|.
name|equals
argument_list|(
literal|"framed"
argument_list|)
condition|)
block|{
name|transportFactory
operator|=
operator|new
name|TFramedTransport
operator|.
name|Factory
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|transportFactory
operator|=
operator|new
name|TTransportFactory
argument_list|()
expr_stmt|;
block|}
name|TThreadPoolServer
operator|.
name|Args
name|serverArgs
init|=
operator|new
name|TThreadPoolServer
operator|.
name|Args
argument_list|(
name|serverTransport
argument_list|)
decl_stmt|;
name|serverArgs
operator|.
name|processor
argument_list|(
name|processor
argument_list|)
expr_stmt|;
name|serverArgs
operator|.
name|protocolFactory
argument_list|(
name|protocolFactory
argument_list|)
expr_stmt|;
name|serverArgs
operator|.
name|transportFactory
argument_list|(
name|transportFactory
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"starting HRegionServer ThreadPool Thrift server on "
operator|+
name|listenAddress
operator|+
literal|":"
operator|+
name|this
operator|.
name|port
argument_list|)
expr_stmt|;
name|tserver
operator|=
operator|new
name|TThreadPoolServer
argument_list|(
name|serverArgs
argument_list|)
expr_stmt|;
block|}
name|tserver
operator|.
name|serve
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Unable to start HRegionServerThrift interface."
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

