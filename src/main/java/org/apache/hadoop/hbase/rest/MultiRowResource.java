begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|KeyValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|ResourceBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|RowSpec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|TableResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|model
operator|.
name|CellModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|model
operator|.
name|CellSetModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|model
operator|.
name|RowModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|transform
operator|.
name|Transform
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|GET
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|Produces
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|WebApplicationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Context
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MultivaluedMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|UriInfo
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_class
specifier|public
class|class
name|MultiRowResource
extends|extends
name|ResourceBase
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|MultiRowResource
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ROW_KEYS_PARAM_NAME
init|=
literal|"row"
decl_stmt|;
name|TableResource
name|tableResource
decl_stmt|;
name|Integer
name|versions
init|=
literal|null
decl_stmt|;
comment|/**    * Constructor    *    * @param tableResource    * @param versions    * @throws java.io.IOException    */
specifier|public
name|MultiRowResource
parameter_list|(
name|TableResource
name|tableResource
parameter_list|,
name|String
name|versions
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|tableResource
operator|=
name|tableResource
expr_stmt|;
if|if
condition|(
name|versions
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|versions
operator|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|versions
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|GET
annotation|@
name|Produces
argument_list|(
block|{
name|MIMETYPE_XML
block|,
name|MIMETYPE_JSON
block|,
name|MIMETYPE_PROTOBUF
block|}
argument_list|)
specifier|public
name|Response
name|get
parameter_list|(
specifier|final
annotation|@
name|Context
name|UriInfo
name|uriInfo
parameter_list|)
block|{
name|MultivaluedMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|params
init|=
name|uriInfo
operator|.
name|getQueryParameters
argument_list|()
decl_stmt|;
name|servlet
operator|.
name|getMetrics
argument_list|()
operator|.
name|incrementRequests
argument_list|(
literal|1
argument_list|)
expr_stmt|;
try|try
block|{
name|CellSetModel
name|model
init|=
operator|new
name|CellSetModel
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|rk
range|:
name|params
operator|.
name|get
argument_list|(
name|ROW_KEYS_PARAM_NAME
argument_list|)
control|)
block|{
name|RowSpec
name|rowSpec
init|=
operator|new
name|RowSpec
argument_list|(
name|rk
argument_list|)
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|versions
operator|!=
literal|null
condition|)
block|{
name|rowSpec
operator|.
name|setMaxVersions
argument_list|(
name|this
operator|.
name|versions
argument_list|)
expr_stmt|;
block|}
name|ResultGenerator
name|generator
init|=
name|ResultGenerator
operator|.
name|fromRowSpec
argument_list|(
name|this
operator|.
name|tableResource
operator|.
name|getName
argument_list|()
argument_list|,
name|rowSpec
argument_list|,
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|generator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|WebApplicationException
argument_list|(
name|Response
operator|.
name|Status
operator|.
name|NOT_FOUND
argument_list|)
throw|;
block|}
name|KeyValue
name|value
init|=
literal|null
decl_stmt|;
name|RowModel
name|rowModel
init|=
operator|new
name|RowModel
argument_list|(
name|rk
argument_list|)
decl_stmt|;
while|while
condition|(
operator|(
name|value
operator|=
name|generator
operator|.
name|next
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|byte
index|[]
name|family
init|=
name|value
operator|.
name|getFamily
argument_list|()
decl_stmt|;
name|byte
index|[]
name|qualifier
init|=
name|value
operator|.
name|getQualifier
argument_list|()
decl_stmt|;
name|byte
index|[]
name|data
init|=
name|tableResource
operator|.
name|transform
argument_list|(
name|family
argument_list|,
name|qualifier
argument_list|,
name|value
operator|.
name|getValue
argument_list|()
argument_list|,
name|Transform
operator|.
name|Direction
operator|.
name|OUT
argument_list|)
decl_stmt|;
name|rowModel
operator|.
name|addCell
argument_list|(
operator|new
name|CellModel
argument_list|(
name|family
argument_list|,
name|qualifier
argument_list|,
name|value
operator|.
name|getTimestamp
argument_list|()
argument_list|,
name|data
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|model
operator|.
name|addRow
argument_list|(
name|rowModel
argument_list|)
expr_stmt|;
block|}
return|return
name|Response
operator|.
name|ok
argument_list|(
name|model
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|WebApplicationException
argument_list|(
name|e
argument_list|,
name|Response
operator|.
name|Status
operator|.
name|SERVICE_UNAVAILABLE
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

