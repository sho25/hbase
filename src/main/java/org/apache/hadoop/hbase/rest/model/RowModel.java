begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2010 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAttribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|ProtobufMessageHandler
import|;
end_import

begin_comment
comment|/**  * Representation of a row. A row is a related set of cells, grouped by common  * row key. RowModels do not appear in results by themselves. They are always  * encapsulated within CellSetModels.  *   *<pre>  *&lt;complexType name="Row"&gt;  *&lt;sequence&gt;  *&lt;element name="key" type="base64Binary"&gt;&lt;/element&gt;  *&lt;element name="cell" type="tns:Cell"   *       maxOccurs="unbounded" minOccurs="1"&gt;&lt;/element&gt;  *&lt;/sequence&gt;  *&lt;/complexType&gt;  *</pre>  */
end_comment

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"Row"
argument_list|)
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|RowModel
implements|implements
name|ProtobufMessageHandler
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|private
name|byte
index|[]
name|key
decl_stmt|;
specifier|private
name|List
argument_list|<
name|CellModel
argument_list|>
name|cells
init|=
operator|new
name|ArrayList
argument_list|<
name|CellModel
argument_list|>
argument_list|()
decl_stmt|;
comment|/**    * Default constructor    */
specifier|public
name|RowModel
parameter_list|()
block|{ }
comment|/**    * Constructor    * @param key the row key    */
specifier|public
name|RowModel
parameter_list|(
specifier|final
name|String
name|key
parameter_list|)
block|{
name|this
argument_list|(
name|key
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Constructor    * @param key the row key    */
specifier|public
name|RowModel
parameter_list|(
specifier|final
name|byte
index|[]
name|key
parameter_list|)
block|{
name|this
operator|.
name|key
operator|=
name|key
expr_stmt|;
name|cells
operator|=
operator|new
name|ArrayList
argument_list|<
name|CellModel
argument_list|>
argument_list|()
expr_stmt|;
block|}
comment|/**    * Constructor    * @param key the row key    * @param cells the cells    */
specifier|public
name|RowModel
parameter_list|(
specifier|final
name|String
name|key
parameter_list|,
specifier|final
name|List
argument_list|<
name|CellModel
argument_list|>
name|cells
parameter_list|)
block|{
name|this
argument_list|(
name|key
operator|.
name|getBytes
argument_list|()
argument_list|,
name|cells
argument_list|)
expr_stmt|;
block|}
comment|/**    * Constructor    * @param key the row key    * @param cells the cells    */
specifier|public
name|RowModel
parameter_list|(
specifier|final
name|byte
index|[]
name|key
parameter_list|,
specifier|final
name|List
argument_list|<
name|CellModel
argument_list|>
name|cells
parameter_list|)
block|{
name|this
operator|.
name|key
operator|=
name|key
expr_stmt|;
name|this
operator|.
name|cells
operator|=
name|cells
expr_stmt|;
block|}
comment|/**    * Adds a cell to the list of cells for this row    * @param cell the cell    */
specifier|public
name|void
name|addCell
parameter_list|(
name|CellModel
name|cell
parameter_list|)
block|{
name|cells
operator|.
name|add
argument_list|(
name|cell
argument_list|)
expr_stmt|;
block|}
comment|/**    * @return the row key    */
annotation|@
name|XmlAttribute
specifier|public
name|byte
index|[]
name|getKey
parameter_list|()
block|{
return|return
name|key
return|;
block|}
comment|/**    * @param key the row key    */
specifier|public
name|void
name|setKey
parameter_list|(
name|byte
index|[]
name|key
parameter_list|)
block|{
name|this
operator|.
name|key
operator|=
name|key
expr_stmt|;
block|}
comment|/**    * @return the cells    */
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"Cell"
argument_list|)
specifier|public
name|List
argument_list|<
name|CellModel
argument_list|>
name|getCells
parameter_list|()
block|{
return|return
name|cells
return|;
block|}
annotation|@
name|Override
specifier|public
name|byte
index|[]
name|createProtobufOutput
parameter_list|()
block|{
comment|// there is no standalone row protobuf message
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"no protobuf equivalent to RowModel"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|ProtobufMessageHandler
name|getObjectFromMessage
parameter_list|(
name|byte
index|[]
name|message
parameter_list|)
throws|throws
name|IOException
block|{
comment|// there is no standalone row protobuf message
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"no protobuf equivalent to RowModel"
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

