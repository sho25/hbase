begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2010 The Apache Software Foundation  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|KeyValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Delete
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Get
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Put
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Scan
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Increment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|CoprocessorEnvironment
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Coprocessors implement this interface to observe and mediate client actions  * on the region.  */
end_comment

begin_interface
specifier|public
interface|interface
name|RegionObserver
block|{
comment|/**    * Called before a client makes a GetClosestRowBefore request.    * @param e the environment provided by the region server    * @param row the row    * @param family the family    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|void
name|preGetClosestRowBefore
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|byte
index|[]
name|row
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called after a client makes a GetClosestRowBefore request.    * @param e the environment provided by the region server    * @param row the row    * @param family the desired family    * @param result the result set    * @return the possible tranformed result set to return to the client    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|Result
name|postGetClosestRowBefore
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|byte
index|[]
name|row
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|,
specifier|final
name|Result
name|result
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called before the client perform a get()    * @param e the environment provided by the region server    * @param get the Get request    * @return the possibly transformed Get object by coprocessor    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|Get
name|preGet
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|Get
name|get
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called after the client perform a get()    * @param e the environment provided by the region server    * @param get the Get request    * @param results the result list    * @return the possibly transformed result list to return to client    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|List
argument_list|<
name|KeyValue
argument_list|>
name|postGet
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|Get
name|get
parameter_list|,
specifier|final
name|List
argument_list|<
name|KeyValue
argument_list|>
name|results
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called before the client tests for existence using a Get.    * @param e the environment provided by the region server    * @param get the Get request    * @return the possibly transformed Get object by coprocessor    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|Get
name|preExists
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|Get
name|get
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called after the client tests for existence using a Get.    * @param e the environment provided by the region server    * @param get the Get request    * @param exists the result returned by the region server    * @return the result to return to the client    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|boolean
name|postExists
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|Get
name|get
parameter_list|,
specifier|final
name|boolean
name|exists
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called before the client stores a value.    * @param e the environment provided by the region server    * @param familyMap map of family to edits for the given family.    * @return the possibly transformed map to actually use    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|Map
argument_list|<
name|byte
index|[]
argument_list|,
name|List
argument_list|<
name|KeyValue
argument_list|>
argument_list|>
name|prePut
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|Map
argument_list|<
name|byte
index|[]
argument_list|,
name|List
argument_list|<
name|KeyValue
argument_list|>
argument_list|>
name|familyMap
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called after the client stores a value.    * @param e the environment provided by the region server    * @param familyMap map of family to edits for the given family.    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|void
name|postPut
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|Map
argument_list|<
name|byte
index|[]
argument_list|,
name|List
argument_list|<
name|KeyValue
argument_list|>
argument_list|>
name|familyMap
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called before the client deletes a value.    * @param e the environment provided by the region server    * @param familyMap map of family to edits for the given family.    * @return the possibly transformed map to actually use    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|Map
argument_list|<
name|byte
index|[]
argument_list|,
name|List
argument_list|<
name|KeyValue
argument_list|>
argument_list|>
name|preDelete
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|Map
argument_list|<
name|byte
index|[]
argument_list|,
name|List
argument_list|<
name|KeyValue
argument_list|>
argument_list|>
name|familyMap
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called after the client deletes a value.    * @param e the environment provided by the region server    * @param familyMap map of family to edits for the given family.    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|void
name|postDelete
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|Map
argument_list|<
name|byte
index|[]
argument_list|,
name|List
argument_list|<
name|KeyValue
argument_list|>
argument_list|>
name|familyMap
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called before checkAndPut    * @param e the environment provided by the region server    * @param row row to check    * @param family column family    * @param qualifier column qualifier    * @param value the expected value    * @param put data to put if check succeeds    * @return the possibly transformed map to actually use    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|Put
name|preCheckAndPut
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|byte
index|[]
name|row
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|,
specifier|final
name|byte
index|[]
name|qualifier
parameter_list|,
specifier|final
name|byte
index|[]
name|value
parameter_list|,
specifier|final
name|Put
name|put
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called after checkAndPut    * @param e the environment provided by the region server    * @param row row to check    * @param family column family    * @param qualifier column qualifier    * @param value the expected value    * @param put data to put if check succeeds    * @param result from the checkAndPut    * @return the possibly transformed value to return to client    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|boolean
name|postCheckAndPut
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|byte
index|[]
name|row
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|,
specifier|final
name|byte
index|[]
name|qualifier
parameter_list|,
specifier|final
name|byte
index|[]
name|value
parameter_list|,
specifier|final
name|Put
name|put
parameter_list|,
specifier|final
name|boolean
name|result
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called before checkAndPut    * @param e the environment provided by the region server    * @param row row to check    * @param family column family    * @param qualifier column qualifier    * @param value the expected value    * @param delete delete to commit if check succeeds    * @return the possibly transformed map to actually use    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|Delete
name|preCheckAndDelete
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|byte
index|[]
name|row
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|,
specifier|final
name|byte
index|[]
name|qualifier
parameter_list|,
specifier|final
name|byte
index|[]
name|value
parameter_list|,
specifier|final
name|Delete
name|delete
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called after checkAndDelete    * @param e the environment provided by the region server    * @param row row to check    * @param family column family    * @param qualifier column qualifier    * @param value the expected value    * @param delete delete to commit if check succeeds    * @param result from the CheckAndDelete    * @return the possibly transformed value to return to client    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|boolean
name|postCheckAndDelete
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|byte
index|[]
name|row
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|,
specifier|final
name|byte
index|[]
name|qualifier
parameter_list|,
specifier|final
name|byte
index|[]
name|value
parameter_list|,
specifier|final
name|Delete
name|delete
parameter_list|,
specifier|final
name|boolean
name|result
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called before incrementColumnValue    * @param e the environment provided by the region server    * @param row row to check    * @param family column family    * @param qualifier column qualifier    * @param amount long amount to increment    * @param writeToWAL whether to write the increment to the WAL    * @return new amount to increment    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|long
name|preIncrementColumnValue
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|byte
index|[]
name|row
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|,
specifier|final
name|byte
index|[]
name|qualifier
parameter_list|,
specifier|final
name|long
name|amount
parameter_list|,
specifier|final
name|boolean
name|writeToWAL
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called after incrementColumnValue    * @param e the environment provided by the region server    * @param row row to check    * @param family column family    * @param qualifier column qualifier    * @param amount long amount to increment    * @param writeToWAL whether to write the increment to the WAL    * @param result the result returned by incrementColumnValue    * @return the result to return to the client    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|long
name|postIncrementColumnValue
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|byte
index|[]
name|row
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|,
specifier|final
name|byte
index|[]
name|qualifier
parameter_list|,
specifier|final
name|long
name|amount
parameter_list|,
specifier|final
name|boolean
name|writeToWAL
parameter_list|,
specifier|final
name|long
name|result
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called before incrementColumnValue    * @param e the environment provided by the region server    * @param increment increment object    * @param writeToWAL whether to write the increment to the WAL    * @return new Increment instance    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|Increment
name|preIncrement
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|Increment
name|increment
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called after increment    * @param e the environment provided by the region server    * @param increment increment object    * @param writeToWAL whether to write the increment to the WAL    * @param result the result returned by increment    * @return the result to return to the client    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|Result
name|postIncrement
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|Increment
name|increment
parameter_list|,
specifier|final
name|Result
name|result
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called before the client opens a new scanner.    * @param e the environment provided by the region server    * @param scan the Scan specification    * @return the possibly transformed Scan to actually use    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|Scan
name|preScannerOpen
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|Scan
name|scan
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called after the client opens a new scanner.    * @param e the environment provided by the region server    * @param scan the Scan specification    * @param scannerId the scanner id allocated by the region server    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|void
name|postScannerOpen
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|Scan
name|scan
parameter_list|,
specifier|final
name|long
name|scannerId
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called before the client asks for the next row on a scanner.    * @param e the environment provided by the region server    * @param scannerId the scanner id    * @param results the result set returned by the region server    * @return the possibly transformed result set to actually return    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|void
name|preScannerNext
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|long
name|scannerId
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called after the client asks for the next row on a scanner.    * @param e the environment provided by the region server    * @param scannerId the scanner id    * @param results the result set returned by the region server    * @return the possibly transformed result set to actually return    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|List
argument_list|<
name|KeyValue
argument_list|>
name|postScannerNext
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|long
name|scannerId
parameter_list|,
specifier|final
name|List
argument_list|<
name|KeyValue
argument_list|>
name|results
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called before the client closes a scanner.    * @param e the environment provided by the region server    * @param scannerId the scanner id    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|void
name|preScannerClose
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|long
name|scannerId
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called after the client closes a scanner.    * @param e the environment provided by the region server    * @param scannerId the scanner id    * @throws IOException if an error occurred on the coprocessor    */
specifier|public
name|void
name|postScannerClose
parameter_list|(
specifier|final
name|CoprocessorEnvironment
name|e
parameter_list|,
specifier|final
name|long
name|scannerId
parameter_list|)
throws|throws
name|IOException
function_decl|;
block|}
end_interface

end_unit

