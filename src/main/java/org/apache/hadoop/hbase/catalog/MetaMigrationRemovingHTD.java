begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|catalog
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HRegionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HTableDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|catalog
operator|.
name|MetaReader
operator|.
name|Visitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Put
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|MasterServices
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|migration
operator|.
name|HRegionInfo090x
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Writables
import|;
end_import

begin_comment
comment|/**  * Tools to help with migration of meta tables so they no longer host  * instances of HTableDescriptor.  * @deprecated Used migration from 0.90 to 0.92 so will be going away in next  * release  */
end_comment

begin_class
specifier|public
class|class
name|MetaMigrationRemovingHTD
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|MetaMigrationRemovingHTD
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/** The metaupdated column qualifier */
specifier|public
specifier|static
specifier|final
name|byte
index|[]
name|META_MIGRATION_QUALIFIER
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"metamigrated"
argument_list|)
decl_stmt|;
comment|/**    * Update legacy META rows, removing HTD from HRI.    * @param masterServices    * @return    * @throws IOException    */
specifier|public
specifier|static
name|List
argument_list|<
name|HTableDescriptor
argument_list|>
name|updateMetaWithNewRegionInfo
parameter_list|(
specifier|final
name|MasterServices
name|masterServices
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|List
argument_list|<
name|HTableDescriptor
argument_list|>
name|htds
init|=
operator|new
name|ArrayList
argument_list|<
name|HTableDescriptor
argument_list|>
argument_list|()
decl_stmt|;
name|Visitor
name|v
init|=
operator|new
name|Visitor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|visit
parameter_list|(
name|Result
name|r
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|r
operator|==
literal|null
operator|||
name|r
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|true
return|;
name|HRegionInfo090x
name|hrfm
init|=
name|MetaMigrationRemovingHTD
operator|.
name|getHRegionInfoForMigration
argument_list|(
name|r
argument_list|)
decl_stmt|;
if|if
condition|(
name|hrfm
operator|==
literal|null
condition|)
return|return
literal|true
return|;
name|htds
operator|.
name|add
argument_list|(
name|hrfm
operator|.
name|getTableDesc
argument_list|()
argument_list|)
expr_stmt|;
name|masterServices
operator|.
name|getMasterFileSystem
argument_list|()
operator|.
name|createTableDescriptor
argument_list|(
name|hrfm
operator|.
name|getTableDesc
argument_list|()
argument_list|)
expr_stmt|;
name|updateHRI
argument_list|(
name|masterServices
operator|.
name|getCatalogTracker
argument_list|()
argument_list|,
literal|false
argument_list|,
name|hrfm
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
block|}
decl_stmt|;
name|MetaReader
operator|.
name|fullScan
argument_list|(
name|masterServices
operator|.
name|getCatalogTracker
argument_list|()
argument_list|,
name|v
argument_list|)
expr_stmt|;
name|MetaMigrationRemovingHTD
operator|.
name|updateRootWithMetaMigrationStatus
argument_list|(
name|masterServices
operator|.
name|getCatalogTracker
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|htds
return|;
block|}
comment|/**    * Update the ROOT with new HRI. (HRI with no HTD)    * @param masterServices    * @return    * @throws IOException    */
specifier|public
specifier|static
name|List
argument_list|<
name|HTableDescriptor
argument_list|>
name|updateRootWithNewRegionInfo
parameter_list|(
specifier|final
name|MasterServices
name|masterServices
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|List
argument_list|<
name|HTableDescriptor
argument_list|>
name|htds
init|=
operator|new
name|ArrayList
argument_list|<
name|HTableDescriptor
argument_list|>
argument_list|()
decl_stmt|;
name|Visitor
name|v
init|=
operator|new
name|Visitor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|visit
parameter_list|(
name|Result
name|r
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|r
operator|==
literal|null
operator|||
name|r
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|true
return|;
name|HRegionInfo090x
name|hrfm
init|=
name|MetaMigrationRemovingHTD
operator|.
name|getHRegionInfoForMigration
argument_list|(
name|r
argument_list|)
decl_stmt|;
if|if
condition|(
name|hrfm
operator|==
literal|null
condition|)
return|return
literal|true
return|;
name|htds
operator|.
name|add
argument_list|(
name|hrfm
operator|.
name|getTableDesc
argument_list|()
argument_list|)
expr_stmt|;
name|masterServices
operator|.
name|getMasterFileSystem
argument_list|()
operator|.
name|createTableDescriptor
argument_list|(
name|hrfm
operator|.
name|getTableDesc
argument_list|()
argument_list|)
expr_stmt|;
name|updateHRI
argument_list|(
name|masterServices
operator|.
name|getCatalogTracker
argument_list|()
argument_list|,
literal|true
argument_list|,
name|hrfm
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
block|}
decl_stmt|;
name|MetaReader
operator|.
name|fullScan
argument_list|(
name|masterServices
operator|.
name|getCatalogTracker
argument_list|()
argument_list|,
name|v
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return
name|htds
return|;
block|}
comment|/**    * Migrate root and meta to newer version. This updates the META and ROOT    * and removes the HTD from HRI.    * @param masterServices    * @throws IOException    */
specifier|public
specifier|static
name|void
name|migrateRootAndMeta
parameter_list|(
specifier|final
name|MasterServices
name|masterServices
parameter_list|)
throws|throws
name|IOException
block|{
name|updateRootWithNewRegionInfo
argument_list|(
name|masterServices
argument_list|)
expr_stmt|;
name|updateMetaWithNewRegionInfo
argument_list|(
name|masterServices
argument_list|)
expr_stmt|;
block|}
comment|/**    * Update the metamigrated flag in -ROOT-.    * @param catalogTracker    * @param metaUpdated    * @throws IOException    */
specifier|public
specifier|static
name|void
name|updateRootWithMetaMigrationStatus
parameter_list|(
name|CatalogTracker
name|catalogTracker
parameter_list|,
name|boolean
name|metaUpdated
parameter_list|)
throws|throws
name|IOException
block|{
name|Put
name|p
init|=
operator|new
name|Put
argument_list|(
name|HRegionInfo
operator|.
name|ROOT_REGIONINFO
operator|.
name|getRegionName
argument_list|()
argument_list|)
decl_stmt|;
name|MetaMigrationRemovingHTD
operator|.
name|addMetaUpdateStatus
argument_list|(
name|p
argument_list|,
name|metaUpdated
argument_list|)
expr_stmt|;
name|MetaEditor
operator|.
name|putToRootTable
argument_list|(
name|catalogTracker
argument_list|,
name|p
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Updated -ROOT- row with metaMigrated status = "
operator|+
name|metaUpdated
argument_list|)
expr_stmt|;
block|}
specifier|static
name|void
name|updateHRI
parameter_list|(
specifier|final
name|CatalogTracker
name|ct
parameter_list|,
specifier|final
name|boolean
name|rootTable
parameter_list|,
specifier|final
name|HRegionInfo090x
name|hRegionInfo090x
parameter_list|)
throws|throws
name|IOException
block|{
name|HRegionInfo
name|regionInfo
init|=
operator|new
name|HRegionInfo
argument_list|(
name|hRegionInfo090x
argument_list|)
decl_stmt|;
name|Put
name|p
init|=
operator|new
name|Put
argument_list|(
name|regionInfo
operator|.
name|getRegionName
argument_list|()
argument_list|)
decl_stmt|;
name|p
operator|.
name|add
argument_list|(
name|HConstants
operator|.
name|CATALOG_FAMILY
argument_list|,
name|HConstants
operator|.
name|REGIONINFO_QUALIFIER
argument_list|,
name|Writables
operator|.
name|getBytes
argument_list|(
name|regionInfo
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|rootTable
condition|)
block|{
name|MetaEditor
operator|.
name|putToRootTable
argument_list|(
name|ct
argument_list|,
name|p
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|MetaEditor
operator|.
name|putToMetaTable
argument_list|(
name|ct
argument_list|,
name|p
argument_list|)
expr_stmt|;
block|}
name|LOG
operator|.
name|info
argument_list|(
literal|"Updated region "
operator|+
name|regionInfo
operator|+
literal|" to "
operator|+
operator|(
name|rootTable
condition|?
literal|"-ROOT-"
else|:
literal|".META."
operator|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * @deprecated Going away in 0.94; used for migrating to 0.92 only.    */
specifier|public
specifier|static
name|HRegionInfo090x
name|getHRegionInfoForMigration
parameter_list|(
name|Result
name|data
parameter_list|)
throws|throws
name|IOException
block|{
name|HRegionInfo090x
name|info
init|=
literal|null
decl_stmt|;
name|byte
index|[]
name|bytes
init|=
name|data
operator|.
name|getValue
argument_list|(
name|HConstants
operator|.
name|CATALOG_FAMILY
argument_list|,
name|HConstants
operator|.
name|REGIONINFO_QUALIFIER
argument_list|)
decl_stmt|;
if|if
condition|(
name|bytes
operator|==
literal|null
condition|)
return|return
literal|null
return|;
try|try
block|{
name|info
operator|=
name|Writables
operator|.
name|getHRegionInfoForMigration
argument_list|(
name|bytes
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
if|if
condition|(
name|ioe
operator|.
name|getMessage
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"HTD not found in input buffer"
argument_list|)
condition|)
block|{
return|return
literal|null
return|;
block|}
else|else
block|{
throw|throw
name|ioe
throw|;
block|}
block|}
name|LOG
operator|.
name|info
argument_list|(
literal|"Current INFO from scan results = "
operator|+
name|info
argument_list|)
expr_stmt|;
return|return
name|info
return|;
block|}
specifier|public
specifier|static
name|List
argument_list|<
name|HRegionInfo090x
argument_list|>
name|fullScanMetaAndPrintHRIM
parameter_list|(
name|CatalogTracker
name|catalogTracker
parameter_list|)
throws|throws
name|IOException
block|{
specifier|final
name|List
argument_list|<
name|HRegionInfo090x
argument_list|>
name|regions
init|=
operator|new
name|ArrayList
argument_list|<
name|HRegionInfo090x
argument_list|>
argument_list|()
decl_stmt|;
name|Visitor
name|v
init|=
operator|new
name|Visitor
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|visit
parameter_list|(
name|Result
name|r
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|r
operator|==
literal|null
operator|||
name|r
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
literal|true
return|;
name|LOG
operator|.
name|info
argument_list|(
literal|"fullScanMetaAndPrint1.Current Meta Result: "
operator|+
name|r
argument_list|)
expr_stmt|;
name|HRegionInfo090x
name|hrim
init|=
name|getHRegionInfoForMigration
argument_list|(
name|r
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"fullScanMetaAndPrint.HRIM Print= "
operator|+
name|hrim
argument_list|)
expr_stmt|;
name|regions
operator|.
name|add
argument_list|(
name|hrim
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
block|}
decl_stmt|;
name|MetaReader
operator|.
name|fullScan
argument_list|(
name|catalogTracker
argument_list|,
name|v
argument_list|)
expr_stmt|;
return|return
name|regions
return|;
block|}
specifier|static
name|Put
name|addMetaUpdateStatus
parameter_list|(
specifier|final
name|Put
name|p
parameter_list|,
specifier|final
name|boolean
name|metaUpdated
parameter_list|)
block|{
name|p
operator|.
name|add
argument_list|(
name|HConstants
operator|.
name|CATALOG_FAMILY
argument_list|,
name|MetaMigrationRemovingHTD
operator|.
name|META_MIGRATION_QUALIFIER
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|metaUpdated
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|p
return|;
block|}
comment|/**    * @return True if the meta table has been migrated.    * @throws IOException    */
comment|// Public because used in tests
specifier|public
specifier|static
name|boolean
name|isMetaHRIUpdated
parameter_list|(
specifier|final
name|MasterServices
name|services
parameter_list|)
throws|throws
name|IOException
block|{
name|boolean
name|metaUpdated
init|=
literal|false
decl_stmt|;
name|List
argument_list|<
name|Result
argument_list|>
name|results
init|=
name|MetaReader
operator|.
name|fullScanOfRoot
argument_list|(
name|services
operator|.
name|getCatalogTracker
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|results
operator|==
literal|null
operator|||
name|results
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"metaUpdated = NULL."
argument_list|)
expr_stmt|;
return|return
name|metaUpdated
return|;
block|}
comment|// Presume only the one result.
name|Result
name|r
init|=
name|results
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|byte
index|[]
name|metaMigrated
init|=
name|r
operator|.
name|getValue
argument_list|(
name|HConstants
operator|.
name|CATALOG_FAMILY
argument_list|,
name|MetaMigrationRemovingHTD
operator|.
name|META_MIGRATION_QUALIFIER
argument_list|)
decl_stmt|;
if|if
condition|(
name|metaMigrated
operator|!=
literal|null
operator|&&
name|metaMigrated
operator|.
name|length
operator|>
literal|0
condition|)
block|{
name|metaUpdated
operator|=
name|Bytes
operator|.
name|toBoolean
argument_list|(
name|metaMigrated
argument_list|)
expr_stmt|;
block|}
name|LOG
operator|.
name|info
argument_list|(
literal|"Meta updated status = "
operator|+
name|metaUpdated
argument_list|)
expr_stmt|;
return|return
name|metaUpdated
return|;
block|}
comment|/**    * @return True if migrated.    * @throws IOException    */
specifier|public
specifier|static
name|boolean
name|updateMetaWithNewHRI
parameter_list|(
specifier|final
name|MasterServices
name|services
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|isMetaHRIUpdated
argument_list|(
name|services
argument_list|)
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"ROOT/Meta already up-to date with new HRI."
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
name|LOG
operator|.
name|info
argument_list|(
literal|"Meta has HRI with HTDs. Updating meta now."
argument_list|)
expr_stmt|;
try|try
block|{
name|migrateRootAndMeta
argument_list|(
name|services
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"ROOT and Meta updated with new HRI."
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Update ROOT/Meta with new HRI failed."
operator|+
literal|"Master startup aborted."
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

