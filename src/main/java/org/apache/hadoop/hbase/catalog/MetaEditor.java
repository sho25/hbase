begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|catalog
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|ConnectException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HRegionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|NotAllMetaRegionsOnlineException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ServerName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Delete
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|HTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Put
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Writables
import|;
end_import

begin_comment
comment|/**  * Writes region and assignment information to<code>.META.</code>.  * TODO: Put MetaReader and MetaEditor together; doesn't make sense having  * them distinct.  */
end_comment

begin_class
specifier|public
class|class
name|MetaEditor
block|{
comment|// TODO: Strip CatalogTracker from this class.  Its all over and in the end
comment|// its only used to get its Configuration so we can get associated
comment|// Connection.
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|MetaEditor
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|Put
name|makePutFromRegionInfo
parameter_list|(
name|HRegionInfo
name|regionInfo
parameter_list|)
throws|throws
name|IOException
block|{
name|Put
name|put
init|=
operator|new
name|Put
argument_list|(
name|regionInfo
operator|.
name|getRegionName
argument_list|()
argument_list|)
decl_stmt|;
name|put
operator|.
name|add
argument_list|(
name|HConstants
operator|.
name|CATALOG_FAMILY
argument_list|,
name|HConstants
operator|.
name|REGIONINFO_QUALIFIER
argument_list|,
name|Writables
operator|.
name|getBytes
argument_list|(
name|regionInfo
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|put
return|;
block|}
comment|/**    * Put the passed<code>p</code> to the<code>.META.</code> table.    * @param ct CatalogTracker on whose back we will ride the edit.    * @param p Put to add to .META.    * @throws IOException    */
specifier|static
name|void
name|putToMetaTable
parameter_list|(
specifier|final
name|CatalogTracker
name|ct
parameter_list|,
specifier|final
name|Put
name|p
parameter_list|)
throws|throws
name|IOException
block|{
name|put
argument_list|(
name|MetaReader
operator|.
name|getMetaHTable
argument_list|(
name|ct
argument_list|)
argument_list|,
name|p
argument_list|)
expr_stmt|;
block|}
comment|/**    * Put the passed<code>p</code> to the<code>.META.</code> table.    * @param ct CatalogTracker on whose back we will ride the edit.    * @param p Put to add to .META.    * @throws IOException    */
specifier|static
name|void
name|putToRootTable
parameter_list|(
specifier|final
name|CatalogTracker
name|ct
parameter_list|,
specifier|final
name|Put
name|p
parameter_list|)
throws|throws
name|IOException
block|{
name|put
argument_list|(
name|MetaReader
operator|.
name|getRootHTable
argument_list|(
name|ct
argument_list|)
argument_list|,
name|p
argument_list|)
expr_stmt|;
block|}
comment|/**    * Put the passed<code>p</code> to a catalog table.    * @param ct CatalogTracker on whose back we will ride the edit.    * @param p Put to add    * @throws IOException    */
specifier|static
name|void
name|putToCatalogTable
parameter_list|(
specifier|final
name|CatalogTracker
name|ct
parameter_list|,
specifier|final
name|Put
name|p
parameter_list|)
throws|throws
name|IOException
block|{
name|HTable
name|t
init|=
name|MetaReader
operator|.
name|getCatalogHTable
argument_list|(
name|ct
argument_list|,
name|p
operator|.
name|getRow
argument_list|()
argument_list|)
decl_stmt|;
name|put
argument_list|(
name|t
argument_list|,
name|p
argument_list|)
expr_stmt|;
block|}
comment|/**    * @param t Table to use (will be closed when done).    * @param p    * @throws IOException    */
specifier|private
specifier|static
name|void
name|put
parameter_list|(
specifier|final
name|HTable
name|t
parameter_list|,
specifier|final
name|Put
name|p
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|t
operator|.
name|put
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|t
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**    * Put the passed<code>ps</code> to the<code>.META.</code> table.    * @param ct CatalogTracker on whose back we will ride the edit.    * @param ps Put to add to .META.    * @throws IOException    */
specifier|static
name|void
name|putsToMetaTable
parameter_list|(
specifier|final
name|CatalogTracker
name|ct
parameter_list|,
specifier|final
name|List
argument_list|<
name|Put
argument_list|>
name|ps
parameter_list|)
throws|throws
name|IOException
block|{
name|HTable
name|t
init|=
name|MetaReader
operator|.
name|getMetaHTable
argument_list|(
name|ct
argument_list|)
decl_stmt|;
try|try
block|{
name|t
operator|.
name|put
argument_list|(
name|ps
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|t
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**    * Delete the passed<code>d</code> from the<code>.META.</code> table.    * @param ct CatalogTracker on whose back we will ride the edit.    * @param d Delete to add to .META.    * @throws IOException    */
specifier|static
name|void
name|deleteMetaTable
parameter_list|(
specifier|final
name|CatalogTracker
name|ct
parameter_list|,
specifier|final
name|Delete
name|d
parameter_list|)
throws|throws
name|IOException
block|{
name|HTable
name|t
init|=
name|MetaReader
operator|.
name|getMetaHTable
argument_list|(
name|ct
argument_list|)
decl_stmt|;
try|try
block|{
name|t
operator|.
name|delete
argument_list|(
name|d
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|t
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**    * Adds a META row for the specified new region.    * @param regionInfo region information    * @throws IOException if problem connecting or updating meta    */
specifier|public
specifier|static
name|void
name|addRegionToMeta
parameter_list|(
name|CatalogTracker
name|catalogTracker
parameter_list|,
name|HRegionInfo
name|regionInfo
parameter_list|)
throws|throws
name|IOException
block|{
name|putToMetaTable
argument_list|(
name|catalogTracker
argument_list|,
name|makePutFromRegionInfo
argument_list|(
name|regionInfo
argument_list|)
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Added region "
operator|+
name|regionInfo
operator|.
name|getRegionNameAsString
argument_list|()
operator|+
literal|" to META"
argument_list|)
expr_stmt|;
block|}
comment|/**    * Adds a META row for each of the specified new regions.    * @param catalogTracker CatalogTracker    * @param regionInfos region information list    * @throws IOException if problem connecting or updating meta    */
specifier|public
specifier|static
name|void
name|addRegionsToMeta
parameter_list|(
name|CatalogTracker
name|catalogTracker
parameter_list|,
name|List
argument_list|<
name|HRegionInfo
argument_list|>
name|regionInfos
parameter_list|)
throws|throws
name|IOException
block|{
name|List
argument_list|<
name|Put
argument_list|>
name|puts
init|=
operator|new
name|ArrayList
argument_list|<
name|Put
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|HRegionInfo
name|regionInfo
range|:
name|regionInfos
control|)
block|{
name|puts
operator|.
name|add
argument_list|(
name|makePutFromRegionInfo
argument_list|(
name|regionInfo
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|putsToMetaTable
argument_list|(
name|catalogTracker
argument_list|,
name|puts
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Added "
operator|+
name|puts
operator|.
name|size
argument_list|()
operator|+
literal|" regions in META"
argument_list|)
expr_stmt|;
block|}
comment|/**    * Offline parent in meta.    * Used when splitting.    * @param catalogTracker    * @param parent    * @param a Split daughter region A    * @param b Split daughter region B    * @throws NotAllMetaRegionsOnlineException    * @throws IOException    */
specifier|public
specifier|static
name|void
name|offlineParentInMeta
parameter_list|(
name|CatalogTracker
name|catalogTracker
parameter_list|,
name|HRegionInfo
name|parent
parameter_list|,
specifier|final
name|HRegionInfo
name|a
parameter_list|,
specifier|final
name|HRegionInfo
name|b
parameter_list|)
throws|throws
name|NotAllMetaRegionsOnlineException
throws|,
name|IOException
block|{
name|HRegionInfo
name|copyOfParent
init|=
operator|new
name|HRegionInfo
argument_list|(
name|parent
argument_list|)
decl_stmt|;
name|copyOfParent
operator|.
name|setOffline
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|copyOfParent
operator|.
name|setSplit
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Put
name|put
init|=
operator|new
name|Put
argument_list|(
name|copyOfParent
operator|.
name|getRegionName
argument_list|()
argument_list|)
decl_stmt|;
name|addRegionInfo
argument_list|(
name|put
argument_list|,
name|copyOfParent
argument_list|)
expr_stmt|;
name|put
operator|.
name|add
argument_list|(
name|HConstants
operator|.
name|CATALOG_FAMILY
argument_list|,
name|HConstants
operator|.
name|SPLITA_QUALIFIER
argument_list|,
name|Writables
operator|.
name|getBytes
argument_list|(
name|a
argument_list|)
argument_list|)
expr_stmt|;
name|put
operator|.
name|add
argument_list|(
name|HConstants
operator|.
name|CATALOG_FAMILY
argument_list|,
name|HConstants
operator|.
name|SPLITB_QUALIFIER
argument_list|,
name|Writables
operator|.
name|getBytes
argument_list|(
name|b
argument_list|)
argument_list|)
expr_stmt|;
name|putToMetaTable
argument_list|(
name|catalogTracker
argument_list|,
name|put
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Offlined parent region "
operator|+
name|parent
operator|.
name|getRegionNameAsString
argument_list|()
operator|+
literal|" in META"
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|addDaughter
parameter_list|(
specifier|final
name|CatalogTracker
name|catalogTracker
parameter_list|,
specifier|final
name|HRegionInfo
name|regionInfo
parameter_list|,
specifier|final
name|ServerName
name|sn
parameter_list|)
throws|throws
name|NotAllMetaRegionsOnlineException
throws|,
name|IOException
block|{
name|Put
name|put
init|=
operator|new
name|Put
argument_list|(
name|regionInfo
operator|.
name|getRegionName
argument_list|()
argument_list|)
decl_stmt|;
name|addRegionInfo
argument_list|(
name|put
argument_list|,
name|regionInfo
argument_list|)
expr_stmt|;
if|if
condition|(
name|sn
operator|!=
literal|null
condition|)
name|addLocation
argument_list|(
name|put
argument_list|,
name|sn
argument_list|)
expr_stmt|;
name|putToMetaTable
argument_list|(
name|catalogTracker
argument_list|,
name|put
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Added daughter "
operator|+
name|regionInfo
operator|.
name|getRegionNameAsString
argument_list|()
operator|+
operator|(
name|sn
operator|==
literal|null
condition|?
literal|", serverName=null"
else|:
literal|", serverName="
operator|+
name|sn
operator|.
name|toString
argument_list|()
operator|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Updates the location of the specified META region in ROOT to be the    * specified server hostname and startcode.    *<p>    * Uses passed catalog tracker to get a connection to the server hosting    * ROOT and makes edits to that region.    *    * @param catalogTracker catalog tracker    * @param regionInfo region to update location of    * @param sn Server name    * @throws IOException    * @throws ConnectException Usually because the regionserver carrying .META.    * is down.    * @throws NullPointerException Because no -ROOT- server connection    */
specifier|public
specifier|static
name|void
name|updateMetaLocation
parameter_list|(
name|CatalogTracker
name|catalogTracker
parameter_list|,
name|HRegionInfo
name|regionInfo
parameter_list|,
name|ServerName
name|sn
parameter_list|)
throws|throws
name|IOException
throws|,
name|ConnectException
block|{
name|updateLocation
argument_list|(
name|catalogTracker
argument_list|,
name|regionInfo
argument_list|,
name|sn
argument_list|)
expr_stmt|;
block|}
comment|/**    * Updates the location of the specified region in META to be the specified    * server hostname and startcode.    *<p>    * Uses passed catalog tracker to get a connection to the server hosting    * META and makes edits to that region.    *    * @param catalogTracker catalog tracker    * @param regionInfo region to update location of    * @param sn Server name    * @throws IOException    */
specifier|public
specifier|static
name|void
name|updateRegionLocation
parameter_list|(
name|CatalogTracker
name|catalogTracker
parameter_list|,
name|HRegionInfo
name|regionInfo
parameter_list|,
name|ServerName
name|sn
parameter_list|)
throws|throws
name|IOException
block|{
name|updateLocation
argument_list|(
name|catalogTracker
argument_list|,
name|regionInfo
argument_list|,
name|sn
argument_list|)
expr_stmt|;
block|}
comment|/**    * Updates the location of the specified region to be the specified server.    *<p>    * Connects to the specified server which should be hosting the specified    * catalog region name to perform the edit.    *    * @param catalogTracker    * @param regionInfo region to update location of    * @param sn Server name    * @throws IOException In particular could throw {@link java.net.ConnectException}    * if the server is down on other end.    */
specifier|private
specifier|static
name|void
name|updateLocation
parameter_list|(
specifier|final
name|CatalogTracker
name|catalogTracker
parameter_list|,
name|HRegionInfo
name|regionInfo
parameter_list|,
name|ServerName
name|sn
parameter_list|)
throws|throws
name|IOException
block|{
name|Put
name|put
init|=
operator|new
name|Put
argument_list|(
name|regionInfo
operator|.
name|getRegionName
argument_list|()
argument_list|)
decl_stmt|;
name|addLocation
argument_list|(
name|put
argument_list|,
name|sn
argument_list|)
expr_stmt|;
name|putToCatalogTable
argument_list|(
name|catalogTracker
argument_list|,
name|put
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Updated row "
operator|+
name|regionInfo
operator|.
name|getRegionNameAsString
argument_list|()
operator|+
literal|" with server="
operator|+
name|sn
argument_list|)
expr_stmt|;
block|}
comment|/**    * Deletes the specified region from META.    * @param catalogTracker    * @param regionInfo region to be deleted from META    * @throws IOException    */
specifier|public
specifier|static
name|void
name|deleteRegion
parameter_list|(
name|CatalogTracker
name|catalogTracker
parameter_list|,
name|HRegionInfo
name|regionInfo
parameter_list|)
throws|throws
name|IOException
block|{
name|Delete
name|delete
init|=
operator|new
name|Delete
argument_list|(
name|regionInfo
operator|.
name|getRegionName
argument_list|()
argument_list|)
decl_stmt|;
name|deleteMetaTable
argument_list|(
name|catalogTracker
argument_list|,
name|delete
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Deleted region "
operator|+
name|regionInfo
operator|.
name|getRegionNameAsString
argument_list|()
operator|+
literal|" from META"
argument_list|)
expr_stmt|;
block|}
comment|/**    * Deletes daughters references in offlined split parent.    * @param catalogTracker    * @param parent Parent row we're to remove daughter reference from    * @throws NotAllMetaRegionsOnlineException    * @throws IOException    */
specifier|public
specifier|static
name|void
name|deleteDaughtersReferencesInParent
parameter_list|(
name|CatalogTracker
name|catalogTracker
parameter_list|,
specifier|final
name|HRegionInfo
name|parent
parameter_list|)
throws|throws
name|NotAllMetaRegionsOnlineException
throws|,
name|IOException
block|{
name|Delete
name|delete
init|=
operator|new
name|Delete
argument_list|(
name|parent
operator|.
name|getRegionName
argument_list|()
argument_list|)
decl_stmt|;
name|delete
operator|.
name|deleteColumns
argument_list|(
name|HConstants
operator|.
name|CATALOG_FAMILY
argument_list|,
name|HConstants
operator|.
name|SPLITA_QUALIFIER
argument_list|)
expr_stmt|;
name|delete
operator|.
name|deleteColumns
argument_list|(
name|HConstants
operator|.
name|CATALOG_FAMILY
argument_list|,
name|HConstants
operator|.
name|SPLITB_QUALIFIER
argument_list|)
expr_stmt|;
name|deleteMetaTable
argument_list|(
name|catalogTracker
argument_list|,
name|delete
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Deleted daughters references, qualifier="
operator|+
name|Bytes
operator|.
name|toStringBinary
argument_list|(
name|HConstants
operator|.
name|SPLITA_QUALIFIER
argument_list|)
operator|+
literal|" and qualifier="
operator|+
name|Bytes
operator|.
name|toStringBinary
argument_list|(
name|HConstants
operator|.
name|SPLITA_QUALIFIER
argument_list|)
operator|+
literal|", from parent "
operator|+
name|parent
operator|.
name|getRegionNameAsString
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|HRegionInfo
name|getHRegionInfo
parameter_list|(
name|Result
name|data
parameter_list|)
throws|throws
name|IOException
block|{
name|byte
index|[]
name|bytes
init|=
name|data
operator|.
name|getValue
argument_list|(
name|HConstants
operator|.
name|CATALOG_FAMILY
argument_list|,
name|HConstants
operator|.
name|REGIONINFO_QUALIFIER
argument_list|)
decl_stmt|;
if|if
condition|(
name|bytes
operator|==
literal|null
condition|)
return|return
literal|null
return|;
name|HRegionInfo
name|info
init|=
name|Writables
operator|.
name|getHRegionInfo
argument_list|(
name|bytes
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Current INFO from scan results = "
operator|+
name|info
argument_list|)
expr_stmt|;
return|return
name|info
return|;
block|}
specifier|private
specifier|static
name|Put
name|addRegionInfo
parameter_list|(
specifier|final
name|Put
name|p
parameter_list|,
specifier|final
name|HRegionInfo
name|hri
parameter_list|)
throws|throws
name|IOException
block|{
name|p
operator|.
name|add
argument_list|(
name|HConstants
operator|.
name|CATALOG_FAMILY
argument_list|,
name|HConstants
operator|.
name|REGIONINFO_QUALIFIER
argument_list|,
name|Writables
operator|.
name|getBytes
argument_list|(
name|hri
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|p
return|;
block|}
specifier|private
specifier|static
name|Put
name|addLocation
parameter_list|(
specifier|final
name|Put
name|p
parameter_list|,
specifier|final
name|ServerName
name|sn
parameter_list|)
block|{
name|p
operator|.
name|add
argument_list|(
name|HConstants
operator|.
name|CATALOG_FAMILY
argument_list|,
name|HConstants
operator|.
name|SERVER_QUALIFIER
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|sn
operator|.
name|getHostAndPort
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|p
operator|.
name|add
argument_list|(
name|HConstants
operator|.
name|CATALOG_FAMILY
argument_list|,
name|HConstants
operator|.
name|STARTCODE_QUALIFIER
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|sn
operator|.
name|getStartcode
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|p
return|;
block|}
block|}
end_class

end_unit

