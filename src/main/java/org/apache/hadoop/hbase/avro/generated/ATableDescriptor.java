begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Autogenerated by Avro  *   * DO NOT EDIT DIRECTLY  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|avro
operator|.
name|generated
package|;
end_package

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"all"
argument_list|)
specifier|public
class|class
name|ATableDescriptor
extends|extends
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|specific
operator|.
name|SpecificRecordBase
implements|implements
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|specific
operator|.
name|SpecificRecord
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|Schema
name|SCHEMA$
init|=
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|Schema
operator|.
name|parse
argument_list|(
literal|"{\"type\":\"record\",\"name\":\"ATableDescriptor\",\"namespace\":\"org.apache.hadoop.hbase.avro.generated\",\"fields\":[{\"name\":\"name\",\"type\":\"bytes\"},{\"name\":\"families\",\"type\":[{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AFamilyDescriptor\",\"fields\":[{\"name\":\"name\",\"type\":\"bytes\"},{\"name\":\"compression\",\"type\":[{\"type\":\"enum\",\"name\":\"ACompressionAlgorithm\",\"symbols\":[\"LZO\",\"GZ\",\"NONE\"]},\"null\"]},{\"name\":\"maxVersions\",\"type\":[\"int\",\"null\"]},{\"name\":\"blocksize\",\"type\":[\"int\",\"null\"]},{\"name\":\"inMemory\",\"type\":[\"boolean\",\"null\"]},{\"name\":\"timeToLive\",\"type\":[\"int\",\"null\"]},{\"name\":\"blockCacheEnabled\",\"type\":[\"boolean\",\"null\"]}]}},\"null\"]},{\"name\":\"maxFileSize\",\"type\":[\"long\",\"null\"]},{\"name\":\"memStoreFlushSize\",\"type\":[\"long\",\"null\"]},{\"name\":\"rootRegion\",\"type\":[\"boolean\",\"null\"]},{\"name\":\"metaRegion\",\"type\":[\"boolean\",\"null\"]},{\"name\":\"metaTable\",\"type\":[\"boolean\",\"null\"]},{\"name\":\"readOnly\",\"type\":[\"boolean\",\"null\"]},{\"name\":\"deferredLogFlush\",\"type\":[\"boolean\",\"null\"]}]}"
argument_list|)
decl_stmt|;
specifier|public
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
name|name
decl_stmt|;
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|avro
operator|.
name|generated
operator|.
name|AFamilyDescriptor
argument_list|>
name|families
decl_stmt|;
specifier|public
name|java
operator|.
name|lang
operator|.
name|Long
name|maxFileSize
decl_stmt|;
specifier|public
name|java
operator|.
name|lang
operator|.
name|Long
name|memStoreFlushSize
decl_stmt|;
specifier|public
name|java
operator|.
name|lang
operator|.
name|Boolean
name|rootRegion
decl_stmt|;
specifier|public
name|java
operator|.
name|lang
operator|.
name|Boolean
name|metaRegion
decl_stmt|;
specifier|public
name|java
operator|.
name|lang
operator|.
name|Boolean
name|metaTable
decl_stmt|;
specifier|public
name|java
operator|.
name|lang
operator|.
name|Boolean
name|readOnly
decl_stmt|;
specifier|public
name|java
operator|.
name|lang
operator|.
name|Boolean
name|deferredLogFlush
decl_stmt|;
specifier|public
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|Schema
name|getSchema
parameter_list|()
block|{
return|return
name|SCHEMA$
return|;
block|}
comment|// Used by DatumWriter.  Applications should not call.
specifier|public
name|java
operator|.
name|lang
operator|.
name|Object
name|get
parameter_list|(
name|int
name|field$
parameter_list|)
block|{
switch|switch
condition|(
name|field$
condition|)
block|{
case|case
literal|0
case|:
return|return
name|name
return|;
case|case
literal|1
case|:
return|return
name|families
return|;
case|case
literal|2
case|:
return|return
name|maxFileSize
return|;
case|case
literal|3
case|:
return|return
name|memStoreFlushSize
return|;
case|case
literal|4
case|:
return|return
name|rootRegion
return|;
case|case
literal|5
case|:
return|return
name|metaRegion
return|;
case|case
literal|6
case|:
return|return
name|metaTable
return|;
case|case
literal|7
case|:
return|return
name|readOnly
return|;
case|case
literal|8
case|:
return|return
name|deferredLogFlush
return|;
default|default:
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|AvroRuntimeException
argument_list|(
literal|"Bad index"
argument_list|)
throw|;
block|}
block|}
comment|// Used by DatumReader.  Applications should not call.
annotation|@
name|SuppressWarnings
argument_list|(
name|value
operator|=
literal|"unchecked"
argument_list|)
specifier|public
name|void
name|put
parameter_list|(
name|int
name|field$
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value$
parameter_list|)
block|{
switch|switch
condition|(
name|field$
condition|)
block|{
case|case
literal|0
case|:
name|name
operator|=
operator|(
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
operator|)
name|value$
expr_stmt|;
break|break;
case|case
literal|1
case|:
name|families
operator|=
operator|(
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|avro
operator|.
name|generated
operator|.
name|AFamilyDescriptor
argument_list|>
operator|)
name|value$
expr_stmt|;
break|break;
case|case
literal|2
case|:
name|maxFileSize
operator|=
operator|(
name|java
operator|.
name|lang
operator|.
name|Long
operator|)
name|value$
expr_stmt|;
break|break;
case|case
literal|3
case|:
name|memStoreFlushSize
operator|=
operator|(
name|java
operator|.
name|lang
operator|.
name|Long
operator|)
name|value$
expr_stmt|;
break|break;
case|case
literal|4
case|:
name|rootRegion
operator|=
operator|(
name|java
operator|.
name|lang
operator|.
name|Boolean
operator|)
name|value$
expr_stmt|;
break|break;
case|case
literal|5
case|:
name|metaRegion
operator|=
operator|(
name|java
operator|.
name|lang
operator|.
name|Boolean
operator|)
name|value$
expr_stmt|;
break|break;
case|case
literal|6
case|:
name|metaTable
operator|=
operator|(
name|java
operator|.
name|lang
operator|.
name|Boolean
operator|)
name|value$
expr_stmt|;
break|break;
case|case
literal|7
case|:
name|readOnly
operator|=
operator|(
name|java
operator|.
name|lang
operator|.
name|Boolean
operator|)
name|value$
expr_stmt|;
break|break;
case|case
literal|8
case|:
name|deferredLogFlush
operator|=
operator|(
name|java
operator|.
name|lang
operator|.
name|Boolean
operator|)
name|value$
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|AvroRuntimeException
argument_list|(
literal|"Bad index"
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

