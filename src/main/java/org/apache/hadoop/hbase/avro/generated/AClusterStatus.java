begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|avro
operator|.
name|generated
package|;
end_package

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"all"
argument_list|)
specifier|public
class|class
name|AClusterStatus
extends|extends
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|specific
operator|.
name|SpecificRecordBase
implements|implements
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|specific
operator|.
name|SpecificRecord
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|Schema
name|SCHEMA$
init|=
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|Schema
operator|.
name|parse
argument_list|(
literal|"{\"type\":\"record\",\"name\":\"AClusterStatus\",\"namespace\":\"org.apache.hadoop.hbase.avro.generated\",\"fields\":[{\"name\":\"averageLoad\",\"type\":\"double\"},{\"name\":\"deadServerNames\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"deadServers\",\"type\":\"int\"},{\"name\":\"hbaseVersion\",\"type\":\"string\"},{\"name\":\"regionsCount\",\"type\":\"int\"},{\"name\":\"requestsCount\",\"type\":\"int\"},{\"name\":\"serverInfos\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"AServerInfo\",\"fields\":[{\"name\":\"infoPort\",\"type\":\"int\"},{\"name\":\"load\",\"type\":{\"type\":\"record\",\"name\":\"AServerLoad\",\"fields\":[{\"name\":\"load\",\"type\":\"int\"},{\"name\":\"maxHeapMB\",\"type\":\"int\"},{\"name\":\"memStoreSizeInMB\",\"type\":\"int\"},{\"name\":\"numberOfRegions\",\"type\":\"int\"},{\"name\":\"numberOfRequests\",\"type\":\"int\"},{\"name\":\"regionsLoad\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ARegionLoad\",\"fields\":[{\"name\":\"memStoreSizeMB\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"bytes\"},{\"name\":\"storefileIndexSizeMB\",\"type\":\"int\"},{\"name\":\"storefiles\",\"type\":\"int\"},{\"name\":\"storefileSizeMB\",\"type\":\"int\"},{\"name\":\"stores\",\"type\":\"int\"}]}}},{\"name\":\"storefileIndexSizeInMB\",\"type\":\"int\"},{\"name\":\"storefiles\",\"type\":\"int\"},{\"name\":\"storefileSizeInMB\",\"type\":\"int\"},{\"name\":\"usedHeapMB\",\"type\":\"int\"}]}},{\"name\":\"serverAddress\",\"type\":{\"type\":\"record\",\"name\":\"AServerAddress\",\"fields\":[{\"name\":\"hostname\",\"type\":\"string\"},{\"name\":\"inetSocketAddress\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"}]}},{\"name\":\"serverName\",\"type\":\"string\"},{\"name\":\"startCode\",\"type\":\"long\"}]}}},{\"name\":\"servers\",\"type\":\"int\"}]}"
argument_list|)
decl_stmt|;
specifier|public
name|double
name|averageLoad
decl_stmt|;
specifier|public
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|generic
operator|.
name|GenericArray
argument_list|<
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|util
operator|.
name|Utf8
argument_list|>
name|deadServerNames
decl_stmt|;
specifier|public
name|int
name|deadServers
decl_stmt|;
specifier|public
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|util
operator|.
name|Utf8
name|hbaseVersion
decl_stmt|;
specifier|public
name|int
name|regionsCount
decl_stmt|;
specifier|public
name|int
name|requestsCount
decl_stmt|;
specifier|public
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|generic
operator|.
name|GenericArray
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|avro
operator|.
name|generated
operator|.
name|AServerInfo
argument_list|>
name|serverInfos
decl_stmt|;
specifier|public
name|int
name|servers
decl_stmt|;
specifier|public
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|Schema
name|getSchema
parameter_list|()
block|{
return|return
name|SCHEMA$
return|;
block|}
specifier|public
name|java
operator|.
name|lang
operator|.
name|Object
name|get
parameter_list|(
name|int
name|field$
parameter_list|)
block|{
switch|switch
condition|(
name|field$
condition|)
block|{
case|case
literal|0
case|:
return|return
name|averageLoad
return|;
case|case
literal|1
case|:
return|return
name|deadServerNames
return|;
case|case
literal|2
case|:
return|return
name|deadServers
return|;
case|case
literal|3
case|:
return|return
name|hbaseVersion
return|;
case|case
literal|4
case|:
return|return
name|regionsCount
return|;
case|case
literal|5
case|:
return|return
name|requestsCount
return|;
case|case
literal|6
case|:
return|return
name|serverInfos
return|;
case|case
literal|7
case|:
return|return
name|servers
return|;
default|default:
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|AvroRuntimeException
argument_list|(
literal|"Bad index"
argument_list|)
throw|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
name|value
operator|=
literal|"unchecked"
argument_list|)
specifier|public
name|void
name|put
parameter_list|(
name|int
name|field$
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|Object
name|value$
parameter_list|)
block|{
switch|switch
condition|(
name|field$
condition|)
block|{
case|case
literal|0
case|:
name|averageLoad
operator|=
operator|(
name|java
operator|.
name|lang
operator|.
name|Double
operator|)
name|value$
expr_stmt|;
break|break;
case|case
literal|1
case|:
name|deadServerNames
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|generic
operator|.
name|GenericArray
argument_list|<
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|util
operator|.
name|Utf8
argument_list|>
operator|)
name|value$
expr_stmt|;
break|break;
case|case
literal|2
case|:
name|deadServers
operator|=
operator|(
name|java
operator|.
name|lang
operator|.
name|Integer
operator|)
name|value$
expr_stmt|;
break|break;
case|case
literal|3
case|:
name|hbaseVersion
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|util
operator|.
name|Utf8
operator|)
name|value$
expr_stmt|;
break|break;
case|case
literal|4
case|:
name|regionsCount
operator|=
operator|(
name|java
operator|.
name|lang
operator|.
name|Integer
operator|)
name|value$
expr_stmt|;
break|break;
case|case
literal|5
case|:
name|requestsCount
operator|=
operator|(
name|java
operator|.
name|lang
operator|.
name|Integer
operator|)
name|value$
expr_stmt|;
break|break;
case|case
literal|6
case|:
name|serverInfos
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|generic
operator|.
name|GenericArray
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|avro
operator|.
name|generated
operator|.
name|AServerInfo
argument_list|>
operator|)
name|value$
expr_stmt|;
break|break;
case|case
literal|7
case|:
name|servers
operator|=
operator|(
name|java
operator|.
name|lang
operator|.
name|Integer
operator|)
name|value$
expr_stmt|;
break|break;
default|default:
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|avro
operator|.
name|AvroRuntimeException
argument_list|(
literal|"Bad index"
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

