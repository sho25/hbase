begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright 2010 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|zookeeper
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|zookeeper
operator|.
name|KeeperException
import|;
end_import

begin_comment
comment|/**  * Helper class for table disable tracking in zookeeper.  *<p>  * The node /disabled will contain a child node for every table which should be  * disabled, for example, /disabled/table.  */
end_comment

begin_class
specifier|public
class|class
name|ZKTableDisable
block|{
comment|/**    * Sets the specified table as disabled in zookeeper.  Fails silently if the    * table is already disabled in zookeeper.  Sets no watches.    * @param zkw    * @param tableName    * @throws KeeperException unexpected zookeeper exception    */
specifier|public
specifier|static
name|void
name|disableTable
parameter_list|(
name|ZooKeeperWatcher
name|zkw
parameter_list|,
name|String
name|tableName
parameter_list|)
throws|throws
name|KeeperException
block|{
name|ZKUtil
operator|.
name|createAndFailSilent
argument_list|(
name|zkw
argument_list|,
name|ZKUtil
operator|.
name|joinZNode
argument_list|(
name|zkw
operator|.
name|tableZNode
argument_list|,
name|tableName
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Unsets the specified table as disabled in zookeeper.  Fails silently if the    * table is not currently disabled in zookeeper.  Sets no watches.    * @param zkw    * @param tableName    * @throws KeeperException unexpected zookeeper exception    */
specifier|public
specifier|static
name|void
name|undisableTable
parameter_list|(
name|ZooKeeperWatcher
name|zkw
parameter_list|,
name|String
name|tableName
parameter_list|)
throws|throws
name|KeeperException
block|{
name|ZKUtil
operator|.
name|deleteNodeFailSilent
argument_list|(
name|zkw
argument_list|,
name|ZKUtil
operator|.
name|joinZNode
argument_list|(
name|zkw
operator|.
name|tableZNode
argument_list|,
name|tableName
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Gets a list of all the tables set as disabled in zookeeper.    * @param zkw    * @return list of disabled tables, empty list if none    * @throws KeeperException    */
specifier|public
specifier|static
name|List
argument_list|<
name|String
argument_list|>
name|getDisabledTables
parameter_list|(
name|ZooKeeperWatcher
name|zkw
parameter_list|)
throws|throws
name|KeeperException
block|{
return|return
name|ZKUtil
operator|.
name|listChildrenNoWatch
argument_list|(
name|zkw
argument_list|,
name|zkw
operator|.
name|tableZNode
argument_list|)
return|;
block|}
block|}
end_class

end_unit

