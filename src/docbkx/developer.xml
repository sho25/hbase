<?xml version="1.0"?>
    <chapter xml:id="build"
      version="5.0" xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:svg="http://www.w3.org/2000/svg"
      xmlns:m="http://www.w3.org/1998/Math/MathML"
      xmlns:html="http://www.w3.org/1999/xhtml"
      xmlns:db="http://docbook.org/ns/docbook">
    <title>Developing HBase</title>
    <para>This chapter will be of interest only to those developing HBase (i.e., as opposed to using it).
    See the HBase wiki <link xlink:href="http://wiki.apache.org/hadoop/Hbase/HowToContribute">How To Contribute</link>
    </para>
    <section xml:id="repos">
      <title>HBase Repositories</title>
      <section xml:id="svn">
        <title>SVN</title>
        <programlisting>
svn co http://svn.apache.org/repos/asf/hbase/trunk hbase-core-trunk 
        </programlisting>
      </section>         
      <section xml:id="git">
        <title>Git</title>
        <programlisting>
git clone git://git.apache.org/hbase.git
        </programlisting>
      </section>         
    </section>         
    <section xml:id="ides"> 
        <title>IDEs</title>
        <section xml:id="eclipse">
          <title>Eclipse</title>
            <section xml:id="eclipse.code.formatting">
            <title>Code Formatting</title>
            <para>See <link xlink:href="https://issues.apache.org/jira/browse/HBASE-3678">HBASE-3678 Add Eclipse-based Apache Formatter to HBase Wiki</link>
              for an Eclipse formatter to help ensure your code conforms to HBase'y coding conventsion.
            The issue includes instructions for loading the attached formatter.</para>
            </section>         
            <section xml:id="eclipse.svn">
            <title>Subversive Plugin</title>
            <para>Download and install the Subversive plugin.</para>
            <para>Set up an SVN Repository target from <xref linkend="svn"/>, then check out the code.</para>
            </section>         
            <section xml:id="eclipse.maven.setup">
            <title>HBase Project Setup</title>
            To set up your Eclipse environment for HBase, close Eclipse and execute...
            <programlisting>
mvn eclipse:eclipse
            </programlisting>
            ... from your local HBase project directory in your workspace to generate a new <filename>.project</filename> file.  Then reopen Eclipse.
            </section>         
            <section xml:id="eclipse.maven.plugin">
            <title>Maven Plugin</title>
            <para>Download and install the Maven plugin.  For example, Help -&gt; Install New Software -&gt; (search for Maven Plugin)</para>
            </section>         
            <section xml:id="eclipse.maven.class">
            <title>Maven Classpath Variable</title>
            <para>The <varname>M2_REPO</varname> classpath variable needs to be set up for the project.  This needs to be set to 
            your local Maven repository, which is usually <filename>~/.m2/repository</filename></para>
            If this classpath variable is not configured, you will see compile errors in Eclipse like this...
            <programlisting>
Description	Resource	Path	Location	Type
The project cannot be built until build path errors are resolved	hbase		Unknown	Java Problem 
Unbound classpath variable: 'M2_REPO/asm/asm/3.1/asm-3.1.jar' in project 'hbase'	hbase		Build path	Build Path Problem
Unbound classpath variable: 'M2_REPO/com/github/stephenc/high-scale-lib/high-scale-lib/1.1.1/high-scale-lib-1.1.1.jar' in project 'hbase'	hbase		Build path	Build Path Problem 
Unbound classpath variable: 'M2_REPO/com/google/guava/guava/r09/guava-r09.jar' in project 'hbase'	hbase		Build path	Build Path Problem
Unbound classpath variable: 'M2_REPO/com/google/protobuf/protobuf-java/2.3.0/protobuf-java-2.3.0.jar' in project 'hbase'	hbase		Build path	Build Path Problem Unbound classpath variable:
            </programlisting>            
            </section>     
            <section xml:id="eclipse.issues">
            <title>Eclipse Known Issues</title>
            <para>Eclipse will currently complain about <filename>Bytes.java</filename>.  It is not possible to turn these errors off.</para>
            <programlisting>            
Description	Resource	Path	Location	Type
Access restriction: The method arrayBaseOffset(Class) from the type Unsafe is not accessible due to restriction on required library /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar	Bytes.java	/hbase/src/main/java/org/apache/hadoop/hbase/util	line 1061	Java Problem
Access restriction: The method arrayIndexScale(Class) from the type Unsafe is not accessible due to restriction on required library /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar	Bytes.java	/hbase/src/main/java/org/apache/hadoop/hbase/util	line 1064	Java Problem
Access restriction: The method getLong(Object, long) from the type Unsafe is not accessible due to restriction on required library /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar	Bytes.java	/hbase/src/main/java/org/apache/hadoop/hbase/util	line 1111	Java Problem
             </programlisting>   
             </section>
        </section>
    </section> 
    <section xml:id="maven.build.commands"> 
       <title>Maven Build Commands</title>
       <para>All commands executed from the local HBase project directory.
       </para>
       <section xml:id="maven.build.commands.compile"> 
          <title>Compile</title>
          <programlisting>
mvn compile
          </programlisting>
       </section>       
       <section xml:id="maven.build.commands.unitall"> 
          <title>Run all Unit Tests</title>
          <programlisting>
mvn test
          </programlisting>
       </section>       
       <section xml:id="maven.build.commands.unit"> 
          <title>Run a Single Unit Test</title>
          <programlisting>
mvn test -Dtest=TestXYZ
          </programlisting>
       </section>       
           
    </section>
    <section xml:id="unit.tests"> 
        <title>Unit Tests</title>
        <para>In HBase we use <link xlink:href="http://junit.org">JUnit</link> 4.
            If you need to run miniclusters of HDFS, ZooKeeper, HBase, or MapReduce testing,
            be sure to checkout the <classname>HBaseTestingUtility</classname>.
            Alex Baranau of Sematext describes how it can be used in
            <link xlink:href="http://blog.sematext.com/2010/08/30/hbase-case-study-using-hbasetestingutility-for-local-testing-development/">HBase Case-Study: Using HBaseTestingUtility for Local Testing and Development</link> (2010).
        </para>
        <section xml:id="mockito">
          <title>Mocito</title>
          <para>Sometimes you don't need a full running server
              unit testing.  For example, some methods can make do with a
              a <classname>org.apache.hadoop.hbase.Server</classname> instance
              or a <classname>org.apache.hadoop.hbase.master.MasterServices</classname>
              Interface reference rather than a full-blown
              <classname>org.apache.hadoop.hbase.master.HMaster</classname>.
              In these cases, you maybe able to get away with a mocked
              <classname>Server</classname> instance.  For example:
              <programlisting>
              </programlisting>
           </para>
        </section>
    </section> 

    <section xml:id="getting.involved"> 
        <title>Getting Involved</title>
        <para>HBase gets better only when people contribute!  The following are highlights from the HBase wiki on 
        <link xlink:href="http://wiki.apache.org/hadoop/Hbase/HowToContribute">How To Contribute</link>.
        </para>
        <section xml:id="mailing.list">
          <title>Mailing Lists</title>
          <para>Sign up for the dev-list, and the user-list too for greater coverage.  See the 
          <link xlink:href="http://hbase.apache.org/mail-lists.html">mailing lists</link> page.
          </para>
        </section>
        <section xml:id="jira">
          <title>Jira</title>
          <para>Check for existing issues in <link xlink:href="https://issues.apache.org/jira/browse/HBASE">Jira</link>.  
          If it's either a new feature request, enhancement, or a bug, file a ticket.
          </para>
        </section>
        <section xml:id="submitting.patches">
          <title>Submitting Patches</title>
          <section xml:id="submitting.patches.create">
            <title>Create Patch</title>
          <para>Patch files can be easily generated from Eclipse, for example by selecting Team -&gt; Create Patch.
          </para>
          <para>Please submit one patch-file per Jira.  For example, if multiple files are changed make sure the 
          selected resource when generating the patch is a directory.  Patch files can reflect changes in multiple files. </para>
          </section>
          <section xml:id="submitting.patches.naming">
            <title>Patch File Naming</title>
          <para>The patch file should have the HBase Jira ticket in the name.  For example, if a patch was submitted for <filename>Foo.java</filename>, then
          a patch file called <filename>Foo_HBASE_XXX.patch</filename> would be acceptable where XXX is the HBase Jira number.
          </para>
          </section>
          <section xml:id="submitting.patches.tests">
            <title>Unit Tests</title>
            <para>Yes, please.  Please try to include unit tests with every code patch (and especially new classes and large changes).</para>
          </section>
          <section xml:id="submitting.patches.jira">
            <title>Attach Patch to Jira</title>
          <para>The patch should be attached to the associated Jira ticket.
          </para>
          <para>Once attached to the ticket, click "submit patch" and 
          the status of the ticket will change.  Committers will review submitted patches for inclusion into the codebase.  Please
          understand that not every patch may get committed, and that feedback will likely be provided on the patch.  Fear not, though,
          because the HBase community is helpful!
          </para>
          </section>
        </section>
        <section xml:id="committing.patches">
          <title>Committing Patches</title>
          <para>
          See <link xlink:href="http://wiki.apache.org/hadoop/Hbase/HowToCommit">How To Commit</link> in the HBase wiki.
          </para>
        </section>
    
    </section>
          
    </chapter>
