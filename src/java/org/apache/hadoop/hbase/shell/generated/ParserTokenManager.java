begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* Generated By:JavaCC: Do not edit this line. ParserTokenManager.java */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shell
operator|.
name|generated
package|;
end_package

begin_comment
comment|/**  * Copyright 2007 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLEncoder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|UnsupportedEncodingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shell
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|ParserTokenManager
implements|implements
name|ParserConstants
block|{
specifier|public
name|java
operator|.
name|io
operator|.
name|PrintStream
name|debugStream
init|=
name|System
operator|.
name|out
decl_stmt|;
specifier|public
name|void
name|setDebugStream
parameter_list|(
name|java
operator|.
name|io
operator|.
name|PrintStream
name|ds
parameter_list|)
block|{
name|debugStream
operator|=
name|ds
expr_stmt|;
block|}
specifier|private
specifier|final
name|int
name|jjStopStringLiteralDfa_0
parameter_list|(
name|int
name|pos
parameter_list|,
name|long
name|active0
parameter_list|,
name|long
name|active1
parameter_list|)
block|{
switch|switch
condition|(
name|pos
condition|)
block|{
case|case
literal|0
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x800000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|3
return|;
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x7fffe603ffffffe0L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|63
expr_stmt|;
return|return
literal|1
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|1
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x4008040200032000L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|1
return|;
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x3ff7e201fffcdfe0L
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|jjmatchedPos
operator|!=
literal|1
condition|)
block|{
name|jjmatchedKind
operator|=
literal|63
expr_stmt|;
name|jjmatchedPos
operator|=
literal|1
expr_stmt|;
block|}
return|return
literal|1
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|2
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x400020104004000L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|1
return|;
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x3bffe000fbff9fe0L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|63
expr_stmt|;
name|jjmatchedPos
operator|=
literal|2
expr_stmt|;
return|return
literal|1
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|3
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x2bfee000f9fd08c0L
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|jjmatchedPos
operator|!=
literal|3
condition|)
block|{
name|jjmatchedKind
operator|=
literal|63
expr_stmt|;
name|jjmatchedPos
operator|=
literal|3
expr_stmt|;
block|}
return|return
literal|1
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x1001000002029720L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|1
return|;
return|return
operator|-
literal|1
return|;
case|case
literal|4
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0xbfce00078f90a00L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|63
expr_stmt|;
name|jjmatchedPos
operator|=
literal|4
expr_stmt|;
return|return
literal|1
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x20020000810400c0L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|1
return|;
return|return
operator|-
literal|1
return|;
case|case
literal|5
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x3f8e00070c00200L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|63
expr_stmt|;
name|jjmatchedPos
operator|=
literal|5
expr_stmt|;
return|return
literal|1
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x804000008390800L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|1
return|;
return|return
operator|-
literal|1
return|;
case|case
literal|6
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x3f8e00070800200L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|63
expr_stmt|;
name|jjmatchedPos
operator|=
literal|6
expr_stmt|;
return|return
literal|1
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x400000L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|1
return|;
return|return
operator|-
literal|1
return|;
case|case
literal|7
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x2f8e00070000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|63
expr_stmt|;
name|jjmatchedPos
operator|=
literal|7
expr_stmt|;
return|return
literal|1
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x100000000800200L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|1
return|;
return|return
operator|-
literal|1
return|;
case|case
literal|8
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x2f0e00050000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|63
expr_stmt|;
name|jjmatchedPos
operator|=
literal|8
expr_stmt|;
return|return
literal|1
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x8000020000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|1
return|;
return|return
operator|-
literal|1
return|;
case|case
literal|9
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x400000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|1
return|;
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x2f0a00050000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|63
expr_stmt|;
name|jjmatchedPos
operator|=
literal|9
expr_stmt|;
return|return
literal|1
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|10
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x290800000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|1
return|;
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x60200050000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|63
expr_stmt|;
name|jjmatchedPos
operator|=
literal|10
expr_stmt|;
return|return
literal|1
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|11
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x200040000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|1
return|;
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x60000010000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|63
expr_stmt|;
name|jjmatchedPos
operator|=
literal|11
expr_stmt|;
return|return
literal|1
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|12
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x60000010000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|63
expr_stmt|;
name|jjmatchedPos
operator|=
literal|12
expr_stmt|;
return|return
literal|1
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|13
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x10000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|1
return|;
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x60000000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|63
expr_stmt|;
name|jjmatchedPos
operator|=
literal|13
expr_stmt|;
return|return
literal|1
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|14
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x60000000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|63
expr_stmt|;
name|jjmatchedPos
operator|=
literal|14
expr_stmt|;
return|return
literal|1
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|15
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x60000000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|63
expr_stmt|;
name|jjmatchedPos
operator|=
literal|15
expr_stmt|;
return|return
literal|1
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|16
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x60000000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|63
expr_stmt|;
name|jjmatchedPos
operator|=
literal|16
expr_stmt|;
return|return
literal|1
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|17
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x60000000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|63
expr_stmt|;
name|jjmatchedPos
operator|=
literal|17
expr_stmt|;
return|return
literal|1
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|18
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x60000000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|63
expr_stmt|;
name|jjmatchedPos
operator|=
literal|18
expr_stmt|;
return|return
literal|1
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|19
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x40000000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|63
expr_stmt|;
name|jjmatchedPos
operator|=
literal|19
expr_stmt|;
return|return
literal|1
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x20000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|1
return|;
return|return
operator|-
literal|1
return|;
default|default :
return|return
operator|-
literal|1
return|;
block|}
block|}
specifier|private
specifier|final
name|int
name|jjStartNfa_0
parameter_list|(
name|int
name|pos
parameter_list|,
name|long
name|active0
parameter_list|,
name|long
name|active1
parameter_list|)
block|{
return|return
name|jjMoveNfa_0
argument_list|(
name|jjStopStringLiteralDfa_0
argument_list|(
name|pos
argument_list|,
name|active0
argument_list|,
name|active1
argument_list|)
argument_list|,
name|pos
operator|+
literal|1
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|int
name|jjStopAtPos
parameter_list|(
name|int
name|pos
parameter_list|,
name|int
name|kind
parameter_list|)
block|{
name|jjmatchedKind
operator|=
name|kind
expr_stmt|;
name|jjmatchedPos
operator|=
name|pos
expr_stmt|;
return|return
name|pos
operator|+
literal|1
return|;
block|}
specifier|private
specifier|final
name|int
name|jjStartNfaWithStates_0
parameter_list|(
name|int
name|pos
parameter_list|,
name|int
name|kind
parameter_list|,
name|int
name|state
parameter_list|)
block|{
name|jjmatchedKind
operator|=
name|kind
expr_stmt|;
name|jjmatchedPos
operator|=
name|pos
expr_stmt|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
return|return
name|pos
operator|+
literal|1
return|;
block|}
return|return
name|jjMoveNfa_0
argument_list|(
name|state
argument_list|,
name|pos
operator|+
literal|1
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|int
name|jjMoveStringLiteralDfa0_0
parameter_list|()
block|{
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|33
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x80000000000L
argument_list|)
return|;
case|case
literal|40
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|36
argument_list|)
return|;
case|case
literal|41
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|37
argument_list|)
return|;
case|case
literal|42
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|44
argument_list|)
return|;
case|case
literal|44
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|34
argument_list|)
return|;
case|case
literal|46
case|:
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|0
argument_list|,
literal|35
argument_list|,
literal|3
argument_list|)
return|;
case|case
literal|59
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|69
argument_list|)
return|;
case|case
literal|60
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|40
argument_list|)
return|;
case|case
literal|61
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|38
argument_list|)
return|;
case|case
literal|62
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|39
argument_list|)
return|;
case|case
literal|65
case|:
case|case
literal|97
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x400000100000040L
argument_list|)
return|;
case|case
literal|66
case|:
case|case
literal|98
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x4012000000000000L
argument_list|)
return|;
case|case
literal|67
case|:
case|case
literal|99
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x820800010000880L
argument_list|)
return|;
case|case
literal|68
case|:
case|case
literal|100
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x481600L
argument_list|)
return|;
case|case
literal|69
case|:
case|case
literal|101
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x208000L
argument_list|)
return|;
case|case
literal|70
case|:
case|case
literal|102
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x2002000L
argument_list|)
return|;
case|case
literal|71
case|:
case|case
literal|103
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x2000000000000000L
argument_list|)
return|;
case|case
literal|72
case|:
case|case
literal|104
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x20L
argument_list|)
return|;
case|case
literal|73
case|:
case|case
literal|105
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x8040000030000L
argument_list|)
return|;
case|case
literal|74
case|:
case|case
literal|106
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x4000L
argument_list|)
return|;
case|case
literal|76
case|:
case|case
literal|108
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x80000000L
argument_list|)
return|;
case|case
literal|77
case|:
case|case
literal|109
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x600000000000L
argument_list|)
return|;
case|case
literal|78
case|:
case|case
literal|110
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x301020040000000L
argument_list|)
return|;
case|case
literal|79
case|:
case|case
literal|111
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x200000000L
argument_list|)
return|;
case|case
literal|82
case|:
case|case
literal|114
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x44000004000000L
argument_list|)
return|;
case|case
literal|83
case|:
case|case
literal|115
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x1000000000900100L
argument_list|)
return|;
case|case
literal|84
case|:
case|case
literal|116
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x20040000L
argument_list|)
return|;
case|case
literal|86
case|:
case|case
literal|118
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x80000008000000L
argument_list|)
return|;
case|case
literal|87
case|:
case|case
literal|119
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x1000000L
argument_list|)
return|;
default|default :
return|return
name|jjMoveNfa_0
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
return|;
block|}
block|}
specifier|private
specifier|final
name|int
name|jjMoveStringLiteralDfa1_0
parameter_list|(
name|long
name|active0
parameter_list|)
block|{
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|0
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|1
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|61
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x80000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStopAtPos
argument_list|(
literal|1
argument_list|,
literal|43
argument_list|)
return|;
break|break;
case|case
literal|65
case|:
case|case
literal|97
case|:
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0x1000600008044000L
argument_list|)
return|;
case|case
literal|68
case|:
case|case
literal|100
case|:
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0x400000000000000L
argument_list|)
return|;
case|case
literal|69
case|:
case|case
literal|101
case|:
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0xc4000000180620L
argument_list|)
return|;
case|case
literal|72
case|:
case|case
literal|104
case|:
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0x800000001000100L
argument_list|)
return|;
case|case
literal|73
case|:
case|case
literal|105
case|:
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0xa0400000L
argument_list|)
return|;
case|case
literal|76
case|:
case|case
literal|108
case|:
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0x120000000000c0L
argument_list|)
return|;
case|case
literal|78
case|:
case|case
literal|110
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x40000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|42
expr_stmt|;
name|jjmatchedPos
operator|=
literal|1
expr_stmt|;
block|}
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0x8000100230000L
argument_list|)
return|;
case|case
literal|79
case|:
case|case
literal|111
case|:
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0x21820014000000L
argument_list|)
return|;
case|case
literal|82
case|:
case|case
literal|114
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x200000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|1
argument_list|,
literal|33
argument_list|,
literal|1
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0x2000000002001800L
argument_list|)
return|;
case|case
literal|83
case|:
case|case
literal|115
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x2000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|1
argument_list|,
literal|13
argument_list|,
literal|1
argument_list|)
return|;
break|break;
case|case
literal|84
case|:
case|case
literal|116
case|:
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0x800000L
argument_list|)
return|;
case|case
literal|85
case|:
case|case
literal|117
case|:
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0x300000040000000L
argument_list|)
return|;
case|case
literal|88
case|:
case|case
literal|120
case|:
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0x8000L
argument_list|)
return|;
case|case
literal|89
case|:
case|case
literal|121
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x4000000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|1
argument_list|,
literal|62
argument_list|,
literal|1
argument_list|)
return|;
break|break;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|0
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|int
name|jjMoveStringLiteralDfa2_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|0
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|1
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|2
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|95
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x8000000000000L
argument_list|)
return|;
case|case
literal|65
case|:
case|case
literal|97
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x800000000a00000L
argument_list|)
return|;
case|case
literal|66
case|:
case|case
literal|98
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x40000L
argument_list|)
return|;
case|case
literal|67
case|:
case|case
literal|99
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x84000000000000L
argument_list|)
return|;
case|case
literal|68
case|:
case|case
literal|100
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x100000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|2
argument_list|,
literal|32
argument_list|,
literal|1
argument_list|)
return|;
elseif|else
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x400000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|2
argument_list|,
literal|58
argument_list|,
literal|1
argument_list|)
return|;
break|break;
case|case
literal|69
case|:
case|case
literal|101
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x1000880L
argument_list|)
return|;
case|case
literal|73
case|:
case|case
literal|105
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x8000L
argument_list|)
return|;
case|case
literal|76
case|:
case|case
literal|108
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x18180020L
argument_list|)
return|;
case|case
literal|77
case|:
case|case
literal|109
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x3008000e0000000L
argument_list|)
return|;
case|case
literal|78
case|:
case|case
literal|110
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x1000000000000L
argument_list|)
return|;
case|case
literal|79
case|:
case|case
literal|111
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x2012000002001100L
argument_list|)
return|;
case|case
literal|82
case|:
case|case
literal|114
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x4000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|2
argument_list|,
literal|14
argument_list|,
literal|1
argument_list|)
return|;
break|break;
case|case
literal|83
case|:
case|case
literal|115
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x410600L
argument_list|)
return|;
case|case
literal|84
case|:
case|case
literal|116
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x20000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|2
argument_list|,
literal|41
argument_list|,
literal|1
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x40000000020040L
argument_list|)
return|;
case|case
literal|85
case|:
case|case
literal|117
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x20000000000000L
argument_list|)
return|;
case|case
literal|86
case|:
case|case
literal|118
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x1000000000000000L
argument_list|)
return|;
case|case
literal|87
case|:
case|case
literal|119
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x4000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|2
argument_list|,
literal|26
argument_list|,
literal|1
argument_list|)
return|;
break|break;
case|case
literal|88
case|:
case|case
literal|120
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x600000000000L
argument_list|)
return|;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|1
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|int
name|jjMoveStringLiteralDfa3_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|1
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|2
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|3
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|95
case|:
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x300600040000000L
argument_list|)
return|;
case|case
literal|65
case|:
case|case
literal|97
case|:
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x400880L
argument_list|)
return|;
case|case
literal|66
case|:
case|case
literal|98
case|:
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x200000L
argument_list|)
return|;
case|case
literal|67
case|:
case|case
literal|99
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x400L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|10
expr_stmt|;
name|jjmatchedPos
operator|=
literal|3
expr_stmt|;
block|}
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x2000000000200L
argument_list|)
return|;
case|case
literal|69
case|:
case|case
literal|101
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x1000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|3
argument_list|,
literal|48
argument_list|,
literal|1
argument_list|)
return|;
elseif|else
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x1000000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|3
argument_list|,
literal|60
argument_list|,
literal|1
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x20190040L
argument_list|)
return|;
case|case
literal|73
case|:
case|case
literal|105
case|:
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x80000000L
argument_list|)
return|;
case|case
literal|76
case|:
case|case
literal|108
case|:
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x40000L
argument_list|)
return|;
case|case
literal|77
case|:
case|case
literal|109
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x2000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|3
argument_list|,
literal|25
argument_list|,
literal|1
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x8000000000000L
argument_list|)
return|;
case|case
literal|78
case|:
case|case
literal|110
case|:
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x820000000000000L
argument_list|)
return|;
case|case
literal|79
case|:
case|case
literal|111
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x20000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|3
argument_list|,
literal|17
argument_list|,
literal|1
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x54000000000000L
argument_list|)
return|;
case|case
literal|80
case|:
case|case
literal|112
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x20L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|3
argument_list|,
literal|5
argument_list|,
literal|1
argument_list|)
return|;
elseif|else
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x1000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|3
argument_list|,
literal|12
argument_list|,
literal|1
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x800000000000L
argument_list|)
return|;
case|case
literal|82
case|:
case|case
literal|114
case|:
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x1800000L
argument_list|)
return|;
case|case
literal|84
case|:
case|case
literal|116
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x8000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|3
argument_list|,
literal|15
argument_list|,
literal|1
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x80000000000000L
argument_list|)
return|;
case|case
literal|85
case|:
case|case
literal|117
case|:
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x2000000018000000L
argument_list|)
return|;
case|case
literal|87
case|:
case|case
literal|119
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x100L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|3
argument_list|,
literal|8
argument_list|,
literal|1
argument_list|)
return|;
break|break;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|2
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|int
name|jjMoveStringLiteralDfa4_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|2
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|3
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|4
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|66
case|:
case|case
literal|98
case|:
return|return
name|jjMoveStringLiteralDfa5_0
argument_list|(
name|active0
argument_list|,
literal|0x400000L
argument_list|)
return|;
case|case
literal|67
case|:
case|case
literal|99
case|:
return|return
name|jjMoveStringLiteralDfa5_0
argument_list|(
name|active0
argument_list|,
literal|0x100000L
argument_list|)
return|;
case|case
literal|69
case|:
case|case
literal|101
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x40000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|4
argument_list|,
literal|18
argument_list|,
literal|1
argument_list|)
return|;
elseif|else
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x1000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|4
argument_list|,
literal|24
argument_list|,
literal|1
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa5_0
argument_list|(
name|active0
argument_list|,
literal|0x208000008000000L
argument_list|)
return|;
case|case
literal|71
case|:
case|case
literal|103
case|:
return|return
name|jjMoveStringLiteralDfa5_0
argument_list|(
name|active0
argument_list|,
literal|0x800000000000000L
argument_list|)
return|;
case|case
literal|72
case|:
case|case
literal|104
case|:
return|return
name|jjMoveStringLiteralDfa5_0
argument_list|(
name|active0
argument_list|,
literal|0x100000000000000L
argument_list|)
return|;
case|case
literal|75
case|:
case|case
literal|107
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x2000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|4
argument_list|,
literal|49
argument_list|,
literal|1
argument_list|)
return|;
break|break;
case|case
literal|76
case|:
case|case
literal|108
case|:
return|return
name|jjMoveStringLiteralDfa5_0
argument_list|(
name|active0
argument_list|,
literal|0x400000200000L
argument_list|)
return|;
case|case
literal|77
case|:
case|case
literal|109
case|:
return|return
name|jjMoveStringLiteralDfa5_0
argument_list|(
name|active0
argument_list|,
literal|0x10000010000000L
argument_list|)
return|;
case|case
literal|79
case|:
case|case
literal|111
case|:
return|return
name|jjMoveStringLiteralDfa5_0
argument_list|(
name|active0
argument_list|,
literal|0x80000000000000L
argument_list|)
return|;
case|case
literal|80
case|:
case|case
literal|112
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x2000000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|4
argument_list|,
literal|61
argument_list|,
literal|1
argument_list|)
return|;
break|break;
case|case
literal|82
case|:
case|case
literal|114
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x40L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|4
argument_list|,
literal|6
argument_list|,
literal|1
argument_list|)
return|;
elseif|else
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x80L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|4
argument_list|,
literal|7
argument_list|,
literal|1
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa5_0
argument_list|(
name|active0
argument_list|,
literal|0x4800000010200L
argument_list|)
return|;
case|case
literal|83
case|:
case|case
literal|115
case|:
return|return
name|jjMoveStringLiteralDfa5_0
argument_list|(
name|active0
argument_list|,
literal|0x20000000L
argument_list|)
return|;
case|case
literal|84
case|:
case|case
literal|116
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x80000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|4
argument_list|,
literal|31
argument_list|,
literal|1
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa5_0
argument_list|(
name|active0
argument_list|,
literal|0x20000000880800L
argument_list|)
return|;
case|case
literal|85
case|:
case|case
literal|117
case|:
return|return
name|jjMoveStringLiteralDfa5_0
argument_list|(
name|active0
argument_list|,
literal|0x40000000000000L
argument_list|)
return|;
case|case
literal|86
case|:
case|case
literal|118
case|:
return|return
name|jjMoveStringLiteralDfa5_0
argument_list|(
name|active0
argument_list|,
literal|0x200040000000L
argument_list|)
return|;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|3
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|int
name|jjMoveStringLiteralDfa5_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|3
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|4
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|5
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|65
case|:
case|case
literal|97
case|:
return|return
name|jjMoveStringLiteralDfa6_0
argument_list|(
name|active0
argument_list|,
literal|0x100000000000000L
argument_list|)
return|;
case|case
literal|67
case|:
case|case
literal|99
case|:
return|return
name|jjMoveStringLiteralDfa6_0
argument_list|(
name|active0
argument_list|,
literal|0x40000000000000L
argument_list|)
return|;
case|case
literal|68
case|:
case|case
literal|100
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x4000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|5
argument_list|,
literal|50
argument_list|,
literal|1
argument_list|)
return|;
break|break;
case|case
literal|69
case|:
case|case
literal|101
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x800L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|5
argument_list|,
literal|11
argument_list|,
literal|1
argument_list|)
return|;
elseif|else
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x80000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|5
argument_list|,
literal|19
argument_list|,
literal|1
argument_list|)
return|;
elseif|else
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x200000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|5
argument_list|,
literal|21
argument_list|,
literal|1
argument_list|)
return|;
elseif|else
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x800000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|5
argument_list|,
literal|59
argument_list|,
literal|1
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa6_0
argument_list|(
name|active0
argument_list|,
literal|0xe00040000000L
argument_list|)
return|;
case|case
literal|70
case|:
case|case
literal|102
case|:
return|return
name|jjMoveStringLiteralDfa6_0
argument_list|(
name|active0
argument_list|,
literal|0x10000000000000L
argument_list|)
return|;
case|case
literal|73
case|:
case|case
literal|105
case|:
return|return
name|jjMoveStringLiteralDfa6_0
argument_list|(
name|active0
argument_list|,
literal|0x20000000800200L
argument_list|)
return|;
case|case
literal|76
case|:
case|case
literal|108
case|:
return|return
name|jjMoveStringLiteralDfa6_0
argument_list|(
name|active0
argument_list|,
literal|0x400000L
argument_list|)
return|;
case|case
literal|77
case|:
case|case
literal|109
case|:
return|return
name|jjMoveStringLiteralDfa6_0
argument_list|(
name|active0
argument_list|,
literal|0x8000000000000L
argument_list|)
return|;
case|case
literal|78
case|:
case|case
literal|110
case|:
return|return
name|jjMoveStringLiteralDfa6_0
argument_list|(
name|active0
argument_list|,
literal|0x200000010000000L
argument_list|)
return|;
case|case
literal|82
case|:
case|case
literal|114
case|:
return|return
name|jjMoveStringLiteralDfa6_0
argument_list|(
name|active0
argument_list|,
literal|0x80000000000000L
argument_list|)
return|;
case|case
literal|83
case|:
case|case
literal|115
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x8000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|5
argument_list|,
literal|27
argument_list|,
literal|1
argument_list|)
return|;
break|break;
case|case
literal|84
case|:
case|case
literal|116
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x10000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|5
argument_list|,
literal|16
argument_list|,
literal|1
argument_list|)
return|;
elseif|else
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x100000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|5
argument_list|,
literal|20
argument_list|,
literal|1
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa6_0
argument_list|(
name|active0
argument_list|,
literal|0x20000000L
argument_list|)
return|;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|4
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|int
name|jjMoveStringLiteralDfa6_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|4
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|5
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|6
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|95
case|:
return|return
name|jjMoveStringLiteralDfa7_0
argument_list|(
name|active0
argument_list|,
literal|0x80000000000000L
argument_list|)
return|;
case|case
literal|65
case|:
case|case
literal|97
case|:
return|return
name|jjMoveStringLiteralDfa7_0
argument_list|(
name|active0
argument_list|,
literal|0x20000000L
argument_list|)
return|;
case|case
literal|66
case|:
case|case
literal|98
case|:
return|return
name|jjMoveStringLiteralDfa7_0
argument_list|(
name|active0
argument_list|,
literal|0x200L
argument_list|)
return|;
case|case
literal|69
case|:
case|case
literal|101
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x400000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|6
argument_list|,
literal|22
argument_list|,
literal|1
argument_list|)
return|;
break|break;
case|case
literal|70
case|:
case|case
literal|102
case|:
return|return
name|jjMoveStringLiteralDfa7_0
argument_list|(
name|active0
argument_list|,
literal|0x10000000L
argument_list|)
return|;
case|case
literal|72
case|:
case|case
literal|104
case|:
return|return
name|jjMoveStringLiteralDfa7_0
argument_list|(
name|active0
argument_list|,
literal|0x40000000000000L
argument_list|)
return|;
case|case
literal|73
case|:
case|case
literal|105
case|:
return|return
name|jjMoveStringLiteralDfa7_0
argument_list|(
name|active0
argument_list|,
literal|0x10000000000000L
argument_list|)
return|;
case|case
literal|78
case|:
case|case
literal|110
case|:
return|return
name|jjMoveStringLiteralDfa7_0
argument_list|(
name|active0
argument_list|,
literal|0x20400000800000L
argument_list|)
return|;
case|case
literal|79
case|:
case|case
literal|111
case|:
return|return
name|jjMoveStringLiteralDfa7_0
argument_list|(
name|active0
argument_list|,
literal|0x8000000000000L
argument_list|)
return|;
case|case
literal|82
case|:
case|case
literal|114
case|:
return|return
name|jjMoveStringLiteralDfa7_0
argument_list|(
name|active0
argument_list|,
literal|0x200040000000L
argument_list|)
return|;
case|case
literal|83
case|:
case|case
literal|115
case|:
return|return
name|jjMoveStringLiteralDfa7_0
argument_list|(
name|active0
argument_list|,
literal|0x100800000000000L
argument_list|)
return|;
case|case
literal|84
case|:
case|case
literal|116
case|:
return|return
name|jjMoveStringLiteralDfa7_0
argument_list|(
name|active0
argument_list|,
literal|0x200000000000000L
argument_list|)
return|;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|5
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|int
name|jjMoveStringLiteralDfa7_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|5
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|6
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|7
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|65
case|:
case|case
literal|97
case|:
return|return
name|jjMoveStringLiteralDfa8_0
argument_list|(
name|active0
argument_list|,
literal|0x10000000L
argument_list|)
return|;
case|case
literal|69
case|:
case|case
literal|101
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x200L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|7
argument_list|,
literal|9
argument_list|,
literal|1
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa8_0
argument_list|(
name|active0
argument_list|,
literal|0x40000000000000L
argument_list|)
return|;
case|case
literal|71
case|:
case|case
literal|103
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x800000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|7
argument_list|,
literal|23
argument_list|,
literal|1
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa8_0
argument_list|(
name|active0
argument_list|,
literal|0x20400000000000L
argument_list|)
return|;
case|case
literal|72
case|:
case|case
literal|104
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x100000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|7
argument_list|,
literal|56
argument_list|,
literal|1
argument_list|)
return|;
break|break;
case|case
literal|76
case|:
case|case
literal|108
case|:
return|return
name|jjMoveStringLiteralDfa8_0
argument_list|(
name|active0
argument_list|,
literal|0x10000000000000L
argument_list|)
return|;
case|case
literal|77
case|:
case|case
literal|109
case|:
return|return
name|jjMoveStringLiteralDfa8_0
argument_list|(
name|active0
argument_list|,
literal|0x20000000L
argument_list|)
return|;
case|case
literal|82
case|:
case|case
literal|114
case|:
return|return
name|jjMoveStringLiteralDfa8_0
argument_list|(
name|active0
argument_list|,
literal|0x208000000000000L
argument_list|)
return|;
case|case
literal|83
case|:
case|case
literal|115
case|:
return|return
name|jjMoveStringLiteralDfa8_0
argument_list|(
name|active0
argument_list|,
literal|0x80a00040000000L
argument_list|)
return|;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|6
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|int
name|jjMoveStringLiteralDfa8_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|6
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|7
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|8
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|95
case|:
return|return
name|jjMoveStringLiteralDfa9_0
argument_list|(
name|active0
argument_list|,
literal|0x20000000000000L
argument_list|)
return|;
case|case
literal|68
case|:
case|case
literal|100
case|:
return|return
name|jjMoveStringLiteralDfa9_0
argument_list|(
name|active0
argument_list|,
literal|0x40000000000000L
argument_list|)
return|;
case|case
literal|73
case|:
case|case
literal|105
case|:
return|return
name|jjMoveStringLiteralDfa9_0
argument_list|(
name|active0
argument_list|,
literal|0x280a00040000000L
argument_list|)
return|;
case|case
literal|77
case|:
case|case
literal|109
case|:
return|return
name|jjMoveStringLiteralDfa9_0
argument_list|(
name|active0
argument_list|,
literal|0x10000000L
argument_list|)
return|;
case|case
literal|80
case|:
case|case
literal|112
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x20000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|8
argument_list|,
literal|29
argument_list|,
literal|1
argument_list|)
return|;
break|break;
case|case
literal|84
case|:
case|case
literal|116
case|:
return|return
name|jjMoveStringLiteralDfa9_0
argument_list|(
name|active0
argument_list|,
literal|0x10400000000000L
argument_list|)
return|;
case|case
literal|89
case|:
case|case
literal|121
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x8000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|8
argument_list|,
literal|51
argument_list|,
literal|1
argument_list|)
return|;
break|break;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|7
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|int
name|jjMoveStringLiteralDfa9_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|7
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|8
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|9
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|95
case|:
return|return
name|jjMoveStringLiteralDfa10_0
argument_list|(
name|active0
argument_list|,
literal|0x40000000000000L
argument_list|)
return|;
case|case
literal|66
case|:
case|case
literal|98
case|:
return|return
name|jjMoveStringLiteralDfa10_0
argument_list|(
name|active0
argument_list|,
literal|0x20000000000000L
argument_list|)
return|;
case|case
literal|69
case|:
case|case
literal|101
case|:
return|return
name|jjMoveStringLiteralDfa10_0
argument_list|(
name|active0
argument_list|,
literal|0x210000000000000L
argument_list|)
return|;
case|case
literal|72
case|:
case|case
literal|104
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x400000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|9
argument_list|,
literal|46
argument_list|,
literal|1
argument_list|)
return|;
break|break;
case|case
literal|73
case|:
case|case
literal|105
case|:
return|return
name|jjMoveStringLiteralDfa10_0
argument_list|(
name|active0
argument_list|,
literal|0x10000000L
argument_list|)
return|;
case|case
literal|79
case|:
case|case
literal|111
case|:
return|return
name|jjMoveStringLiteralDfa10_0
argument_list|(
name|active0
argument_list|,
literal|0xa00040000000L
argument_list|)
return|;
case|case
literal|90
case|:
case|case
literal|122
case|:
return|return
name|jjMoveStringLiteralDfa10_0
argument_list|(
name|active0
argument_list|,
literal|0x80000000000000L
argument_list|)
return|;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|8
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|int
name|jjMoveStringLiteralDfa10_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|8
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|9
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|10
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|66
case|:
case|case
literal|98
case|:
return|return
name|jjMoveStringLiteralDfa11_0
argument_list|(
name|active0
argument_list|,
literal|0x40000000000000L
argument_list|)
return|;
case|case
literal|69
case|:
case|case
literal|101
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x80000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|10
argument_list|,
literal|55
argument_list|,
literal|1
argument_list|)
return|;
break|break;
case|case
literal|76
case|:
case|case
literal|108
case|:
return|return
name|jjMoveStringLiteralDfa11_0
argument_list|(
name|active0
argument_list|,
literal|0x20000010000000L
argument_list|)
return|;
case|case
literal|78
case|:
case|case
literal|110
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x800000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|10
argument_list|,
literal|47
argument_list|,
literal|1
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa11_0
argument_list|(
name|active0
argument_list|,
literal|0x200040000000L
argument_list|)
return|;
case|case
literal|82
case|:
case|case
literal|114
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x10000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|10
argument_list|,
literal|52
argument_list|,
literal|1
argument_list|)
return|;
break|break;
case|case
literal|83
case|:
case|case
literal|115
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x200000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|10
argument_list|,
literal|57
argument_list|,
literal|1
argument_list|)
return|;
break|break;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|9
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|int
name|jjMoveStringLiteralDfa11_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|9
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|10
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|11
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|73
case|:
case|case
literal|105
case|:
return|return
name|jjMoveStringLiteralDfa12_0
argument_list|(
name|active0
argument_list|,
literal|0x10000000L
argument_list|)
return|;
case|case
literal|76
case|:
case|case
literal|108
case|:
return|return
name|jjMoveStringLiteralDfa12_0
argument_list|(
name|active0
argument_list|,
literal|0x40000000000000L
argument_list|)
return|;
case|case
literal|79
case|:
case|case
literal|111
case|:
return|return
name|jjMoveStringLiteralDfa12_0
argument_list|(
name|active0
argument_list|,
literal|0x20000000000000L
argument_list|)
return|;
case|case
literal|83
case|:
case|case
literal|115
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x40000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|11
argument_list|,
literal|30
argument_list|,
literal|1
argument_list|)
return|;
elseif|else
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x200000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|11
argument_list|,
literal|45
argument_list|,
literal|1
argument_list|)
return|;
break|break;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|10
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|int
name|jjMoveStringLiteralDfa12_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|10
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|11
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|12
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|69
case|:
case|case
literal|101
case|:
return|return
name|jjMoveStringLiteralDfa13_0
argument_list|(
name|active0
argument_list|,
literal|0x10000000L
argument_list|)
return|;
case|case
literal|79
case|:
case|case
literal|111
case|:
return|return
name|jjMoveStringLiteralDfa13_0
argument_list|(
name|active0
argument_list|,
literal|0x60000000000000L
argument_list|)
return|;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|11
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|int
name|jjMoveStringLiteralDfa13_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|11
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|12
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|13
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|77
case|:
case|case
literal|109
case|:
return|return
name|jjMoveStringLiteralDfa14_0
argument_list|(
name|active0
argument_list|,
literal|0x20000000000000L
argument_list|)
return|;
case|case
literal|79
case|:
case|case
literal|111
case|:
return|return
name|jjMoveStringLiteralDfa14_0
argument_list|(
name|active0
argument_list|,
literal|0x40000000000000L
argument_list|)
return|;
case|case
literal|83
case|:
case|case
literal|115
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x10000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|13
argument_list|,
literal|28
argument_list|,
literal|1
argument_list|)
return|;
break|break;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|12
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|int
name|jjMoveStringLiteralDfa14_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|12
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|13
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|14
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|70
case|:
case|case
literal|102
case|:
return|return
name|jjMoveStringLiteralDfa15_0
argument_list|(
name|active0
argument_list|,
literal|0x20000000000000L
argument_list|)
return|;
case|case
literal|77
case|:
case|case
literal|109
case|:
return|return
name|jjMoveStringLiteralDfa15_0
argument_list|(
name|active0
argument_list|,
literal|0x40000000000000L
argument_list|)
return|;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|13
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|int
name|jjMoveStringLiteralDfa15_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|13
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|14
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|15
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|70
case|:
case|case
literal|102
case|:
return|return
name|jjMoveStringLiteralDfa16_0
argument_list|(
name|active0
argument_list|,
literal|0x40000000000000L
argument_list|)
return|;
case|case
literal|73
case|:
case|case
literal|105
case|:
return|return
name|jjMoveStringLiteralDfa16_0
argument_list|(
name|active0
argument_list|,
literal|0x20000000000000L
argument_list|)
return|;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|14
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|int
name|jjMoveStringLiteralDfa16_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|14
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|15
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|16
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|73
case|:
case|case
literal|105
case|:
return|return
name|jjMoveStringLiteralDfa17_0
argument_list|(
name|active0
argument_list|,
literal|0x40000000000000L
argument_list|)
return|;
case|case
literal|76
case|:
case|case
literal|108
case|:
return|return
name|jjMoveStringLiteralDfa17_0
argument_list|(
name|active0
argument_list|,
literal|0x20000000000000L
argument_list|)
return|;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|15
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|int
name|jjMoveStringLiteralDfa17_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|15
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|16
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|17
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|76
case|:
case|case
literal|108
case|:
return|return
name|jjMoveStringLiteralDfa18_0
argument_list|(
name|active0
argument_list|,
literal|0x40000000000000L
argument_list|)
return|;
case|case
literal|84
case|:
case|case
literal|116
case|:
return|return
name|jjMoveStringLiteralDfa18_0
argument_list|(
name|active0
argument_list|,
literal|0x20000000000000L
argument_list|)
return|;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|16
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|int
name|jjMoveStringLiteralDfa18_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|16
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|17
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|18
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|69
case|:
case|case
literal|101
case|:
return|return
name|jjMoveStringLiteralDfa19_0
argument_list|(
name|active0
argument_list|,
literal|0x20000000000000L
argument_list|)
return|;
case|case
literal|84
case|:
case|case
literal|116
case|:
return|return
name|jjMoveStringLiteralDfa19_0
argument_list|(
name|active0
argument_list|,
literal|0x40000000000000L
argument_list|)
return|;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|17
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|int
name|jjMoveStringLiteralDfa19_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|17
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|18
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|19
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|69
case|:
case|case
literal|101
case|:
return|return
name|jjMoveStringLiteralDfa20_0
argument_list|(
name|active0
argument_list|,
literal|0x40000000000000L
argument_list|)
return|;
case|case
literal|82
case|:
case|case
literal|114
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x20000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|19
argument_list|,
literal|53
argument_list|,
literal|1
argument_list|)
return|;
break|break;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|18
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|int
name|jjMoveStringLiteralDfa20_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|18
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|19
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|20
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|82
case|:
case|case
literal|114
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x40000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|20
argument_list|,
literal|54
argument_list|,
literal|1
argument_list|)
return|;
break|break;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|19
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|void
name|jjCheckNAdd
parameter_list|(
name|int
name|state
parameter_list|)
block|{
if|if
condition|(
name|jjrounds
index|[
name|state
index|]
operator|!=
name|jjround
condition|)
block|{
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
name|state
expr_stmt|;
name|jjrounds
index|[
name|state
index|]
operator|=
name|jjround
expr_stmt|;
block|}
block|}
specifier|private
specifier|final
name|void
name|jjAddStates
parameter_list|(
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
block|{
do|do
block|{
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
name|jjnextStates
index|[
name|start
index|]
expr_stmt|;
block|}
do|while
condition|(
name|start
operator|++
operator|!=
name|end
condition|)
do|;
block|}
specifier|private
specifier|final
name|void
name|jjCheckNAddTwoStates
parameter_list|(
name|int
name|state1
parameter_list|,
name|int
name|state2
parameter_list|)
block|{
name|jjCheckNAdd
argument_list|(
name|state1
argument_list|)
expr_stmt|;
name|jjCheckNAdd
argument_list|(
name|state2
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|final
name|void
name|jjCheckNAddStates
parameter_list|(
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
block|{
do|do
block|{
name|jjCheckNAdd
argument_list|(
name|jjnextStates
index|[
name|start
index|]
argument_list|)
expr_stmt|;
block|}
do|while
condition|(
name|start
operator|++
operator|!=
name|end
condition|)
do|;
block|}
specifier|private
specifier|final
name|void
name|jjCheckNAddStates
parameter_list|(
name|int
name|start
parameter_list|)
block|{
name|jjCheckNAdd
argument_list|(
name|jjnextStates
index|[
name|start
index|]
argument_list|)
expr_stmt|;
name|jjCheckNAdd
argument_list|(
name|jjnextStates
index|[
name|start
operator|+
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
specifier|static
specifier|final
name|long
index|[]
name|jjbitVec0
init|=
block|{
literal|0x0L
block|,
literal|0x0L
block|,
literal|0xffffffffffffffffL
block|,
literal|0xffffffffffffffffL
block|}
decl_stmt|;
specifier|private
specifier|final
name|int
name|jjMoveNfa_0
parameter_list|(
name|int
name|startState
parameter_list|,
name|int
name|curPos
parameter_list|)
block|{
name|int
index|[]
name|nextStates
decl_stmt|;
name|int
name|startsAt
init|=
literal|0
decl_stmt|;
name|jjnewStateCnt
operator|=
literal|32
expr_stmt|;
name|int
name|i
init|=
literal|1
decl_stmt|;
name|jjstateSet
index|[
literal|0
index|]
operator|=
name|startState
expr_stmt|;
name|int
name|j
decl_stmt|,
name|kind
init|=
literal|0x7fffffff
decl_stmt|;
for|for
control|(
init|;
condition|;
control|)
block|{
if|if
condition|(
operator|++
name|jjround
operator|==
literal|0x7fffffff
condition|)
name|ReInitRounds
argument_list|()
expr_stmt|;
if|if
condition|(
name|curChar
operator|<
literal|64
condition|)
block|{
name|long
name|l
init|=
literal|1L
operator|<<
name|curChar
decl_stmt|;
name|MatchLoop
label|:
do|do
block|{
switch|switch
condition|(
name|jjstateSet
index|[
operator|--
name|i
index|]
condition|)
block|{
case|case
literal|0
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|64
condition|)
name|kind
operator|=
literal|64
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
operator|(
literal|0x400a00000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|63
condition|)
name|kind
operator|=
literal|63
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|curChar
operator|==
literal|39
condition|)
name|jjCheckNAddStates
argument_list|(
literal|7
argument_list|,
literal|9
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|curChar
operator|==
literal|34
condition|)
name|jjCheckNAdd
argument_list|(
literal|8
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjCheckNAdd
argument_list|(
literal|3
argument_list|)
expr_stmt|;
break|break;
case|case
literal|1
case|:
if|if
condition|(
operator|(
literal|0x7ffa00000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|63
condition|)
name|kind
operator|=
literal|63
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|1
argument_list|)
expr_stmt|;
break|break;
case|case
literal|2
case|:
if|if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjCheckNAdd
argument_list|(
literal|3
argument_list|)
expr_stmt|;
break|break;
case|case
literal|3
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|65
condition|)
name|kind
operator|=
literal|65
expr_stmt|;
name|jjCheckNAddTwoStates
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|)
expr_stmt|;
break|break;
case|case
literal|5
case|:
if|if
condition|(
operator|(
literal|0x280000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjCheckNAdd
argument_list|(
literal|6
argument_list|)
expr_stmt|;
break|break;
case|case
literal|6
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|65
condition|)
name|kind
operator|=
literal|65
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|6
argument_list|)
expr_stmt|;
break|break;
case|case
literal|7
case|:
if|if
condition|(
name|curChar
operator|==
literal|34
condition|)
name|jjCheckNAdd
argument_list|(
literal|8
argument_list|)
expr_stmt|;
break|break;
case|case
literal|8
case|:
if|if
condition|(
operator|(
literal|0xfffffffbffffffffL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjCheckNAddTwoStates
argument_list|(
literal|8
argument_list|,
literal|9
argument_list|)
expr_stmt|;
break|break;
case|case
literal|9
case|:
if|if
condition|(
name|curChar
operator|==
literal|34
operator|&&
name|kind
operator|>
literal|67
condition|)
name|kind
operator|=
literal|67
expr_stmt|;
break|break;
case|case
literal|10
case|:
if|if
condition|(
name|curChar
operator|==
literal|39
condition|)
name|jjCheckNAddStates
argument_list|(
literal|7
argument_list|,
literal|9
argument_list|)
expr_stmt|;
break|break;
case|case
literal|11
case|:
if|if
condition|(
operator|(
literal|0xffffff7fffffffffL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjCheckNAddStates
argument_list|(
literal|7
argument_list|,
literal|9
argument_list|)
expr_stmt|;
break|break;
case|case
literal|12
case|:
if|if
condition|(
name|curChar
operator|==
literal|39
condition|)
name|jjCheckNAddStates
argument_list|(
literal|10
argument_list|,
literal|12
argument_list|)
expr_stmt|;
break|break;
case|case
literal|13
case|:
if|if
condition|(
name|curChar
operator|==
literal|39
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|12
expr_stmt|;
break|break;
case|case
literal|14
case|:
if|if
condition|(
operator|(
literal|0xffffff7fffffffffL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjCheckNAddStates
argument_list|(
literal|10
argument_list|,
literal|12
argument_list|)
expr_stmt|;
break|break;
case|case
literal|15
case|:
if|if
condition|(
name|curChar
operator|==
literal|39
operator|&&
name|kind
operator|>
literal|68
condition|)
name|kind
operator|=
literal|68
expr_stmt|;
break|break;
case|case
literal|16
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|64
condition|)
name|kind
operator|=
literal|64
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|6
argument_list|)
expr_stmt|;
break|break;
case|case
literal|17
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|64
condition|)
name|kind
operator|=
literal|64
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|17
argument_list|)
expr_stmt|;
break|break;
case|case
literal|18
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjCheckNAddTwoStates
argument_list|(
literal|18
argument_list|,
literal|19
argument_list|)
expr_stmt|;
break|break;
case|case
literal|19
case|:
if|if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjCheckNAdd
argument_list|(
literal|20
argument_list|)
expr_stmt|;
break|break;
case|case
literal|20
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|65
condition|)
name|kind
operator|=
literal|65
expr_stmt|;
name|jjCheckNAddTwoStates
argument_list|(
literal|20
argument_list|,
literal|21
argument_list|)
expr_stmt|;
break|break;
case|case
literal|22
case|:
if|if
condition|(
operator|(
literal|0x280000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjCheckNAdd
argument_list|(
literal|23
argument_list|)
expr_stmt|;
break|break;
case|case
literal|23
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|65
condition|)
name|kind
operator|=
literal|65
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|23
argument_list|)
expr_stmt|;
break|break;
case|case
literal|24
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjCheckNAddTwoStates
argument_list|(
literal|24
argument_list|,
literal|25
argument_list|)
expr_stmt|;
break|break;
case|case
literal|26
case|:
if|if
condition|(
operator|(
literal|0x280000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjCheckNAdd
argument_list|(
literal|27
argument_list|)
expr_stmt|;
break|break;
case|case
literal|27
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|65
condition|)
name|kind
operator|=
literal|65
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|27
argument_list|)
expr_stmt|;
break|break;
case|case
literal|28
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|65
condition|)
name|kind
operator|=
literal|65
expr_stmt|;
name|jjCheckNAddTwoStates
argument_list|(
literal|28
argument_list|,
literal|29
argument_list|)
expr_stmt|;
break|break;
case|case
literal|30
case|:
if|if
condition|(
operator|(
literal|0x280000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjCheckNAdd
argument_list|(
literal|31
argument_list|)
expr_stmt|;
break|break;
case|case
literal|31
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|65
condition|)
name|kind
operator|=
literal|65
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|31
argument_list|)
expr_stmt|;
break|break;
default|default :
break|break;
block|}
block|}
do|while
condition|(
name|i
operator|!=
name|startsAt
condition|)
do|;
block|}
elseif|else
if|if
condition|(
name|curChar
operator|<
literal|128
condition|)
block|{
name|long
name|l
init|=
literal|1L
operator|<<
operator|(
name|curChar
operator|&
literal|077
operator|)
decl_stmt|;
name|MatchLoop
label|:
do|do
block|{
switch|switch
condition|(
name|jjstateSet
index|[
operator|--
name|i
index|]
condition|)
block|{
case|case
literal|0
case|:
case|case
literal|1
case|:
if|if
condition|(
operator|(
literal|0x47fffffe87fffffeL
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|63
condition|)
name|kind
operator|=
literal|63
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|1
argument_list|)
expr_stmt|;
break|break;
case|case
literal|4
case|:
if|if
condition|(
operator|(
literal|0x2000000020L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjAddStates
argument_list|(
literal|13
argument_list|,
literal|14
argument_list|)
expr_stmt|;
break|break;
case|case
literal|8
case|:
name|jjAddStates
argument_list|(
literal|15
argument_list|,
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
literal|11
case|:
name|jjCheckNAddStates
argument_list|(
literal|7
argument_list|,
literal|9
argument_list|)
expr_stmt|;
break|break;
case|case
literal|14
case|:
name|jjCheckNAddStates
argument_list|(
literal|10
argument_list|,
literal|12
argument_list|)
expr_stmt|;
break|break;
case|case
literal|21
case|:
if|if
condition|(
operator|(
literal|0x2000000020L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjAddStates
argument_list|(
literal|17
argument_list|,
literal|18
argument_list|)
expr_stmt|;
break|break;
case|case
literal|25
case|:
if|if
condition|(
operator|(
literal|0x2000000020L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjAddStates
argument_list|(
literal|19
argument_list|,
literal|20
argument_list|)
expr_stmt|;
break|break;
case|case
literal|29
case|:
if|if
condition|(
operator|(
literal|0x2000000020L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjAddStates
argument_list|(
literal|21
argument_list|,
literal|22
argument_list|)
expr_stmt|;
break|break;
default|default :
break|break;
block|}
block|}
do|while
condition|(
name|i
operator|!=
name|startsAt
condition|)
do|;
block|}
else|else
block|{
name|int
name|i2
init|=
operator|(
name|curChar
operator|&
literal|0xff
operator|)
operator|>>
literal|6
decl_stmt|;
name|long
name|l2
init|=
literal|1L
operator|<<
operator|(
name|curChar
operator|&
literal|077
operator|)
decl_stmt|;
name|MatchLoop
label|:
do|do
block|{
switch|switch
condition|(
name|jjstateSet
index|[
operator|--
name|i
index|]
condition|)
block|{
case|case
literal|8
case|:
if|if
condition|(
operator|(
name|jjbitVec0
index|[
name|i2
index|]
operator|&
name|l2
operator|)
operator|!=
literal|0L
condition|)
name|jjAddStates
argument_list|(
literal|15
argument_list|,
literal|16
argument_list|)
expr_stmt|;
break|break;
case|case
literal|11
case|:
if|if
condition|(
operator|(
name|jjbitVec0
index|[
name|i2
index|]
operator|&
name|l2
operator|)
operator|!=
literal|0L
condition|)
name|jjCheckNAddStates
argument_list|(
literal|7
argument_list|,
literal|9
argument_list|)
expr_stmt|;
break|break;
case|case
literal|14
case|:
if|if
condition|(
operator|(
name|jjbitVec0
index|[
name|i2
index|]
operator|&
name|l2
operator|)
operator|!=
literal|0L
condition|)
name|jjCheckNAddStates
argument_list|(
literal|10
argument_list|,
literal|12
argument_list|)
expr_stmt|;
break|break;
default|default :
break|break;
block|}
block|}
do|while
condition|(
name|i
operator|!=
name|startsAt
condition|)
do|;
block|}
if|if
condition|(
name|kind
operator|!=
literal|0x7fffffff
condition|)
block|{
name|jjmatchedKind
operator|=
name|kind
expr_stmt|;
name|jjmatchedPos
operator|=
name|curPos
expr_stmt|;
name|kind
operator|=
literal|0x7fffffff
expr_stmt|;
block|}
operator|++
name|curPos
expr_stmt|;
if|if
condition|(
operator|(
name|i
operator|=
name|jjnewStateCnt
operator|)
operator|==
operator|(
name|startsAt
operator|=
literal|32
operator|-
operator|(
name|jjnewStateCnt
operator|=
name|startsAt
operator|)
operator|)
condition|)
return|return
name|curPos
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
return|return
name|curPos
return|;
block|}
block|}
block|}
specifier|static
specifier|final
name|int
index|[]
name|jjnextStates
init|=
block|{
literal|17
block|,
literal|18
block|,
literal|19
block|,
literal|24
block|,
literal|25
block|,
literal|28
block|,
literal|29
block|,
literal|11
block|,
literal|13
block|,
literal|15
block|,
literal|13
block|,
literal|14
block|,
literal|15
block|,
literal|5
block|,
literal|6
block|,
literal|8
block|,
literal|9
block|,
literal|22
block|,
literal|23
block|,
literal|26
block|,
literal|27
block|,
literal|30
block|,
literal|31
block|,  }
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
index|[]
name|jjstrLiteralImages
init|=
block|{
literal|""
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|"\54"
block|,
literal|"\56"
block|,
literal|"\50"
block|,
literal|"\51"
block|,
literal|"\75"
block|,
literal|"\76"
block|,
literal|"\74"
block|,
literal|null
block|,
literal|null
block|,
literal|"\41\75"
block|,
literal|"\52"
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|"\73"
block|, }
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
index|[]
name|lexStateNames
init|=
block|{
literal|"DEFAULT"
block|,  }
decl_stmt|;
specifier|static
specifier|final
name|long
index|[]
name|jjtoToken
init|=
block|{
literal|0xffffffffffffffe1L
block|,
literal|0x3bL
block|,  }
decl_stmt|;
specifier|static
specifier|final
name|long
index|[]
name|jjtoSkip
init|=
block|{
literal|0x1eL
block|,
literal|0x0L
block|,  }
decl_stmt|;
specifier|protected
name|SimpleCharStream
name|input_stream
decl_stmt|;
specifier|private
specifier|final
name|int
index|[]
name|jjrounds
init|=
operator|new
name|int
index|[
literal|32
index|]
decl_stmt|;
specifier|private
specifier|final
name|int
index|[]
name|jjstateSet
init|=
operator|new
name|int
index|[
literal|64
index|]
decl_stmt|;
specifier|protected
name|char
name|curChar
decl_stmt|;
specifier|public
name|ParserTokenManager
parameter_list|(
name|SimpleCharStream
name|stream
parameter_list|)
block|{
if|if
condition|(
name|SimpleCharStream
operator|.
name|staticFlag
condition|)
throw|throw
operator|new
name|Error
argument_list|(
literal|"ERROR: Cannot use a static CharStream class with a non-static lexical analyzer."
argument_list|)
throw|;
name|input_stream
operator|=
name|stream
expr_stmt|;
block|}
specifier|public
name|ParserTokenManager
parameter_list|(
name|SimpleCharStream
name|stream
parameter_list|,
name|int
name|lexState
parameter_list|)
block|{
name|this
argument_list|(
name|stream
argument_list|)
expr_stmt|;
name|SwitchTo
argument_list|(
name|lexState
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|ReInit
parameter_list|(
name|SimpleCharStream
name|stream
parameter_list|)
block|{
name|jjmatchedPos
operator|=
name|jjnewStateCnt
operator|=
literal|0
expr_stmt|;
name|curLexState
operator|=
name|defaultLexState
expr_stmt|;
name|input_stream
operator|=
name|stream
expr_stmt|;
name|ReInitRounds
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|final
name|void
name|ReInitRounds
parameter_list|()
block|{
name|int
name|i
decl_stmt|;
name|jjround
operator|=
literal|0x80000001
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|32
init|;
name|i
operator|--
operator|>
literal|0
condition|;
control|)
name|jjrounds
index|[
name|i
index|]
operator|=
literal|0x80000000
expr_stmt|;
block|}
specifier|public
name|void
name|ReInit
parameter_list|(
name|SimpleCharStream
name|stream
parameter_list|,
name|int
name|lexState
parameter_list|)
block|{
name|ReInit
argument_list|(
name|stream
argument_list|)
expr_stmt|;
name|SwitchTo
argument_list|(
name|lexState
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|SwitchTo
parameter_list|(
name|int
name|lexState
parameter_list|)
block|{
if|if
condition|(
name|lexState
operator|>=
literal|1
operator|||
name|lexState
operator|<
literal|0
condition|)
throw|throw
operator|new
name|TokenMgrError
argument_list|(
literal|"Error: Ignoring invalid lexical state : "
operator|+
name|lexState
operator|+
literal|". State unchanged."
argument_list|,
name|TokenMgrError
operator|.
name|INVALID_LEXICAL_STATE
argument_list|)
throw|;
else|else
name|curLexState
operator|=
name|lexState
expr_stmt|;
block|}
specifier|protected
name|Token
name|jjFillToken
parameter_list|()
block|{
name|Token
name|t
init|=
name|Token
operator|.
name|newToken
argument_list|(
name|jjmatchedKind
argument_list|)
decl_stmt|;
name|t
operator|.
name|kind
operator|=
name|jjmatchedKind
expr_stmt|;
name|String
name|im
init|=
name|jjstrLiteralImages
index|[
name|jjmatchedKind
index|]
decl_stmt|;
name|t
operator|.
name|image
operator|=
operator|(
name|im
operator|==
literal|null
operator|)
condition|?
name|input_stream
operator|.
name|GetImage
argument_list|()
else|:
name|im
expr_stmt|;
name|t
operator|.
name|beginLine
operator|=
name|input_stream
operator|.
name|getBeginLine
argument_list|()
expr_stmt|;
name|t
operator|.
name|beginColumn
operator|=
name|input_stream
operator|.
name|getBeginColumn
argument_list|()
expr_stmt|;
name|t
operator|.
name|endLine
operator|=
name|input_stream
operator|.
name|getEndLine
argument_list|()
expr_stmt|;
name|t
operator|.
name|endColumn
operator|=
name|input_stream
operator|.
name|getEndColumn
argument_list|()
expr_stmt|;
return|return
name|t
return|;
block|}
name|int
name|curLexState
init|=
literal|0
decl_stmt|;
name|int
name|defaultLexState
init|=
literal|0
decl_stmt|;
name|int
name|jjnewStateCnt
decl_stmt|;
name|int
name|jjround
decl_stmt|;
name|int
name|jjmatchedPos
decl_stmt|;
name|int
name|jjmatchedKind
decl_stmt|;
specifier|public
name|Token
name|getNextToken
parameter_list|()
block|{
name|int
name|kind
decl_stmt|;
name|Token
name|specialToken
init|=
literal|null
decl_stmt|;
name|Token
name|matchedToken
decl_stmt|;
name|int
name|curPos
init|=
literal|0
decl_stmt|;
name|EOFLoop
label|:
for|for
control|(
init|;
condition|;
control|)
block|{
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|BeginToken
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjmatchedKind
operator|=
literal|0
expr_stmt|;
name|matchedToken
operator|=
name|jjFillToken
argument_list|()
expr_stmt|;
return|return
name|matchedToken
return|;
block|}
try|try
block|{
name|input_stream
operator|.
name|backup
argument_list|(
literal|0
argument_list|)
expr_stmt|;
while|while
condition|(
name|curChar
operator|<=
literal|32
operator|&&
operator|(
literal|0x100002600L
operator|&
operator|(
literal|1L
operator|<<
name|curChar
operator|)
operator|)
operator|!=
literal|0L
condition|)
name|curChar
operator|=
name|input_stream
operator|.
name|BeginToken
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e1
parameter_list|)
block|{
continue|continue
name|EOFLoop
continue|;
block|}
name|jjmatchedKind
operator|=
literal|0x7fffffff
expr_stmt|;
name|jjmatchedPos
operator|=
literal|0
expr_stmt|;
name|curPos
operator|=
name|jjMoveStringLiteralDfa0_0
argument_list|()
expr_stmt|;
if|if
condition|(
name|jjmatchedKind
operator|!=
literal|0x7fffffff
condition|)
block|{
if|if
condition|(
name|jjmatchedPos
operator|+
literal|1
operator|<
name|curPos
condition|)
name|input_stream
operator|.
name|backup
argument_list|(
name|curPos
operator|-
name|jjmatchedPos
operator|-
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|jjtoToken
index|[
name|jjmatchedKind
operator|>>
literal|6
index|]
operator|&
operator|(
literal|1L
operator|<<
operator|(
name|jjmatchedKind
operator|&
literal|077
operator|)
operator|)
operator|)
operator|!=
literal|0L
condition|)
block|{
name|matchedToken
operator|=
name|jjFillToken
argument_list|()
expr_stmt|;
return|return
name|matchedToken
return|;
block|}
else|else
block|{
continue|continue
name|EOFLoop
continue|;
block|}
block|}
name|int
name|error_line
init|=
name|input_stream
operator|.
name|getEndLine
argument_list|()
decl_stmt|;
name|int
name|error_column
init|=
name|input_stream
operator|.
name|getEndColumn
argument_list|()
decl_stmt|;
name|String
name|error_after
init|=
literal|null
decl_stmt|;
name|boolean
name|EOFSeen
init|=
literal|false
decl_stmt|;
try|try
block|{
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
name|input_stream
operator|.
name|backup
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e1
parameter_list|)
block|{
name|EOFSeen
operator|=
literal|true
expr_stmt|;
name|error_after
operator|=
name|curPos
operator|<=
literal|1
condition|?
literal|""
else|:
name|input_stream
operator|.
name|GetImage
argument_list|()
expr_stmt|;
if|if
condition|(
name|curChar
operator|==
literal|'\n'
operator|||
name|curChar
operator|==
literal|'\r'
condition|)
block|{
name|error_line
operator|++
expr_stmt|;
name|error_column
operator|=
literal|0
expr_stmt|;
block|}
else|else
name|error_column
operator|++
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|EOFSeen
condition|)
block|{
name|input_stream
operator|.
name|backup
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|error_after
operator|=
name|curPos
operator|<=
literal|1
condition|?
literal|""
else|:
name|input_stream
operator|.
name|GetImage
argument_list|()
expr_stmt|;
block|}
throw|throw
operator|new
name|TokenMgrError
argument_list|(
name|EOFSeen
argument_list|,
name|curLexState
argument_list|,
name|error_line
argument_list|,
name|error_column
argument_list|,
name|error_after
argument_list|,
name|curChar
argument_list|,
name|TokenMgrError
operator|.
name|LEXICAL_ERROR
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

