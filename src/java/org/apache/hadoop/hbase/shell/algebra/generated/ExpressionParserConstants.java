begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* Generated By:JavaCC: Do not edit this line. ExpressionParserConstants.java */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shell
operator|.
name|algebra
operator|.
name|generated
package|;
end_package

begin_interface
specifier|public
interface|interface
name|ExpressionParserConstants
block|{
name|int
name|EOF
init|=
literal|0
decl_stmt|;
name|int
name|ROW
init|=
literal|5
decl_stmt|;
name|int
name|AND
init|=
literal|6
decl_stmt|;
name|int
name|OR
init|=
literal|7
decl_stmt|;
name|int
name|DOT
init|=
literal|8
decl_stmt|;
name|int
name|EQUALS
init|=
literal|9
decl_stmt|;
name|int
name|LCOMP
init|=
literal|10
decl_stmt|;
name|int
name|RCOMP
init|=
literal|11
decl_stmt|;
name|int
name|LCOMPE
init|=
literal|12
decl_stmt|;
name|int
name|RCOMPE
init|=
literal|13
decl_stmt|;
name|int
name|IN
init|=
literal|14
decl_stmt|;
name|int
name|NOTIN
init|=
literal|15
decl_stmt|;
name|int
name|BAR
init|=
literal|16
decl_stmt|;
name|int
name|BOOL
init|=
literal|17
decl_stmt|;
name|int
name|ID
init|=
literal|18
decl_stmt|;
name|int
name|INTEGER_LITERAL
init|=
literal|19
decl_stmt|;
name|int
name|FLOATING_POINT_LITERAL
init|=
literal|20
decl_stmt|;
name|int
name|EXPONENT
init|=
literal|21
decl_stmt|;
name|int
name|QUOTED_IDENTIFIER
init|=
literal|22
decl_stmt|;
name|int
name|STRING_LITERAL
init|=
literal|23
decl_stmt|;
name|int
name|DEFAULT
init|=
literal|0
decl_stmt|;
name|String
index|[]
name|tokenImage
init|=
block|{
literal|"<EOF>"
block|,
literal|"\" \""
block|,
literal|"\"\\t\""
block|,
literal|"\"\\r\""
block|,
literal|"\"\\n\""
block|,
literal|"\"row\""
block|,
literal|"\"and\""
block|,
literal|"\"or\""
block|,
literal|"\".\""
block|,
literal|"\"=\""
block|,
literal|"\">\""
block|,
literal|"\"<\""
block|,
literal|"\">=\""
block|,
literal|"\"<=\""
block|,
literal|"\"==\""
block|,
literal|"\"!!\""
block|,
literal|"\"|\""
block|,
literal|"\"bool\""
block|,
literal|"<ID>"
block|,
literal|"<INTEGER_LITERAL>"
block|,
literal|"<FLOATING_POINT_LITERAL>"
block|,
literal|"<EXPONENT>"
block|,
literal|"<QUOTED_IDENTIFIER>"
block|,
literal|"<STRING_LITERAL>"
block|,   }
decl_stmt|;
block|}
end_interface

end_unit

