begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|generated
operator|.
name|master
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|jsp
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|VersionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HMaster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HMaster
operator|.
name|MetaRegion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HServerInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HServerAddress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HRegionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shell
operator|.
name|ShowCommand
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shell
operator|.
name|TableFormatter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shell
operator|.
name|ReturnMsg
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shell
operator|.
name|formatter
operator|.
name|HtmlTableFormatter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HTableDescriptor
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|master_jsp
extends|extends
name|org
operator|.
name|apache
operator|.
name|jasper
operator|.
name|runtime
operator|.
name|HttpJspBase
implements|implements
name|org
operator|.
name|apache
operator|.
name|jasper
operator|.
name|runtime
operator|.
name|JspSourceDependent
block|{
specifier|private
specifier|static
name|java
operator|.
name|util
operator|.
name|Vector
name|_jspx_dependants
decl_stmt|;
specifier|public
name|java
operator|.
name|util
operator|.
name|List
name|getDependants
parameter_list|()
block|{
return|return
name|_jspx_dependants
return|;
block|}
specifier|public
name|void
name|_jspService
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
throws|,
name|ServletException
block|{
name|JspFactory
name|_jspxFactory
init|=
literal|null
decl_stmt|;
name|PageContext
name|pageContext
init|=
literal|null
decl_stmt|;
name|HttpSession
name|session
init|=
literal|null
decl_stmt|;
name|ServletContext
name|application
init|=
literal|null
decl_stmt|;
name|ServletConfig
name|config
init|=
literal|null
decl_stmt|;
name|JspWriter
name|out
init|=
literal|null
decl_stmt|;
name|Object
name|page
init|=
name|this
decl_stmt|;
name|JspWriter
name|_jspx_out
init|=
literal|null
decl_stmt|;
name|PageContext
name|_jspx_page_context
init|=
literal|null
decl_stmt|;
try|try
block|{
name|_jspxFactory
operator|=
name|JspFactory
operator|.
name|getDefaultFactory
argument_list|()
expr_stmt|;
name|response
operator|.
name|setContentType
argument_list|(
literal|"text/html;charset=UTF-8"
argument_list|)
expr_stmt|;
name|pageContext
operator|=
name|_jspxFactory
operator|.
name|getPageContext
argument_list|(
name|this
argument_list|,
name|request
argument_list|,
name|response
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|,
literal|8192
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|_jspx_page_context
operator|=
name|pageContext
expr_stmt|;
name|application
operator|=
name|pageContext
operator|.
name|getServletContext
argument_list|()
expr_stmt|;
name|config
operator|=
name|pageContext
operator|.
name|getServletConfig
argument_list|()
expr_stmt|;
name|session
operator|=
name|pageContext
operator|.
name|getSession
argument_list|()
expr_stmt|;
name|out
operator|=
name|pageContext
operator|.
name|getOut
argument_list|()
expr_stmt|;
name|_jspx_out
operator|=
name|out
expr_stmt|;
name|HMaster
name|master
init|=
operator|(
name|HMaster
operator|)
name|getServletContext
argument_list|()
operator|.
name|getAttribute
argument_list|(
name|HMaster
operator|.
name|MASTER
argument_list|)
decl_stmt|;
name|HBaseConfiguration
name|conf
init|=
operator|new
name|HBaseConfiguration
argument_list|()
decl_stmt|;
name|TableFormatter
name|formatter
init|=
operator|new
name|HtmlTableFormatter
argument_list|(
name|out
argument_list|)
decl_stmt|;
name|ShowCommand
name|show
init|=
operator|new
name|ShowCommand
argument_list|(
name|out
argument_list|,
name|formatter
argument_list|,
literal|"tables"
argument_list|)
decl_stmt|;
name|HServerAddress
name|rootLocation
init|=
name|master
operator|.
name|getRootRegionLocation
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|Text
argument_list|,
name|MetaRegion
argument_list|>
name|onlineRegions
init|=
name|master
operator|.
name|getOnlineMetaRegions
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|HServerInfo
argument_list|>
name|serverToServerInfos
init|=
name|master
operator|.
name|getServersToServerInfo
argument_list|()
decl_stmt|;
name|int
name|interval
init|=
name|conf
operator|.
name|getInt
argument_list|(
literal|"hbase.regionserver.msginterval"
argument_list|,
literal|6000
argument_list|)
operator|/
literal|1000
decl_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \n  \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> \n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"/>\n<title>Hbase Master: "
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|master
operator|.
name|getMasterAddress
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"</title>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/static/hbase.css\" />\n</head>\n\n<body>\n\n<a id=\"logo\" href=\"http://wiki.apache.org/lucene-hadoop/Hbase\"><img src=\"/static/hbase_logo_med.gif\" alt=\"Hbase Logo\" title=\"Hbase Logo\" /></a>\n<h1 id=\"page_title\">Master: "
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|master
operator|.
name|getMasterAddress
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"</h1>\n<p id=\"links_menu\"><a href=\"/hql.jsp\">HQL</a>,<a href=\"/logs/\">Local logs</a>,<a href=\"/stacks\">Thread Dump</a>,<a href=\"/logLevel\">Log Level</a></p>\n<hr id=\"head_rule\" />\n\n<h2>Master Attributes</h2>\n<table>\n<tr><th>Attribute Name</th><th>Value</th><th>Description</th></tr>\n<tr><td>Version</td><td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|VersionInfo
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|','
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|' '
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|'r'
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|VersionInfo
operator|.
name|getRevision
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"</td><td>Hbase version and svn revision</td></tr>\n<tr><td>Compiled</td><td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|VersionInfo
operator|.
name|getDate
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|','
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|' '
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|VersionInfo
operator|.
name|getUser
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"</td><td>When this version was compiled and by whom</td></tr>\n<tr><td>Filesystem</td><td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|conf
operator|.
name|get
argument_list|(
literal|"fs.default.name"
argument_list|)
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"</td><td>Filesystem hbase is running on</td></tr>\n<tr><td>Hbase Root Directory</td><td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|master
operator|.
name|getRootDir
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"</td><td>Location of hbase home directory</td></tr>\n</table>\n\n<h2>Online META Regions</h2>\n"
argument_list|)
expr_stmt|;
if|if
condition|(
name|rootLocation
operator|!=
literal|null
condition|)
block|{
name|out
operator|.
name|write
argument_list|(
literal|"\n<table>\n<tr><th>Name</th><th>Server</th></tr>\n<tr><td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|HConstants
operator|.
name|ROOT_TABLE_NAME
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"</td><td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|rootLocation
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"</td></tr>\n"
argument_list|)
expr_stmt|;
if|if
condition|(
name|onlineRegions
operator|!=
literal|null
operator|&&
name|onlineRegions
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|out
operator|.
name|write
argument_list|(
literal|'\n'
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|' '
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|' '
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|Text
argument_list|,
name|HMaster
operator|.
name|MetaRegion
argument_list|>
name|e
range|:
name|onlineRegions
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|MetaRegion
name|meta
init|=
name|e
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"\n<tr><td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|meta
operator|.
name|getRegionName
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"</td><td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|meta
operator|.
name|getServer
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"</td></tr>\n  "
argument_list|)
expr_stmt|;
block|}
block|}
name|out
operator|.
name|write
argument_list|(
literal|"\n</table>\n"
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|write
argument_list|(
literal|"\n\n<h2>Tables</h2>\n"
argument_list|)
expr_stmt|;
name|ReturnMsg
name|msg
init|=
name|show
operator|.
name|execute
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"\n<p>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|msg
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"</p>\n\n<h2>Region Servers</h2>\n"
argument_list|)
expr_stmt|;
if|if
condition|(
name|serverToServerInfos
operator|!=
literal|null
operator|&&
name|serverToServerInfos
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|out
operator|.
name|write
argument_list|(
literal|'\n'
argument_list|)
expr_stmt|;
name|int
name|totalRegions
init|=
literal|0
decl_stmt|;
name|int
name|totalRequests
init|=
literal|0
decl_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"\n\n<table>\n<tr><th rowspan="
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|serverToServerInfos
operator|.
name|size
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"></th><th>Address</th><th>Start Code</th><th>Load</th></tr>\n\n"
argument_list|)
expr_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|HServerInfo
argument_list|>
name|e
range|:
name|serverToServerInfos
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|HServerInfo
name|hsi
init|=
name|e
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|String
name|url
init|=
literal|"http://"
operator|+
name|hsi
operator|.
name|getServerAddress
argument_list|()
operator|.
name|getBindAddress
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|":"
operator|+
name|hsi
operator|.
name|getInfoPort
argument_list|()
operator|+
literal|"/"
decl_stmt|;
name|String
name|load
init|=
name|hsi
operator|.
name|getLoad
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|totalRegions
operator|+=
name|hsi
operator|.
name|getLoad
argument_list|()
operator|.
name|getNumberOfRegions
argument_list|()
expr_stmt|;
name|totalRequests
operator|+=
name|hsi
operator|.
name|getLoad
argument_list|()
operator|.
name|getNumberOfRequests
argument_list|()
expr_stmt|;
name|long
name|startCode
init|=
name|hsi
operator|.
name|getStartCode
argument_list|()
decl_stmt|;
name|String
name|address
init|=
name|hsi
operator|.
name|getServerAddress
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"\n<tr><td><a href=\""
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|url
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|'"'
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|'>'
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|address
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"</a></td><td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|startCode
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"</td><td>"
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|load
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"</td></tr>\n"
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|write
argument_list|(
literal|"\n<tr><th>Total:</th><td>servers: "
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|serverToServerInfos
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"</td><td>&nbsp;</td><td>requests: "
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|totalRequests
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|" regions: "
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|totalRegions
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|"</td></tr>\n</table>\n\n<p>Load is requests per<em>hbase.regionsserver.msginterval</em> ("
argument_list|)
expr_stmt|;
name|out
operator|.
name|print
argument_list|(
name|interval
argument_list|)
expr_stmt|;
name|out
operator|.
name|write
argument_list|(
literal|" second(s)) and count of regions loaded</p>\n"
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|write
argument_list|(
literal|"\n</body>\n</html>\n"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|t
operator|instanceof
name|SkipPageException
operator|)
condition|)
block|{
name|out
operator|=
name|_jspx_out
expr_stmt|;
if|if
condition|(
name|out
operator|!=
literal|null
operator|&&
name|out
operator|.
name|getBufferSize
argument_list|()
operator|!=
literal|0
condition|)
name|out
operator|.
name|clearBuffer
argument_list|()
expr_stmt|;
if|if
condition|(
name|_jspx_page_context
operator|!=
literal|null
condition|)
name|_jspx_page_context
operator|.
name|handlePageException
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
if|if
condition|(
name|_jspxFactory
operator|!=
literal|null
condition|)
name|_jspxFactory
operator|.
name|releasePageContext
argument_list|(
name|_jspx_page_context
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

