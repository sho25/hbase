begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright 2007 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|descriptors
package|;
end_package

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|ScannerDescriptor
block|{
name|byte
index|[]
index|[]
name|columns
decl_stmt|;
name|long
name|timestamp
decl_stmt|;
name|byte
index|[]
name|startRow
decl_stmt|;
name|byte
index|[]
name|stopRow
decl_stmt|;
name|String
name|filters
decl_stmt|;
comment|/**    * @param columns    * @param timestamp    * @param startRow    * @param stopRow    * @param filters    */
specifier|public
name|ScannerDescriptor
parameter_list|(
name|byte
index|[]
index|[]
name|columns
parameter_list|,
name|long
name|timestamp
parameter_list|,
name|byte
index|[]
name|startRow
parameter_list|,
name|byte
index|[]
name|stopRow
parameter_list|,
name|String
name|filters
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|columns
operator|=
name|columns
expr_stmt|;
name|this
operator|.
name|timestamp
operator|=
name|timestamp
expr_stmt|;
name|this
operator|.
name|startRow
operator|=
name|startRow
expr_stmt|;
name|this
operator|.
name|stopRow
operator|=
name|stopRow
expr_stmt|;
name|this
operator|.
name|filters
operator|=
name|filters
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|startRow
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|startRow
operator|=
operator|new
name|byte
index|[
literal|0
index|]
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|stopRow
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|stopRow
operator|=
operator|new
name|byte
index|[
literal|0
index|]
expr_stmt|;
block|}
block|}
comment|/**    * @return the columns    */
specifier|public
name|byte
index|[]
index|[]
name|getColumns
parameter_list|()
block|{
return|return
name|columns
return|;
block|}
comment|/**    * @param columns    *          the columns to set    */
specifier|public
name|void
name|setColumns
parameter_list|(
name|byte
index|[]
index|[]
name|columns
parameter_list|)
block|{
name|this
operator|.
name|columns
operator|=
name|columns
expr_stmt|;
block|}
comment|/**    * @return the timestamp    */
specifier|public
name|long
name|getTimestamp
parameter_list|()
block|{
return|return
name|timestamp
return|;
block|}
comment|/**    * @param timestamp    *          the timestamp to set    */
specifier|public
name|void
name|setTimestamp
parameter_list|(
name|long
name|timestamp
parameter_list|)
block|{
name|this
operator|.
name|timestamp
operator|=
name|timestamp
expr_stmt|;
block|}
comment|/**    * @return the startRow    */
specifier|public
name|byte
index|[]
name|getStartRow
parameter_list|()
block|{
return|return
name|startRow
return|;
block|}
comment|/**    * @param startRow    *          the startRow to set    */
specifier|public
name|void
name|setStartRow
parameter_list|(
name|byte
index|[]
name|startRow
parameter_list|)
block|{
name|this
operator|.
name|startRow
operator|=
name|startRow
expr_stmt|;
block|}
comment|/**    * @return the stopRow    */
specifier|public
name|byte
index|[]
name|getStopRow
parameter_list|()
block|{
return|return
name|stopRow
return|;
block|}
comment|/**    * @param stopRow    *          the stopRow to set    */
specifier|public
name|void
name|setStopRow
parameter_list|(
name|byte
index|[]
name|stopRow
parameter_list|)
block|{
name|this
operator|.
name|stopRow
operator|=
name|stopRow
expr_stmt|;
block|}
comment|/**    * @return the filters    */
specifier|public
name|String
name|getFilters
parameter_list|()
block|{
return|return
name|filters
return|;
block|}
comment|/**    * @param filters    *          the filters to set    */
specifier|public
name|void
name|setFilters
parameter_list|(
name|String
name|filters
parameter_list|)
block|{
name|this
operator|.
name|filters
operator|=
name|filters
expr_stmt|;
block|}
block|}
end_class

end_unit

