begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright 2008 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|parser
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|Dispatcher
operator|.
name|ContentType
import|;
end_import

begin_comment
comment|/**  *   */
end_comment

begin_class
specifier|public
class|class
name|HBaseRestParserFactory
block|{
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|ContentType
argument_list|,
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|parserMap
init|=
operator|new
name|HashMap
argument_list|<
name|ContentType
argument_list|,
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
static|static
block|{
name|parserMap
operator|.
name|put
argument_list|(
name|ContentType
operator|.
name|XML
argument_list|,
name|XMLRestParser
operator|.
name|class
argument_list|)
expr_stmt|;
name|parserMap
operator|.
name|put
argument_list|(
name|ContentType
operator|.
name|JSON
argument_list|,
name|JsonRestParser
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|IHBaseRestParser
name|getParser
parameter_list|(
name|ContentType
name|ct
parameter_list|)
block|{
name|IHBaseRestParser
name|parser
init|=
literal|null
decl_stmt|;
name|Class
argument_list|<
name|?
argument_list|>
name|clazz
init|=
name|parserMap
operator|.
name|get
argument_list|(
name|ct
argument_list|)
decl_stmt|;
try|try
block|{
name|parser
operator|=
operator|(
name|IHBaseRestParser
operator|)
name|clazz
operator|.
name|newInstance
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InstantiationException
name|e
parameter_list|)
block|{
comment|// TODO Auto-generated catch block
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalAccessException
name|e
parameter_list|)
block|{
comment|// TODO Auto-generated catch block
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
name|parser
return|;
block|}
block|}
end_class

end_unit

