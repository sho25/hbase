begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright 2008 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|filter
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|filter
operator|.
name|RowFilterInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|filter
operator|.
name|WhileMatchRowFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|RESTConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|exception
operator|.
name|HBaseRestException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|json
operator|.
name|JSONException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|json
operator|.
name|JSONObject
import|;
end_import

begin_comment
comment|/**  * Factory to produce WhileMatchRowFilters from JSON  * Expects as an arguement a valid JSON Object in   * String form of another RowFilterInterface.  */
end_comment

begin_class
specifier|public
class|class
name|WhileMatchRowFilterFactory
implements|implements
name|FilterFactory
block|{
specifier|public
name|RowFilterInterface
name|getFilterFromJSON
parameter_list|(
name|String
name|args
parameter_list|)
throws|throws
name|HBaseRestException
block|{
name|JSONObject
name|innerFilterJSON
decl_stmt|;
name|FilterFactory
name|f
decl_stmt|;
name|String
name|innerFilterType
decl_stmt|;
name|String
name|innerFilterArgs
decl_stmt|;
try|try
block|{
name|innerFilterJSON
operator|=
operator|new
name|JSONObject
argument_list|(
name|args
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JSONException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HBaseRestException
argument_list|(
name|e
argument_list|)
throw|;
block|}
comment|// Check if filter is correct
if|if
condition|(
operator|(
name|innerFilterType
operator|=
name|innerFilterJSON
operator|.
name|optString
argument_list|(
name|TYPE
argument_list|)
operator|)
operator|==
literal|null
condition|)
throw|throw
operator|new
name|MalformedFilterException
argument_list|()
throw|;
if|if
condition|(
operator|(
name|innerFilterArgs
operator|=
name|innerFilterJSON
operator|.
name|optString
argument_list|(
name|ARGUMENTS
argument_list|)
operator|)
operator|==
literal|null
condition|)
throw|throw
operator|new
name|MalformedFilterException
argument_list|()
throw|;
if|if
condition|(
operator|(
name|f
operator|=
name|RESTConstants
operator|.
name|filterFactories
operator|.
name|get
argument_list|(
name|innerFilterType
argument_list|)
operator|)
operator|==
literal|null
condition|)
throw|throw
operator|new
name|MalformedFilterException
argument_list|()
throw|;
name|RowFilterInterface
name|innerFilter
init|=
name|f
operator|.
name|getFilterFromJSON
argument_list|(
name|innerFilterArgs
argument_list|)
decl_stmt|;
return|return
operator|new
name|WhileMatchRowFilter
argument_list|(
name|innerFilter
argument_list|)
return|;
block|}
block|}
end_class

end_unit

