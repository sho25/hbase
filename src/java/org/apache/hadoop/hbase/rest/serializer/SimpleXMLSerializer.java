begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright 2007 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|serializer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HColumnDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HTableDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|io
operator|.
name|Cell
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|io
operator|.
name|RowResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|DatabaseModel
operator|.
name|DatabaseMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|Status
operator|.
name|StatusMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|TableModel
operator|.
name|Regions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|descriptors
operator|.
name|RestCell
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|descriptors
operator|.
name|ScannerIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|descriptors
operator|.
name|TimestampsDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|exception
operator|.
name|HBaseRestException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_comment
comment|/**  *   * Basic first pass at implementing an XML serializer for the REST interface.  * This should probably be refactored into something better.  *   */
end_comment

begin_class
specifier|public
class|class
name|SimpleXMLSerializer
extends|extends
name|AbstractRestSerializer
block|{
specifier|private
specifier|final
name|AbstractPrinter
name|printer
decl_stmt|;
comment|/**    * @param response    * @throws HBaseRestException    */
annotation|@
name|SuppressWarnings
argument_list|(
literal|"synthetic-access"
argument_list|)
specifier|public
name|SimpleXMLSerializer
parameter_list|(
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|HBaseRestException
block|{
name|super
argument_list|(
name|response
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|printer
operator|=
operator|new
name|SimplePrinter
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"synthetic-access"
argument_list|)
specifier|public
name|SimpleXMLSerializer
parameter_list|(
name|HttpServletResponse
name|response
parameter_list|,
name|boolean
name|prettyPrint
parameter_list|)
throws|throws
name|HBaseRestException
block|{
name|super
argument_list|(
name|response
argument_list|,
name|prettyPrint
argument_list|)
expr_stmt|;
if|if
condition|(
name|prettyPrint
condition|)
block|{
name|printer
operator|=
operator|new
name|PrettyPrinter
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|printer
operator|=
operator|new
name|SimplePrinter
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
block|}
comment|/*    * (non-Javadoc)    *     * @see    * org.apache.hadoop.hbase.rest.serializer.IRestSerializer#writeOutput(java    * .lang.Object, java.io.OutputStream)    */
specifier|public
name|void
name|writeOutput
parameter_list|(
name|Object
name|o
parameter_list|)
throws|throws
name|HBaseRestException
block|{
name|response
operator|.
name|setContentType
argument_list|(
literal|"text/xml"
argument_list|)
expr_stmt|;
name|response
operator|.
name|setCharacterEncoding
argument_list|(
name|HConstants
operator|.
name|UTF8_ENCODING
argument_list|)
expr_stmt|;
if|if
condition|(
name|o
operator|instanceof
name|ISerializable
condition|)
block|{
operator|(
operator|(
name|ISerializable
operator|)
name|o
operator|)
operator|.
name|restSerialize
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|o
operator|.
name|getClass
argument_list|()
operator|.
name|isArray
argument_list|()
operator|&&
name|o
operator|.
name|getClass
argument_list|()
operator|.
name|getComponentType
argument_list|()
operator|==
name|RowResult
operator|.
name|class
condition|)
block|{
name|this
operator|.
name|serializeRowResultArray
argument_list|(
operator|(
name|RowResult
index|[]
operator|)
name|o
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|o
operator|.
name|getClass
argument_list|()
operator|.
name|isArray
argument_list|()
operator|&&
name|o
operator|.
name|getClass
argument_list|()
operator|.
name|getComponentType
argument_list|()
operator|==
name|Cell
operator|.
name|class
condition|)
block|{
name|this
operator|.
name|serializeCellArray
argument_list|(
operator|(
name|Cell
index|[]
operator|)
name|o
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|HBaseRestException
argument_list|(
literal|"Object does not conform to the ISerializable "
operator|+
literal|"interface.  Unable to generate xml output."
argument_list|)
throw|;
block|}
block|}
comment|/*    * (non-Javadoc)    *     * @seeorg.apache.hadoop.hbase.rest.serializer.IRestSerializer#    * serializeDatabaseMetadata    * (org.apache.hadoop.hbase.rest.DatabaseModel.DatabaseMetadata)    */
specifier|public
name|void
name|serializeDatabaseMetadata
parameter_list|(
name|DatabaseMetadata
name|databaseMetadata
parameter_list|)
throws|throws
name|HBaseRestException
block|{
name|printer
operator|.
name|print
argument_list|(
literal|"<tables>"
argument_list|)
expr_stmt|;
for|for
control|(
name|HTableDescriptor
name|table
range|:
name|databaseMetadata
operator|.
name|getTables
argument_list|()
control|)
block|{
name|table
operator|.
name|restSerialize
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
name|printer
operator|.
name|print
argument_list|(
literal|"</tables>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
comment|/*    * (non-Javadoc)    *     * @seeorg.apache.hadoop.hbase.rest.serializer.IRestSerializer#    * serializeTableDescriptor(org.apache.hadoop.hbase.HTableDescriptor)    */
specifier|public
name|void
name|serializeTableDescriptor
parameter_list|(
name|HTableDescriptor
name|tableDescriptor
parameter_list|)
throws|throws
name|HBaseRestException
block|{
name|printer
operator|.
name|print
argument_list|(
literal|"<table>"
argument_list|)
expr_stmt|;
comment|// name element
name|printer
operator|.
name|print
argument_list|(
literal|"<name>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
name|tableDescriptor
operator|.
name|getNameAsString
argument_list|()
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</name>"
argument_list|)
expr_stmt|;
comment|// column families
name|printer
operator|.
name|print
argument_list|(
literal|"<columnfamilies>"
argument_list|)
expr_stmt|;
for|for
control|(
name|HColumnDescriptor
name|column
range|:
name|tableDescriptor
operator|.
name|getColumnFamilies
argument_list|()
control|)
block|{
name|column
operator|.
name|restSerialize
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
name|printer
operator|.
name|print
argument_list|(
literal|"</columnfamilies>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</table>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
comment|/*    * (non-Javadoc)    *     * @seeorg.apache.hadoop.hbase.rest.serializer.IRestSerializer#    * serializeColumnDescriptor(org.apache.hadoop.hbase.HColumnDescriptor)    */
specifier|public
name|void
name|serializeColumnDescriptor
parameter_list|(
name|HColumnDescriptor
name|column
parameter_list|)
throws|throws
name|HBaseRestException
block|{
name|printer
operator|.
name|print
argument_list|(
literal|"<columnfamily>"
argument_list|)
expr_stmt|;
comment|// name
name|printer
operator|.
name|print
argument_list|(
literal|"<name>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Base64
operator|.
name|encodeBytes
argument_list|(
name|column
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</name>"
argument_list|)
expr_stmt|;
comment|// compression
name|printer
operator|.
name|print
argument_list|(
literal|"<compression>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
name|column
operator|.
name|getCompression
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</compression>"
argument_list|)
expr_stmt|;
comment|// bloomfilter
name|printer
operator|.
name|print
argument_list|(
literal|"<bloomfilter>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
name|column
operator|.
name|getCompressionType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</bloomfilter>"
argument_list|)
expr_stmt|;
comment|// max-versions
name|printer
operator|.
name|print
argument_list|(
literal|"<max-versions>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
name|column
operator|.
name|getMaxVersions
argument_list|()
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</max-versions>"
argument_list|)
expr_stmt|;
comment|// max-length
name|printer
operator|.
name|print
argument_list|(
literal|"<max-length>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
name|column
operator|.
name|getMaxValueLength
argument_list|()
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</max-length>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</columnfamily>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
comment|/*    * (non-Javadoc)    *     * @see    * org.apache.hadoop.hbase.rest.serializer.IRestSerializer#serializeRegionData    * (org.apache.hadoop.hbase.rest.TableModel.Regions)    */
specifier|public
name|void
name|serializeRegionData
parameter_list|(
name|Regions
name|regions
parameter_list|)
throws|throws
name|HBaseRestException
block|{
name|printer
operator|.
name|print
argument_list|(
literal|"<regions>"
argument_list|)
expr_stmt|;
for|for
control|(
name|byte
index|[]
name|region
range|:
name|regions
operator|.
name|getRegionKey
argument_list|()
control|)
block|{
name|printer
operator|.
name|print
argument_list|(
literal|"<region>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
name|Bytes
operator|.
name|toString
argument_list|(
name|region
argument_list|)
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</region>"
argument_list|)
expr_stmt|;
block|}
name|printer
operator|.
name|print
argument_list|(
literal|"</regions>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
comment|/*    * (non-Javadoc)    *     * @see    * org.apache.hadoop.hbase.rest.serializer.IRestSerializer#serializeStatusMessage    * (org.apache.hadoop.hbase.rest.Status.StatusMessage)    */
specifier|public
name|void
name|serializeStatusMessage
parameter_list|(
name|StatusMessage
name|message
parameter_list|)
throws|throws
name|HBaseRestException
block|{
name|printer
operator|.
name|print
argument_list|(
literal|"<status>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"<code>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
name|message
operator|.
name|getStatusCode
argument_list|()
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</code>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"<message>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
name|message
operator|.
name|getMessage
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</message>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"<error>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
name|message
operator|.
name|getError
argument_list|()
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</error>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</status>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
comment|/*    * (non-Javadoc)    *     * @seeorg.apache.hadoop.hbase.rest.serializer.IRestSerializer#    * serializeScannerIdentifier(org.apache.hadoop.hbase.rest.ScannerIdentifier)    */
specifier|public
name|void
name|serializeScannerIdentifier
parameter_list|(
name|ScannerIdentifier
name|scannerIdentifier
parameter_list|)
throws|throws
name|HBaseRestException
block|{
name|printer
operator|.
name|print
argument_list|(
literal|"<scanner>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"<id>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
name|scannerIdentifier
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</id>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</scanner>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
comment|/*    * (non-Javadoc)    *     * @see    * org.apache.hadoop.hbase.rest.serializer.IRestSerializer#serializeRowResult    * (org.apache.hadoop.hbase.io.RowResult)    */
specifier|public
name|void
name|serializeRowResult
parameter_list|(
name|RowResult
name|rowResult
parameter_list|)
throws|throws
name|HBaseRestException
block|{
name|printer
operator|.
name|print
argument_list|(
literal|"<row>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"<name>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Base64
operator|.
name|encodeBytes
argument_list|(
name|rowResult
operator|.
name|getRow
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</name>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"<columns>"
argument_list|)
expr_stmt|;
for|for
control|(
name|RestCell
name|cell
range|:
name|rowResult
operator|.
name|getCells
argument_list|()
control|)
block|{
name|printer
operator|.
name|print
argument_list|(
literal|"<column>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"<name>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Base64
operator|.
name|encodeBytes
argument_list|(
name|cell
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</name>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"<timestamp>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
name|cell
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</timestamp>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"<value>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Base64
operator|.
name|encodeBytes
argument_list|(
name|cell
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</value>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</column>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
name|printer
operator|.
name|print
argument_list|(
literal|"</columns>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</row>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
comment|/*    * (non-Javadoc)    *     * @see    * org.apache.hadoop.hbase.rest.serializer.IRestSerializer#serializeRowResultArray    * (org.apache.hadoop.hbase.io.RowResult[])    */
specifier|public
name|void
name|serializeRowResultArray
parameter_list|(
name|RowResult
index|[]
name|rows
parameter_list|)
throws|throws
name|HBaseRestException
block|{
name|printer
operator|.
name|print
argument_list|(
literal|"<rows>"
argument_list|)
expr_stmt|;
for|for
control|(
name|RowResult
name|row
range|:
name|rows
control|)
block|{
name|row
operator|.
name|restSerialize
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
name|printer
operator|.
name|print
argument_list|(
literal|"</rows>"
argument_list|)
expr_stmt|;
block|}
comment|/*    * (non-Javadoc)    *     * @see    * org.apache.hadoop.hbase.rest.serializer.IRestSerializer#serializeCell(org    * .apache.hadoop.hbase.io.Cell)    */
specifier|public
name|void
name|serializeCell
parameter_list|(
name|Cell
name|cell
parameter_list|)
throws|throws
name|HBaseRestException
block|{
name|printer
operator|.
name|print
argument_list|(
literal|"<cell>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"<value>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Base64
operator|.
name|encodeBytes
argument_list|(
name|cell
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</value>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"<timestamp>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
name|cell
operator|.
name|getTimestamp
argument_list|()
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</timestamp>"
argument_list|)
expr_stmt|;
name|printer
operator|.
name|print
argument_list|(
literal|"</cell>"
argument_list|)
expr_stmt|;
block|}
comment|/*    * (non-Javadoc)    *     * @see    * org.apache.hadoop.hbase.rest.serializer.IRestSerializer#serializeCellArray    * (org.apache.hadoop.hbase.io.Cell[])    */
specifier|public
name|void
name|serializeCellArray
parameter_list|(
name|Cell
index|[]
name|cells
parameter_list|)
throws|throws
name|HBaseRestException
block|{
name|printer
operator|.
name|print
argument_list|(
literal|"<cells>"
argument_list|)
expr_stmt|;
for|for
control|(
name|Cell
name|cell
range|:
name|cells
control|)
block|{
name|cell
operator|.
name|restSerialize
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
name|printer
operator|.
name|print
argument_list|(
literal|"</cells>"
argument_list|)
expr_stmt|;
block|}
comment|/*    * (non-Javadoc)    *     * @see    * org.apache.hadoop.hbase.rest.serializer.IRestSerializer#serializeTimestamps    * (org.apache.hadoop.hbase.rest.RowModel.TimestampsDescriptor)    */
specifier|public
name|void
name|serializeTimestamps
parameter_list|(
name|TimestampsDescriptor
name|timestampsDescriptor
parameter_list|)
throws|throws
name|HBaseRestException
block|{
comment|// TODO Auto-generated method stub
block|}
comment|// Private classes used for printing the output
specifier|private
interface|interface
name|IPrinter
block|{
specifier|public
name|void
name|print
parameter_list|(
name|String
name|output
parameter_list|)
function_decl|;
specifier|public
name|void
name|print
parameter_list|(
name|int
name|output
parameter_list|)
function_decl|;
specifier|public
name|void
name|print
parameter_list|(
name|long
name|output
parameter_list|)
function_decl|;
specifier|public
name|void
name|print
parameter_list|(
name|boolean
name|output
parameter_list|)
function_decl|;
specifier|public
name|void
name|flush
parameter_list|()
function_decl|;
block|}
specifier|private
specifier|abstract
class|class
name|AbstractPrinter
implements|implements
name|IPrinter
block|{
specifier|protected
specifier|final
name|PrintWriter
name|writer
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|private
name|AbstractPrinter
parameter_list|()
block|{
name|writer
operator|=
literal|null
expr_stmt|;
block|}
specifier|public
name|AbstractPrinter
parameter_list|(
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|HBaseRestException
block|{
try|try
block|{
name|writer
operator|=
name|response
operator|.
name|getWriter
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|HBaseRestException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|void
name|flush
parameter_list|()
block|{
name|writer
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
class|class
name|SimplePrinter
extends|extends
name|AbstractPrinter
block|{
specifier|private
name|SimplePrinter
parameter_list|(
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|HBaseRestException
block|{
name|super
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
comment|/*      * (non-Javadoc)      *       * @see      * org.apache.hadoop.hbase.rest.serializer.SimpleXMLSerializer.Printer#print      * (java.io.PrintWriter, java.lang.String)      */
specifier|public
name|void
name|print
parameter_list|(
specifier|final
name|String
name|output
parameter_list|)
block|{
name|writer
operator|.
name|print
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
comment|/*      * (non-Javadoc)      *       * @see      * org.apache.hadoop.hbase.rest.serializer.SimpleXMLSerializer.IPrinter#      * print(int)      */
specifier|public
name|void
name|print
parameter_list|(
name|int
name|output
parameter_list|)
block|{
name|writer
operator|.
name|print
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
comment|/*      * (non-Javadoc)      *       * @see      * org.apache.hadoop.hbase.rest.serializer.SimpleXMLSerializer.IPrinter#      * print(long)      */
specifier|public
name|void
name|print
parameter_list|(
name|long
name|output
parameter_list|)
block|{
name|writer
operator|.
name|print
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.hadoop.hbase.rest.serializer.SimpleXMLSerializer.IPrinter#print(boolean)      */
specifier|public
name|void
name|print
parameter_list|(
name|boolean
name|output
parameter_list|)
block|{
name|writer
operator|.
name|print
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
class|class
name|PrettyPrinter
extends|extends
name|AbstractPrinter
block|{
specifier|private
name|PrettyPrinter
parameter_list|(
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|HBaseRestException
block|{
name|super
argument_list|(
name|response
argument_list|)
expr_stmt|;
block|}
comment|/*      * (non-Javadoc)      *       * @see      * org.apache.hadoop.hbase.rest.serializer.SimpleXMLSerializer.Printer#print      * (java.io.PrintWriter, java.lang.String)      */
specifier|public
name|void
name|print
parameter_list|(
name|String
name|output
parameter_list|)
block|{
name|writer
operator|.
name|println
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
comment|/*      * (non-Javadoc)      *       * @see      * org.apache.hadoop.hbase.rest.serializer.SimpleXMLSerializer.IPrinter#      * print(int)      */
specifier|public
name|void
name|print
parameter_list|(
name|int
name|output
parameter_list|)
block|{
name|writer
operator|.
name|println
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
comment|/*      * (non-Javadoc)      *       * @see      * org.apache.hadoop.hbase.rest.serializer.SimpleXMLSerializer.IPrinter#      * print(long)      */
specifier|public
name|void
name|print
parameter_list|(
name|long
name|output
parameter_list|)
block|{
name|writer
operator|.
name|println
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
comment|/* (non-Javadoc)      * @see org.apache.hadoop.hbase.rest.serializer.SimpleXMLSerializer.IPrinter#print(boolean)      */
specifier|public
name|void
name|print
parameter_list|(
name|boolean
name|output
parameter_list|)
block|{
name|writer
operator|.
name|println
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

