begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright 2007 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|serializer
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|Dispatcher
operator|.
name|ContentType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|exception
operator|.
name|HBaseRestException
import|;
end_import

begin_comment
comment|/**  *   *         Factory used to return a Rest Serializer tailored to the HTTP  *         Requesters accept type in the header.  *   */
end_comment

begin_class
specifier|public
class|class
name|RestSerializerFactory
block|{
specifier|public
specifier|static
name|AbstractRestSerializer
name|getSerializer
parameter_list|(
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|HBaseRestException
block|{
name|ContentType
name|ct
init|=
name|ContentType
operator|.
name|getContentType
argument_list|(
name|request
operator|.
name|getHeader
argument_list|(
literal|"accept"
argument_list|)
argument_list|)
decl_stmt|;
name|AbstractRestSerializer
name|serializer
init|=
literal|null
decl_stmt|;
comment|// TODO refactor this so it uses reflection to create the new objects.
switch|switch
condition|(
name|ct
condition|)
block|{
case|case
name|XML
case|:
name|serializer
operator|=
operator|new
name|SimpleXMLSerializer
argument_list|(
name|response
argument_list|)
expr_stmt|;
break|break;
case|case
name|JSON
case|:
name|serializer
operator|=
operator|new
name|JSONSerializer
argument_list|(
name|response
argument_list|)
expr_stmt|;
break|break;
default|default:
name|serializer
operator|=
operator|new
name|SimpleXMLSerializer
argument_list|(
name|response
argument_list|)
expr_stmt|;
break|break;
block|}
return|return
name|serializer
return|;
block|}
block|}
end_class

end_unit

