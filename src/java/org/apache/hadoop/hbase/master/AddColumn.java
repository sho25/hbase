begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright 2008 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HColumnDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HRegionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|HRegionInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_comment
comment|/** Instantiated to add a column family to a table */
end_comment

begin_class
class|class
name|AddColumn
extends|extends
name|ColumnOperation
block|{
specifier|private
specifier|final
name|HColumnDescriptor
name|newColumn
decl_stmt|;
name|AddColumn
parameter_list|(
specifier|final
name|HMaster
name|master
parameter_list|,
specifier|final
name|Text
name|tableName
parameter_list|,
specifier|final
name|HColumnDescriptor
name|newColumn
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|master
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
name|this
operator|.
name|newColumn
operator|=
name|newColumn
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|postProcessMeta
parameter_list|(
name|MetaRegion
name|m
parameter_list|,
name|HRegionInterface
name|server
parameter_list|)
throws|throws
name|IOException
block|{
for|for
control|(
name|HRegionInfo
name|i
range|:
name|unservedRegions
control|)
block|{
comment|// All we need to do to add a column is add it to the table descriptor.
comment|// When the region is brought on-line, it will find the column missing
comment|// and create it.
name|i
operator|.
name|getTableDesc
argument_list|()
operator|.
name|addFamily
argument_list|(
name|newColumn
argument_list|)
expr_stmt|;
name|updateRegionInfo
argument_list|(
name|server
argument_list|,
name|m
operator|.
name|getRegionName
argument_list|()
argument_list|,
name|i
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

