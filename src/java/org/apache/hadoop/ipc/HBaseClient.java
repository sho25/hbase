begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|ipc
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|net
operator|.
name|SocketFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_comment
comment|/**  * Subclass of hadoop's Client just so we can make some methods accessible  * in {@link org.apache.hadoop.hbase.ipc.HbaseRPC}  */
end_comment

begin_class
specifier|public
class|class
name|HBaseClient
extends|extends
name|Client
block|{
comment|/**    * @param valueClass    * @param conf    * @param factory    */
specifier|public
name|HBaseClient
parameter_list|(
name|Class
name|valueClass
parameter_list|,
name|Configuration
name|conf
parameter_list|,
name|SocketFactory
name|factory
parameter_list|)
block|{
name|super
argument_list|(
name|valueClass
argument_list|,
name|conf
argument_list|,
name|factory
argument_list|)
expr_stmt|;
block|}
comment|/**    * @param valueClass    * @param conf    */
specifier|public
name|HBaseClient
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|valueClass
parameter_list|,
name|Configuration
name|conf
parameter_list|)
block|{
name|super
argument_list|(
name|valueClass
argument_list|,
name|conf
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|incCount
parameter_list|()
block|{
name|super
operator|.
name|incCount
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|decCount
parameter_list|()
block|{
name|super
operator|.
name|decCount
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isZeroReference
parameter_list|()
block|{
return|return
name|super
operator|.
name|isZeroReference
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|SocketFactory
name|getSocketFactory
parameter_list|()
block|{
return|return
name|super
operator|.
name|getSocketFactory
argument_list|()
return|;
block|}
block|}
end_class

end_unit

