begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2009 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|stargate
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAttribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElementWrapper
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|stargate
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|StorageClusterStatusMessage
operator|.
name|StorageClusterStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
import|;
end_import

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"ClusterStatus"
argument_list|)
specifier|public
class|class
name|StorageClusterStatusModel
implements|implements
name|Serializable
implements|,
name|IProtobufWrapper
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|public
specifier|static
class|class
name|Node
block|{
specifier|public
specifier|static
class|class
name|Region
block|{
specifier|private
name|byte
index|[]
name|name
decl_stmt|;
specifier|public
name|Region
parameter_list|()
block|{}
specifier|public
name|Region
parameter_list|(
name|byte
index|[]
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
annotation|@
name|XmlAttribute
specifier|public
name|byte
index|[]
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|byte
index|[]
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
block|}
specifier|private
name|String
name|name
decl_stmt|;
specifier|private
name|long
name|startCode
decl_stmt|;
specifier|private
name|int
name|requests
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Region
argument_list|>
name|regions
init|=
operator|new
name|ArrayList
argument_list|<
name|Region
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|void
name|addRegion
parameter_list|(
name|byte
index|[]
name|name
parameter_list|)
block|{
name|regions
operator|.
name|add
argument_list|(
operator|new
name|Region
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Region
name|getRegion
parameter_list|(
name|int
name|i
parameter_list|)
block|{
return|return
name|regions
operator|.
name|get
argument_list|(
name|i
argument_list|)
return|;
block|}
specifier|public
name|Node
parameter_list|()
block|{}
specifier|public
name|Node
parameter_list|(
name|String
name|name
parameter_list|,
name|long
name|startCode
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|startCode
operator|=
name|startCode
expr_stmt|;
block|}
annotation|@
name|XmlAttribute
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
annotation|@
name|XmlAttribute
specifier|public
name|long
name|getStartCode
parameter_list|()
block|{
return|return
name|startCode
return|;
block|}
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"Region"
argument_list|)
specifier|public
name|List
argument_list|<
name|Region
argument_list|>
name|getRegions
parameter_list|()
block|{
return|return
name|regions
return|;
block|}
annotation|@
name|XmlAttribute
specifier|public
name|int
name|getRequests
parameter_list|()
block|{
return|return
name|requests
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|void
name|setStartCode
parameter_list|(
name|long
name|startCode
parameter_list|)
block|{
name|this
operator|.
name|startCode
operator|=
name|startCode
expr_stmt|;
block|}
specifier|public
name|void
name|setRegions
parameter_list|(
name|List
argument_list|<
name|Region
argument_list|>
name|regions
parameter_list|)
block|{
name|this
operator|.
name|regions
operator|=
name|regions
expr_stmt|;
block|}
specifier|public
name|void
name|setRequests
parameter_list|(
name|int
name|requests
parameter_list|)
block|{
name|this
operator|.
name|requests
operator|=
name|requests
expr_stmt|;
block|}
block|}
specifier|private
name|List
argument_list|<
name|Node
argument_list|>
name|liveNodes
init|=
operator|new
name|ArrayList
argument_list|<
name|Node
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|deadNodes
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|int
name|regions
decl_stmt|;
specifier|private
name|int
name|requests
decl_stmt|;
specifier|private
name|double
name|averageLoad
decl_stmt|;
specifier|public
name|Node
name|addLiveNode
parameter_list|(
name|String
name|name
parameter_list|,
name|long
name|startCode
parameter_list|)
block|{
name|Node
name|node
init|=
operator|new
name|Node
argument_list|(
name|name
argument_list|,
name|startCode
argument_list|)
decl_stmt|;
name|liveNodes
operator|.
name|add
argument_list|(
name|node
argument_list|)
expr_stmt|;
return|return
name|node
return|;
block|}
specifier|public
name|Node
name|getLiveNode
parameter_list|(
name|int
name|i
parameter_list|)
block|{
return|return
name|liveNodes
operator|.
name|get
argument_list|(
name|i
argument_list|)
return|;
block|}
specifier|public
name|void
name|addDeadNode
parameter_list|(
name|String
name|node
parameter_list|)
block|{
name|deadNodes
operator|.
name|add
argument_list|(
name|node
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getDeadNode
parameter_list|(
name|int
name|i
parameter_list|)
block|{
return|return
name|deadNodes
operator|.
name|get
argument_list|(
name|i
argument_list|)
return|;
block|}
specifier|public
name|StorageClusterStatusModel
parameter_list|()
block|{}
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"Node"
argument_list|)
annotation|@
name|XmlElementWrapper
argument_list|(
name|name
operator|=
literal|"LiveNodes"
argument_list|)
specifier|public
name|List
argument_list|<
name|Node
argument_list|>
name|getLiveNodes
parameter_list|()
block|{
return|return
name|liveNodes
return|;
block|}
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"Node"
argument_list|)
annotation|@
name|XmlElementWrapper
argument_list|(
name|name
operator|=
literal|"DeadNodes"
argument_list|)
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getDeadNodes
parameter_list|()
block|{
return|return
name|deadNodes
return|;
block|}
annotation|@
name|XmlAttribute
specifier|public
name|int
name|getRegions
parameter_list|()
block|{
return|return
name|regions
return|;
block|}
annotation|@
name|XmlAttribute
specifier|public
name|int
name|getRequests
parameter_list|()
block|{
return|return
name|requests
return|;
block|}
annotation|@
name|XmlAttribute
specifier|public
name|double
name|getAverageLoad
parameter_list|()
block|{
return|return
name|averageLoad
return|;
block|}
specifier|public
name|void
name|setLiveNodes
parameter_list|(
name|List
argument_list|<
name|Node
argument_list|>
name|nodes
parameter_list|)
block|{
name|this
operator|.
name|liveNodes
operator|=
name|nodes
expr_stmt|;
block|}
specifier|public
name|void
name|setDeadNodes
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|nodes
parameter_list|)
block|{
name|this
operator|.
name|deadNodes
operator|=
name|nodes
expr_stmt|;
block|}
specifier|public
name|void
name|setRegions
parameter_list|(
name|int
name|regions
parameter_list|)
block|{
name|this
operator|.
name|regions
operator|=
name|regions
expr_stmt|;
block|}
specifier|public
name|void
name|setRequests
parameter_list|(
name|int
name|requests
parameter_list|)
block|{
name|this
operator|.
name|requests
operator|=
name|requests
expr_stmt|;
block|}
specifier|public
name|void
name|setAverageLoad
parameter_list|(
name|double
name|averageLoad
parameter_list|)
block|{
name|this
operator|.
name|averageLoad
operator|=
name|averageLoad
expr_stmt|;
block|}
comment|/* (non-Javadoc) 	 * @see java.lang.Object#toString() 	 */
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"%d live servers, %d dead servers, "
operator|+
literal|"%.4f average load\n\n"
argument_list|,
name|liveNodes
operator|.
name|size
argument_list|()
argument_list|,
name|deadNodes
operator|.
name|size
argument_list|()
argument_list|,
name|averageLoad
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|liveNodes
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|liveNodes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|" live servers\n"
argument_list|)
expr_stmt|;
for|for
control|(
name|Node
name|node
range|:
name|liveNodes
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|"    "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|node
operator|.
name|name
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|' '
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|node
operator|.
name|startCode
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\n        requests="
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|node
operator|.
name|requests
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", regions="
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|node
operator|.
name|regions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\n\n"
argument_list|)
expr_stmt|;
for|for
control|(
name|Node
operator|.
name|Region
name|region
range|:
name|node
operator|.
name|regions
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|"        "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|Bytes
operator|.
name|toString
argument_list|(
name|region
operator|.
name|name
argument_list|)
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|'\n'
argument_list|)
expr_stmt|;
block|}
name|sb
operator|.
name|append
argument_list|(
literal|'\n'
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|deadNodes
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|'\n'
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|deadNodes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|" dead servers\n"
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|node
range|:
name|deadNodes
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|"    "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|node
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|'\n'
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|byte
index|[]
name|createProtobufOutput
parameter_list|()
block|{
name|StorageClusterStatus
operator|.
name|Builder
name|builder
init|=
name|StorageClusterStatus
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setRegions
argument_list|(
name|regions
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setRequests
argument_list|(
name|requests
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setAverageLoad
argument_list|(
name|averageLoad
argument_list|)
expr_stmt|;
for|for
control|(
name|Node
name|node
range|:
name|liveNodes
control|)
block|{
name|StorageClusterStatus
operator|.
name|Node
operator|.
name|Builder
name|nodeBuilder
init|=
name|StorageClusterStatus
operator|.
name|Node
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|nodeBuilder
operator|.
name|setName
argument_list|(
name|node
operator|.
name|name
argument_list|)
expr_stmt|;
name|nodeBuilder
operator|.
name|setStartCode
argument_list|(
name|node
operator|.
name|startCode
argument_list|)
expr_stmt|;
name|nodeBuilder
operator|.
name|setRequests
argument_list|(
name|node
operator|.
name|requests
argument_list|)
expr_stmt|;
for|for
control|(
name|Node
operator|.
name|Region
name|region
range|:
name|node
operator|.
name|regions
control|)
block|{
name|nodeBuilder
operator|.
name|addRegions
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|region
operator|.
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|addLiveNodes
argument_list|(
name|nodeBuilder
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|String
name|node
range|:
name|deadNodes
control|)
block|{
name|builder
operator|.
name|addDeadNodes
argument_list|(
name|node
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
operator|.
name|toByteArray
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|IProtobufWrapper
name|getObjectFromMessage
parameter_list|(
name|byte
index|[]
name|message
parameter_list|)
throws|throws
name|IOException
block|{
name|StorageClusterStatus
operator|.
name|Builder
name|builder
init|=
name|StorageClusterStatus
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|mergeFrom
argument_list|(
name|message
argument_list|)
expr_stmt|;
if|if
condition|(
name|builder
operator|.
name|hasRegions
argument_list|()
condition|)
block|{
name|regions
operator|=
name|builder
operator|.
name|getRegions
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|builder
operator|.
name|hasRequests
argument_list|()
condition|)
block|{
name|requests
operator|=
name|builder
operator|.
name|getRequests
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|builder
operator|.
name|hasAverageLoad
argument_list|()
condition|)
block|{
name|averageLoad
operator|=
name|builder
operator|.
name|getAverageLoad
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|StorageClusterStatus
operator|.
name|Node
name|node
range|:
name|builder
operator|.
name|getLiveNodesList
argument_list|()
control|)
block|{
name|long
name|startCode
init|=
name|node
operator|.
name|hasStartCode
argument_list|()
condition|?
name|node
operator|.
name|getStartCode
argument_list|()
else|:
operator|-
literal|1
decl_stmt|;
name|StorageClusterStatusModel
operator|.
name|Node
name|nodeModel
init|=
name|addLiveNode
argument_list|(
name|node
operator|.
name|getName
argument_list|()
argument_list|,
name|startCode
argument_list|)
decl_stmt|;
name|int
name|requests
init|=
name|node
operator|.
name|hasRequests
argument_list|()
condition|?
name|node
operator|.
name|getRequests
argument_list|()
else|:
literal|0
decl_stmt|;
name|nodeModel
operator|.
name|setRequests
argument_list|(
name|requests
argument_list|)
expr_stmt|;
for|for
control|(
name|ByteString
name|region
range|:
name|node
operator|.
name|getRegionsList
argument_list|()
control|)
block|{
name|nodeModel
operator|.
name|addRegion
argument_list|(
name|region
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|String
name|node
range|:
name|builder
operator|.
name|getDeadNodesList
argument_list|()
control|)
block|{
name|addDeadNode
argument_list|(
name|node
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
block|}
end_class

end_unit

