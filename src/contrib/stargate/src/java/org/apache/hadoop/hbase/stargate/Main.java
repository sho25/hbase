begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2009 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|stargate
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|cli
operator|.
name|CommandLine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|cli
operator|.
name|CommandLineParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|cli
operator|.
name|Options
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|cli
operator|.
name|PosixParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|jetty
operator|.
name|Connector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|jetty
operator|.
name|Handler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|jetty
operator|.
name|NCSARequestLog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|jetty
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|jetty
operator|.
name|deployer
operator|.
name|WebAppDeployer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|jetty
operator|.
name|handler
operator|.
name|ContextHandlerCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|jetty
operator|.
name|handler
operator|.
name|DefaultHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|jetty
operator|.
name|handler
operator|.
name|HandlerCollection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|jetty
operator|.
name|handler
operator|.
name|RequestLogHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|jetty
operator|.
name|nio
operator|.
name|SelectChannelConnector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mortbay
operator|.
name|thread
operator|.
name|QueuedThreadPool
import|;
end_import

begin_class
specifier|public
class|class
name|Main
block|{
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
comment|// process command line
name|Options
name|options
init|=
operator|new
name|Options
argument_list|()
decl_stmt|;
name|options
operator|.
name|addOption
argument_list|(
literal|"p"
argument_list|,
literal|"port"
argument_list|,
literal|true
argument_list|,
literal|"service port"
argument_list|)
expr_stmt|;
name|CommandLineParser
name|parser
init|=
operator|new
name|PosixParser
argument_list|()
decl_stmt|;
name|CommandLine
name|cmd
init|=
name|parser
operator|.
name|parse
argument_list|(
name|options
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|int
name|port
init|=
literal|8080
decl_stmt|;
if|if
condition|(
name|cmd
operator|.
name|hasOption
argument_list|(
literal|"p"
argument_list|)
condition|)
block|{
name|port
operator|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|cmd
operator|.
name|getOptionValue
argument_list|(
literal|"p"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|HBaseConfiguration
name|conf
init|=
operator|new
name|HBaseConfiguration
argument_list|()
decl_stmt|;
if|if
condition|(
name|cmd
operator|.
name|hasOption
argument_list|(
literal|"m"
argument_list|)
condition|)
block|{
name|conf
operator|.
name|set
argument_list|(
literal|"hbase.master"
argument_list|,
name|cmd
operator|.
name|getOptionValue
argument_list|(
literal|"m"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/*      * RuntimeMXBean runtime = ManagementFactory.getRuntimeMXBean(); if (runtime      * != null) { LOG.info("vmName=" + runtime.getVmName() + ", vmVendor=" +      * runtime.getVmVendor() + ", vmVersion=" + runtime.getVmVersion());      * LOG.info("vmInputArguments=" + runtime.getInputArguments()); }      */
comment|/*      * poached from:      * http://jetty.mortbay.org/xref/org/mortbay/jetty/example/LikeJettyXml.html      */
name|String
name|jetty_home
init|=
literal|"."
decl_stmt|;
name|Server
name|server
init|=
operator|new
name|Server
argument_list|()
decl_stmt|;
name|QueuedThreadPool
name|threadPool
init|=
operator|new
name|QueuedThreadPool
argument_list|()
decl_stmt|;
name|threadPool
operator|.
name|setMaxThreads
argument_list|(
literal|100
argument_list|)
expr_stmt|;
name|server
operator|.
name|setThreadPool
argument_list|(
name|threadPool
argument_list|)
expr_stmt|;
name|Connector
name|connector
init|=
operator|new
name|SelectChannelConnector
argument_list|()
decl_stmt|;
name|connector
operator|.
name|setPort
argument_list|(
name|port
argument_list|)
expr_stmt|;
name|connector
operator|.
name|setMaxIdleTime
argument_list|(
literal|30000
argument_list|)
expr_stmt|;
name|server
operator|.
name|setConnectors
argument_list|(
operator|new
name|Connector
index|[]
block|{
name|connector
block|}
argument_list|)
expr_stmt|;
name|HandlerCollection
name|handlers
init|=
operator|new
name|HandlerCollection
argument_list|()
decl_stmt|;
name|ContextHandlerCollection
name|contexts
init|=
operator|new
name|ContextHandlerCollection
argument_list|()
decl_stmt|;
name|RequestLogHandler
name|requestLogHandler
init|=
operator|new
name|RequestLogHandler
argument_list|()
decl_stmt|;
name|handlers
operator|.
name|setHandlers
argument_list|(
operator|new
name|Handler
index|[]
block|{
name|contexts
block|,
operator|new
name|DefaultHandler
argument_list|()
block|,
name|requestLogHandler
block|}
argument_list|)
expr_stmt|;
name|server
operator|.
name|setHandler
argument_list|(
name|handlers
argument_list|)
expr_stmt|;
name|WebAppDeployer
name|deployer1
init|=
operator|new
name|WebAppDeployer
argument_list|()
decl_stmt|;
name|deployer1
operator|.
name|setContexts
argument_list|(
name|contexts
argument_list|)
expr_stmt|;
name|deployer1
operator|.
name|setWebAppDir
argument_list|(
name|jetty_home
operator|+
literal|"/webapps"
argument_list|)
expr_stmt|;
name|deployer1
operator|.
name|setParentLoaderPriority
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|deployer1
operator|.
name|setExtract
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|deployer1
operator|.
name|setAllowDuplicates
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// deployer1.setDefaultsDescriptor(jetty_home + "/etc/webdefault.xml");
name|server
operator|.
name|addLifeCycle
argument_list|(
name|deployer1
argument_list|)
expr_stmt|;
name|NCSARequestLog
name|requestLog
init|=
operator|new
name|NCSARequestLog
argument_list|(
name|jetty_home
operator|+
literal|"/logs/jetty-yyyy_mm_dd.log"
argument_list|)
decl_stmt|;
name|requestLog
operator|.
name|setExtended
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|requestLogHandler
operator|.
name|setRequestLog
argument_list|(
name|requestLog
argument_list|)
expr_stmt|;
name|server
operator|.
name|setStopAtShutdown
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|server
operator|.
name|setSendServerVersion
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
name|server
operator|.
name|join
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

