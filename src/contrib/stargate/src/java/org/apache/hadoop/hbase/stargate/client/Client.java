begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2009 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|stargate
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|Header
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|HttpClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|HttpMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|HttpVersion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|MultiThreadedHttpConnectionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|ByteArrayRequestEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|DeleteMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|GetMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|HeadMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|PostMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|methods
operator|.
name|PutMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|params
operator|.
name|HttpClientParams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|params
operator|.
name|HttpConnectionManagerParams
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_class
specifier|public
class|class
name|Client
block|{
specifier|public
specifier|static
specifier|final
name|Header
index|[]
name|EMPTY_HEADER_ARRAY
init|=
operator|new
name|Header
index|[
literal|0
index|]
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|Client
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|HttpClient
name|httpClient
decl_stmt|;
specifier|private
name|Cluster
name|cluster
decl_stmt|;
specifier|public
name|Client
parameter_list|()
block|{
name|this
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Client
parameter_list|(
name|Cluster
name|cluster
parameter_list|)
block|{
name|this
operator|.
name|cluster
operator|=
name|cluster
expr_stmt|;
name|httpClient
operator|=
operator|new
name|HttpClient
argument_list|(
operator|new
name|MultiThreadedHttpConnectionManager
argument_list|()
argument_list|)
expr_stmt|;
name|HttpConnectionManagerParams
name|managerParams
init|=
name|httpClient
operator|.
name|getHttpConnectionManager
argument_list|()
operator|.
name|getParams
argument_list|()
decl_stmt|;
name|managerParams
operator|.
name|setConnectionTimeout
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
comment|// 2 s
name|HttpClientParams
name|clientParams
init|=
name|httpClient
operator|.
name|getParams
argument_list|()
decl_stmt|;
name|clientParams
operator|.
name|setVersion
argument_list|(
name|HttpVersion
operator|.
name|HTTP_1_1
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|shutdown
parameter_list|()
block|{
name|MultiThreadedHttpConnectionManager
name|manager
init|=
operator|(
name|MultiThreadedHttpConnectionManager
operator|)
name|httpClient
operator|.
name|getHttpConnectionManager
argument_list|()
decl_stmt|;
name|manager
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
specifier|public
name|int
name|executePathOnly
parameter_list|(
name|Cluster
name|c
parameter_list|,
name|HttpMethod
name|method
parameter_list|,
name|Header
index|[]
name|headers
parameter_list|,
name|String
name|path
parameter_list|)
throws|throws
name|IOException
block|{
name|IOException
name|lastException
decl_stmt|;
if|if
condition|(
name|c
operator|.
name|nodes
operator|.
name|size
argument_list|()
operator|<
literal|1
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Cluster is empty"
argument_list|)
throw|;
block|}
name|int
name|start
init|=
operator|(
name|int
operator|)
name|Math
operator|.
name|round
argument_list|(
operator|(
name|c
operator|.
name|nodes
operator|.
name|size
argument_list|()
operator|-
literal|1
operator|)
operator|*
name|Math
operator|.
name|random
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|i
init|=
name|start
decl_stmt|;
do|do
block|{
name|c
operator|.
name|lastHost
operator|=
name|c
operator|.
name|nodes
operator|.
name|get
argument_list|(
name|i
argument_list|)
expr_stmt|;
try|try
block|{
name|StringBuffer
name|sb
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"http://"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|c
operator|.
name|lastHost
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|URI
name|uri
init|=
operator|new
name|URI
argument_list|(
name|sb
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|executeURI
argument_list|(
name|method
argument_list|,
name|headers
argument_list|,
name|uri
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|lastException
operator|=
name|e
expr_stmt|;
block|}
block|}
do|while
condition|(
operator|++
name|i
operator|!=
name|start
operator|&&
name|i
operator|<
name|c
operator|.
name|nodes
operator|.
name|size
argument_list|()
condition|)
do|;
throw|throw
name|lastException
throw|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
specifier|public
name|int
name|executeURI
parameter_list|(
name|HttpMethod
name|method
parameter_list|,
name|Header
index|[]
name|headers
parameter_list|,
name|String
name|uri
parameter_list|)
throws|throws
name|IOException
block|{
name|method
operator|.
name|setURI
argument_list|(
operator|new
name|URI
argument_list|(
name|uri
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|headers
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Header
name|header
range|:
name|headers
control|)
block|{
name|method
operator|.
name|addRequestHeader
argument_list|(
name|header
argument_list|)
expr_stmt|;
block|}
block|}
name|long
name|startTime
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|int
name|code
init|=
name|httpClient
operator|.
name|executeMethod
argument_list|(
name|method
argument_list|)
decl_stmt|;
name|long
name|endTime
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
name|method
operator|.
name|getName
argument_list|()
operator|+
literal|" "
operator|+
name|uri
operator|+
literal|": "
operator|+
name|code
operator|+
literal|" "
operator|+
name|method
operator|.
name|getStatusText
argument_list|()
operator|+
literal|" in "
operator|+
operator|(
name|endTime
operator|-
name|startTime
operator|)
operator|+
literal|" ms"
argument_list|)
expr_stmt|;
block|}
return|return
name|code
return|;
block|}
specifier|public
name|int
name|execute
parameter_list|(
name|Cluster
name|c
parameter_list|,
name|HttpMethod
name|method
parameter_list|,
name|Header
index|[]
name|headers
parameter_list|,
name|String
name|path
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|path
operator|.
name|startsWith
argument_list|(
literal|"/"
argument_list|)
condition|)
block|{
return|return
name|executePathOnly
argument_list|(
name|c
argument_list|,
name|method
argument_list|,
name|headers
argument_list|,
name|path
argument_list|)
return|;
block|}
return|return
name|executeURI
argument_list|(
name|method
argument_list|,
name|headers
argument_list|,
name|path
argument_list|)
return|;
block|}
specifier|public
name|Cluster
name|getCluster
parameter_list|()
block|{
return|return
name|cluster
return|;
block|}
specifier|public
name|void
name|setCluster
parameter_list|(
name|Cluster
name|cluster
parameter_list|)
block|{
name|this
operator|.
name|cluster
operator|=
name|cluster
expr_stmt|;
block|}
specifier|public
name|Response
name|head
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|head
argument_list|(
name|cluster
argument_list|,
name|path
argument_list|)
return|;
block|}
specifier|public
name|Response
name|head
parameter_list|(
name|Cluster
name|c
parameter_list|,
name|String
name|path
parameter_list|)
throws|throws
name|IOException
block|{
name|HeadMethod
name|method
init|=
operator|new
name|HeadMethod
argument_list|()
decl_stmt|;
name|int
name|code
init|=
name|execute
argument_list|(
name|c
argument_list|,
name|method
argument_list|,
literal|null
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|Header
index|[]
name|headers
init|=
name|method
operator|.
name|getResponseHeaders
argument_list|()
decl_stmt|;
name|method
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
return|return
operator|new
name|Response
argument_list|(
name|code
argument_list|,
name|headers
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|public
name|Response
name|get
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|get
argument_list|(
name|cluster
argument_list|,
name|path
argument_list|)
return|;
block|}
specifier|public
name|Response
name|get
parameter_list|(
name|Cluster
name|c
parameter_list|,
name|String
name|path
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|get
argument_list|(
name|c
argument_list|,
name|path
argument_list|,
name|EMPTY_HEADER_ARRAY
argument_list|)
return|;
block|}
specifier|public
name|Response
name|get
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|accept
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|get
argument_list|(
name|cluster
argument_list|,
name|path
argument_list|,
name|accept
argument_list|)
return|;
block|}
specifier|public
name|Response
name|get
parameter_list|(
name|Cluster
name|c
parameter_list|,
name|String
name|path
parameter_list|,
name|String
name|accept
parameter_list|)
throws|throws
name|IOException
block|{
name|Header
index|[]
name|headers
init|=
operator|new
name|Header
index|[
literal|1
index|]
decl_stmt|;
name|headers
index|[
literal|0
index|]
operator|=
operator|new
name|Header
argument_list|(
literal|"Accept"
argument_list|,
name|accept
argument_list|)
expr_stmt|;
return|return
name|get
argument_list|(
name|c
argument_list|,
name|path
argument_list|,
name|headers
argument_list|)
return|;
block|}
specifier|public
name|Response
name|get
parameter_list|(
name|String
name|path
parameter_list|,
name|Header
index|[]
name|headers
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|get
argument_list|(
name|cluster
argument_list|,
name|path
argument_list|,
name|headers
argument_list|)
return|;
block|}
specifier|public
name|Response
name|get
parameter_list|(
name|Cluster
name|c
parameter_list|,
name|String
name|path
parameter_list|,
name|Header
index|[]
name|headers
parameter_list|)
throws|throws
name|IOException
block|{
name|GetMethod
name|method
init|=
operator|new
name|GetMethod
argument_list|()
decl_stmt|;
name|int
name|code
init|=
name|execute
argument_list|(
name|c
argument_list|,
name|method
argument_list|,
name|headers
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|headers
operator|=
name|method
operator|.
name|getResponseHeaders
argument_list|()
expr_stmt|;
name|byte
index|[]
name|body
init|=
name|method
operator|.
name|getResponseBody
argument_list|()
decl_stmt|;
name|method
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
return|return
operator|new
name|Response
argument_list|(
name|code
argument_list|,
name|headers
argument_list|,
name|body
argument_list|)
return|;
block|}
specifier|public
name|Response
name|put
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|contentType
parameter_list|,
name|byte
index|[]
name|content
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|put
argument_list|(
name|cluster
argument_list|,
name|path
argument_list|,
name|contentType
argument_list|,
name|content
argument_list|)
return|;
block|}
specifier|public
name|Response
name|put
parameter_list|(
name|Cluster
name|c
parameter_list|,
name|String
name|path
parameter_list|,
name|String
name|contentType
parameter_list|,
name|byte
index|[]
name|content
parameter_list|)
throws|throws
name|IOException
block|{
name|Header
index|[]
name|headers
init|=
operator|new
name|Header
index|[
literal|1
index|]
decl_stmt|;
name|headers
index|[
literal|0
index|]
operator|=
operator|new
name|Header
argument_list|(
literal|"Content-Type"
argument_list|,
name|contentType
argument_list|)
expr_stmt|;
return|return
name|put
argument_list|(
name|c
argument_list|,
name|path
argument_list|,
name|headers
argument_list|,
name|content
argument_list|)
return|;
block|}
specifier|public
name|Response
name|put
parameter_list|(
name|String
name|path
parameter_list|,
name|Header
index|[]
name|headers
parameter_list|,
name|byte
index|[]
name|body
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|put
argument_list|(
name|cluster
argument_list|,
name|path
argument_list|,
name|headers
argument_list|,
name|body
argument_list|)
return|;
block|}
specifier|public
name|Response
name|put
parameter_list|(
name|Cluster
name|c
parameter_list|,
name|String
name|path
parameter_list|,
name|Header
index|[]
name|headers
parameter_list|,
name|byte
index|[]
name|body
parameter_list|)
throws|throws
name|IOException
block|{
name|PutMethod
name|method
init|=
operator|new
name|PutMethod
argument_list|()
decl_stmt|;
name|method
operator|.
name|setRequestEntity
argument_list|(
operator|new
name|ByteArrayRequestEntity
argument_list|(
name|body
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|code
init|=
name|execute
argument_list|(
name|c
argument_list|,
name|method
argument_list|,
name|headers
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|headers
operator|=
name|method
operator|.
name|getResponseHeaders
argument_list|()
expr_stmt|;
name|body
operator|=
name|method
operator|.
name|getResponseBody
argument_list|()
expr_stmt|;
name|method
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
return|return
operator|new
name|Response
argument_list|(
name|code
argument_list|,
name|headers
argument_list|,
name|body
argument_list|)
return|;
block|}
specifier|public
name|Response
name|post
parameter_list|(
name|String
name|path
parameter_list|,
name|String
name|contentType
parameter_list|,
name|byte
index|[]
name|content
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|post
argument_list|(
name|cluster
argument_list|,
name|path
argument_list|,
name|contentType
argument_list|,
name|content
argument_list|)
return|;
block|}
specifier|public
name|Response
name|post
parameter_list|(
name|Cluster
name|c
parameter_list|,
name|String
name|path
parameter_list|,
name|String
name|contentType
parameter_list|,
name|byte
index|[]
name|content
parameter_list|)
throws|throws
name|IOException
block|{
name|Header
index|[]
name|headers
init|=
operator|new
name|Header
index|[
literal|1
index|]
decl_stmt|;
name|headers
index|[
literal|0
index|]
operator|=
operator|new
name|Header
argument_list|(
literal|"Content-Type"
argument_list|,
name|contentType
argument_list|)
expr_stmt|;
return|return
name|post
argument_list|(
name|c
argument_list|,
name|path
argument_list|,
name|headers
argument_list|,
name|content
argument_list|)
return|;
block|}
specifier|public
name|Response
name|post
parameter_list|(
name|String
name|path
parameter_list|,
name|Header
index|[]
name|headers
parameter_list|,
name|byte
index|[]
name|content
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|post
argument_list|(
name|cluster
argument_list|,
name|path
argument_list|,
name|headers
argument_list|,
name|content
argument_list|)
return|;
block|}
specifier|public
name|Response
name|post
parameter_list|(
name|Cluster
name|c
parameter_list|,
name|String
name|path
parameter_list|,
name|Header
index|[]
name|headers
parameter_list|,
name|byte
index|[]
name|content
parameter_list|)
throws|throws
name|IOException
block|{
name|PostMethod
name|method
init|=
operator|new
name|PostMethod
argument_list|()
decl_stmt|;
name|method
operator|.
name|setRequestEntity
argument_list|(
operator|new
name|ByteArrayRequestEntity
argument_list|(
name|content
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|code
init|=
name|execute
argument_list|(
name|c
argument_list|,
name|method
argument_list|,
name|headers
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|headers
operator|=
name|method
operator|.
name|getResponseHeaders
argument_list|()
expr_stmt|;
name|content
operator|=
name|method
operator|.
name|getResponseBody
argument_list|()
expr_stmt|;
name|method
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
return|return
operator|new
name|Response
argument_list|(
name|code
argument_list|,
name|headers
argument_list|,
name|content
argument_list|)
return|;
block|}
specifier|public
name|Response
name|delete
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|delete
argument_list|(
name|cluster
argument_list|,
name|path
argument_list|)
return|;
block|}
specifier|public
name|Response
name|delete
parameter_list|(
name|Cluster
name|c
parameter_list|,
name|String
name|path
parameter_list|)
throws|throws
name|IOException
block|{
name|DeleteMethod
name|method
init|=
operator|new
name|DeleteMethod
argument_list|()
decl_stmt|;
name|int
name|code
init|=
name|execute
argument_list|(
name|c
argument_list|,
name|method
argument_list|,
literal|null
argument_list|,
name|path
argument_list|)
decl_stmt|;
name|Header
index|[]
name|headers
init|=
name|method
operator|.
name|getResponseHeaders
argument_list|()
decl_stmt|;
name|method
operator|.
name|releaseConnection
argument_list|()
expr_stmt|;
return|return
operator|new
name|Response
argument_list|(
name|code
argument_list|,
name|headers
argument_list|)
return|;
block|}
block|}
end_class

end_unit

