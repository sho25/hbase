begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright 2008 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|transactional
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicBoolean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|Chore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|HRegion
import|;
end_import

begin_comment
comment|/**  * Cleans up committed transactions when they are no longer needed to verify  * pending transactions.  */
end_comment

begin_class
class|class
name|CleanOldTransactionsChore
extends|extends
name|Chore
block|{
specifier|private
specifier|static
specifier|final
name|String
name|SLEEP_CONF
init|=
literal|"hbase.transaction.clean.sleep"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|DEFAULT_SLEEP
init|=
literal|60
operator|*
literal|1000
decl_stmt|;
specifier|private
specifier|final
name|TransactionalRegionServer
name|regionServer
decl_stmt|;
comment|/**    * @param regionServer    * @param stopRequest    */
specifier|public
name|CleanOldTransactionsChore
parameter_list|(
specifier|final
name|TransactionalRegionServer
name|regionServer
parameter_list|,
specifier|final
name|AtomicBoolean
name|stopRequest
parameter_list|)
block|{
name|super
argument_list|(
name|regionServer
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getInt
argument_list|(
name|SLEEP_CONF
argument_list|,
name|DEFAULT_SLEEP
argument_list|)
argument_list|,
name|stopRequest
argument_list|)
expr_stmt|;
name|this
operator|.
name|regionServer
operator|=
name|regionServer
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|chore
parameter_list|()
block|{
for|for
control|(
name|HRegion
name|region
range|:
name|regionServer
operator|.
name|getOnlineRegions
argument_list|()
control|)
block|{
operator|(
operator|(
name|TransactionalRegion
operator|)
name|region
operator|)
operator|.
name|removeUnNeededCommitedTransactions
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

