begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
operator|.
name|NORMAL_QOS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
operator|.
name|SYSTEMTABLE_QOS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|NamespaceDescriptor
operator|.
name|SYSTEM_NAMESPACE_NAME_STR
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anyInt
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|anyLong
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|argThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|atLeast
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doAnswer
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CompletableFuture
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicInteger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|Cell
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|Cell
operator|.
name|Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|CellBuilderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|CellBuilderType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseClassTestRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HRegionLocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ServerName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ipc
operator|.
name|HBaseRpcController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|UserProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|ClientTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|MediumTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|ClassRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|invocation
operator|.
name|InvocationOnMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|stubbing
operator|.
name|Answer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RpcCallback
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|ProtobufUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|ClientService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|GetRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|GetResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|MutateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|MutateResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|MutationProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|MutationProto
operator|.
name|ColumnValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|MutationProto
operator|.
name|ColumnValue
operator|.
name|QualifierValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|RegionActionResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|ResultOrException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|ScanRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|ScanResponse
import|;
end_import

begin_comment
comment|/**  * Confirm that we will set the priority in {@link HBaseRpcController} for several table operations.  */
end_comment

begin_class
annotation|@
name|Category
argument_list|(
block|{
name|ClientTests
operator|.
name|class
block|,
name|MediumTests
operator|.
name|class
block|}
argument_list|)
specifier|public
class|class
name|TestAsyncTableRpcPriority
block|{
annotation|@
name|ClassRule
specifier|public
specifier|static
specifier|final
name|HBaseClassTestRule
name|CLASS_RULE
init|=
name|HBaseClassTestRule
operator|.
name|forClass
argument_list|(
name|TestAsyncTableRpcPriority
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|Configuration
name|CONF
init|=
name|HBaseConfiguration
operator|.
name|create
argument_list|()
decl_stmt|;
specifier|private
name|ClientService
operator|.
name|Interface
name|stub
decl_stmt|;
specifier|private
name|AsyncConnection
name|conn
decl_stmt|;
annotation|@
name|Rule
specifier|public
name|TestName
name|name
init|=
operator|new
name|TestName
argument_list|()
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|IOException
block|{
name|stub
operator|=
name|mock
argument_list|(
name|ClientService
operator|.
name|Interface
operator|.
name|class
argument_list|)
expr_stmt|;
name|AtomicInteger
name|scanNextCalled
init|=
operator|new
name|AtomicInteger
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|doAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|Void
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Void
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|ScanRequest
name|req
init|=
name|invocation
operator|.
name|getArgument
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|RpcCallback
argument_list|<
name|ScanResponse
argument_list|>
name|done
init|=
name|invocation
operator|.
name|getArgument
argument_list|(
literal|2
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|req
operator|.
name|hasScannerId
argument_list|()
condition|)
block|{
name|done
operator|.
name|run
argument_list|(
name|ScanResponse
operator|.
name|newBuilder
argument_list|()
operator|.
name|setScannerId
argument_list|(
literal|1
argument_list|)
operator|.
name|setTtl
argument_list|(
literal|800
argument_list|)
operator|.
name|setMoreResultsInRegion
argument_list|(
literal|true
argument_list|)
operator|.
name|setMoreResults
argument_list|(
literal|true
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|req
operator|.
name|hasCloseScanner
argument_list|()
operator|&&
name|req
operator|.
name|getCloseScanner
argument_list|()
condition|)
block|{
name|done
operator|.
name|run
argument_list|(
name|ScanResponse
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Cell
name|cell
init|=
name|CellBuilderFactory
operator|.
name|create
argument_list|(
name|CellBuilderType
operator|.
name|SHALLOW_COPY
argument_list|)
operator|.
name|setType
argument_list|(
name|Type
operator|.
name|Put
argument_list|)
operator|.
name|setRow
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|scanNextCalled
operator|.
name|incrementAndGet
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setFamily
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|)
operator|.
name|setQualifier
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|)
operator|.
name|setValue
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"v"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Result
name|result
init|=
name|Result
operator|.
name|create
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|cell
argument_list|)
argument_list|)
decl_stmt|;
name|done
operator|.
name|run
argument_list|(
name|ScanResponse
operator|.
name|newBuilder
argument_list|()
operator|.
name|setScannerId
argument_list|(
literal|1
argument_list|)
operator|.
name|setTtl
argument_list|(
literal|800
argument_list|)
operator|.
name|setMoreResultsInRegion
argument_list|(
literal|true
argument_list|)
operator|.
name|setMoreResults
argument_list|(
literal|true
argument_list|)
operator|.
name|addResults
argument_list|(
name|ProtobufUtil
operator|.
name|toResult
argument_list|(
name|result
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|return
literal|null
return|;
block|}
block|}
argument_list|)
operator|.
name|when
argument_list|(
name|stub
argument_list|)
operator|.
name|scan
argument_list|(
name|any
argument_list|(
name|HBaseRpcController
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|ScanRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
name|doAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|Void
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Void
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|ClientProtos
operator|.
name|MultiResponse
name|resp
init|=
name|ClientProtos
operator|.
name|MultiResponse
operator|.
name|newBuilder
argument_list|()
operator|.
name|addRegionActionResult
argument_list|(
name|RegionActionResult
operator|.
name|newBuilder
argument_list|()
operator|.
name|addResultOrException
argument_list|(
name|ResultOrException
operator|.
name|newBuilder
argument_list|()
operator|.
name|setResult
argument_list|(
name|ProtobufUtil
operator|.
name|toResult
argument_list|(
operator|new
name|Result
argument_list|()
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|RpcCallback
argument_list|<
name|ClientProtos
operator|.
name|MultiResponse
argument_list|>
name|done
init|=
name|invocation
operator|.
name|getArgument
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|done
operator|.
name|run
argument_list|(
name|resp
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
argument_list|)
operator|.
name|when
argument_list|(
name|stub
argument_list|)
operator|.
name|multi
argument_list|(
name|any
argument_list|(
name|HBaseRpcController
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|ClientProtos
operator|.
name|MultiRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
name|doAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|Void
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Void
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|MutationProto
name|req
init|=
operator|(
operator|(
name|MutateRequest
operator|)
name|invocation
operator|.
name|getArgument
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getMutation
argument_list|()
decl_stmt|;
name|MutateResponse
name|resp
decl_stmt|;
switch|switch
condition|(
name|req
operator|.
name|getMutateType
argument_list|()
condition|)
block|{
case|case
name|INCREMENT
case|:
name|ColumnValue
name|value
init|=
name|req
operator|.
name|getColumnValue
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|QualifierValue
name|qvalue
init|=
name|value
operator|.
name|getQualifierValue
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Cell
name|cell
init|=
name|CellBuilderFactory
operator|.
name|create
argument_list|(
name|CellBuilderType
operator|.
name|SHALLOW_COPY
argument_list|)
operator|.
name|setType
argument_list|(
name|Type
operator|.
name|Put
argument_list|)
operator|.
name|setRow
argument_list|(
name|req
operator|.
name|getRow
argument_list|()
operator|.
name|toByteArray
argument_list|()
argument_list|)
operator|.
name|setFamily
argument_list|(
name|value
operator|.
name|getFamily
argument_list|()
operator|.
name|toByteArray
argument_list|()
argument_list|)
operator|.
name|setQualifier
argument_list|(
name|qvalue
operator|.
name|getQualifier
argument_list|()
operator|.
name|toByteArray
argument_list|()
argument_list|)
operator|.
name|setValue
argument_list|(
name|qvalue
operator|.
name|getValue
argument_list|()
operator|.
name|toByteArray
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|resp
operator|=
name|MutateResponse
operator|.
name|newBuilder
argument_list|()
operator|.
name|setResult
argument_list|(
name|ProtobufUtil
operator|.
name|toResult
argument_list|(
name|Result
operator|.
name|create
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|cell
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
break|break;
default|default:
name|resp
operator|=
name|MutateResponse
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
break|break;
block|}
name|RpcCallback
argument_list|<
name|MutateResponse
argument_list|>
name|done
init|=
name|invocation
operator|.
name|getArgument
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|done
operator|.
name|run
argument_list|(
name|resp
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
argument_list|)
operator|.
name|when
argument_list|(
name|stub
argument_list|)
operator|.
name|mutate
argument_list|(
name|any
argument_list|(
name|HBaseRpcController
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
name|doAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|Void
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Void
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|RpcCallback
argument_list|<
name|GetResponse
argument_list|>
name|done
init|=
name|invocation
operator|.
name|getArgument
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|done
operator|.
name|run
argument_list|(
name|GetResponse
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
argument_list|)
operator|.
name|when
argument_list|(
name|stub
argument_list|)
operator|.
name|get
argument_list|(
name|any
argument_list|(
name|HBaseRpcController
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|GetRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
name|conn
operator|=
operator|new
name|AsyncConnectionImpl
argument_list|(
name|CONF
argument_list|,
operator|new
name|DoNothingAsyncRegistry
argument_list|(
name|CONF
argument_list|)
argument_list|,
literal|"test"
argument_list|,
literal|null
argument_list|,
name|UserProvider
operator|.
name|instantiate
argument_list|(
name|CONF
argument_list|)
operator|.
name|getCurrent
argument_list|()
argument_list|)
block|{
annotation|@
name|Override
name|AsyncRegionLocator
name|getLocator
parameter_list|()
block|{
name|AsyncRegionLocator
name|locator
init|=
name|mock
argument_list|(
name|AsyncRegionLocator
operator|.
name|class
argument_list|)
decl_stmt|;
name|Answer
argument_list|<
name|CompletableFuture
argument_list|<
name|HRegionLocation
argument_list|>
argument_list|>
name|answer
init|=
operator|new
name|Answer
argument_list|<
name|CompletableFuture
argument_list|<
name|HRegionLocation
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|CompletableFuture
argument_list|<
name|HRegionLocation
argument_list|>
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|TableName
name|tableName
init|=
name|invocation
operator|.
name|getArgument
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|RegionInfo
name|info
init|=
name|RegionInfoBuilder
operator|.
name|newBuilder
argument_list|(
name|tableName
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ServerName
name|serverName
init|=
name|ServerName
operator|.
name|valueOf
argument_list|(
literal|"rs"
argument_list|,
literal|16010
argument_list|,
literal|12345
argument_list|)
decl_stmt|;
name|HRegionLocation
name|loc
init|=
operator|new
name|HRegionLocation
argument_list|(
name|info
argument_list|,
name|serverName
argument_list|)
decl_stmt|;
return|return
name|CompletableFuture
operator|.
name|completedFuture
argument_list|(
name|loc
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|doAnswer
argument_list|(
name|answer
argument_list|)
operator|.
name|when
argument_list|(
name|locator
argument_list|)
operator|.
name|getRegionLocation
argument_list|(
name|any
argument_list|(
name|TableName
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|byte
index|[]
operator|.
expr|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|RegionLocateType
operator|.
name|class
argument_list|)
argument_list|,
name|anyLong
argument_list|()
argument_list|)
expr_stmt|;
name|doAnswer
argument_list|(
name|answer
argument_list|)
operator|.
name|when
argument_list|(
name|locator
argument_list|)
operator|.
name|getRegionLocation
argument_list|(
name|any
argument_list|(
name|TableName
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|byte
index|[]
operator|.
expr|class
argument_list|)
argument_list|,
name|anyInt
argument_list|()
argument_list|,
name|any
argument_list|(
name|RegionLocateType
operator|.
name|class
argument_list|)
argument_list|,
name|anyLong
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|locator
return|;
block|}
annotation|@
name|Override
name|ClientService
operator|.
name|Interface
name|getRegionServerStub
parameter_list|(
name|ServerName
name|serverName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|stub
return|;
block|}
block|}
expr_stmt|;
block|}
specifier|private
name|HBaseRpcController
name|assertPriority
parameter_list|(
name|int
name|priority
parameter_list|)
block|{
return|return
name|argThat
argument_list|(
operator|new
name|ArgumentMatcher
argument_list|<
name|HBaseRpcController
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|matches
parameter_list|(
name|HBaseRpcController
name|controller
parameter_list|)
block|{
return|return
name|controller
operator|.
name|getPriority
argument_list|()
operator|==
name|priority
return|;
block|}
block|}
argument_list|)
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGet
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|get
argument_list|(
operator|new
name|Get
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|setPriority
argument_list|(
literal|11
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|get
argument_list|(
name|assertPriority
argument_list|(
literal|11
argument_list|)
argument_list|,
name|any
argument_list|(
name|GetRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetNormalTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|get
argument_list|(
operator|new
name|Get
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|get
argument_list|(
name|assertPriority
argument_list|(
name|NORMAL_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|GetRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetSystemTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|SYSTEM_NAMESPACE_NAME_STR
argument_list|,
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|get
argument_list|(
operator|new
name|Get
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|get
argument_list|(
name|assertPriority
argument_list|(
name|SYSTEMTABLE_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|GetRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetMetaTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|META_TABLE_NAME
argument_list|)
operator|.
name|get
argument_list|(
operator|new
name|Get
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|get
argument_list|(
name|assertPriority
argument_list|(
name|SYSTEMTABLE_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|GetRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPut
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
operator|new
name|Put
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|setPriority
argument_list|(
literal|12
argument_list|)
operator|.
name|addColumn
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"v"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
literal|12
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPutNormalTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
operator|new
name|Put
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|addColumn
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"v"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
name|NORMAL_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPutSystemTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|SYSTEM_NAMESPACE_NAME_STR
argument_list|,
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|put
argument_list|(
operator|new
name|Put
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|addColumn
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"v"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
name|SYSTEMTABLE_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPutMetaTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|META_TABLE_NAME
argument_list|)
operator|.
name|put
argument_list|(
operator|new
name|Put
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|addColumn
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"v"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
name|SYSTEMTABLE_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDelete
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|delete
argument_list|(
operator|new
name|Delete
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|setPriority
argument_list|(
literal|13
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
literal|13
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeleteNormalTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|delete
argument_list|(
operator|new
name|Delete
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
name|NORMAL_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeleteSystemTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|SYSTEM_NAMESPACE_NAME_STR
argument_list|,
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|delete
argument_list|(
operator|new
name|Delete
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
name|SYSTEMTABLE_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeleteMetaTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|META_TABLE_NAME
argument_list|)
operator|.
name|delete
argument_list|(
operator|new
name|Delete
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
name|SYSTEMTABLE_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAppend
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|append
argument_list|(
operator|new
name|Append
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|setPriority
argument_list|(
literal|14
argument_list|)
operator|.
name|addColumn
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"v"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
literal|14
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAppendNormalTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|append
argument_list|(
operator|new
name|Append
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|addColumn
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"v"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
name|NORMAL_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAppendSystemTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|SYSTEM_NAMESPACE_NAME_STR
argument_list|,
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|append
argument_list|(
operator|new
name|Append
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|addColumn
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"v"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
name|SYSTEMTABLE_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAppendMetaTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|META_TABLE_NAME
argument_list|)
operator|.
name|append
argument_list|(
operator|new
name|Append
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|addColumn
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"v"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
name|SYSTEMTABLE_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIncrement
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|increment
argument_list|(
operator|new
name|Increment
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|addColumn
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|,
literal|1
argument_list|)
operator|.
name|setPriority
argument_list|(
literal|15
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
literal|15
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIncrementNormalTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|incrementColumnValue
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|,
literal|1
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
name|NORMAL_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIncrementSystemTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|SYSTEM_NAMESPACE_NAME_STR
argument_list|,
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|incrementColumnValue
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|,
literal|1
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
name|SYSTEMTABLE_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIncrementMetaTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|META_TABLE_NAME
argument_list|)
operator|.
name|incrementColumnValue
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|,
literal|1
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
name|SYSTEMTABLE_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCheckAndPut
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|checkAndMutate
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|)
operator|.
name|qualifier
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|)
operator|.
name|ifNotExists
argument_list|()
operator|.
name|thenPut
argument_list|(
operator|new
name|Put
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|addColumn
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"v"
argument_list|)
argument_list|)
operator|.
name|setPriority
argument_list|(
literal|16
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
literal|16
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCheckAndPutNormalTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|checkAndMutate
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|)
operator|.
name|qualifier
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|)
operator|.
name|ifNotExists
argument_list|()
operator|.
name|thenPut
argument_list|(
operator|new
name|Put
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|addColumn
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"v"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
name|NORMAL_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCheckAndPutSystemTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|SYSTEM_NAMESPACE_NAME_STR
argument_list|,
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|checkAndMutate
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|)
operator|.
name|qualifier
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|)
operator|.
name|ifNotExists
argument_list|()
operator|.
name|thenPut
argument_list|(
operator|new
name|Put
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|addColumn
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"v"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
name|SYSTEMTABLE_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCheckAndPutMetaTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|META_TABLE_NAME
argument_list|)
operator|.
name|checkAndMutate
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|)
operator|.
name|qualifier
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|)
operator|.
name|ifNotExists
argument_list|()
operator|.
name|thenPut
argument_list|(
operator|new
name|Put
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|addColumn
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"v"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
name|SYSTEMTABLE_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCheckAndDelete
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|checkAndMutate
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|)
operator|.
name|qualifier
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|)
operator|.
name|ifEquals
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"v"
argument_list|)
argument_list|)
operator|.
name|thenDelete
argument_list|(
operator|new
name|Delete
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|setPriority
argument_list|(
literal|17
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
literal|17
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCheckAndDeleteNormalTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|checkAndMutate
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|)
operator|.
name|qualifier
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|)
operator|.
name|ifEquals
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"v"
argument_list|)
argument_list|)
operator|.
name|thenDelete
argument_list|(
operator|new
name|Delete
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
name|NORMAL_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCheckAndDeleteSystemTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|SYSTEM_NAMESPACE_NAME_STR
argument_list|,
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|checkAndMutate
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|)
operator|.
name|qualifier
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|)
operator|.
name|ifEquals
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"v"
argument_list|)
argument_list|)
operator|.
name|thenDelete
argument_list|(
operator|new
name|Delete
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
name|SYSTEMTABLE_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCheckAndDeleteMetaTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|META_TABLE_NAME
argument_list|)
operator|.
name|checkAndMutate
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|)
operator|.
name|qualifier
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|)
operator|.
name|ifNotExists
argument_list|()
operator|.
name|thenPut
argument_list|(
operator|new
name|Put
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|addColumn
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"v"
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|mutate
argument_list|(
name|assertPriority
argument_list|(
name|SYSTEMTABLE_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|MutateRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCheckAndMutate
parameter_list|()
throws|throws
name|IOException
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|checkAndMutate
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|)
operator|.
name|qualifier
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|)
operator|.
name|ifEquals
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"v"
argument_list|)
argument_list|)
operator|.
name|thenMutate
argument_list|(
operator|new
name|RowMutations
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|(
name|Mutation
operator|)
operator|new
name|Delete
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|setPriority
argument_list|(
literal|18
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|multi
argument_list|(
name|assertPriority
argument_list|(
literal|18
argument_list|)
argument_list|,
name|any
argument_list|(
name|ClientProtos
operator|.
name|MultiRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCheckAndMutateNormalTable
parameter_list|()
throws|throws
name|IOException
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|checkAndMutate
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|)
operator|.
name|qualifier
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|)
operator|.
name|ifEquals
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"v"
argument_list|)
argument_list|)
operator|.
name|thenMutate
argument_list|(
operator|new
name|RowMutations
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|(
name|Mutation
operator|)
operator|new
name|Delete
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|multi
argument_list|(
name|assertPriority
argument_list|(
name|NORMAL_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|ClientProtos
operator|.
name|MultiRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCheckAndMutateSystemTable
parameter_list|()
throws|throws
name|IOException
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|SYSTEM_NAMESPACE_NAME_STR
argument_list|,
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|checkAndMutate
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|)
operator|.
name|qualifier
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|)
operator|.
name|ifEquals
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"v"
argument_list|)
argument_list|)
operator|.
name|thenMutate
argument_list|(
operator|new
name|RowMutations
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|(
name|Mutation
operator|)
operator|new
name|Delete
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|multi
argument_list|(
name|assertPriority
argument_list|(
name|SYSTEMTABLE_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|ClientProtos
operator|.
name|MultiRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCheckAndMutateMetaTable
parameter_list|()
throws|throws
name|IOException
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|META_TABLE_NAME
argument_list|)
operator|.
name|checkAndMutate
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cf"
argument_list|)
argument_list|)
operator|.
name|qualifier
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"cq"
argument_list|)
argument_list|)
operator|.
name|ifEquals
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"v"
argument_list|)
argument_list|)
operator|.
name|thenMutate
argument_list|(
operator|new
name|RowMutations
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|(
name|Mutation
operator|)
operator|new
name|Delete
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|multi
argument_list|(
name|assertPriority
argument_list|(
name|SYSTEMTABLE_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|ClientProtos
operator|.
name|MultiRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testScan
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
try|try
init|(
name|ResultScanner
name|scanner
init|=
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|getScanner
argument_list|(
operator|new
name|Scan
argument_list|()
operator|.
name|setCaching
argument_list|(
literal|1
argument_list|)
operator|.
name|setMaxResultSize
argument_list|(
literal|1
argument_list|)
operator|.
name|setPriority
argument_list|(
literal|19
argument_list|)
argument_list|)
init|)
block|{
name|assertNotNull
argument_list|(
name|scanner
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
block|}
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
comment|// open, next, several renew lease, and then close
name|verify
argument_list|(
name|stub
argument_list|,
name|atLeast
argument_list|(
literal|4
argument_list|)
argument_list|)
operator|.
name|scan
argument_list|(
name|assertPriority
argument_list|(
literal|19
argument_list|)
argument_list|,
name|any
argument_list|(
name|ScanRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testScanNormalTable
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
try|try
init|(
name|ResultScanner
name|scanner
init|=
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|getScanner
argument_list|(
operator|new
name|Scan
argument_list|()
operator|.
name|setCaching
argument_list|(
literal|1
argument_list|)
operator|.
name|setMaxResultSize
argument_list|(
literal|1
argument_list|)
argument_list|)
init|)
block|{
name|assertNotNull
argument_list|(
name|scanner
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
block|}
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
comment|// open, next, several renew lease, and then close
name|verify
argument_list|(
name|stub
argument_list|,
name|atLeast
argument_list|(
literal|4
argument_list|)
argument_list|)
operator|.
name|scan
argument_list|(
name|assertPriority
argument_list|(
name|NORMAL_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|ScanRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testScanSystemTable
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
try|try
init|(
name|ResultScanner
name|scanner
init|=
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|SYSTEM_NAMESPACE_NAME_STR
argument_list|,
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|getScanner
argument_list|(
operator|new
name|Scan
argument_list|()
operator|.
name|setCaching
argument_list|(
literal|1
argument_list|)
operator|.
name|setMaxResultSize
argument_list|(
literal|1
argument_list|)
argument_list|)
init|)
block|{
name|assertNotNull
argument_list|(
name|scanner
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
block|}
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
comment|// open, next, several renew lease, and then close
name|verify
argument_list|(
name|stub
argument_list|,
name|atLeast
argument_list|(
literal|4
argument_list|)
argument_list|)
operator|.
name|scan
argument_list|(
name|assertPriority
argument_list|(
name|SYSTEMTABLE_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|ScanRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testScanMetaTable
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
try|try
init|(
name|ResultScanner
name|scanner
init|=
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|META_TABLE_NAME
argument_list|)
operator|.
name|getScanner
argument_list|(
operator|new
name|Scan
argument_list|()
operator|.
name|setCaching
argument_list|(
literal|1
argument_list|)
operator|.
name|setMaxResultSize
argument_list|(
literal|1
argument_list|)
argument_list|)
init|)
block|{
name|assertNotNull
argument_list|(
name|scanner
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
block|}
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
comment|// open, next, several renew lease, and then close
name|verify
argument_list|(
name|stub
argument_list|,
name|atLeast
argument_list|(
literal|4
argument_list|)
argument_list|)
operator|.
name|scan
argument_list|(
name|assertPriority
argument_list|(
name|SYSTEMTABLE_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|ScanRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBatchNormalTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|batchAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|Delete
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|multi
argument_list|(
name|assertPriority
argument_list|(
name|NORMAL_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|ClientProtos
operator|.
name|MultiRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBatchSystemTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|SYSTEM_NAMESPACE_NAME_STR
argument_list|,
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
operator|.
name|batchAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|Delete
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|multi
argument_list|(
name|assertPriority
argument_list|(
name|SYSTEMTABLE_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|ClientProtos
operator|.
name|MultiRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBatchMetaTable
parameter_list|()
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|TableName
operator|.
name|META_TABLE_NAME
argument_list|)
operator|.
name|batchAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|Delete
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|0
argument_list|)
argument_list|)
argument_list|)
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|stub
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|multi
argument_list|(
name|assertPriority
argument_list|(
name|SYSTEMTABLE_QOS
argument_list|)
argument_list|,
name|any
argument_list|(
name|ClientProtos
operator|.
name|MultiRequest
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

