begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|quotas
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|ProtobufUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|SetQuotaRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|QuotaProtos
operator|.
name|SpaceLimitRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|QuotaProtos
operator|.
name|SpaceQuota
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|SmallTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_comment
comment|/**  * Test class for {@link SpaceLimitSettings}.  */
end_comment

begin_class
annotation|@
name|Category
argument_list|(
block|{
name|SmallTests
operator|.
name|class
block|}
argument_list|)
specifier|public
class|class
name|TestSpaceLimitSettings
block|{
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testInvalidTableQuotaSizeLimit
parameter_list|()
block|{
operator|new
name|SpaceLimitSettings
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
operator|-
literal|1
argument_list|,
name|SpaceViolationPolicy
operator|.
name|NO_INSERTS
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NullPointerException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testNullTableName
parameter_list|()
block|{
name|TableName
name|tn
init|=
literal|null
decl_stmt|;
operator|new
name|SpaceLimitSettings
argument_list|(
name|tn
argument_list|,
literal|1
argument_list|,
name|SpaceViolationPolicy
operator|.
name|NO_INSERTS
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NullPointerException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testNullTableViolationPolicy
parameter_list|()
block|{
operator|new
name|SpaceLimitSettings
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"foo"
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testInvalidNamespaceQuotaSizeLimit
parameter_list|()
block|{
operator|new
name|SpaceLimitSettings
argument_list|(
literal|"foo_ns"
argument_list|,
operator|-
literal|1
argument_list|,
name|SpaceViolationPolicy
operator|.
name|NO_INSERTS
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NullPointerException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testNullNamespace
parameter_list|()
block|{
name|String
name|ns
init|=
literal|null
decl_stmt|;
operator|new
name|SpaceLimitSettings
argument_list|(
name|ns
argument_list|,
literal|1
argument_list|,
name|SpaceViolationPolicy
operator|.
name|NO_INSERTS
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NullPointerException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testNullNamespaceViolationPolicy
parameter_list|()
block|{
operator|new
name|SpaceLimitSettings
argument_list|(
literal|"foo_ns"
argument_list|,
literal|1
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTableQuota
parameter_list|()
block|{
specifier|final
name|TableName
name|tableName
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
specifier|final
name|long
name|sizeLimit
init|=
literal|1024
operator|*
literal|1024
decl_stmt|;
specifier|final
name|SpaceViolationPolicy
name|policy
init|=
name|SpaceViolationPolicy
operator|.
name|NO_WRITES
decl_stmt|;
name|SpaceLimitSettings
name|settings
init|=
operator|new
name|SpaceLimitSettings
argument_list|(
name|tableName
argument_list|,
name|sizeLimit
argument_list|,
name|policy
argument_list|)
decl_stmt|;
name|SetQuotaRequest
name|proto
init|=
name|QuotaSettings
operator|.
name|buildSetQuotaRequestProto
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
literal|"User should be missing"
argument_list|,
name|proto
operator|.
name|hasUserName
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Namespace should be missing"
argument_list|,
name|proto
operator|.
name|hasNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ProtobufUtil
operator|.
name|toProtoTableName
argument_list|(
name|tableName
argument_list|)
argument_list|,
name|proto
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
name|SpaceLimitRequest
name|spaceLimitReq
init|=
name|proto
operator|.
name|getSpaceLimit
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"SpaceLimitRequest was null"
argument_list|,
name|spaceLimitReq
argument_list|)
expr_stmt|;
name|SpaceQuota
name|spaceQuota
init|=
name|spaceLimitReq
operator|.
name|getQuota
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"SpaceQuota was null"
argument_list|,
name|spaceQuota
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|sizeLimit
argument_list|,
name|spaceQuota
operator|.
name|getSoftLimit
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ProtobufUtil
operator|.
name|toProtoViolationPolicy
argument_list|(
name|policy
argument_list|)
argument_list|,
name|spaceQuota
operator|.
name|getViolationPolicy
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|QuotaType
operator|.
name|SPACE
argument_list|,
name|settings
operator|.
name|getQuotaType
argument_list|()
argument_list|)
expr_stmt|;
name|SpaceLimitSettings
name|copy
init|=
operator|new
name|SpaceLimitSettings
argument_list|(
name|tableName
argument_list|,
name|sizeLimit
argument_list|,
name|policy
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|settings
argument_list|,
name|copy
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|settings
operator|.
name|hashCode
argument_list|()
argument_list|,
name|copy
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNamespaceQuota
parameter_list|()
block|{
specifier|final
name|String
name|namespace
init|=
literal|"foo_ns"
decl_stmt|;
specifier|final
name|long
name|sizeLimit
init|=
literal|1024
operator|*
literal|1024
decl_stmt|;
specifier|final
name|SpaceViolationPolicy
name|policy
init|=
name|SpaceViolationPolicy
operator|.
name|NO_WRITES
decl_stmt|;
name|SpaceLimitSettings
name|settings
init|=
operator|new
name|SpaceLimitSettings
argument_list|(
name|namespace
argument_list|,
name|sizeLimit
argument_list|,
name|policy
argument_list|)
decl_stmt|;
name|SetQuotaRequest
name|proto
init|=
name|QuotaSettings
operator|.
name|buildSetQuotaRequestProto
argument_list|(
name|settings
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
literal|"User should be missing"
argument_list|,
name|proto
operator|.
name|hasUserName
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"TableName should be missing"
argument_list|,
name|proto
operator|.
name|hasTableName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|namespace
argument_list|,
name|proto
operator|.
name|getNamespace
argument_list|()
argument_list|)
expr_stmt|;
name|SpaceLimitRequest
name|spaceLimitReq
init|=
name|proto
operator|.
name|getSpaceLimit
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"SpaceLimitRequest was null"
argument_list|,
name|spaceLimitReq
argument_list|)
expr_stmt|;
name|SpaceQuota
name|spaceQuota
init|=
name|spaceLimitReq
operator|.
name|getQuota
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
literal|"SpaceQuota was null"
argument_list|,
name|spaceQuota
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|sizeLimit
argument_list|,
name|spaceQuota
operator|.
name|getSoftLimit
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ProtobufUtil
operator|.
name|toProtoViolationPolicy
argument_list|(
name|policy
argument_list|)
argument_list|,
name|spaceQuota
operator|.
name|getViolationPolicy
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|QuotaType
operator|.
name|SPACE
argument_list|,
name|settings
operator|.
name|getQuotaType
argument_list|()
argument_list|)
expr_stmt|;
name|SpaceLimitSettings
name|copy
init|=
operator|new
name|SpaceLimitSettings
argument_list|(
name|namespace
argument_list|,
name|sizeLimit
argument_list|,
name|policy
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|settings
argument_list|,
name|copy
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|settings
operator|.
name|hashCode
argument_list|()
argument_list|,
name|copy
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

