begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ByteBufferKeyValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|Cell
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|CellBuilderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|CellBuilderType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|CellComparator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|KeyValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Append
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Delete
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Get
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Increment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Put
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Any
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|BytesValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|CellProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|Column
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|MutationProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|MutationProto
operator|.
name|ColumnValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|MutationProto
operator|.
name|ColumnValue
operator|.
name|QualifierValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|MutationProto
operator|.
name|DeleteType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|MutationProto
operator|.
name|MutationType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|NameBytesPair
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|LockServiceProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ProcedureProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|SmallTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_class
annotation|@
name|Category
argument_list|(
name|SmallTests
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestProtobufUtil
block|{
specifier|public
name|TestProtobufUtil
parameter_list|()
block|{   }
annotation|@
name|Test
specifier|public
name|void
name|testException
parameter_list|()
throws|throws
name|IOException
block|{
name|NameBytesPair
operator|.
name|Builder
name|builder
init|=
name|NameBytesPair
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
specifier|final
name|String
name|omg
init|=
literal|"OMG!!!"
decl_stmt|;
name|builder
operator|.
name|setName
argument_list|(
literal|"java.io.IOException"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setValue
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|omg
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Throwable
name|t
init|=
name|ProtobufUtil
operator|.
name|toException
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|omg
argument_list|,
name|t
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|clear
argument_list|()
expr_stmt|;
name|builder
operator|.
name|setName
argument_list|(
literal|"org.apache.hadoop.ipc.RemoteException"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setValue
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|omg
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|t
operator|=
name|ProtobufUtil
operator|.
name|toException
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|omg
argument_list|,
name|t
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test basic Get conversions.    *    * @throws IOException    */
annotation|@
name|Test
specifier|public
name|void
name|testGet
parameter_list|()
throws|throws
name|IOException
block|{
name|ClientProtos
operator|.
name|Get
operator|.
name|Builder
name|getBuilder
init|=
name|ClientProtos
operator|.
name|Get
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|getBuilder
operator|.
name|setRow
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"row"
argument_list|)
argument_list|)
expr_stmt|;
name|Column
operator|.
name|Builder
name|columnBuilder
init|=
name|Column
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|columnBuilder
operator|.
name|setFamily
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"f1"
argument_list|)
argument_list|)
expr_stmt|;
name|columnBuilder
operator|.
name|addQualifier
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"c1"
argument_list|)
argument_list|)
expr_stmt|;
name|columnBuilder
operator|.
name|addQualifier
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"c2"
argument_list|)
argument_list|)
expr_stmt|;
name|getBuilder
operator|.
name|addColumn
argument_list|(
name|columnBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|columnBuilder
operator|.
name|clear
argument_list|()
expr_stmt|;
name|columnBuilder
operator|.
name|setFamily
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"f2"
argument_list|)
argument_list|)
expr_stmt|;
name|getBuilder
operator|.
name|addColumn
argument_list|(
name|columnBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|getBuilder
operator|.
name|setLoadColumnFamiliesOnDemand
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|ClientProtos
operator|.
name|Get
name|proto
init|=
name|getBuilder
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// default fields
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|proto
operator|.
name|getMaxVersions
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|proto
operator|.
name|getCacheBlocks
argument_list|()
argument_list|)
expr_stmt|;
comment|// set the default value for equal comparison
name|getBuilder
operator|=
name|ClientProtos
operator|.
name|Get
operator|.
name|newBuilder
argument_list|(
name|proto
argument_list|)
expr_stmt|;
name|getBuilder
operator|.
name|setMaxVersions
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|getBuilder
operator|.
name|setCacheBlocks
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Get
name|get
init|=
name|ProtobufUtil
operator|.
name|toGet
argument_list|(
name|proto
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|getBuilder
operator|.
name|build
argument_list|()
argument_list|,
name|ProtobufUtil
operator|.
name|toGet
argument_list|(
name|get
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test Delete Mutate conversions.    *    * @throws IOException    */
annotation|@
name|Test
specifier|public
name|void
name|testDelete
parameter_list|()
throws|throws
name|IOException
block|{
name|MutationProto
operator|.
name|Builder
name|mutateBuilder
init|=
name|MutationProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|mutateBuilder
operator|.
name|setRow
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"row"
argument_list|)
argument_list|)
expr_stmt|;
name|mutateBuilder
operator|.
name|setMutateType
argument_list|(
name|MutationType
operator|.
name|DELETE
argument_list|)
expr_stmt|;
name|mutateBuilder
operator|.
name|setTimestamp
argument_list|(
literal|111111
argument_list|)
expr_stmt|;
name|ColumnValue
operator|.
name|Builder
name|valueBuilder
init|=
name|ColumnValue
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|valueBuilder
operator|.
name|setFamily
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"f1"
argument_list|)
argument_list|)
expr_stmt|;
name|QualifierValue
operator|.
name|Builder
name|qualifierBuilder
init|=
name|QualifierValue
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|qualifierBuilder
operator|.
name|setQualifier
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"c1"
argument_list|)
argument_list|)
expr_stmt|;
name|qualifierBuilder
operator|.
name|setDeleteType
argument_list|(
name|DeleteType
operator|.
name|DELETE_ONE_VERSION
argument_list|)
expr_stmt|;
name|qualifierBuilder
operator|.
name|setTimestamp
argument_list|(
literal|111222
argument_list|)
expr_stmt|;
name|valueBuilder
operator|.
name|addQualifierValue
argument_list|(
name|qualifierBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|qualifierBuilder
operator|.
name|setQualifier
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"c2"
argument_list|)
argument_list|)
expr_stmt|;
name|qualifierBuilder
operator|.
name|setDeleteType
argument_list|(
name|DeleteType
operator|.
name|DELETE_MULTIPLE_VERSIONS
argument_list|)
expr_stmt|;
name|qualifierBuilder
operator|.
name|setTimestamp
argument_list|(
literal|111333
argument_list|)
expr_stmt|;
name|valueBuilder
operator|.
name|addQualifierValue
argument_list|(
name|qualifierBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|mutateBuilder
operator|.
name|addColumnValue
argument_list|(
name|valueBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|MutationProto
name|proto
init|=
name|mutateBuilder
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// default fields
name|assertEquals
argument_list|(
name|MutationProto
operator|.
name|Durability
operator|.
name|USE_DEFAULT
argument_list|,
name|proto
operator|.
name|getDurability
argument_list|()
argument_list|)
expr_stmt|;
comment|// set the default value for equal comparison
name|mutateBuilder
operator|=
name|MutationProto
operator|.
name|newBuilder
argument_list|(
name|proto
argument_list|)
expr_stmt|;
name|mutateBuilder
operator|.
name|setDurability
argument_list|(
name|MutationProto
operator|.
name|Durability
operator|.
name|USE_DEFAULT
argument_list|)
expr_stmt|;
name|Delete
name|delete
init|=
name|ProtobufUtil
operator|.
name|toDelete
argument_list|(
name|proto
argument_list|)
decl_stmt|;
comment|// delete always have empty value,
comment|// add empty value to the original mutate
for|for
control|(
name|ColumnValue
operator|.
name|Builder
name|column
range|:
name|mutateBuilder
operator|.
name|getColumnValueBuilderList
argument_list|()
control|)
block|{
for|for
control|(
name|QualifierValue
operator|.
name|Builder
name|qualifier
range|:
name|column
operator|.
name|getQualifierValueBuilderList
argument_list|()
control|)
block|{
name|qualifier
operator|.
name|setValue
argument_list|(
name|ByteString
operator|.
name|EMPTY
argument_list|)
expr_stmt|;
block|}
block|}
name|assertEquals
argument_list|(
name|mutateBuilder
operator|.
name|build
argument_list|()
argument_list|,
name|ProtobufUtil
operator|.
name|toMutation
argument_list|(
name|MutationType
operator|.
name|DELETE
argument_list|,
name|delete
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test Put Mutate conversions.    *    * @throws IOException    */
annotation|@
name|Test
specifier|public
name|void
name|testPut
parameter_list|()
throws|throws
name|IOException
block|{
name|MutationProto
operator|.
name|Builder
name|mutateBuilder
init|=
name|MutationProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|mutateBuilder
operator|.
name|setRow
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"row"
argument_list|)
argument_list|)
expr_stmt|;
name|mutateBuilder
operator|.
name|setMutateType
argument_list|(
name|MutationType
operator|.
name|PUT
argument_list|)
expr_stmt|;
name|mutateBuilder
operator|.
name|setTimestamp
argument_list|(
literal|111111
argument_list|)
expr_stmt|;
name|ColumnValue
operator|.
name|Builder
name|valueBuilder
init|=
name|ColumnValue
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|valueBuilder
operator|.
name|setFamily
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"f1"
argument_list|)
argument_list|)
expr_stmt|;
name|QualifierValue
operator|.
name|Builder
name|qualifierBuilder
init|=
name|QualifierValue
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|qualifierBuilder
operator|.
name|setQualifier
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"c1"
argument_list|)
argument_list|)
expr_stmt|;
name|qualifierBuilder
operator|.
name|setValue
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"v1"
argument_list|)
argument_list|)
expr_stmt|;
name|valueBuilder
operator|.
name|addQualifierValue
argument_list|(
name|qualifierBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|qualifierBuilder
operator|.
name|setQualifier
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"c2"
argument_list|)
argument_list|)
expr_stmt|;
name|qualifierBuilder
operator|.
name|setValue
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"v2"
argument_list|)
argument_list|)
expr_stmt|;
name|qualifierBuilder
operator|.
name|setTimestamp
argument_list|(
literal|222222
argument_list|)
expr_stmt|;
name|valueBuilder
operator|.
name|addQualifierValue
argument_list|(
name|qualifierBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|mutateBuilder
operator|.
name|addColumnValue
argument_list|(
name|valueBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|MutationProto
name|proto
init|=
name|mutateBuilder
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// default fields
name|assertEquals
argument_list|(
name|MutationProto
operator|.
name|Durability
operator|.
name|USE_DEFAULT
argument_list|,
name|proto
operator|.
name|getDurability
argument_list|()
argument_list|)
expr_stmt|;
comment|// set the default value for equal comparison
name|mutateBuilder
operator|=
name|MutationProto
operator|.
name|newBuilder
argument_list|(
name|proto
argument_list|)
expr_stmt|;
name|mutateBuilder
operator|.
name|setDurability
argument_list|(
name|MutationProto
operator|.
name|Durability
operator|.
name|USE_DEFAULT
argument_list|)
expr_stmt|;
name|Put
name|put
init|=
name|ProtobufUtil
operator|.
name|toPut
argument_list|(
name|proto
argument_list|)
decl_stmt|;
comment|// put value always use the default timestamp if no
comment|// value level timestamp specified,
comment|// add the timestamp to the original mutate
name|long
name|timestamp
init|=
name|put
operator|.
name|getTimeStamp
argument_list|()
decl_stmt|;
for|for
control|(
name|ColumnValue
operator|.
name|Builder
name|column
range|:
name|mutateBuilder
operator|.
name|getColumnValueBuilderList
argument_list|()
control|)
block|{
for|for
control|(
name|QualifierValue
operator|.
name|Builder
name|qualifier
range|:
name|column
operator|.
name|getQualifierValueBuilderList
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|qualifier
operator|.
name|hasTimestamp
argument_list|()
condition|)
block|{
name|qualifier
operator|.
name|setTimestamp
argument_list|(
name|timestamp
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|assertEquals
argument_list|(
name|mutateBuilder
operator|.
name|build
argument_list|()
argument_list|,
name|ProtobufUtil
operator|.
name|toMutation
argument_list|(
name|MutationType
operator|.
name|PUT
argument_list|,
name|put
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test basic Scan conversions.    *    * @throws IOException    */
annotation|@
name|Test
specifier|public
name|void
name|testScan
parameter_list|()
throws|throws
name|IOException
block|{
name|ClientProtos
operator|.
name|Scan
operator|.
name|Builder
name|scanBuilder
init|=
name|ClientProtos
operator|.
name|Scan
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|scanBuilder
operator|.
name|setStartRow
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"row1"
argument_list|)
argument_list|)
expr_stmt|;
name|scanBuilder
operator|.
name|setStopRow
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"row2"
argument_list|)
argument_list|)
expr_stmt|;
name|Column
operator|.
name|Builder
name|columnBuilder
init|=
name|Column
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|columnBuilder
operator|.
name|setFamily
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"f1"
argument_list|)
argument_list|)
expr_stmt|;
name|columnBuilder
operator|.
name|addQualifier
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"c1"
argument_list|)
argument_list|)
expr_stmt|;
name|columnBuilder
operator|.
name|addQualifier
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"c2"
argument_list|)
argument_list|)
expr_stmt|;
name|scanBuilder
operator|.
name|addColumn
argument_list|(
name|columnBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|columnBuilder
operator|.
name|clear
argument_list|()
expr_stmt|;
name|columnBuilder
operator|.
name|setFamily
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"f2"
argument_list|)
argument_list|)
expr_stmt|;
name|scanBuilder
operator|.
name|addColumn
argument_list|(
name|columnBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|ClientProtos
operator|.
name|Scan
name|proto
init|=
name|scanBuilder
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// Verify default values
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|proto
operator|.
name|getMaxVersions
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|proto
operator|.
name|getCacheBlocks
argument_list|()
argument_list|)
expr_stmt|;
comment|// Verify fields survive ClientProtos.Scan -> Scan -> ClientProtos.Scan
comment|// conversion
name|scanBuilder
operator|=
name|ClientProtos
operator|.
name|Scan
operator|.
name|newBuilder
argument_list|(
name|proto
argument_list|)
expr_stmt|;
name|scanBuilder
operator|.
name|setMaxVersions
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|scanBuilder
operator|.
name|setCacheBlocks
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|scanBuilder
operator|.
name|setCaching
argument_list|(
literal|1024
argument_list|)
expr_stmt|;
name|ClientProtos
operator|.
name|Scan
name|expectedProto
init|=
name|scanBuilder
operator|.
name|build
argument_list|()
decl_stmt|;
name|ClientProtos
operator|.
name|Scan
name|actualProto
init|=
name|ProtobufUtil
operator|.
name|toScan
argument_list|(
name|ProtobufUtil
operator|.
name|toScan
argument_list|(
name|expectedProto
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedProto
argument_list|,
name|actualProto
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testToCell
parameter_list|()
throws|throws
name|Exception
block|{
name|KeyValue
name|kv1
init|=
operator|new
name|KeyValue
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"aaa"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"f1"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"q1"
argument_list|)
argument_list|,
operator|new
name|byte
index|[
literal|30
index|]
argument_list|)
decl_stmt|;
name|KeyValue
name|kv2
init|=
operator|new
name|KeyValue
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"bbb"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"f1"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"q1"
argument_list|)
argument_list|,
operator|new
name|byte
index|[
literal|30
index|]
argument_list|)
decl_stmt|;
name|KeyValue
name|kv3
init|=
operator|new
name|KeyValue
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"ccc"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"f1"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"q1"
argument_list|)
argument_list|,
operator|new
name|byte
index|[
literal|30
index|]
argument_list|)
decl_stmt|;
name|byte
index|[]
name|arr
init|=
operator|new
name|byte
index|[
name|kv1
operator|.
name|getLength
argument_list|()
operator|+
name|kv2
operator|.
name|getLength
argument_list|()
operator|+
name|kv3
operator|.
name|getLength
argument_list|()
index|]
decl_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|kv1
operator|.
name|getBuffer
argument_list|()
argument_list|,
name|kv1
operator|.
name|getOffset
argument_list|()
argument_list|,
name|arr
argument_list|,
literal|0
argument_list|,
name|kv1
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|kv2
operator|.
name|getBuffer
argument_list|()
argument_list|,
name|kv2
operator|.
name|getOffset
argument_list|()
argument_list|,
name|arr
argument_list|,
name|kv1
operator|.
name|getLength
argument_list|()
argument_list|,
name|kv2
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|kv3
operator|.
name|getBuffer
argument_list|()
argument_list|,
name|kv3
operator|.
name|getOffset
argument_list|()
argument_list|,
name|arr
argument_list|,
name|kv1
operator|.
name|getLength
argument_list|()
operator|+
name|kv2
operator|.
name|getLength
argument_list|()
argument_list|,
name|kv3
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|ByteBuffer
name|dbb
init|=
name|ByteBuffer
operator|.
name|allocateDirect
argument_list|(
name|arr
operator|.
name|length
argument_list|)
decl_stmt|;
name|dbb
operator|.
name|put
argument_list|(
name|arr
argument_list|)
expr_stmt|;
name|ByteBufferKeyValue
name|offheapKV
init|=
operator|new
name|ByteBufferKeyValue
argument_list|(
name|dbb
argument_list|,
name|kv1
operator|.
name|getLength
argument_list|()
argument_list|,
name|kv2
operator|.
name|getLength
argument_list|()
argument_list|)
decl_stmt|;
name|CellProtos
operator|.
name|Cell
name|cell
init|=
name|ProtobufUtil
operator|.
name|toCell
argument_list|(
name|offheapKV
argument_list|)
decl_stmt|;
name|Cell
name|newOffheapKV
init|=
name|ProtobufUtil
operator|.
name|toCell
argument_list|(
name|CellBuilderFactory
operator|.
name|create
argument_list|(
name|CellBuilderType
operator|.
name|SHALLOW_COPY
argument_list|)
argument_list|,
name|cell
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|CellComparator
operator|.
name|COMPARATOR
operator|.
name|compare
argument_list|(
name|offheapKV
argument_list|,
name|newOffheapKV
argument_list|)
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test Increment Mutate conversions.    *    * @throws IOException    */
annotation|@
name|Test
specifier|public
name|void
name|testIncrement
parameter_list|()
throws|throws
name|IOException
block|{
name|long
name|timeStamp
init|=
literal|111111
decl_stmt|;
name|MutationProto
operator|.
name|Builder
name|mutateBuilder
init|=
name|MutationProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|mutateBuilder
operator|.
name|setRow
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"row"
argument_list|)
argument_list|)
expr_stmt|;
name|mutateBuilder
operator|.
name|setMutateType
argument_list|(
name|MutationProto
operator|.
name|MutationType
operator|.
name|INCREMENT
argument_list|)
expr_stmt|;
name|ColumnValue
operator|.
name|Builder
name|valueBuilder
init|=
name|ColumnValue
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|valueBuilder
operator|.
name|setFamily
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"f1"
argument_list|)
argument_list|)
expr_stmt|;
name|QualifierValue
operator|.
name|Builder
name|qualifierBuilder
init|=
name|QualifierValue
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|qualifierBuilder
operator|.
name|setQualifier
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"c1"
argument_list|)
argument_list|)
expr_stmt|;
name|qualifierBuilder
operator|.
name|setValue
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|11L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|qualifierBuilder
operator|.
name|setTimestamp
argument_list|(
name|timeStamp
argument_list|)
expr_stmt|;
name|valueBuilder
operator|.
name|addQualifierValue
argument_list|(
name|qualifierBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|qualifierBuilder
operator|.
name|setQualifier
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"c2"
argument_list|)
argument_list|)
expr_stmt|;
name|qualifierBuilder
operator|.
name|setValue
argument_list|(
name|ByteString
operator|.
name|copyFrom
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|22L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|valueBuilder
operator|.
name|addQualifierValue
argument_list|(
name|qualifierBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|mutateBuilder
operator|.
name|addColumnValue
argument_list|(
name|valueBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|MutationProto
name|proto
init|=
name|mutateBuilder
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// default fields
name|assertEquals
argument_list|(
name|MutationProto
operator|.
name|Durability
operator|.
name|USE_DEFAULT
argument_list|,
name|proto
operator|.
name|getDurability
argument_list|()
argument_list|)
expr_stmt|;
comment|// set the default value for equal comparison
name|mutateBuilder
operator|=
name|MutationProto
operator|.
name|newBuilder
argument_list|(
name|proto
argument_list|)
expr_stmt|;
name|mutateBuilder
operator|.
name|setDurability
argument_list|(
name|MutationProto
operator|.
name|Durability
operator|.
name|USE_DEFAULT
argument_list|)
expr_stmt|;
name|Increment
name|increment
init|=
name|ProtobufUtil
operator|.
name|toIncrement
argument_list|(
name|proto
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|mutateBuilder
operator|.
name|setTimestamp
argument_list|(
name|increment
operator|.
name|getTimeStamp
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mutateBuilder
operator|.
name|build
argument_list|()
argument_list|,
name|ProtobufUtil
operator|.
name|toMutation
argument_list|(
name|MutationType
operator|.
name|INCREMENT
argument_list|,
name|increment
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Test Append Mutate conversions.    *    * @throws IOException    */
annotation|@
name|Test
specifier|public
name|void
name|testAppend
parameter_list|()
throws|throws
name|IOException
block|{
name|long
name|timeStamp
init|=
literal|111111
decl_stmt|;
name|MutationProto
operator|.
name|Builder
name|mutateBuilder
init|=
name|MutationProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|mutateBuilder
operator|.
name|setRow
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"row"
argument_list|)
argument_list|)
expr_stmt|;
name|mutateBuilder
operator|.
name|setMutateType
argument_list|(
name|MutationType
operator|.
name|APPEND
argument_list|)
expr_stmt|;
name|mutateBuilder
operator|.
name|setTimestamp
argument_list|(
name|timeStamp
argument_list|)
expr_stmt|;
name|ColumnValue
operator|.
name|Builder
name|valueBuilder
init|=
name|ColumnValue
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|valueBuilder
operator|.
name|setFamily
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"f1"
argument_list|)
argument_list|)
expr_stmt|;
name|QualifierValue
operator|.
name|Builder
name|qualifierBuilder
init|=
name|QualifierValue
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|qualifierBuilder
operator|.
name|setQualifier
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"c1"
argument_list|)
argument_list|)
expr_stmt|;
name|qualifierBuilder
operator|.
name|setValue
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"v1"
argument_list|)
argument_list|)
expr_stmt|;
name|qualifierBuilder
operator|.
name|setTimestamp
argument_list|(
name|timeStamp
argument_list|)
expr_stmt|;
name|valueBuilder
operator|.
name|addQualifierValue
argument_list|(
name|qualifierBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|qualifierBuilder
operator|.
name|setQualifier
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"c2"
argument_list|)
argument_list|)
expr_stmt|;
name|qualifierBuilder
operator|.
name|setValue
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
literal|"v2"
argument_list|)
argument_list|)
expr_stmt|;
name|valueBuilder
operator|.
name|addQualifierValue
argument_list|(
name|qualifierBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|mutateBuilder
operator|.
name|addColumnValue
argument_list|(
name|valueBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|MutationProto
name|proto
init|=
name|mutateBuilder
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// default fields
name|assertEquals
argument_list|(
name|MutationProto
operator|.
name|Durability
operator|.
name|USE_DEFAULT
argument_list|,
name|proto
operator|.
name|getDurability
argument_list|()
argument_list|)
expr_stmt|;
comment|// set the default value for equal comparison
name|mutateBuilder
operator|=
name|MutationProto
operator|.
name|newBuilder
argument_list|(
name|proto
argument_list|)
expr_stmt|;
name|mutateBuilder
operator|.
name|setDurability
argument_list|(
name|MutationProto
operator|.
name|Durability
operator|.
name|USE_DEFAULT
argument_list|)
expr_stmt|;
name|Append
name|append
init|=
name|ProtobufUtil
operator|.
name|toAppend
argument_list|(
name|proto
argument_list|,
literal|null
argument_list|)
decl_stmt|;
comment|// append always use the latest timestamp,
comment|// reset the timestamp to the original mutate
name|mutateBuilder
operator|.
name|setTimestamp
argument_list|(
name|append
operator|.
name|getTimeStamp
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mutateBuilder
operator|.
name|build
argument_list|()
argument_list|,
name|ProtobufUtil
operator|.
name|toMutation
argument_list|(
name|MutationType
operator|.
name|APPEND
argument_list|,
name|append
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|ProcedureProtos
operator|.
name|Procedure
operator|.
name|Builder
name|createProcedureBuilder
parameter_list|(
name|long
name|procId
parameter_list|)
block|{
name|ProcedureProtos
operator|.
name|Procedure
operator|.
name|Builder
name|builder
init|=
name|ProcedureProtos
operator|.
name|Procedure
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setProcId
argument_list|(
name|procId
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setClassName
argument_list|(
literal|"java.lang.Object"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setSubmittedTime
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setState
argument_list|(
name|ProcedureProtos
operator|.
name|ProcedureState
operator|.
name|RUNNABLE
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setLastUpdate
argument_list|(
literal|0
argument_list|)
expr_stmt|;
return|return
name|builder
return|;
block|}
specifier|private
specifier|static
name|ProcedureProtos
operator|.
name|Procedure
name|createProcedure
parameter_list|(
name|long
name|procId
parameter_list|)
block|{
return|return
name|createProcedureBuilder
argument_list|(
name|procId
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|LockServiceProtos
operator|.
name|LockedResource
name|createLockedResource
parameter_list|(
name|LockServiceProtos
operator|.
name|LockedResourceType
name|resourceType
parameter_list|,
name|String
name|resourceName
parameter_list|,
name|LockServiceProtos
operator|.
name|LockType
name|lockType
parameter_list|,
name|ProcedureProtos
operator|.
name|Procedure
name|exclusiveLockOwnerProcedure
parameter_list|,
name|int
name|sharedLockCount
parameter_list|)
block|{
name|LockServiceProtos
operator|.
name|LockedResource
operator|.
name|Builder
name|build
init|=
name|LockServiceProtos
operator|.
name|LockedResource
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|build
operator|.
name|setResourceType
argument_list|(
name|resourceType
argument_list|)
expr_stmt|;
name|build
operator|.
name|setResourceName
argument_list|(
name|resourceName
argument_list|)
expr_stmt|;
name|build
operator|.
name|setLockType
argument_list|(
name|lockType
argument_list|)
expr_stmt|;
if|if
condition|(
name|exclusiveLockOwnerProcedure
operator|!=
literal|null
condition|)
block|{
name|build
operator|.
name|setExclusiveLockOwnerProcedure
argument_list|(
name|exclusiveLockOwnerProcedure
argument_list|)
expr_stmt|;
block|}
name|build
operator|.
name|setSharedLockCount
argument_list|(
name|sharedLockCount
argument_list|)
expr_stmt|;
return|return
name|build
operator|.
name|build
argument_list|()
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testProcedureInfo
parameter_list|()
block|{
name|ProcedureProtos
operator|.
name|Procedure
operator|.
name|Builder
name|builder
init|=
name|createProcedureBuilder
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|ByteString
name|stateBytes
init|=
name|ByteString
operator|.
name|copyFrom
argument_list|(
operator|new
name|byte
index|[]
block|{
literal|65
block|}
argument_list|)
decl_stmt|;
name|BytesValue
name|state
init|=
name|BytesValue
operator|.
name|newBuilder
argument_list|()
operator|.
name|setValue
argument_list|(
name|stateBytes
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|builder
operator|.
name|addStateMessage
argument_list|(
name|Any
operator|.
name|pack
argument_list|(
name|state
argument_list|)
argument_list|)
expr_stmt|;
name|ProcedureProtos
operator|.
name|Procedure
name|procedure
init|=
name|builder
operator|.
name|build
argument_list|()
decl_stmt|;
name|String
name|procJson
init|=
name|ProtobufUtil
operator|.
name|toProcedureJson
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
name|procedure
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"[{"
operator|+
literal|"\"className\":\"java.lang.Object\","
operator|+
literal|"\"procId\":\"1\","
operator|+
literal|"\"submittedTime\":\"0\","
operator|+
literal|"\"state\":\"RUNNABLE\","
operator|+
literal|"\"lastUpdate\":\"0\","
operator|+
literal|"\"stateMessage\":[{\"value\":\"QQ==\"}]"
operator|+
literal|"}]"
argument_list|,
name|procJson
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testServerLockInfo
parameter_list|()
block|{
name|LockServiceProtos
operator|.
name|LockedResource
name|resource
init|=
name|createLockedResource
argument_list|(
name|LockServiceProtos
operator|.
name|LockedResourceType
operator|.
name|SERVER
argument_list|,
literal|"server"
argument_list|,
name|LockServiceProtos
operator|.
name|LockType
operator|.
name|SHARED
argument_list|,
literal|null
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|String
name|lockJson
init|=
name|ProtobufUtil
operator|.
name|toLockJson
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
name|resource
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"[{"
operator|+
literal|"\"resourceType\":\"SERVER\","
operator|+
literal|"\"resourceName\":\"server\","
operator|+
literal|"\"lockType\":\"SHARED\","
operator|+
literal|"\"sharedLockCount\":2"
operator|+
literal|"}]"
argument_list|,
name|lockJson
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNamespaceLockInfo
parameter_list|()
block|{
name|LockServiceProtos
operator|.
name|LockedResource
name|resource
init|=
name|createLockedResource
argument_list|(
name|LockServiceProtos
operator|.
name|LockedResourceType
operator|.
name|NAMESPACE
argument_list|,
literal|"ns"
argument_list|,
name|LockServiceProtos
operator|.
name|LockType
operator|.
name|EXCLUSIVE
argument_list|,
name|createProcedure
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|String
name|lockJson
init|=
name|ProtobufUtil
operator|.
name|toLockJson
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
name|resource
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"[{"
operator|+
literal|"\"resourceType\":\"NAMESPACE\","
operator|+
literal|"\"resourceName\":\"ns\","
operator|+
literal|"\"lockType\":\"EXCLUSIVE\","
operator|+
literal|"\"exclusiveLockOwnerProcedure\":{"
operator|+
literal|"\"className\":\"java.lang.Object\","
operator|+
literal|"\"procId\":\"2\","
operator|+
literal|"\"submittedTime\":\"0\","
operator|+
literal|"\"state\":\"RUNNABLE\","
operator|+
literal|"\"lastUpdate\":\"0\""
operator|+
literal|"},"
operator|+
literal|"\"sharedLockCount\":0"
operator|+
literal|"}]"
argument_list|,
name|lockJson
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTableLockInfo
parameter_list|()
block|{
name|LockServiceProtos
operator|.
name|LockedResource
name|resource
init|=
name|createLockedResource
argument_list|(
name|LockServiceProtos
operator|.
name|LockedResourceType
operator|.
name|TABLE
argument_list|,
literal|"table"
argument_list|,
name|LockServiceProtos
operator|.
name|LockType
operator|.
name|SHARED
argument_list|,
literal|null
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|String
name|lockJson
init|=
name|ProtobufUtil
operator|.
name|toLockJson
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
name|resource
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"[{"
operator|+
literal|"\"resourceType\":\"TABLE\","
operator|+
literal|"\"resourceName\":\"table\","
operator|+
literal|"\"lockType\":\"SHARED\","
operator|+
literal|"\"sharedLockCount\":2"
operator|+
literal|"}]"
argument_list|,
name|lockJson
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRegionLockInfo
parameter_list|()
block|{
name|LockServiceProtos
operator|.
name|LockedResource
name|resource
init|=
name|createLockedResource
argument_list|(
name|LockServiceProtos
operator|.
name|LockedResourceType
operator|.
name|REGION
argument_list|,
literal|"region"
argument_list|,
name|LockServiceProtos
operator|.
name|LockType
operator|.
name|EXCLUSIVE
argument_list|,
name|createProcedure
argument_list|(
literal|3
argument_list|)
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|String
name|lockJson
init|=
name|ProtobufUtil
operator|.
name|toLockJson
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
name|resource
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"[{"
operator|+
literal|"\"resourceType\":\"REGION\","
operator|+
literal|"\"resourceName\":\"region\","
operator|+
literal|"\"lockType\":\"EXCLUSIVE\","
operator|+
literal|"\"exclusiveLockOwnerProcedure\":{"
operator|+
literal|"\"className\":\"java.lang.Object\","
operator|+
literal|"\"procId\":\"3\","
operator|+
literal|"\"submittedTime\":\"0\","
operator|+
literal|"\"state\":\"RUNNABLE\","
operator|+
literal|"\"lastUpdate\":\"0\""
operator|+
literal|"},"
operator|+
literal|"\"sharedLockCount\":0"
operator|+
literal|"}]"
argument_list|,
name|lockJson
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

