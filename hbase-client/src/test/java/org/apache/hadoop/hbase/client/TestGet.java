begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|InvocationTargetException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Base64
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseClassTestRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|exceptions
operator|.
name|DeserializationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|filter
operator|.
name|Filter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|filter
operator|.
name|FilterList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|filter
operator|.
name|KeyOnlyFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|access
operator|.
name|Permission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|visibility
operator|.
name|Authorizations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|ClientTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|SmallTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|ClassRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|ProtobufUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
import|;
end_import

begin_comment
comment|// TODO: cover more test cases
end_comment

begin_class
annotation|@
name|Category
argument_list|(
block|{
name|ClientTests
operator|.
name|class
block|,
name|SmallTests
operator|.
name|class
block|}
argument_list|)
specifier|public
class|class
name|TestGet
block|{
annotation|@
name|ClassRule
specifier|public
specifier|static
specifier|final
name|HBaseClassTestRule
name|CLASS_RULE
init|=
name|HBaseClassTestRule
operator|.
name|forClass
argument_list|(
name|TestGet
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|byte
index|[]
name|ROW
init|=
operator|new
name|byte
index|[]
block|{
literal|'r'
block|}
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PB_GET
init|=
literal|"CgNyb3ciEwoPdGVzdC5Nb2NrRmlsdGVyEgAwATgB"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PB_GET_WITH_FILTER_LIST
init|=
literal|"CgFyIosBCilvcmcuYXBhY2hlLmhhZG9vcC5oYmFzZS5maWx0ZXIuRmlsdGVyTGlzdBJeCAESEwoP"
operator|+
literal|"dGVzdC5Nb2NrRmlsdGVyEgASEQoNbXkuTW9ja0ZpbHRlchIAEjIKLG9yZy5hcGFjaGUuaGFkb29w"
operator|+
literal|"LmhiYXNlLmZpbHRlci5LZXlPbmx5RmlsdGVyEgIIADABOAE="
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|MOCK_FILTER_JAR
init|=
literal|"UEsDBBQACAgIANWDlEMAAAAAAAAAAAAAAAAJAAQATUVUQS1JTkYv/soAAAMAUEsHCAAAAAACAAAA"
operator|+
literal|"AAAAAFBLAwQUAAgICADVg5RDAAAAAAAAAAAAAAAAFAAAAE1FVEEtSU5GL01BTklGRVNULk1G803M"
operator|+
literal|"y0xLLS7RDUstKs7Mz7NSMNQz4OVyLkpNLElN0XWqBAmY6xnEG1gqaPgXJSbnpCo45xcV5BcllgCV"
operator|+
literal|"a/Jy8XIBAFBLBwgxyqRbQwAAAEQAAABQSwMEFAAICAgAUoOUQwAAAAAAAAAAAAAAABMAAABteS9N"
operator|+
literal|"b2NrRmlsdGVyLmNsYXNzdZHPTsJAEMa/LYVCRVFQMd68gQc38YrxUJUTetGQGE7bstrVwjbbYsSn"
operator|+
literal|"0hOJJj6AD2WcFoP/4iYzX+bb32xmd9/en18B7GPLhY11BxsurEw3GUoHaqzSQ4ZCq91nsI/0UDLU"
operator|+
literal|"emoszyYjX5oL4Ufk1Hs6EFFfGJXVn6adhirJ6NGUn+rgtquiVJoOQyUWJpFdo0cMjdbAa/8hnNj3"
operator|+
literal|"pqmkbmvgMbgn94GMU6XHiYMm1ed6YgJJeDbNV+fejbgTVRRRYlj+cSZDW5trLmIRhJKHYqh1zENf"
operator|+
literal|"JJJf5QCfcx45DJ3/WLmYgx/LRNJ1I/UgMmMxIXbo9WxkywLLZqHsUMVJGWlxdwb2lG+XKZdys4kK"
operator|+
literal|"5eocgIsl0grVy0Q5+e9Y+V75BdblDIXHX/3b3/rLWEGNdJXCJmeNop7zjQ9QSwcI1kzyMToBAADs"
operator|+
literal|"AQAAUEsDBBQACAgIAFKDlEMAAAAAAAAAAAAAAAAVAAAAdGVzdC9Nb2NrRmlsdGVyLmNsYXNzdVHB"
operator|+
literal|"TsJAFJwthUJFERQx3ryBBzfxivFQlRN60ZAYTtuy2tXCNtti1K/SE4kmfoAfZXwtBg3RTd6bzOy8"
operator|+
literal|"zezux+frO4ADbLuwsemg6cLKcIuhdKgmKj1iKLQ7Awb7WI8kQ62vJvJ8OvaluRR+REqjrwMRDYRR"
operator|+
literal|"Gf8W7TRUCUO9n8ok5Wc6uOupKJWmy1CJhUlkz+gxQ7M99Dp/eJzY9x5JZrCGHoN7+hDIOFV6kjho"
operator|+
literal|"Eb/QUxNIsmeJfib3b8W9qKKIEslLpzJ0tLnhIhZBKHkoRlrHPPRFIvl1buBzn0cKQ/c/r1wk4Scy"
operator|+
literal|"kXTpSD2JTFhkxC69oY1sWWBZGuoOMU7ICIt7M7CXfLtMvZSLLVSoV+cGuFghrBBfJZeT/5GV75Xf"
operator|+
literal|"YF3NUHhemt/5NV/GGmqE61Q2KXWqRu7f+AJQSwcIrS5nKDoBAADyAQAAUEsBAhQAFAAICAgA1YOU"
operator|+
literal|"QwAAAAACAAAAAAAAAAkABAAAAAAAAAAAAAAAAAAAAE1FVEEtSU5GL/7KAABQSwECFAAUAAgICADV"
operator|+
literal|"g5RDMcqkW0MAAABEAAAAFAAAAAAAAAAAAAAAAAA9AAAATUVUQS1JTkYvTUFOSUZFU1QuTUZQSwEC"
operator|+
literal|"FAAUAAgICABSg5RD1kzyMToBAADsAQAAEwAAAAAAAAAAAAAAAADCAAAAbXkvTW9ja0ZpbHRlci5j"
operator|+
literal|"bGFzc1BLAQIUABQACAgIAFKDlEOtLmcoOgEAAPIBAAAVAAAAAAAAAAAAAAAAAD0CAAB0ZXN0L01v"
operator|+
literal|"Y2tGaWx0ZXIuY2xhc3NQSwUGAAAAAAQABAABAQAAugMAAAAA"
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testAttributesSerialization
parameter_list|()
throws|throws
name|IOException
block|{
name|Get
name|get
init|=
operator|new
name|Get
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"row"
argument_list|)
argument_list|)
decl_stmt|;
name|get
operator|.
name|setAttribute
argument_list|(
literal|"attribute1"
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|get
operator|.
name|setAttribute
argument_list|(
literal|"attribute2"
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"value2"
argument_list|)
argument_list|)
expr_stmt|;
name|get
operator|.
name|setAttribute
argument_list|(
literal|"attribute3"
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"value3"
argument_list|)
argument_list|)
expr_stmt|;
name|ClientProtos
operator|.
name|Get
name|getProto
init|=
name|ProtobufUtil
operator|.
name|toGet
argument_list|(
name|get
argument_list|)
decl_stmt|;
name|Get
name|get2
init|=
name|ProtobufUtil
operator|.
name|toGet
argument_list|(
name|getProto
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|get2
operator|.
name|getAttribute
argument_list|(
literal|"absent"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|Arrays
operator|.
name|equals
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"value1"
argument_list|)
argument_list|,
name|get2
operator|.
name|getAttribute
argument_list|(
literal|"attribute1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|Arrays
operator|.
name|equals
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"value2"
argument_list|)
argument_list|,
name|get2
operator|.
name|getAttribute
argument_list|(
literal|"attribute2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|Arrays
operator|.
name|equals
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"value3"
argument_list|)
argument_list|,
name|get2
operator|.
name|getAttribute
argument_list|(
literal|"attribute3"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|get2
operator|.
name|getAttributesMap
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetAttributes
parameter_list|()
block|{
name|Get
name|get
init|=
operator|new
name|Get
argument_list|(
name|ROW
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|get
operator|.
name|getAttributesMap
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|get
operator|.
name|getAttribute
argument_list|(
literal|"absent"
argument_list|)
argument_list|)
expr_stmt|;
name|get
operator|.
name|setAttribute
argument_list|(
literal|"absent"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|get
operator|.
name|getAttributesMap
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|get
operator|.
name|getAttribute
argument_list|(
literal|"absent"
argument_list|)
argument_list|)
expr_stmt|;
comment|// adding attribute
name|get
operator|.
name|setAttribute
argument_list|(
literal|"attribute1"
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|Arrays
operator|.
name|equals
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"value1"
argument_list|)
argument_list|,
name|get
operator|.
name|getAttribute
argument_list|(
literal|"attribute1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|get
operator|.
name|getAttributesMap
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|Arrays
operator|.
name|equals
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"value1"
argument_list|)
argument_list|,
name|get
operator|.
name|getAttributesMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"attribute1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// overriding attribute value
name|get
operator|.
name|setAttribute
argument_list|(
literal|"attribute1"
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"value12"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|Arrays
operator|.
name|equals
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"value12"
argument_list|)
argument_list|,
name|get
operator|.
name|getAttribute
argument_list|(
literal|"attribute1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|get
operator|.
name|getAttributesMap
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|Arrays
operator|.
name|equals
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"value12"
argument_list|)
argument_list|,
name|get
operator|.
name|getAttributesMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"attribute1"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// adding another attribute
name|get
operator|.
name|setAttribute
argument_list|(
literal|"attribute2"
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"value2"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|Arrays
operator|.
name|equals
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"value2"
argument_list|)
argument_list|,
name|get
operator|.
name|getAttribute
argument_list|(
literal|"attribute2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|get
operator|.
name|getAttributesMap
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|Arrays
operator|.
name|equals
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"value2"
argument_list|)
argument_list|,
name|get
operator|.
name|getAttributesMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"attribute2"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// removing attribute
name|get
operator|.
name|setAttribute
argument_list|(
literal|"attribute2"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|get
operator|.
name|getAttribute
argument_list|(
literal|"attribute2"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|get
operator|.
name|getAttributesMap
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|get
operator|.
name|getAttributesMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"attribute2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// removing non-existed attribute
name|get
operator|.
name|setAttribute
argument_list|(
literal|"attribute2"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|get
operator|.
name|getAttribute
argument_list|(
literal|"attribute2"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|get
operator|.
name|getAttributesMap
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|get
operator|.
name|getAttributesMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"attribute2"
argument_list|)
argument_list|)
expr_stmt|;
comment|// removing another attribute
name|get
operator|.
name|setAttribute
argument_list|(
literal|"attribute1"
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|get
operator|.
name|getAttribute
argument_list|(
literal|"attribute1"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|get
operator|.
name|getAttributesMap
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|get
operator|.
name|getAttributesMap
argument_list|()
operator|.
name|get
argument_list|(
literal|"attribute1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNullQualifier
parameter_list|()
block|{
name|Get
name|get
init|=
operator|new
name|Get
argument_list|(
name|ROW
argument_list|)
decl_stmt|;
name|byte
index|[]
name|family
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"family"
argument_list|)
decl_stmt|;
name|get
operator|.
name|addColumn
argument_list|(
name|family
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|byte
index|[]
argument_list|>
name|qualifiers
init|=
name|get
operator|.
name|getFamilyMap
argument_list|()
operator|.
name|get
argument_list|(
name|family
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|qualifiers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|TestGetRowFromGetCopyConstructor
parameter_list|()
throws|throws
name|Exception
block|{
name|Get
name|get
init|=
operator|new
name|Get
argument_list|(
name|ROW
argument_list|)
decl_stmt|;
name|get
operator|.
name|setFilter
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|get
operator|.
name|setAuthorizations
argument_list|(
operator|new
name|Authorizations
argument_list|(
literal|"foo"
argument_list|)
argument_list|)
expr_stmt|;
name|get
operator|.
name|setACL
argument_list|(
literal|"u"
argument_list|,
operator|new
name|Permission
argument_list|(
name|Permission
operator|.
name|Action
operator|.
name|READ
argument_list|)
argument_list|)
expr_stmt|;
name|get
operator|.
name|setConsistency
argument_list|(
name|Consistency
operator|.
name|TIMELINE
argument_list|)
expr_stmt|;
name|get
operator|.
name|setReplicaId
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|get
operator|.
name|setIsolationLevel
argument_list|(
name|IsolationLevel
operator|.
name|READ_UNCOMMITTED
argument_list|)
expr_stmt|;
name|get
operator|.
name|setCheckExistenceOnly
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|get
operator|.
name|setTimeRange
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|get
operator|.
name|readVersions
argument_list|(
literal|11
argument_list|)
expr_stmt|;
name|get
operator|.
name|setMaxResultsPerColumnFamily
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|get
operator|.
name|setRowOffsetPerColumnFamily
argument_list|(
literal|11
argument_list|)
expr_stmt|;
name|get
operator|.
name|setCacheBlocks
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Get
name|copyGet
init|=
operator|new
name|Get
argument_list|(
name|get
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|Bytes
operator|.
name|compareTo
argument_list|(
name|get
operator|.
name|getRow
argument_list|()
argument_list|,
name|copyGet
operator|.
name|getRow
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// from OperationWithAttributes
name|assertEquals
argument_list|(
name|get
operator|.
name|getId
argument_list|()
argument_list|,
name|copyGet
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
comment|// from Query class
name|assertEquals
argument_list|(
name|get
operator|.
name|getFilter
argument_list|()
argument_list|,
name|copyGet
operator|.
name|getFilter
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|get
operator|.
name|getAuthorizations
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|equals
argument_list|(
name|copyGet
operator|.
name|getAuthorizations
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Bytes
operator|.
name|equals
argument_list|(
name|get
operator|.
name|getACL
argument_list|()
argument_list|,
name|copyGet
operator|.
name|getACL
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|get
operator|.
name|getConsistency
argument_list|()
argument_list|,
name|copyGet
operator|.
name|getConsistency
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|get
operator|.
name|getReplicaId
argument_list|()
argument_list|,
name|copyGet
operator|.
name|getReplicaId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|get
operator|.
name|getIsolationLevel
argument_list|()
argument_list|,
name|copyGet
operator|.
name|getIsolationLevel
argument_list|()
argument_list|)
expr_stmt|;
comment|// from Get class
name|assertEquals
argument_list|(
name|get
operator|.
name|isCheckExistenceOnly
argument_list|()
argument_list|,
name|copyGet
operator|.
name|isCheckExistenceOnly
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|get
operator|.
name|getTimeRange
argument_list|()
operator|.
name|equals
argument_list|(
name|copyGet
operator|.
name|getTimeRange
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|get
operator|.
name|getMaxVersions
argument_list|()
argument_list|,
name|copyGet
operator|.
name|getMaxVersions
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|get
operator|.
name|getMaxResultsPerColumnFamily
argument_list|()
argument_list|,
name|copyGet
operator|.
name|getMaxResultsPerColumnFamily
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|get
operator|.
name|getRowOffsetPerColumnFamily
argument_list|()
argument_list|,
name|copyGet
operator|.
name|getRowOffsetPerColumnFamily
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|get
operator|.
name|getCacheBlocks
argument_list|()
argument_list|,
name|copyGet
operator|.
name|getCacheBlocks
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|get
operator|.
name|getId
argument_list|()
argument_list|,
name|copyGet
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDynamicFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
name|HBaseConfiguration
operator|.
name|create
argument_list|()
decl_stmt|;
name|String
name|localPath
init|=
name|conf
operator|.
name|get
argument_list|(
literal|"hbase.local.dir"
argument_list|)
operator|+
name|File
operator|.
name|separator
operator|+
literal|"jars"
operator|+
name|File
operator|.
name|separator
decl_stmt|;
name|File
name|jarFile
init|=
operator|new
name|File
argument_list|(
name|localPath
argument_list|,
literal|"MockFilter.jar"
argument_list|)
decl_stmt|;
name|jarFile
operator|.
name|delete
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Should be deleted: "
operator|+
name|jarFile
operator|.
name|getPath
argument_list|()
argument_list|,
name|jarFile
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|ClientProtos
operator|.
name|Get
name|getProto1
init|=
name|ClientProtos
operator|.
name|Get
operator|.
name|parseFrom
argument_list|(
name|Base64
operator|.
name|getDecoder
argument_list|()
operator|.
name|decode
argument_list|(
name|PB_GET
argument_list|)
argument_list|)
decl_stmt|;
name|ClientProtos
operator|.
name|Get
name|getProto2
init|=
name|ClientProtos
operator|.
name|Get
operator|.
name|parseFrom
argument_list|(
name|Base64
operator|.
name|getDecoder
argument_list|()
operator|.
name|decode
argument_list|(
name|PB_GET_WITH_FILTER_LIST
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|ProtobufUtil
operator|.
name|toGet
argument_list|(
name|getProto1
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should not be able to load the filter class"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|ioe
operator|.
name|getCause
argument_list|()
operator|instanceof
name|ClassNotFoundException
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|ProtobufUtil
operator|.
name|toGet
argument_list|(
name|getProto2
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Should not be able to load the filter class"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ioe
parameter_list|)
block|{
name|assertTrue
argument_list|(
name|ioe
operator|.
name|getCause
argument_list|()
operator|instanceof
name|InvocationTargetException
argument_list|)
expr_stmt|;
name|InvocationTargetException
name|ite
init|=
operator|(
name|InvocationTargetException
operator|)
name|ioe
operator|.
name|getCause
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|ite
operator|.
name|getTargetException
argument_list|()
operator|instanceof
name|DeserializationException
argument_list|)
expr_stmt|;
block|}
name|FileOutputStream
name|fos
init|=
operator|new
name|FileOutputStream
argument_list|(
name|jarFile
argument_list|)
decl_stmt|;
name|fos
operator|.
name|write
argument_list|(
name|Base64
operator|.
name|getDecoder
argument_list|()
operator|.
name|decode
argument_list|(
name|MOCK_FILTER_JAR
argument_list|)
argument_list|)
expr_stmt|;
name|fos
operator|.
name|close
argument_list|()
expr_stmt|;
name|Get
name|get1
init|=
name|ProtobufUtil
operator|.
name|toGet
argument_list|(
name|getProto1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"test.MockFilter"
argument_list|,
name|get1
operator|.
name|getFilter
argument_list|()
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Get
name|get2
init|=
name|ProtobufUtil
operator|.
name|toGet
argument_list|(
name|getProto2
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|get2
operator|.
name|getFilter
argument_list|()
operator|instanceof
name|FilterList
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Filter
argument_list|>
name|filters
init|=
operator|(
operator|(
name|FilterList
operator|)
name|get2
operator|.
name|getFilter
argument_list|()
operator|)
operator|.
name|getFilters
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|filters
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"test.MockFilter"
argument_list|,
name|filters
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"my.MockFilter"
argument_list|,
name|filters
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|filters
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|instanceof
name|KeyOnlyFilter
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetRowConstructor
parameter_list|()
block|{
name|byte
index|[]
name|row1
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"testRow"
argument_list|)
decl_stmt|;
name|byte
index|[]
name|row2
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"testtestRow"
argument_list|)
decl_stmt|;
name|ByteBuffer
name|rowBuffer
init|=
name|ByteBuffer
operator|.
name|allocate
argument_list|(
literal|16
argument_list|)
decl_stmt|;
name|rowBuffer
operator|=
name|ByteBuffer
operator|.
name|wrap
argument_list|(
name|row1
argument_list|)
expr_stmt|;
name|Get
name|get1
init|=
operator|new
name|Get
argument_list|(
name|rowBuffer
argument_list|)
decl_stmt|;
name|Get
name|get2
init|=
operator|new
name|Get
argument_list|(
name|row2
argument_list|,
literal|4
argument_list|,
literal|7
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
name|get1
operator|.
name|getRow
argument_list|()
argument_list|,
name|get2
operator|.
name|getRow
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

