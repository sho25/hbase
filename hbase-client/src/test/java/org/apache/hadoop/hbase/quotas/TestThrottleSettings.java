begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|quotas
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseClassTestRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|SmallTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|ClassRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|QuotaProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|QuotaProtos
operator|.
name|ThrottleRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|QuotaProtos
operator|.
name|TimedQuota
import|;
end_import

begin_class
annotation|@
name|Category
argument_list|(
block|{
name|SmallTests
operator|.
name|class
block|}
argument_list|)
specifier|public
class|class
name|TestThrottleSettings
block|{
annotation|@
name|ClassRule
specifier|public
specifier|static
specifier|final
name|HBaseClassTestRule
name|CLASS_RULE
init|=
name|HBaseClassTestRule
operator|.
name|forClass
argument_list|(
name|TestThrottleSettings
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testMerge
parameter_list|()
throws|throws
name|IOException
block|{
name|TimedQuota
name|tq1
init|=
name|TimedQuota
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSoftLimit
argument_list|(
literal|10
argument_list|)
operator|.
name|setScope
argument_list|(
name|QuotaProtos
operator|.
name|QuotaScope
operator|.
name|MACHINE
argument_list|)
operator|.
name|setTimeUnit
argument_list|(
name|HBaseProtos
operator|.
name|TimeUnit
operator|.
name|MINUTES
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ThrottleRequest
name|tr1
init|=
name|ThrottleRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setTimedQuota
argument_list|(
name|tq1
argument_list|)
operator|.
name|setType
argument_list|(
name|QuotaProtos
operator|.
name|ThrottleType
operator|.
name|REQUEST_NUMBER
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ThrottleSettings
name|orig
init|=
operator|new
name|ThrottleSettings
argument_list|(
literal|"joe"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|tr1
argument_list|)
decl_stmt|;
name|TimedQuota
name|tq2
init|=
name|TimedQuota
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSoftLimit
argument_list|(
literal|10
argument_list|)
operator|.
name|setScope
argument_list|(
name|QuotaProtos
operator|.
name|QuotaScope
operator|.
name|MACHINE
argument_list|)
operator|.
name|setTimeUnit
argument_list|(
name|HBaseProtos
operator|.
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ThrottleRequest
name|tr2
init|=
name|ThrottleRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setTimedQuota
argument_list|(
name|tq2
argument_list|)
operator|.
name|setType
argument_list|(
name|QuotaProtos
operator|.
name|ThrottleType
operator|.
name|REQUEST_NUMBER
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ThrottleSettings
name|merged
init|=
name|orig
operator|.
name|merge
argument_list|(
operator|new
name|ThrottleSettings
argument_list|(
literal|"joe"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|tr2
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|merged
operator|.
name|getSoftLimit
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ThrottleType
operator|.
name|REQUEST_NUMBER
argument_list|,
name|merged
operator|.
name|getThrottleType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TimeUnit
operator|.
name|SECONDS
argument_list|,
name|merged
operator|.
name|getTimeUnit
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIncompatibleThrottleTypes
parameter_list|()
throws|throws
name|IOException
block|{
name|TimedQuota
name|requestsQuota
init|=
name|TimedQuota
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSoftLimit
argument_list|(
literal|10
argument_list|)
operator|.
name|setScope
argument_list|(
name|QuotaProtos
operator|.
name|QuotaScope
operator|.
name|MACHINE
argument_list|)
operator|.
name|setTimeUnit
argument_list|(
name|HBaseProtos
operator|.
name|TimeUnit
operator|.
name|MINUTES
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ThrottleRequest
name|requestsQuotaReq
init|=
name|ThrottleRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setTimedQuota
argument_list|(
name|requestsQuota
argument_list|)
operator|.
name|setType
argument_list|(
name|QuotaProtos
operator|.
name|ThrottleType
operator|.
name|REQUEST_NUMBER
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ThrottleSettings
name|orig
init|=
operator|new
name|ThrottleSettings
argument_list|(
literal|"joe"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|requestsQuotaReq
argument_list|)
decl_stmt|;
name|TimedQuota
name|readsQuota
init|=
name|TimedQuota
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSoftLimit
argument_list|(
literal|10
argument_list|)
operator|.
name|setScope
argument_list|(
name|QuotaProtos
operator|.
name|QuotaScope
operator|.
name|MACHINE
argument_list|)
operator|.
name|setTimeUnit
argument_list|(
name|HBaseProtos
operator|.
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ThrottleRequest
name|readsQuotaReq
init|=
name|ThrottleRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setTimedQuota
argument_list|(
name|readsQuota
argument_list|)
operator|.
name|setType
argument_list|(
name|QuotaProtos
operator|.
name|ThrottleType
operator|.
name|READ_NUMBER
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
try|try
block|{
name|orig
operator|.
name|merge
argument_list|(
operator|new
name|ThrottleSettings
argument_list|(
literal|"joe"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|readsQuotaReq
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"A read throttle should not be capable of being merged with a request quota"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
comment|// Pass
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoThrottleReturnsOriginal
parameter_list|()
throws|throws
name|IOException
block|{
name|TimedQuota
name|tq1
init|=
name|TimedQuota
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSoftLimit
argument_list|(
literal|10
argument_list|)
operator|.
name|setScope
argument_list|(
name|QuotaProtos
operator|.
name|QuotaScope
operator|.
name|MACHINE
argument_list|)
operator|.
name|setTimeUnit
argument_list|(
name|HBaseProtos
operator|.
name|TimeUnit
operator|.
name|MINUTES
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ThrottleRequest
name|tr1
init|=
name|ThrottleRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setTimedQuota
argument_list|(
name|tq1
argument_list|)
operator|.
name|setType
argument_list|(
name|QuotaProtos
operator|.
name|ThrottleType
operator|.
name|REQUEST_NUMBER
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ThrottleSettings
name|orig
init|=
operator|new
name|ThrottleSettings
argument_list|(
literal|"joe"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|tr1
argument_list|)
decl_stmt|;
name|ThrottleRequest
name|tr2
init|=
name|ThrottleRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setType
argument_list|(
name|QuotaProtos
operator|.
name|ThrottleType
operator|.
name|REQUEST_NUMBER
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
literal|"The same object should be returned by merge, but it wasn't"
argument_list|,
name|orig
operator|==
name|orig
operator|.
name|merge
argument_list|(
operator|new
name|ThrottleSettings
argument_list|(
literal|"joe"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|tr2
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

