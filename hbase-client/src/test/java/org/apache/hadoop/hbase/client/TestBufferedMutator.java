begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|RegionLocations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ipc
operator|.
name|RpcControllerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|ClientTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|SmallTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestName
import|;
end_import

begin_class
annotation|@
name|Category
argument_list|(
block|{
name|SmallTests
operator|.
name|class
block|,
name|ClientTests
operator|.
name|class
block|}
argument_list|)
specifier|public
class|class
name|TestBufferedMutator
block|{
annotation|@
name|Rule
specifier|public
name|TestName
name|name
init|=
operator|new
name|TestName
argument_list|()
decl_stmt|;
comment|/**    * Registry that does nothing.    * Otherwise, default Registry wants zookeeper up and running.    */
specifier|public
specifier|static
class|class
name|DoNothingRegistry
implements|implements
name|Registry
block|{
annotation|@
name|Override
specifier|public
name|void
name|init
parameter_list|(
name|Connection
name|connection
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
block|}
annotation|@
name|Override
specifier|public
name|RegionLocations
name|getMetaRegionLocation
parameter_list|()
throws|throws
name|IOException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getClusterId
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getCurrentNrHRS
parameter_list|()
throws|throws
name|IOException
block|{
comment|// TODO Auto-generated method stub
return|return
literal|0
return|;
block|}
block|}
comment|/**    * My BufferedMutator.    * Just to prove that I can insert a BM other than default.    */
specifier|public
specifier|static
class|class
name|MyBufferedMutator
extends|extends
name|BufferedMutatorImpl
block|{
name|MyBufferedMutator
parameter_list|(
name|ClusterConnection
name|conn
parameter_list|,
name|RpcRetryingCallerFactory
name|rpcCallerFactory
parameter_list|,
name|RpcControllerFactory
name|rpcFactory
parameter_list|,
name|BufferedMutatorParams
name|params
parameter_list|)
block|{
name|super
argument_list|(
name|conn
argument_list|,
name|rpcCallerFactory
argument_list|,
name|rpcFactory
argument_list|,
name|params
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAlternateBufferedMutatorImpl
parameter_list|()
throws|throws
name|IOException
block|{
name|BufferedMutatorParams
name|params
init|=
operator|new
name|BufferedMutatorParams
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Configuration
name|conf
init|=
name|HBaseConfiguration
operator|.
name|create
argument_list|()
decl_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|RegistryFactory
operator|.
name|REGISTRY_IMPL_CONF_KEY
argument_list|,
name|DoNothingRegistry
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
try|try
init|(
name|Connection
name|connection
init|=
name|ConnectionFactory
operator|.
name|createConnection
argument_list|(
name|conf
argument_list|)
init|)
block|{
name|BufferedMutator
name|bm
init|=
name|connection
operator|.
name|getBufferedMutator
argument_list|(
name|params
argument_list|)
decl_stmt|;
comment|// Assert we get default BM if nothing specified.
name|assertTrue
argument_list|(
name|bm
operator|instanceof
name|BufferedMutatorImpl
argument_list|)
expr_stmt|;
comment|// Now try and set my own BM implementation.
name|params
operator|.
name|implementationClassName
argument_list|(
name|MyBufferedMutator
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|bm
operator|=
name|connection
operator|.
name|getBufferedMutator
argument_list|(
name|params
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|bm
operator|instanceof
name|MyBufferedMutator
argument_list|)
expr_stmt|;
block|}
comment|// Now try creating a Connection after setting an alterate BufferedMutator into
comment|// the configuration and confirm we get what was expected.
name|conf
operator|.
name|set
argument_list|(
name|BufferedMutator
operator|.
name|CLASSNAME_KEY
argument_list|,
name|MyBufferedMutator
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
try|try
init|(
name|Connection
name|connection
init|=
name|ConnectionFactory
operator|.
name|createConnection
argument_list|(
name|conf
argument_list|)
init|)
block|{
name|BufferedMutator
name|bm
init|=
name|connection
operator|.
name|getBufferedMutator
argument_list|(
name|params
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|bm
operator|instanceof
name|MyBufferedMutator
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

