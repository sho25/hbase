begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|provider
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|builder
operator|.
name|HashCodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseInterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
operator|.
name|AuthenticationMethod
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceStability
import|;
end_import

begin_comment
comment|/**  * Describes the way in which some {@link SaslClientAuthenticationProvider} authenticates over SASL.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|LimitedPrivate
argument_list|(
name|HBaseInterfaceAudience
operator|.
name|AUTHENTICATION
argument_list|)
annotation|@
name|InterfaceStability
operator|.
name|Evolving
specifier|public
class|class
name|SaslAuthMethod
block|{
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
specifier|private
specifier|final
name|byte
name|code
decl_stmt|;
specifier|private
specifier|final
name|String
name|saslMech
decl_stmt|;
specifier|private
specifier|final
name|AuthenticationMethod
name|method
decl_stmt|;
specifier|public
name|SaslAuthMethod
parameter_list|(
name|String
name|name
parameter_list|,
name|byte
name|code
parameter_list|,
name|String
name|saslMech
parameter_list|,
name|AuthenticationMethod
name|method
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|code
operator|=
name|code
expr_stmt|;
name|this
operator|.
name|saslMech
operator|=
name|saslMech
expr_stmt|;
name|this
operator|.
name|method
operator|=
name|method
expr_stmt|;
block|}
comment|/**    * Returns the unique name to identify this authentication method among other HBase auth methods.    */
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
comment|/**    * Returns the unique value to identify this authentication method among other HBase auth methods.    */
specifier|public
name|byte
name|getCode
parameter_list|()
block|{
return|return
name|code
return|;
block|}
comment|/**    * Returns the SASL mechanism used by this authentication method.    */
specifier|public
name|String
name|getSaslMechanism
parameter_list|()
block|{
return|return
name|saslMech
return|;
block|}
comment|/**    * Returns the Hadoop {@link AuthenticationMethod} for this method.    */
specifier|public
name|AuthenticationMethod
name|getAuthMethod
parameter_list|()
block|{
return|return
name|method
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|o
operator|instanceof
name|SaslAuthMethod
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|SaslAuthMethod
name|other
init|=
operator|(
name|SaslAuthMethod
operator|)
name|o
decl_stmt|;
return|return
name|Objects
operator|.
name|equals
argument_list|(
name|name
argument_list|,
name|other
operator|.
name|name
argument_list|)
operator|&&
name|code
operator|==
name|other
operator|.
name|code
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|saslMech
argument_list|,
name|other
operator|.
name|saslMech
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|method
argument_list|,
name|other
operator|.
name|method
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
operator|new
name|HashCodeBuilder
argument_list|()
operator|.
name|append
argument_list|(
name|name
argument_list|)
operator|.
name|append
argument_list|(
name|code
argument_list|)
operator|.
name|append
argument_list|(
name|saslMech
argument_list|)
operator|.
name|append
argument_list|(
name|method
argument_list|)
operator|.
name|toHashCode
argument_list|()
return|;
block|}
block|}
end_class

end_unit

