begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_comment
comment|/**  * Get instance of configured Registry.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|final
class|class
name|RegistryFactory
block|{
specifier|static
specifier|final
name|String
name|REGISTRY_IMPL_CONF_KEY
init|=
literal|"hbase.client.registry.impl"
decl_stmt|;
specifier|private
name|RegistryFactory
parameter_list|()
block|{}
comment|/**    * @return The cluster registry implementation to use.    * @throws IOException    */
specifier|static
name|Registry
name|getRegistry
parameter_list|(
specifier|final
name|Connection
name|connection
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|registryClass
init|=
name|connection
operator|.
name|getConfiguration
argument_list|()
operator|.
name|get
argument_list|(
name|REGISTRY_IMPL_CONF_KEY
argument_list|,
name|ZooKeeperRegistry
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|Registry
name|registry
init|=
literal|null
decl_stmt|;
try|try
block|{
name|registry
operator|=
operator|(
name|Registry
operator|)
name|Class
operator|.
name|forName
argument_list|(
name|registryClass
argument_list|)
operator|.
name|newInstance
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|t
argument_list|)
throw|;
block|}
name|registry
operator|.
name|init
argument_list|(
name|connection
argument_list|)
expr_stmt|;
return|return
name|registry
return|;
block|}
block|}
end_class

end_unit

