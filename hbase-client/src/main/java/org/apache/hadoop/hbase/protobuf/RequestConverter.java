begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|CellScannable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|DoNotRetryIOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HColumnDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HRegionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HTableDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ServerName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Append
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Delete
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Durability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Get
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Increment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Mutation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Put
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|RegionCoprocessorServiceExec
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Row
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|RowMutations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Scan
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|exceptions
operator|.
name|DeserializationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|filter
operator|.
name|ByteArrayComparable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AccessControlProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|CloseRegionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|WarmupRegionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|CompactRegionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|FlushRegionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|GetOnlineRegionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|GetRegionInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|GetServerInfoRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|GetStoreFileRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|MergeRegionsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|OpenRegionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|OpenRegionRequest
operator|.
name|RegionOpenInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|RollWALWriterRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|SplitRegionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|StopServerRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|UpdateFavoredNodesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|UpdateFavoredNodesRequest
operator|.
name|RegionUpdateInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|BulkLoadHFileRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|BulkLoadHFileRequest
operator|.
name|FamilyPath
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|Column
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|Condition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|GetRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|MutateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|MutationProto
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|MutationProto
operator|.
name|ColumnValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|MutationProto
operator|.
name|ColumnValue
operator|.
name|QualifierValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|MutationProto
operator|.
name|MutationType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|RegionAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|ScanRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|CompareType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|RegionSpecifierType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|AddColumnRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|AssignRegionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|BalanceRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|CreateTableRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|DeleteColumnRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|DeleteTableRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|DisableTableRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|DispatchMergingRegionsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|EnableCatalogJanitorRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|EnableTableRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|GetClusterStatusRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|GetSchemaAlterStatusRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|GetTableDescriptorsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|GetTableNamesRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|GetTableStateRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|IsBalancerEnabledRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|IsCatalogJanitorEnabledRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|IsMasterRunningRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|ModifyColumnRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|ModifyTableRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|MoveRegionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|OfflineRegionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|RunCatalogScanRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|SetBalancerRunningRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|TruncateTableRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|UnassignRegionRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|RegionServerStatusProtos
operator|.
name|GetLastFlushedSequenceIdRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|ByteStringer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Pair
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
import|;
end_import

begin_comment
comment|/**  * Helper utility to build protocol buffer requests,  * or build components for protocol buffer requests.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
specifier|final
class|class
name|RequestConverter
block|{
specifier|private
name|RequestConverter
parameter_list|()
block|{   }
comment|// Start utilities for Client
comment|/**    * Create a new protocol buffer GetRequest to get a row, all columns in a family.    * If there is no such row, return the closest row before it.    *    * @param regionName the name of the region to get    * @param row the row to get    * @param family the column family to get    * should return the immediate row before    * @return a protocol buffer GetReuqest    */
specifier|public
specifier|static
name|GetRequest
name|buildGetRowOrBeforeRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|byte
index|[]
name|row
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|)
block|{
name|GetRequest
operator|.
name|Builder
name|builder
init|=
name|GetRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|Column
operator|.
name|Builder
name|columnBuilder
init|=
name|Column
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|columnBuilder
operator|.
name|setFamily
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|family
argument_list|)
argument_list|)
expr_stmt|;
name|ClientProtos
operator|.
name|Get
operator|.
name|Builder
name|getBuilder
init|=
name|ClientProtos
operator|.
name|Get
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|getBuilder
operator|.
name|setRow
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|row
argument_list|)
argument_list|)
expr_stmt|;
name|getBuilder
operator|.
name|addColumn
argument_list|(
name|columnBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|getBuilder
operator|.
name|setClosestRowBefore
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setGet
argument_list|(
name|getBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer GetRequest for a client Get    *    * @param regionName the name of the region to get    * @param get the client Get    * @return a protocol buffer GetRequest    */
specifier|public
specifier|static
name|GetRequest
name|buildGetRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|Get
name|get
parameter_list|)
throws|throws
name|IOException
block|{
name|GetRequest
operator|.
name|Builder
name|builder
init|=
name|GetRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setGet
argument_list|(
name|ProtobufUtil
operator|.
name|toGet
argument_list|(
name|get
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer MutateRequest for a client increment    *    * @param regionName    * @param row    * @param family    * @param qualifier    * @param amount    * @param durability    * @return a mutate request    */
specifier|public
specifier|static
name|MutateRequest
name|buildIncrementRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|byte
index|[]
name|row
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|,
specifier|final
name|byte
index|[]
name|qualifier
parameter_list|,
specifier|final
name|long
name|amount
parameter_list|,
specifier|final
name|Durability
name|durability
parameter_list|,
name|long
name|nonceGroup
parameter_list|,
name|long
name|nonce
parameter_list|)
block|{
name|MutateRequest
operator|.
name|Builder
name|builder
init|=
name|MutateRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|MutationProto
operator|.
name|Builder
name|mutateBuilder
init|=
name|MutationProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|mutateBuilder
operator|.
name|setRow
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|row
argument_list|)
argument_list|)
expr_stmt|;
name|mutateBuilder
operator|.
name|setMutateType
argument_list|(
name|MutationType
operator|.
name|INCREMENT
argument_list|)
expr_stmt|;
name|mutateBuilder
operator|.
name|setDurability
argument_list|(
name|ProtobufUtil
operator|.
name|toDurability
argument_list|(
name|durability
argument_list|)
argument_list|)
expr_stmt|;
name|ColumnValue
operator|.
name|Builder
name|columnBuilder
init|=
name|ColumnValue
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|columnBuilder
operator|.
name|setFamily
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|family
argument_list|)
argument_list|)
expr_stmt|;
name|QualifierValue
operator|.
name|Builder
name|valueBuilder
init|=
name|QualifierValue
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|valueBuilder
operator|.
name|setValue
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|amount
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|valueBuilder
operator|.
name|setQualifier
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|qualifier
argument_list|)
argument_list|)
expr_stmt|;
name|columnBuilder
operator|.
name|addQualifierValue
argument_list|(
name|valueBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|mutateBuilder
operator|.
name|addColumnValue
argument_list|(
name|columnBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|nonce
operator|!=
name|HConstants
operator|.
name|NO_NONCE
condition|)
block|{
name|mutateBuilder
operator|.
name|setNonce
argument_list|(
name|nonce
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|setMutation
argument_list|(
name|mutateBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|nonceGroup
operator|!=
name|HConstants
operator|.
name|NO_NONCE
condition|)
block|{
name|builder
operator|.
name|setNonceGroup
argument_list|(
name|nonceGroup
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer MutateRequest for a conditioned put    *    * @param regionName    * @param row    * @param family    * @param qualifier    * @param comparator    * @param compareType    * @param put    * @return a mutate request    * @throws IOException    */
specifier|public
specifier|static
name|MutateRequest
name|buildMutateRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|byte
index|[]
name|row
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|,
specifier|final
name|byte
index|[]
name|qualifier
parameter_list|,
specifier|final
name|ByteArrayComparable
name|comparator
parameter_list|,
specifier|final
name|CompareType
name|compareType
parameter_list|,
specifier|final
name|Put
name|put
parameter_list|)
throws|throws
name|IOException
block|{
name|MutateRequest
operator|.
name|Builder
name|builder
init|=
name|MutateRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|Condition
name|condition
init|=
name|buildCondition
argument_list|(
name|row
argument_list|,
name|family
argument_list|,
name|qualifier
argument_list|,
name|comparator
argument_list|,
name|compareType
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setMutation
argument_list|(
name|ProtobufUtil
operator|.
name|toMutation
argument_list|(
name|MutationType
operator|.
name|PUT
argument_list|,
name|put
argument_list|,
name|MutationProto
operator|.
name|newBuilder
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setCondition
argument_list|(
name|condition
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer MutateRequest for a conditioned delete    *    * @param regionName    * @param row    * @param family    * @param qualifier    * @param comparator    * @param compareType    * @param delete    * @return a mutate request    * @throws IOException    */
specifier|public
specifier|static
name|MutateRequest
name|buildMutateRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|byte
index|[]
name|row
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|,
specifier|final
name|byte
index|[]
name|qualifier
parameter_list|,
specifier|final
name|ByteArrayComparable
name|comparator
parameter_list|,
specifier|final
name|CompareType
name|compareType
parameter_list|,
specifier|final
name|Delete
name|delete
parameter_list|)
throws|throws
name|IOException
block|{
name|MutateRequest
operator|.
name|Builder
name|builder
init|=
name|MutateRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|Condition
name|condition
init|=
name|buildCondition
argument_list|(
name|row
argument_list|,
name|family
argument_list|,
name|qualifier
argument_list|,
name|comparator
argument_list|,
name|compareType
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setMutation
argument_list|(
name|ProtobufUtil
operator|.
name|toMutation
argument_list|(
name|MutationType
operator|.
name|DELETE
argument_list|,
name|delete
argument_list|,
name|MutationProto
operator|.
name|newBuilder
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setCondition
argument_list|(
name|condition
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer MutateRequest for conditioned row mutations    *    * @param regionName    * @param row    * @param family    * @param qualifier    * @param comparator    * @param compareType    * @param rowMutations    * @return a mutate request    * @throws IOException    */
specifier|public
specifier|static
name|ClientProtos
operator|.
name|MultiRequest
name|buildMutateRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|byte
index|[]
name|row
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|,
specifier|final
name|byte
index|[]
name|qualifier
parameter_list|,
specifier|final
name|ByteArrayComparable
name|comparator
parameter_list|,
specifier|final
name|CompareType
name|compareType
parameter_list|,
specifier|final
name|RowMutations
name|rowMutations
parameter_list|)
throws|throws
name|IOException
block|{
name|RegionAction
operator|.
name|Builder
name|builder
init|=
name|getRegionActionBuilderWithRegion
argument_list|(
name|RegionAction
operator|.
name|newBuilder
argument_list|()
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setAtomic
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|ClientProtos
operator|.
name|Action
operator|.
name|Builder
name|actionBuilder
init|=
name|ClientProtos
operator|.
name|Action
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|MutationProto
operator|.
name|Builder
name|mutationBuilder
init|=
name|MutationProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|Condition
name|condition
init|=
name|buildCondition
argument_list|(
name|row
argument_list|,
name|family
argument_list|,
name|qualifier
argument_list|,
name|comparator
argument_list|,
name|compareType
argument_list|)
decl_stmt|;
for|for
control|(
name|Mutation
name|mutation
range|:
name|rowMutations
operator|.
name|getMutations
argument_list|()
control|)
block|{
name|MutationType
name|mutateType
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|mutation
operator|instanceof
name|Put
condition|)
block|{
name|mutateType
operator|=
name|MutationType
operator|.
name|PUT
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|mutation
operator|instanceof
name|Delete
condition|)
block|{
name|mutateType
operator|=
name|MutationType
operator|.
name|DELETE
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|DoNotRetryIOException
argument_list|(
literal|"RowMutations supports only put and delete, not "
operator|+
name|mutation
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
throw|;
block|}
name|mutationBuilder
operator|.
name|clear
argument_list|()
expr_stmt|;
name|MutationProto
name|mp
init|=
name|ProtobufUtil
operator|.
name|toMutation
argument_list|(
name|mutateType
argument_list|,
name|mutation
argument_list|,
name|mutationBuilder
argument_list|)
decl_stmt|;
name|actionBuilder
operator|.
name|clear
argument_list|()
expr_stmt|;
name|actionBuilder
operator|.
name|setMutation
argument_list|(
name|mp
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addAction
argument_list|(
name|actionBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ClientProtos
operator|.
name|MultiRequest
name|request
init|=
name|ClientProtos
operator|.
name|MultiRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|addRegionAction
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|setCondition
argument_list|(
name|condition
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
return|return
name|request
return|;
block|}
comment|/**    * Create a protocol buffer MutateRequest for a put    *    * @param regionName    * @param put    * @return a mutate request    * @throws IOException    */
specifier|public
specifier|static
name|MutateRequest
name|buildMutateRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|Put
name|put
parameter_list|)
throws|throws
name|IOException
block|{
name|MutateRequest
operator|.
name|Builder
name|builder
init|=
name|MutateRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setMutation
argument_list|(
name|ProtobufUtil
operator|.
name|toMutation
argument_list|(
name|MutationType
operator|.
name|PUT
argument_list|,
name|put
argument_list|,
name|MutationProto
operator|.
name|newBuilder
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer MutateRequest for an append    *    * @param regionName    * @param append    * @return a mutate request    * @throws IOException    */
specifier|public
specifier|static
name|MutateRequest
name|buildMutateRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|Append
name|append
parameter_list|,
name|long
name|nonceGroup
parameter_list|,
name|long
name|nonce
parameter_list|)
throws|throws
name|IOException
block|{
name|MutateRequest
operator|.
name|Builder
name|builder
init|=
name|MutateRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
if|if
condition|(
name|nonce
operator|!=
name|HConstants
operator|.
name|NO_NONCE
operator|&&
name|nonceGroup
operator|!=
name|HConstants
operator|.
name|NO_NONCE
condition|)
block|{
name|builder
operator|.
name|setNonceGroup
argument_list|(
name|nonceGroup
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|setMutation
argument_list|(
name|ProtobufUtil
operator|.
name|toMutation
argument_list|(
name|MutationType
operator|.
name|APPEND
argument_list|,
name|append
argument_list|,
name|MutationProto
operator|.
name|newBuilder
argument_list|()
argument_list|,
name|nonce
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer MutateRequest for a client increment    *    * @param regionName    * @param increment    * @return a mutate request    */
specifier|public
specifier|static
name|MutateRequest
name|buildMutateRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|Increment
name|increment
parameter_list|,
specifier|final
name|long
name|nonceGroup
parameter_list|,
specifier|final
name|long
name|nonce
parameter_list|)
block|{
name|MutateRequest
operator|.
name|Builder
name|builder
init|=
name|MutateRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
if|if
condition|(
name|nonce
operator|!=
name|HConstants
operator|.
name|NO_NONCE
operator|&&
name|nonceGroup
operator|!=
name|HConstants
operator|.
name|NO_NONCE
condition|)
block|{
name|builder
operator|.
name|setNonceGroup
argument_list|(
name|nonceGroup
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|setMutation
argument_list|(
name|ProtobufUtil
operator|.
name|toMutation
argument_list|(
name|increment
argument_list|,
name|MutationProto
operator|.
name|newBuilder
argument_list|()
argument_list|,
name|nonce
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer MutateRequest for a delete    *    * @param regionName    * @param delete    * @return a mutate request    * @throws IOException    */
specifier|public
specifier|static
name|MutateRequest
name|buildMutateRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|Delete
name|delete
parameter_list|)
throws|throws
name|IOException
block|{
name|MutateRequest
operator|.
name|Builder
name|builder
init|=
name|MutateRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setMutation
argument_list|(
name|ProtobufUtil
operator|.
name|toMutation
argument_list|(
name|MutationType
operator|.
name|DELETE
argument_list|,
name|delete
argument_list|,
name|MutationProto
operator|.
name|newBuilder
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer MultiRequest for row mutations.    * Does not propagate Action absolute position.  Does not set atomic action on the created    * RegionAtomic.  Caller should do that if wanted.    * @param regionName    * @param rowMutations    * @return a data-laden RegionMutation.Builder    * @throws IOException    */
specifier|public
specifier|static
name|RegionAction
operator|.
name|Builder
name|buildRegionAction
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|RowMutations
name|rowMutations
parameter_list|)
throws|throws
name|IOException
block|{
name|RegionAction
operator|.
name|Builder
name|builder
init|=
name|getRegionActionBuilderWithRegion
argument_list|(
name|RegionAction
operator|.
name|newBuilder
argument_list|()
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|ClientProtos
operator|.
name|Action
operator|.
name|Builder
name|actionBuilder
init|=
name|ClientProtos
operator|.
name|Action
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|MutationProto
operator|.
name|Builder
name|mutationBuilder
init|=
name|MutationProto
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|Mutation
name|mutation
range|:
name|rowMutations
operator|.
name|getMutations
argument_list|()
control|)
block|{
name|MutationType
name|mutateType
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|mutation
operator|instanceof
name|Put
condition|)
block|{
name|mutateType
operator|=
name|MutationType
operator|.
name|PUT
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|mutation
operator|instanceof
name|Delete
condition|)
block|{
name|mutateType
operator|=
name|MutationType
operator|.
name|DELETE
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|DoNotRetryIOException
argument_list|(
literal|"RowMutations supports only put and delete, not "
operator|+
name|mutation
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
throw|;
block|}
name|mutationBuilder
operator|.
name|clear
argument_list|()
expr_stmt|;
name|MutationProto
name|mp
init|=
name|ProtobufUtil
operator|.
name|toMutation
argument_list|(
name|mutateType
argument_list|,
name|mutation
argument_list|,
name|mutationBuilder
argument_list|)
decl_stmt|;
name|actionBuilder
operator|.
name|clear
argument_list|()
expr_stmt|;
name|actionBuilder
operator|.
name|setMutation
argument_list|(
name|mp
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addAction
argument_list|(
name|actionBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
return|;
block|}
comment|/**    * Create a protocol buffer MultiRequest for row mutations that does not hold data.  Data/Cells    * are carried outside of protobuf.  Return references to the Cells in<code>cells</code> param.     * Does not propagate Action absolute position.  Does not set atomic action on the created    * RegionAtomic.  Caller should do that if wanted.    * @param regionName    * @param rowMutations    * @param cells Return in here a list of Cells as CellIterable.    * @return a region mutation minus data    * @throws IOException    */
specifier|public
specifier|static
name|RegionAction
operator|.
name|Builder
name|buildNoDataRegionAction
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|RowMutations
name|rowMutations
parameter_list|,
specifier|final
name|List
argument_list|<
name|CellScannable
argument_list|>
name|cells
parameter_list|,
specifier|final
name|RegionAction
operator|.
name|Builder
name|regionActionBuilder
parameter_list|,
specifier|final
name|ClientProtos
operator|.
name|Action
operator|.
name|Builder
name|actionBuilder
parameter_list|,
specifier|final
name|MutationProto
operator|.
name|Builder
name|mutationBuilder
parameter_list|)
throws|throws
name|IOException
block|{
for|for
control|(
name|Mutation
name|mutation
range|:
name|rowMutations
operator|.
name|getMutations
argument_list|()
control|)
block|{
name|MutationType
name|type
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|mutation
operator|instanceof
name|Put
condition|)
block|{
name|type
operator|=
name|MutationType
operator|.
name|PUT
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|mutation
operator|instanceof
name|Delete
condition|)
block|{
name|type
operator|=
name|MutationType
operator|.
name|DELETE
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|DoNotRetryIOException
argument_list|(
literal|"RowMutations supports only put and delete, not "
operator|+
name|mutation
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
throw|;
block|}
name|mutationBuilder
operator|.
name|clear
argument_list|()
expr_stmt|;
name|MutationProto
name|mp
init|=
name|ProtobufUtil
operator|.
name|toMutationNoData
argument_list|(
name|type
argument_list|,
name|mutation
argument_list|,
name|mutationBuilder
argument_list|)
decl_stmt|;
name|cells
operator|.
name|add
argument_list|(
name|mutation
argument_list|)
expr_stmt|;
name|actionBuilder
operator|.
name|clear
argument_list|()
expr_stmt|;
name|regionActionBuilder
operator|.
name|addAction
argument_list|(
name|actionBuilder
operator|.
name|setMutation
argument_list|(
name|mp
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|regionActionBuilder
return|;
block|}
specifier|private
specifier|static
name|RegionAction
operator|.
name|Builder
name|getRegionActionBuilderWithRegion
parameter_list|(
specifier|final
name|RegionAction
operator|.
name|Builder
name|regionActionBuilder
parameter_list|,
specifier|final
name|byte
index|[]
name|regionName
parameter_list|)
block|{
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|regionActionBuilder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
return|return
name|regionActionBuilder
return|;
block|}
comment|/**    * Create a protocol buffer ScanRequest for a client Scan    *    * @param regionName    * @param scan    * @param numberOfRows    * @param closeScanner    * @return a scan request    * @throws IOException    */
specifier|public
specifier|static
name|ScanRequest
name|buildScanRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|Scan
name|scan
parameter_list|,
specifier|final
name|int
name|numberOfRows
parameter_list|,
specifier|final
name|boolean
name|closeScanner
parameter_list|)
throws|throws
name|IOException
block|{
name|ScanRequest
operator|.
name|Builder
name|builder
init|=
name|ScanRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setNumberOfRows
argument_list|(
name|numberOfRows
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setCloseScanner
argument_list|(
name|closeScanner
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setScan
argument_list|(
name|ProtobufUtil
operator|.
name|toScan
argument_list|(
name|scan
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setClientHandlesPartials
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer ScanRequest for a scanner id    *    * @param scannerId    * @param numberOfRows    * @param closeScanner    * @return a scan request    */
specifier|public
specifier|static
name|ScanRequest
name|buildScanRequest
parameter_list|(
specifier|final
name|long
name|scannerId
parameter_list|,
specifier|final
name|int
name|numberOfRows
parameter_list|,
specifier|final
name|boolean
name|closeScanner
parameter_list|)
block|{
name|ScanRequest
operator|.
name|Builder
name|builder
init|=
name|ScanRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setNumberOfRows
argument_list|(
name|numberOfRows
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setCloseScanner
argument_list|(
name|closeScanner
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setScannerId
argument_list|(
name|scannerId
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setClientHandlesPartials
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer ScanRequest for a scanner id    *    * @param scannerId    * @param numberOfRows    * @param closeScanner    * @param nextCallSeq    * @return a scan request    */
specifier|public
specifier|static
name|ScanRequest
name|buildScanRequest
parameter_list|(
specifier|final
name|long
name|scannerId
parameter_list|,
specifier|final
name|int
name|numberOfRows
parameter_list|,
specifier|final
name|boolean
name|closeScanner
parameter_list|,
specifier|final
name|long
name|nextCallSeq
parameter_list|)
block|{
name|ScanRequest
operator|.
name|Builder
name|builder
init|=
name|ScanRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setNumberOfRows
argument_list|(
name|numberOfRows
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setCloseScanner
argument_list|(
name|closeScanner
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setScannerId
argument_list|(
name|scannerId
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setNextCallSeq
argument_list|(
name|nextCallSeq
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setClientHandlesPartials
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer bulk load request    *    * @param familyPaths    * @param regionName    * @param assignSeqNum    * @return a bulk load request    */
specifier|public
specifier|static
name|BulkLoadHFileRequest
name|buildBulkLoadHFileRequest
parameter_list|(
specifier|final
name|List
argument_list|<
name|Pair
argument_list|<
name|byte
index|[]
argument_list|,
name|String
argument_list|>
argument_list|>
name|familyPaths
parameter_list|,
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
name|boolean
name|assignSeqNum
parameter_list|)
block|{
name|BulkLoadHFileRequest
operator|.
name|Builder
name|builder
init|=
name|BulkLoadHFileRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|FamilyPath
operator|.
name|Builder
name|familyPathBuilder
init|=
name|FamilyPath
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|Pair
argument_list|<
name|byte
index|[]
argument_list|,
name|String
argument_list|>
name|familyPath
range|:
name|familyPaths
control|)
block|{
name|familyPathBuilder
operator|.
name|setFamily
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|familyPath
operator|.
name|getFirst
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|familyPathBuilder
operator|.
name|setPath
argument_list|(
name|familyPath
operator|.
name|getSecond
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addFamilyPath
argument_list|(
name|familyPathBuilder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|setAssignSeqNum
argument_list|(
name|assignSeqNum
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer multi request for a list of actions.    * Propagates Actions original index.    *    * @param regionName    * @param actions    * @return a multi request    * @throws IOException    */
specifier|public
specifier|static
parameter_list|<
name|R
parameter_list|>
name|RegionAction
operator|.
name|Builder
name|buildRegionAction
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|List
argument_list|<
name|Action
argument_list|<
name|R
argument_list|>
argument_list|>
name|actions
parameter_list|,
specifier|final
name|RegionAction
operator|.
name|Builder
name|regionActionBuilder
parameter_list|,
specifier|final
name|ClientProtos
operator|.
name|Action
operator|.
name|Builder
name|actionBuilder
parameter_list|,
specifier|final
name|MutationProto
operator|.
name|Builder
name|mutationBuilder
parameter_list|)
throws|throws
name|IOException
block|{
for|for
control|(
name|Action
argument_list|<
name|R
argument_list|>
name|action
range|:
name|actions
control|)
block|{
name|Row
name|row
init|=
name|action
operator|.
name|getAction
argument_list|()
decl_stmt|;
name|actionBuilder
operator|.
name|clear
argument_list|()
expr_stmt|;
name|actionBuilder
operator|.
name|setIndex
argument_list|(
name|action
operator|.
name|getOriginalIndex
argument_list|()
argument_list|)
expr_stmt|;
name|mutationBuilder
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|row
operator|instanceof
name|Get
condition|)
block|{
name|Get
name|g
init|=
operator|(
name|Get
operator|)
name|row
decl_stmt|;
name|regionActionBuilder
operator|.
name|addAction
argument_list|(
name|actionBuilder
operator|.
name|setGet
argument_list|(
name|ProtobufUtil
operator|.
name|toGet
argument_list|(
name|g
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|row
operator|instanceof
name|Put
condition|)
block|{
name|regionActionBuilder
operator|.
name|addAction
argument_list|(
name|actionBuilder
operator|.
name|setMutation
argument_list|(
name|ProtobufUtil
operator|.
name|toMutation
argument_list|(
name|MutationType
operator|.
name|PUT
argument_list|,
operator|(
name|Put
operator|)
name|row
argument_list|,
name|mutationBuilder
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|row
operator|instanceof
name|Delete
condition|)
block|{
name|regionActionBuilder
operator|.
name|addAction
argument_list|(
name|actionBuilder
operator|.
name|setMutation
argument_list|(
name|ProtobufUtil
operator|.
name|toMutation
argument_list|(
name|MutationType
operator|.
name|DELETE
argument_list|,
operator|(
name|Delete
operator|)
name|row
argument_list|,
name|mutationBuilder
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|row
operator|instanceof
name|Append
condition|)
block|{
name|regionActionBuilder
operator|.
name|addAction
argument_list|(
name|actionBuilder
operator|.
name|setMutation
argument_list|(
name|ProtobufUtil
operator|.
name|toMutation
argument_list|(
name|MutationType
operator|.
name|APPEND
argument_list|,
operator|(
name|Append
operator|)
name|row
argument_list|,
name|mutationBuilder
argument_list|,
name|action
operator|.
name|getNonce
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|row
operator|instanceof
name|Increment
condition|)
block|{
name|regionActionBuilder
operator|.
name|addAction
argument_list|(
name|actionBuilder
operator|.
name|setMutation
argument_list|(
name|ProtobufUtil
operator|.
name|toMutation
argument_list|(
operator|(
name|Increment
operator|)
name|row
argument_list|,
name|mutationBuilder
argument_list|,
name|action
operator|.
name|getNonce
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|row
operator|instanceof
name|RegionCoprocessorServiceExec
condition|)
block|{
name|RegionCoprocessorServiceExec
name|exec
init|=
operator|(
name|RegionCoprocessorServiceExec
operator|)
name|row
decl_stmt|;
name|regionActionBuilder
operator|.
name|addAction
argument_list|(
name|actionBuilder
operator|.
name|setServiceCall
argument_list|(
name|ClientProtos
operator|.
name|CoprocessorServiceCall
operator|.
name|newBuilder
argument_list|()
operator|.
name|setRow
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|exec
operator|.
name|getRow
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setServiceName
argument_list|(
name|exec
operator|.
name|getMethod
argument_list|()
operator|.
name|getService
argument_list|()
operator|.
name|getFullName
argument_list|()
argument_list|)
operator|.
name|setMethodName
argument_list|(
name|exec
operator|.
name|getMethod
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|setRequest
argument_list|(
name|exec
operator|.
name|getRequest
argument_list|()
operator|.
name|toByteString
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|row
operator|instanceof
name|RowMutations
condition|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"No RowMutations in multi calls; use mutateRow"
argument_list|)
throw|;
block|}
else|else
block|{
throw|throw
operator|new
name|DoNotRetryIOException
argument_list|(
literal|"Multi doesn't support "
operator|+
name|row
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
throw|;
block|}
block|}
return|return
name|regionActionBuilder
return|;
block|}
comment|/**    * Create a protocol buffer multirequest with NO data for a list of actions (data is carried    * otherwise than via protobuf).  This means it just notes attributes, whether to write the    * WAL, etc., and the presence in protobuf serves as place holder for the data which is    * coming along otherwise.  Note that Get is different.  It does not contain 'data' and is always    * carried by protobuf.  We return references to the data by adding them to the passed in    *<code>data</code> param.    *    *<p>Propagates Actions original index.    *    * @param regionName    * @param actions    * @param cells Place to stuff references to actual data.    * @return a multi request that does not carry any data.    * @throws IOException    */
specifier|public
specifier|static
parameter_list|<
name|R
parameter_list|>
name|RegionAction
operator|.
name|Builder
name|buildNoDataRegionAction
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|List
argument_list|<
name|Action
argument_list|<
name|R
argument_list|>
argument_list|>
name|actions
parameter_list|,
specifier|final
name|List
argument_list|<
name|CellScannable
argument_list|>
name|cells
parameter_list|,
specifier|final
name|RegionAction
operator|.
name|Builder
name|regionActionBuilder
parameter_list|,
specifier|final
name|ClientProtos
operator|.
name|Action
operator|.
name|Builder
name|actionBuilder
parameter_list|,
specifier|final
name|MutationProto
operator|.
name|Builder
name|mutationBuilder
parameter_list|)
throws|throws
name|IOException
block|{
name|RegionAction
operator|.
name|Builder
name|builder
init|=
name|getRegionActionBuilderWithRegion
argument_list|(
name|RegionAction
operator|.
name|newBuilder
argument_list|()
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
for|for
control|(
name|Action
argument_list|<
name|R
argument_list|>
name|action
range|:
name|actions
control|)
block|{
name|Row
name|row
init|=
name|action
operator|.
name|getAction
argument_list|()
decl_stmt|;
name|actionBuilder
operator|.
name|clear
argument_list|()
expr_stmt|;
name|actionBuilder
operator|.
name|setIndex
argument_list|(
name|action
operator|.
name|getOriginalIndex
argument_list|()
argument_list|)
expr_stmt|;
name|mutationBuilder
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|row
operator|instanceof
name|Get
condition|)
block|{
name|Get
name|g
init|=
operator|(
name|Get
operator|)
name|row
decl_stmt|;
name|builder
operator|.
name|addAction
argument_list|(
name|actionBuilder
operator|.
name|setGet
argument_list|(
name|ProtobufUtil
operator|.
name|toGet
argument_list|(
name|g
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|row
operator|instanceof
name|Put
condition|)
block|{
name|Put
name|p
init|=
operator|(
name|Put
operator|)
name|row
decl_stmt|;
name|cells
operator|.
name|add
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addAction
argument_list|(
name|actionBuilder
operator|.
name|setMutation
argument_list|(
name|ProtobufUtil
operator|.
name|toMutationNoData
argument_list|(
name|MutationType
operator|.
name|PUT
argument_list|,
name|p
argument_list|,
name|mutationBuilder
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|row
operator|instanceof
name|Delete
condition|)
block|{
name|Delete
name|d
init|=
operator|(
name|Delete
operator|)
name|row
decl_stmt|;
name|int
name|size
init|=
name|d
operator|.
name|size
argument_list|()
decl_stmt|;
comment|// Note that a legitimate Delete may have a size of zero; i.e. a Delete that has nothing
comment|// in it but the row to delete.  In this case, the current implementation does not make
comment|// a KeyValue to represent a delete-of-all-the-row until we serialize... For such cases
comment|// where the size returned is zero, we will send the Delete fully pb'd rather than have
comment|// metadata only in the pb and then send the kv along the side in cells.
if|if
condition|(
name|size
operator|>
literal|0
condition|)
block|{
name|cells
operator|.
name|add
argument_list|(
name|d
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addAction
argument_list|(
name|actionBuilder
operator|.
name|setMutation
argument_list|(
name|ProtobufUtil
operator|.
name|toMutationNoData
argument_list|(
name|MutationType
operator|.
name|DELETE
argument_list|,
name|d
argument_list|,
name|mutationBuilder
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|builder
operator|.
name|addAction
argument_list|(
name|actionBuilder
operator|.
name|setMutation
argument_list|(
name|ProtobufUtil
operator|.
name|toMutation
argument_list|(
name|MutationType
operator|.
name|DELETE
argument_list|,
name|d
argument_list|,
name|mutationBuilder
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|row
operator|instanceof
name|Append
condition|)
block|{
name|Append
name|a
init|=
operator|(
name|Append
operator|)
name|row
decl_stmt|;
name|cells
operator|.
name|add
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addAction
argument_list|(
name|actionBuilder
operator|.
name|setMutation
argument_list|(
name|ProtobufUtil
operator|.
name|toMutationNoData
argument_list|(
name|MutationType
operator|.
name|APPEND
argument_list|,
name|a
argument_list|,
name|mutationBuilder
argument_list|,
name|action
operator|.
name|getNonce
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|row
operator|instanceof
name|Increment
condition|)
block|{
name|Increment
name|i
init|=
operator|(
name|Increment
operator|)
name|row
decl_stmt|;
name|cells
operator|.
name|add
argument_list|(
name|i
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addAction
argument_list|(
name|actionBuilder
operator|.
name|setMutation
argument_list|(
name|ProtobufUtil
operator|.
name|toMutationNoData
argument_list|(
name|MutationType
operator|.
name|INCREMENT
argument_list|,
name|i
argument_list|,
name|mutationBuilder
argument_list|,
name|action
operator|.
name|getNonce
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|row
operator|instanceof
name|RowMutations
condition|)
block|{
continue|continue;
comment|// ignore RowMutations
block|}
else|else
block|{
throw|throw
operator|new
name|DoNotRetryIOException
argument_list|(
literal|"Multi doesn't support "
operator|+
name|row
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
throw|;
block|}
block|}
return|return
name|builder
return|;
block|}
comment|// End utilities for Client
comment|//Start utilities for Admin
comment|/**    * Create a protocol buffer GetRegionInfoRequest for a given region name    *    * @param regionName the name of the region to get info    * @return a protocol buffer GetRegionInfoRequest    */
specifier|public
specifier|static
name|GetRegionInfoRequest
name|buildGetRegionInfoRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|)
block|{
return|return
name|buildGetRegionInfoRequest
argument_list|(
name|regionName
argument_list|,
literal|false
argument_list|)
return|;
block|}
comment|/**    * Create a protocol buffer GetRegionInfoRequest for a given region name    *    * @param regionName the name of the region to get info    * @param includeCompactionState indicate if the compaction state is requested    * @return a protocol buffer GetRegionInfoRequest    */
specifier|public
specifier|static
name|GetRegionInfoRequest
name|buildGetRegionInfoRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|boolean
name|includeCompactionState
parameter_list|)
block|{
name|GetRegionInfoRequest
operator|.
name|Builder
name|builder
init|=
name|GetRegionInfoRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
if|if
condition|(
name|includeCompactionState
condition|)
block|{
name|builder
operator|.
name|setCompactionState
argument_list|(
name|includeCompactionState
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a protocol buffer GetStoreFileRequest for a given region name   *   * @param regionName the name of the region to get info   * @param family the family to get store file list   * @return a protocol buffer GetStoreFileRequest   */
specifier|public
specifier|static
name|GetStoreFileRequest
name|buildGetStoreFileRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|)
block|{
name|GetStoreFileRequest
operator|.
name|Builder
name|builder
init|=
name|GetStoreFileRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addFamily
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|family
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a protocol buffer GetOnlineRegionRequest   *   * @return a protocol buffer GetOnlineRegionRequest   */
specifier|public
specifier|static
name|GetOnlineRegionRequest
name|buildGetOnlineRegionRequest
parameter_list|()
block|{
return|return
name|GetOnlineRegionRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a protocol buffer FlushRegionRequest for a given region name   *   * @param regionName the name of the region to get info   * @return a protocol buffer FlushRegionRequest   */
specifier|public
specifier|static
name|FlushRegionRequest
name|buildFlushRegionRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|)
block|{
return|return
name|buildFlushRegionRequest
argument_list|(
name|regionName
argument_list|,
literal|false
argument_list|)
return|;
block|}
comment|/**   * Create a protocol buffer FlushRegionRequest for a given region name   *   * @param regionName the name of the region to get info   * @return a protocol buffer FlushRegionRequest   */
specifier|public
specifier|static
name|FlushRegionRequest
name|buildFlushRegionRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
name|boolean
name|writeFlushWALMarker
parameter_list|)
block|{
name|FlushRegionRequest
operator|.
name|Builder
name|builder
init|=
name|FlushRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setWriteFlushWalMarker
argument_list|(
name|writeFlushWALMarker
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a protocol buffer OpenRegionRequest to open a list of regions   *   * @param server the serverName for the RPC   * @param regionOpenInfos info of a list of regions to open   * @param openForReplay   * @return a protocol buffer OpenRegionRequest   */
specifier|public
specifier|static
name|OpenRegionRequest
name|buildOpenRegionRequest
parameter_list|(
name|ServerName
name|server
parameter_list|,
specifier|final
name|List
argument_list|<
name|Pair
argument_list|<
name|HRegionInfo
argument_list|,
name|List
argument_list|<
name|ServerName
argument_list|>
argument_list|>
argument_list|>
name|regionOpenInfos
parameter_list|,
name|Boolean
name|openForReplay
parameter_list|)
block|{
name|OpenRegionRequest
operator|.
name|Builder
name|builder
init|=
name|OpenRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|Pair
argument_list|<
name|HRegionInfo
argument_list|,
name|List
argument_list|<
name|ServerName
argument_list|>
argument_list|>
name|regionOpenInfo
range|:
name|regionOpenInfos
control|)
block|{
name|builder
operator|.
name|addOpenInfo
argument_list|(
name|buildRegionOpenInfo
argument_list|(
name|regionOpenInfo
operator|.
name|getFirst
argument_list|()
argument_list|,
name|regionOpenInfo
operator|.
name|getSecond
argument_list|()
argument_list|,
name|openForReplay
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|server
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setServerStartCode
argument_list|(
name|server
operator|.
name|getStartcode
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a protocol buffer OpenRegionRequest for a given region   *   * @param server the serverName for the RPC   * @param region the region to open   * @param favoredNodes   * @param openForReplay   * @return a protocol buffer OpenRegionRequest   */
specifier|public
specifier|static
name|OpenRegionRequest
name|buildOpenRegionRequest
parameter_list|(
name|ServerName
name|server
parameter_list|,
specifier|final
name|HRegionInfo
name|region
parameter_list|,
name|List
argument_list|<
name|ServerName
argument_list|>
name|favoredNodes
parameter_list|,
name|Boolean
name|openForReplay
parameter_list|)
block|{
name|OpenRegionRequest
operator|.
name|Builder
name|builder
init|=
name|OpenRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|addOpenInfo
argument_list|(
name|buildRegionOpenInfo
argument_list|(
name|region
argument_list|,
name|favoredNodes
argument_list|,
name|openForReplay
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|server
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setServerStartCode
argument_list|(
name|server
operator|.
name|getStartcode
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a protocol buffer UpdateFavoredNodesRequest to update a list of favorednode mappings   * @param updateRegionInfos   * @return a protocol buffer UpdateFavoredNodesRequest   */
specifier|public
specifier|static
name|UpdateFavoredNodesRequest
name|buildUpdateFavoredNodesRequest
parameter_list|(
specifier|final
name|List
argument_list|<
name|Pair
argument_list|<
name|HRegionInfo
argument_list|,
name|List
argument_list|<
name|ServerName
argument_list|>
argument_list|>
argument_list|>
name|updateRegionInfos
parameter_list|)
block|{
name|UpdateFavoredNodesRequest
operator|.
name|Builder
name|ubuilder
init|=
name|UpdateFavoredNodesRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|Pair
argument_list|<
name|HRegionInfo
argument_list|,
name|List
argument_list|<
name|ServerName
argument_list|>
argument_list|>
name|pair
range|:
name|updateRegionInfos
control|)
block|{
name|RegionUpdateInfo
operator|.
name|Builder
name|builder
init|=
name|RegionUpdateInfo
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|HRegionInfo
operator|.
name|convert
argument_list|(
name|pair
operator|.
name|getFirst
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|ServerName
name|server
range|:
name|pair
operator|.
name|getSecond
argument_list|()
control|)
block|{
name|builder
operator|.
name|addFavoredNodes
argument_list|(
name|ProtobufUtil
operator|.
name|toServerName
argument_list|(
name|server
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|ubuilder
operator|.
name|addUpdateInfo
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|ubuilder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a CloseRegionRequest for a given region name   *   * @param regionName the name of the region to close   * @return a CloseRegionRequest   */
specifier|public
specifier|static
name|CloseRegionRequest
name|buildCloseRegionRequest
parameter_list|(
name|ServerName
name|server
parameter_list|,
specifier|final
name|byte
index|[]
name|regionName
parameter_list|)
block|{
return|return
name|buildCloseRegionRequest
argument_list|(
name|server
argument_list|,
name|regionName
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|CloseRegionRequest
name|buildCloseRegionRequest
parameter_list|(
name|ServerName
name|server
parameter_list|,
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
name|ServerName
name|destinationServer
parameter_list|)
block|{
name|CloseRegionRequest
operator|.
name|Builder
name|builder
init|=
name|CloseRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
if|if
condition|(
name|destinationServer
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setDestinationServer
argument_list|(
name|ProtobufUtil
operator|.
name|toServerName
argument_list|(
name|destinationServer
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|server
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setServerStartCode
argument_list|(
name|server
operator|.
name|getStartcode
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    *  Create a WarmupRegionRequest for a given region name    *    *  @param regionInfo Region we are warming up    */
specifier|public
specifier|static
name|WarmupRegionRequest
name|buildWarmupRegionRequest
parameter_list|(
specifier|final
name|HRegionInfo
name|regionInfo
parameter_list|)
block|{
name|WarmupRegionRequest
operator|.
name|Builder
name|builder
init|=
name|WarmupRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setRegionInfo
argument_list|(
name|HRegionInfo
operator|.
name|convert
argument_list|(
name|regionInfo
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a CloseRegionRequest for a given encoded region name   *   * @param encodedRegionName the name of the region to close   * @return a CloseRegionRequest   */
specifier|public
specifier|static
name|CloseRegionRequest
name|buildCloseRegionRequest
parameter_list|(
name|ServerName
name|server
parameter_list|,
specifier|final
name|String
name|encodedRegionName
parameter_list|)
block|{
name|CloseRegionRequest
operator|.
name|Builder
name|builder
init|=
name|CloseRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|ENCODED_REGION_NAME
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|encodedRegionName
argument_list|)
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
if|if
condition|(
name|server
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setServerStartCode
argument_list|(
name|server
operator|.
name|getStartcode
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a SplitRegionRequest for a given region name   *   * @param regionName the name of the region to split   * @param splitPoint the split point   * @return a SplitRegionRequest   */
specifier|public
specifier|static
name|SplitRegionRequest
name|buildSplitRegionRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|byte
index|[]
name|splitPoint
parameter_list|)
block|{
name|SplitRegionRequest
operator|.
name|Builder
name|builder
init|=
name|SplitRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
if|if
condition|(
name|splitPoint
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setSplitPoint
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|splitPoint
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a MergeRegionsRequest for the given regions    * @param regionA name of region a    * @param regionB name of region b    * @param forcible true if it is a compulsory merge    * @return a MergeRegionsRequest    */
specifier|public
specifier|static
name|MergeRegionsRequest
name|buildMergeRegionsRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionA
parameter_list|,
specifier|final
name|byte
index|[]
name|regionB
parameter_list|,
specifier|final
name|boolean
name|forcible
parameter_list|)
block|{
name|MergeRegionsRequest
operator|.
name|Builder
name|builder
init|=
name|MergeRegionsRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|regionASpecifier
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionA
argument_list|)
decl_stmt|;
name|RegionSpecifier
name|regionBSpecifier
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionB
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegionA
argument_list|(
name|regionASpecifier
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setRegionB
argument_list|(
name|regionBSpecifier
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setForcible
argument_list|(
name|forcible
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * Create a  CompactRegionRequest for a given region name   *   * @param regionName the name of the region to get info   * @param major indicator if it is a major compaction   * @return a CompactRegionRequest   */
specifier|public
specifier|static
name|CompactRegionRequest
name|buildCompactRegionRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|boolean
name|major
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|)
block|{
name|CompactRegionRequest
operator|.
name|Builder
name|builder
init|=
name|CompactRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|RegionSpecifier
name|region
init|=
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setMajor
argument_list|(
name|major
argument_list|)
expr_stmt|;
if|if
condition|(
name|family
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setFamily
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|family
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**   * @see {@link #buildRollWALWriterRequest()   */
specifier|private
specifier|static
name|RollWALWriterRequest
name|ROLL_WAL_WRITER_REQUEST
init|=
name|RollWALWriterRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**   * Create a new RollWALWriterRequest   *   * @return a ReplicateWALEntryRequest   */
specifier|public
specifier|static
name|RollWALWriterRequest
name|buildRollWALWriterRequest
parameter_list|()
block|{
return|return
name|ROLL_WAL_WRITER_REQUEST
return|;
block|}
comment|/**   * @see {@link #buildGetServerInfoRequest()}   */
specifier|private
specifier|static
name|GetServerInfoRequest
name|GET_SERVER_INFO_REQUEST
init|=
name|GetServerInfoRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**   * Create a new GetServerInfoRequest   *   * @return a GetServerInfoRequest   */
specifier|public
specifier|static
name|GetServerInfoRequest
name|buildGetServerInfoRequest
parameter_list|()
block|{
return|return
name|GET_SERVER_INFO_REQUEST
return|;
block|}
comment|/**   * Create a new StopServerRequest   *   * @param reason the reason to stop the server   * @return a StopServerRequest   */
specifier|public
specifier|static
name|StopServerRequest
name|buildStopServerRequest
parameter_list|(
specifier|final
name|String
name|reason
parameter_list|)
block|{
name|StopServerRequest
operator|.
name|Builder
name|builder
init|=
name|StopServerRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setReason
argument_list|(
name|reason
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|//End utilities for Admin
comment|/**    * Convert a byte array to a protocol buffer RegionSpecifier    *    * @param type the region specifier type    * @param value the region specifier byte array value    * @return a protocol buffer RegionSpecifier    */
specifier|public
specifier|static
name|RegionSpecifier
name|buildRegionSpecifier
parameter_list|(
specifier|final
name|RegionSpecifierType
name|type
parameter_list|,
specifier|final
name|byte
index|[]
name|value
parameter_list|)
block|{
name|RegionSpecifier
operator|.
name|Builder
name|regionBuilder
init|=
name|RegionSpecifier
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|regionBuilder
operator|.
name|setValue
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
name|regionBuilder
operator|.
name|setType
argument_list|(
name|type
argument_list|)
expr_stmt|;
return|return
name|regionBuilder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer Condition    *    * @param row    * @param family    * @param qualifier    * @param comparator    * @param compareType    * @return a Condition    * @throws IOException    */
specifier|private
specifier|static
name|Condition
name|buildCondition
parameter_list|(
specifier|final
name|byte
index|[]
name|row
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|,
specifier|final
name|byte
index|[]
name|qualifier
parameter_list|,
specifier|final
name|ByteArrayComparable
name|comparator
parameter_list|,
specifier|final
name|CompareType
name|compareType
parameter_list|)
throws|throws
name|IOException
block|{
name|Condition
operator|.
name|Builder
name|builder
init|=
name|Condition
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setRow
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|row
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setFamily
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|family
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setQualifier
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|qualifier
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setComparator
argument_list|(
name|ProtobufUtil
operator|.
name|toComparator
argument_list|(
name|comparator
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setCompareType
argument_list|(
name|compareType
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer AddColumnRequest    *    * @param tableName    * @param column    * @return an AddColumnRequest    */
specifier|public
specifier|static
name|AddColumnRequest
name|buildAddColumnRequest
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|HColumnDescriptor
name|column
parameter_list|)
block|{
name|AddColumnRequest
operator|.
name|Builder
name|builder
init|=
name|AddColumnRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setTableName
argument_list|(
name|ProtobufUtil
operator|.
name|toProtoTableName
argument_list|(
name|tableName
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setColumnFamilies
argument_list|(
name|column
operator|.
name|convert
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer DeleteColumnRequest    *    * @param tableName    * @param columnName    * @return a DeleteColumnRequest    */
specifier|public
specifier|static
name|DeleteColumnRequest
name|buildDeleteColumnRequest
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|byte
index|[]
name|columnName
parameter_list|)
block|{
name|DeleteColumnRequest
operator|.
name|Builder
name|builder
init|=
name|DeleteColumnRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setTableName
argument_list|(
name|ProtobufUtil
operator|.
name|toProtoTableName
argument_list|(
operator|(
name|tableName
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setColumnName
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|columnName
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer ModifyColumnRequest    *    * @param tableName    * @param column    * @return an ModifyColumnRequest    */
specifier|public
specifier|static
name|ModifyColumnRequest
name|buildModifyColumnRequest
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|HColumnDescriptor
name|column
parameter_list|)
block|{
name|ModifyColumnRequest
operator|.
name|Builder
name|builder
init|=
name|ModifyColumnRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setTableName
argument_list|(
name|ProtobufUtil
operator|.
name|toProtoTableName
argument_list|(
operator|(
name|tableName
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setColumnFamilies
argument_list|(
name|column
operator|.
name|convert
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer MoveRegionRequest    *    * @param encodedRegionName    * @param destServerName    * @return A MoveRegionRequest    * @throws DeserializationException    */
specifier|public
specifier|static
name|MoveRegionRequest
name|buildMoveRegionRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|encodedRegionName
parameter_list|,
specifier|final
name|byte
index|[]
name|destServerName
parameter_list|)
throws|throws
name|DeserializationException
block|{
name|MoveRegionRequest
operator|.
name|Builder
name|builder
init|=
name|MoveRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|ENCODED_REGION_NAME
argument_list|,
name|encodedRegionName
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|destServerName
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setDestServerName
argument_list|(
name|ProtobufUtil
operator|.
name|toServerName
argument_list|(
name|ServerName
operator|.
name|valueOf
argument_list|(
name|Bytes
operator|.
name|toString
argument_list|(
name|destServerName
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|DispatchMergingRegionsRequest
name|buildDispatchMergingRegionsRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|encodedNameOfRegionA
parameter_list|,
specifier|final
name|byte
index|[]
name|encodedNameOfRegionB
parameter_list|,
specifier|final
name|boolean
name|forcible
parameter_list|)
throws|throws
name|DeserializationException
block|{
name|DispatchMergingRegionsRequest
operator|.
name|Builder
name|builder
init|=
name|DispatchMergingRegionsRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setRegionA
argument_list|(
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|ENCODED_REGION_NAME
argument_list|,
name|encodedNameOfRegionA
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setRegionB
argument_list|(
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|ENCODED_REGION_NAME
argument_list|,
name|encodedNameOfRegionB
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setForcible
argument_list|(
name|forcible
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a protocol buffer AssignRegionRequest    *    * @param regionName    * @return an AssignRegionRequest    */
specifier|public
specifier|static
name|AssignRegionRequest
name|buildAssignRegionRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|)
block|{
name|AssignRegionRequest
operator|.
name|Builder
name|builder
init|=
name|AssignRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Creates a protocol buffer UnassignRegionRequest    *    * @param regionName    * @param force    * @return an UnassignRegionRequest    */
specifier|public
specifier|static
name|UnassignRegionRequest
name|buildUnassignRegionRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|,
specifier|final
name|boolean
name|force
parameter_list|)
block|{
name|UnassignRegionRequest
operator|.
name|Builder
name|builder
init|=
name|UnassignRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setForce
argument_list|(
name|force
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Creates a protocol buffer OfflineRegionRequest    *    * @param regionName    * @return an OfflineRegionRequest    */
specifier|public
specifier|static
name|OfflineRegionRequest
name|buildOfflineRegionRequest
parameter_list|(
specifier|final
name|byte
index|[]
name|regionName
parameter_list|)
block|{
name|OfflineRegionRequest
operator|.
name|Builder
name|builder
init|=
name|OfflineRegionRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|buildRegionSpecifier
argument_list|(
name|RegionSpecifierType
operator|.
name|REGION_NAME
argument_list|,
name|regionName
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Creates a protocol buffer DeleteTableRequest    *    * @param tableName    * @return a DeleteTableRequest    */
specifier|public
specifier|static
name|DeleteTableRequest
name|buildDeleteTableRequest
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
block|{
name|DeleteTableRequest
operator|.
name|Builder
name|builder
init|=
name|DeleteTableRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setTableName
argument_list|(
name|ProtobufUtil
operator|.
name|toProtoTableName
argument_list|(
name|tableName
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Creates a protocol buffer TruncateTableRequest    *    * @param tableName name of table to truncate    * @param preserveSplits True if the splits should be preserved    * @return a TruncateTableRequest    */
specifier|public
specifier|static
name|TruncateTableRequest
name|buildTruncateTableRequest
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
name|boolean
name|preserveSplits
parameter_list|)
block|{
name|TruncateTableRequest
operator|.
name|Builder
name|builder
init|=
name|TruncateTableRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setTableName
argument_list|(
name|ProtobufUtil
operator|.
name|toProtoTableName
argument_list|(
name|tableName
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setPreserveSplits
argument_list|(
name|preserveSplits
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Creates a protocol buffer EnableTableRequest    *    * @param tableName    * @return an EnableTableRequest    */
specifier|public
specifier|static
name|EnableTableRequest
name|buildEnableTableRequest
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
block|{
name|EnableTableRequest
operator|.
name|Builder
name|builder
init|=
name|EnableTableRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setTableName
argument_list|(
name|ProtobufUtil
operator|.
name|toProtoTableName
argument_list|(
name|tableName
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Creates a protocol buffer DisableTableRequest    *    * @param tableName    * @return a DisableTableRequest    */
specifier|public
specifier|static
name|DisableTableRequest
name|buildDisableTableRequest
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
block|{
name|DisableTableRequest
operator|.
name|Builder
name|builder
init|=
name|DisableTableRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setTableName
argument_list|(
name|ProtobufUtil
operator|.
name|toProtoTableName
argument_list|(
operator|(
name|tableName
operator|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Creates a protocol buffer CreateTableRequest    *    * @param hTableDesc    * @param splitKeys    * @return a CreateTableRequest    */
specifier|public
specifier|static
name|CreateTableRequest
name|buildCreateTableRequest
parameter_list|(
specifier|final
name|HTableDescriptor
name|hTableDesc
parameter_list|,
specifier|final
name|byte
index|[]
index|[]
name|splitKeys
parameter_list|)
block|{
name|CreateTableRequest
operator|.
name|Builder
name|builder
init|=
name|CreateTableRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setTableSchema
argument_list|(
name|hTableDesc
operator|.
name|convert
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|splitKeys
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|byte
index|[]
name|splitKey
range|:
name|splitKeys
control|)
block|{
name|builder
operator|.
name|addSplitKeys
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|splitKey
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Creates a protocol buffer ModifyTableRequest    *    * @param tableName    * @param hTableDesc    * @return a ModifyTableRequest    */
specifier|public
specifier|static
name|ModifyTableRequest
name|buildModifyTableRequest
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|HTableDescriptor
name|hTableDesc
parameter_list|)
block|{
name|ModifyTableRequest
operator|.
name|Builder
name|builder
init|=
name|ModifyTableRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setTableName
argument_list|(
name|ProtobufUtil
operator|.
name|toProtoTableName
argument_list|(
operator|(
name|tableName
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setTableSchema
argument_list|(
name|hTableDesc
operator|.
name|convert
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Creates a protocol buffer GetSchemaAlterStatusRequest    *    * @param tableName    * @return a GetSchemaAlterStatusRequest    */
specifier|public
specifier|static
name|GetSchemaAlterStatusRequest
name|buildGetSchemaAlterStatusRequest
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
block|{
name|GetSchemaAlterStatusRequest
operator|.
name|Builder
name|builder
init|=
name|GetSchemaAlterStatusRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setTableName
argument_list|(
name|ProtobufUtil
operator|.
name|toProtoTableName
argument_list|(
operator|(
name|tableName
operator|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Creates a protocol buffer GetTableDescriptorsRequest    *    * @param tableNames    * @return a GetTableDescriptorsRequest    */
specifier|public
specifier|static
name|GetTableDescriptorsRequest
name|buildGetTableDescriptorsRequest
parameter_list|(
specifier|final
name|List
argument_list|<
name|TableName
argument_list|>
name|tableNames
parameter_list|)
block|{
name|GetTableDescriptorsRequest
operator|.
name|Builder
name|builder
init|=
name|GetTableDescriptorsRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
name|tableNames
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|TableName
name|tableName
range|:
name|tableNames
control|)
block|{
name|builder
operator|.
name|addTableNames
argument_list|(
name|ProtobufUtil
operator|.
name|toProtoTableName
argument_list|(
name|tableName
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Creates a protocol buffer GetTableDescriptorsRequest    *    * @param pattern The compiled regular expression to match against    * @param includeSysTables False to match only against userspace tables    * @return a GetTableDescriptorsRequest    */
specifier|public
specifier|static
name|GetTableDescriptorsRequest
name|buildGetTableDescriptorsRequest
parameter_list|(
specifier|final
name|Pattern
name|pattern
parameter_list|,
name|boolean
name|includeSysTables
parameter_list|)
block|{
name|GetTableDescriptorsRequest
operator|.
name|Builder
name|builder
init|=
name|GetTableDescriptorsRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
name|pattern
operator|!=
literal|null
condition|)
name|builder
operator|.
name|setRegex
argument_list|(
name|pattern
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setIncludeSysTables
argument_list|(
name|includeSysTables
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Creates a protocol buffer GetTableNamesRequest    *    * @param pattern The compiled regular expression to match against    * @param includeSysTables False to match only against userspace tables    * @return a GetTableNamesRequest    */
specifier|public
specifier|static
name|GetTableNamesRequest
name|buildGetTableNamesRequest
parameter_list|(
specifier|final
name|Pattern
name|pattern
parameter_list|,
name|boolean
name|includeSysTables
parameter_list|)
block|{
name|GetTableNamesRequest
operator|.
name|Builder
name|builder
init|=
name|GetTableNamesRequest
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
if|if
condition|(
name|pattern
operator|!=
literal|null
condition|)
name|builder
operator|.
name|setRegex
argument_list|(
name|pattern
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setIncludeSysTables
argument_list|(
name|includeSysTables
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Creates a protocol buffer GetTableStateRequest    *    * @param tableName table to get request for    * @return a GetTableStateRequest    */
specifier|public
specifier|static
name|GetTableStateRequest
name|buildGetTableStateRequest
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
block|{
return|return
name|GetTableStateRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setTableName
argument_list|(
name|ProtobufUtil
operator|.
name|toProtoTableName
argument_list|(
name|tableName
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Creates a protocol buffer GetTableDescriptorsRequest for a single table    *    * @param tableName the table name    * @return a GetTableDescriptorsRequest    */
specifier|public
specifier|static
name|GetTableDescriptorsRequest
name|buildGetTableDescriptorsRequest
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
block|{
return|return
name|GetTableDescriptorsRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|addTableNames
argument_list|(
name|ProtobufUtil
operator|.
name|toProtoTableName
argument_list|(
name|tableName
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Creates a protocol buffer IsMasterRunningRequest    *    * @return a IsMasterRunningRequest    */
specifier|public
specifier|static
name|IsMasterRunningRequest
name|buildIsMasterRunningRequest
parameter_list|()
block|{
return|return
name|IsMasterRunningRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Creates a protocol buffer BalanceRequest    *    * @return a BalanceRequest    */
specifier|public
specifier|static
name|BalanceRequest
name|buildBalanceRequest
parameter_list|()
block|{
return|return
name|BalanceRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Creates a protocol buffer SetBalancerRunningRequest    *    * @param on    * @param synchronous    * @return a SetBalancerRunningRequest    */
specifier|public
specifier|static
name|SetBalancerRunningRequest
name|buildSetBalancerRunningRequest
parameter_list|(
name|boolean
name|on
parameter_list|,
name|boolean
name|synchronous
parameter_list|)
block|{
return|return
name|SetBalancerRunningRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setOn
argument_list|(
name|on
argument_list|)
operator|.
name|setSynchronous
argument_list|(
name|synchronous
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Creates a protocol buffer IsBalancerEnabledRequest    *    * @return a IsBalancerEnabledRequest    */
specifier|public
specifier|static
name|IsBalancerEnabledRequest
name|buildIsBalancerEnabledRequest
parameter_list|()
block|{
return|return
name|IsBalancerEnabledRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * @see {@link #buildGetClusterStatusRequest}    */
specifier|private
specifier|static
specifier|final
name|GetClusterStatusRequest
name|GET_CLUSTER_STATUS_REQUEST
init|=
name|GetClusterStatusRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**    * Creates a protocol buffer GetClusterStatusRequest    *    * @return A GetClusterStatusRequest    */
specifier|public
specifier|static
name|GetClusterStatusRequest
name|buildGetClusterStatusRequest
parameter_list|()
block|{
return|return
name|GET_CLUSTER_STATUS_REQUEST
return|;
block|}
comment|/**    * @see {@link #buildCatalogScanRequest}    */
specifier|private
specifier|static
specifier|final
name|RunCatalogScanRequest
name|CATALOG_SCAN_REQUEST
init|=
name|RunCatalogScanRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**    * Creates a request for running a catalog scan    * @return A {@link RunCatalogScanRequest}    */
specifier|public
specifier|static
name|RunCatalogScanRequest
name|buildCatalogScanRequest
parameter_list|()
block|{
return|return
name|CATALOG_SCAN_REQUEST
return|;
block|}
comment|/**    * Creates a request for enabling/disabling the catalog janitor    * @return A {@link EnableCatalogJanitorRequest}    */
specifier|public
specifier|static
name|EnableCatalogJanitorRequest
name|buildEnableCatalogJanitorRequest
parameter_list|(
name|boolean
name|enable
parameter_list|)
block|{
return|return
name|EnableCatalogJanitorRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setEnable
argument_list|(
name|enable
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * @see {@link #buildIsCatalogJanitorEnabledRequest()}    */
specifier|private
specifier|static
specifier|final
name|IsCatalogJanitorEnabledRequest
name|IS_CATALOG_JANITOR_ENABLED_REQUEST
init|=
name|IsCatalogJanitorEnabledRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**    * Creates a request for querying the master whether the catalog janitor is enabled    * @return A {@link IsCatalogJanitorEnabledRequest}    */
specifier|public
specifier|static
name|IsCatalogJanitorEnabledRequest
name|buildIsCatalogJanitorEnabledRequest
parameter_list|()
block|{
return|return
name|IS_CATALOG_JANITOR_ENABLED_REQUEST
return|;
block|}
comment|/**    * Creates a request for querying the master the last flushed sequence Id for a region    * @param regionName    * @return A {@link GetLastFlushedSequenceIdRequest}    */
specifier|public
specifier|static
name|GetLastFlushedSequenceIdRequest
name|buildGetLastFlushedSequenceIdRequest
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|)
block|{
return|return
name|GetLastFlushedSequenceIdRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setRegionName
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|regionName
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a request to grant user permissions.    *    * @param username the short user name who to grant permissions    * @param actions the permissions to be granted    * @return A {@link AccessControlProtos} GrantRequest    */
specifier|public
specifier|static
name|AccessControlProtos
operator|.
name|GrantRequest
name|buildGrantRequest
parameter_list|(
name|String
name|username
parameter_list|,
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Action
modifier|...
name|actions
parameter_list|)
block|{
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Builder
name|ret
init|=
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|AccessControlProtos
operator|.
name|GlobalPermission
operator|.
name|Builder
name|permissionBuilder
init|=
name|AccessControlProtos
operator|.
name|GlobalPermission
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Action
name|a
range|:
name|actions
control|)
block|{
name|permissionBuilder
operator|.
name|addAction
argument_list|(
name|a
argument_list|)
expr_stmt|;
block|}
name|ret
operator|.
name|setType
argument_list|(
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Type
operator|.
name|Global
argument_list|)
operator|.
name|setGlobalPermission
argument_list|(
name|permissionBuilder
argument_list|)
expr_stmt|;
return|return
name|AccessControlProtos
operator|.
name|GrantRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setUserPermission
argument_list|(
name|AccessControlProtos
operator|.
name|UserPermission
operator|.
name|newBuilder
argument_list|()
operator|.
name|setUser
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
name|username
argument_list|)
argument_list|)
operator|.
name|setPermission
argument_list|(
name|ret
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a request to grant user permissions.    *    * @param username the short user name who to grant permissions    * @param tableName optional table name the permissions apply    * @param family optional column family    * @param qualifier optional qualifier    * @param actions the permissions to be granted    * @return A {@link AccessControlProtos} GrantRequest    */
specifier|public
specifier|static
name|AccessControlProtos
operator|.
name|GrantRequest
name|buildGrantRequest
parameter_list|(
name|String
name|username
parameter_list|,
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
name|family
parameter_list|,
name|byte
index|[]
name|qualifier
parameter_list|,
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Action
modifier|...
name|actions
parameter_list|)
block|{
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Builder
name|ret
init|=
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|AccessControlProtos
operator|.
name|TablePermission
operator|.
name|Builder
name|permissionBuilder
init|=
name|AccessControlProtos
operator|.
name|TablePermission
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Action
name|a
range|:
name|actions
control|)
block|{
name|permissionBuilder
operator|.
name|addAction
argument_list|(
name|a
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|tableName
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|(
literal|"TableName cannot be null"
argument_list|)
throw|;
block|}
name|permissionBuilder
operator|.
name|setTableName
argument_list|(
name|ProtobufUtil
operator|.
name|toProtoTableName
argument_list|(
name|tableName
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|family
operator|!=
literal|null
condition|)
block|{
name|permissionBuilder
operator|.
name|setFamily
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|family
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|qualifier
operator|!=
literal|null
condition|)
block|{
name|permissionBuilder
operator|.
name|setQualifier
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|qualifier
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|ret
operator|.
name|setType
argument_list|(
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Type
operator|.
name|Table
argument_list|)
operator|.
name|setTablePermission
argument_list|(
name|permissionBuilder
argument_list|)
expr_stmt|;
return|return
name|AccessControlProtos
operator|.
name|GrantRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setUserPermission
argument_list|(
name|AccessControlProtos
operator|.
name|UserPermission
operator|.
name|newBuilder
argument_list|()
operator|.
name|setUser
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
name|username
argument_list|)
argument_list|)
operator|.
name|setPermission
argument_list|(
name|ret
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a request to grant user permissions.    *    * @param username the short user name who to grant permissions    * @param namespace optional table name the permissions apply    * @param actions the permissions to be granted    * @return A {@link AccessControlProtos} GrantRequest    */
specifier|public
specifier|static
name|AccessControlProtos
operator|.
name|GrantRequest
name|buildGrantRequest
parameter_list|(
name|String
name|username
parameter_list|,
name|String
name|namespace
parameter_list|,
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Action
modifier|...
name|actions
parameter_list|)
block|{
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Builder
name|ret
init|=
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|AccessControlProtos
operator|.
name|NamespacePermission
operator|.
name|Builder
name|permissionBuilder
init|=
name|AccessControlProtos
operator|.
name|NamespacePermission
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Action
name|a
range|:
name|actions
control|)
block|{
name|permissionBuilder
operator|.
name|addAction
argument_list|(
name|a
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|namespace
operator|!=
literal|null
condition|)
block|{
name|permissionBuilder
operator|.
name|setNamespaceName
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
name|namespace
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|ret
operator|.
name|setType
argument_list|(
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Type
operator|.
name|Namespace
argument_list|)
operator|.
name|setNamespacePermission
argument_list|(
name|permissionBuilder
argument_list|)
expr_stmt|;
return|return
name|AccessControlProtos
operator|.
name|GrantRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setUserPermission
argument_list|(
name|AccessControlProtos
operator|.
name|UserPermission
operator|.
name|newBuilder
argument_list|()
operator|.
name|setUser
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
name|username
argument_list|)
argument_list|)
operator|.
name|setPermission
argument_list|(
name|ret
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a request to revoke user permissions.    *    * @param username the short user name whose permissions to be revoked    * @param actions the permissions to be revoked    * @return A {@link AccessControlProtos} RevokeRequest    */
specifier|public
specifier|static
name|AccessControlProtos
operator|.
name|RevokeRequest
name|buildRevokeRequest
parameter_list|(
name|String
name|username
parameter_list|,
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Action
modifier|...
name|actions
parameter_list|)
block|{
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Builder
name|ret
init|=
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|AccessControlProtos
operator|.
name|GlobalPermission
operator|.
name|Builder
name|permissionBuilder
init|=
name|AccessControlProtos
operator|.
name|GlobalPermission
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Action
name|a
range|:
name|actions
control|)
block|{
name|permissionBuilder
operator|.
name|addAction
argument_list|(
name|a
argument_list|)
expr_stmt|;
block|}
name|ret
operator|.
name|setType
argument_list|(
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Type
operator|.
name|Global
argument_list|)
operator|.
name|setGlobalPermission
argument_list|(
name|permissionBuilder
argument_list|)
expr_stmt|;
return|return
name|AccessControlProtos
operator|.
name|RevokeRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setUserPermission
argument_list|(
name|AccessControlProtos
operator|.
name|UserPermission
operator|.
name|newBuilder
argument_list|()
operator|.
name|setUser
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
name|username
argument_list|)
argument_list|)
operator|.
name|setPermission
argument_list|(
name|ret
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a request to revoke user permissions.    *    * @param username the short user name whose permissions to be revoked    * @param tableName optional table name the permissions apply    * @param family optional column family    * @param qualifier optional qualifier    * @param actions the permissions to be revoked    * @return A {@link AccessControlProtos} RevokeRequest    */
specifier|public
specifier|static
name|AccessControlProtos
operator|.
name|RevokeRequest
name|buildRevokeRequest
parameter_list|(
name|String
name|username
parameter_list|,
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
name|family
parameter_list|,
name|byte
index|[]
name|qualifier
parameter_list|,
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Action
modifier|...
name|actions
parameter_list|)
block|{
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Builder
name|ret
init|=
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|AccessControlProtos
operator|.
name|TablePermission
operator|.
name|Builder
name|permissionBuilder
init|=
name|AccessControlProtos
operator|.
name|TablePermission
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Action
name|a
range|:
name|actions
control|)
block|{
name|permissionBuilder
operator|.
name|addAction
argument_list|(
name|a
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|tableName
operator|!=
literal|null
condition|)
block|{
name|permissionBuilder
operator|.
name|setTableName
argument_list|(
name|ProtobufUtil
operator|.
name|toProtoTableName
argument_list|(
name|tableName
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|family
operator|!=
literal|null
condition|)
block|{
name|permissionBuilder
operator|.
name|setFamily
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|family
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|qualifier
operator|!=
literal|null
condition|)
block|{
name|permissionBuilder
operator|.
name|setQualifier
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|qualifier
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|ret
operator|.
name|setType
argument_list|(
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Type
operator|.
name|Table
argument_list|)
operator|.
name|setTablePermission
argument_list|(
name|permissionBuilder
argument_list|)
expr_stmt|;
return|return
name|AccessControlProtos
operator|.
name|RevokeRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setUserPermission
argument_list|(
name|AccessControlProtos
operator|.
name|UserPermission
operator|.
name|newBuilder
argument_list|()
operator|.
name|setUser
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
name|username
argument_list|)
argument_list|)
operator|.
name|setPermission
argument_list|(
name|ret
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a request to revoke user permissions.    *    * @param username the short user name whose permissions to be revoked    * @param namespace optional table name the permissions apply    * @param actions the permissions to be revoked    * @return A {@link AccessControlProtos} RevokeRequest    */
specifier|public
specifier|static
name|AccessControlProtos
operator|.
name|RevokeRequest
name|buildRevokeRequest
parameter_list|(
name|String
name|username
parameter_list|,
name|String
name|namespace
parameter_list|,
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Action
modifier|...
name|actions
parameter_list|)
block|{
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Builder
name|ret
init|=
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|AccessControlProtos
operator|.
name|NamespacePermission
operator|.
name|Builder
name|permissionBuilder
init|=
name|AccessControlProtos
operator|.
name|NamespacePermission
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Action
name|a
range|:
name|actions
control|)
block|{
name|permissionBuilder
operator|.
name|addAction
argument_list|(
name|a
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|namespace
operator|!=
literal|null
condition|)
block|{
name|permissionBuilder
operator|.
name|setNamespaceName
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
name|namespace
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|ret
operator|.
name|setType
argument_list|(
name|AccessControlProtos
operator|.
name|Permission
operator|.
name|Type
operator|.
name|Namespace
argument_list|)
operator|.
name|setNamespacePermission
argument_list|(
name|permissionBuilder
argument_list|)
expr_stmt|;
return|return
name|AccessControlProtos
operator|.
name|RevokeRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setUserPermission
argument_list|(
name|AccessControlProtos
operator|.
name|UserPermission
operator|.
name|newBuilder
argument_list|()
operator|.
name|setUser
argument_list|(
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
name|username
argument_list|)
argument_list|)
operator|.
name|setPermission
argument_list|(
name|ret
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * Create a RegionOpenInfo based on given region info and version of offline node    */
specifier|private
specifier|static
name|RegionOpenInfo
name|buildRegionOpenInfo
parameter_list|(
specifier|final
name|HRegionInfo
name|region
parameter_list|,
specifier|final
name|List
argument_list|<
name|ServerName
argument_list|>
name|favoredNodes
parameter_list|,
name|Boolean
name|openForReplay
parameter_list|)
block|{
name|RegionOpenInfo
operator|.
name|Builder
name|builder
init|=
name|RegionOpenInfo
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setRegion
argument_list|(
name|HRegionInfo
operator|.
name|convert
argument_list|(
name|region
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|favoredNodes
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|ServerName
name|server
range|:
name|favoredNodes
control|)
block|{
name|builder
operator|.
name|addFavoredNodes
argument_list|(
name|ProtobufUtil
operator|.
name|toServerName
argument_list|(
name|server
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|openForReplay
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setOpenForDistributedLogReplay
argument_list|(
name|openForReplay
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
block|}
end_class

end_unit

