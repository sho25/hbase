begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright The Apache Software Foundation  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  * http://www.apache.org/licenses/LICENSE-2.0  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
package|;
end_package

begin_import
import|import
name|edu
operator|.
name|umd
operator|.
name|cs
operator|.
name|findbugs
operator|.
name|annotations
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|replication
operator|.
name|ReplicationLoadSink
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|replication
operator|.
name|ReplicationLoadSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|ProtobufUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
specifier|final
class|class
name|ServerMetricsBuilder
block|{
comment|/**    * @param sn the server name    * @return a empty metrics    */
specifier|public
specifier|static
name|ServerMetrics
name|of
parameter_list|(
name|ServerName
name|sn
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|(
name|sn
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|ServerMetrics
name|of
parameter_list|(
name|ServerName
name|sn
parameter_list|,
name|int
name|versionNumber
parameter_list|,
name|String
name|version
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|(
name|sn
argument_list|)
operator|.
name|setVersionNumber
argument_list|(
name|versionNumber
argument_list|)
operator|.
name|setVersion
argument_list|(
name|version
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|ServerMetrics
name|toServerMetrics
parameter_list|(
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|serverInfo
parameter_list|)
block|{
return|return
name|toServerMetrics
argument_list|(
name|ProtobufUtil
operator|.
name|toServerName
argument_list|(
name|serverInfo
operator|.
name|getServer
argument_list|()
argument_list|)
argument_list|,
literal|0
argument_list|,
literal|"0.0.0"
argument_list|,
name|serverInfo
operator|.
name|getServerLoad
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|ServerMetrics
name|toServerMetrics
parameter_list|(
name|ServerName
name|serverName
parameter_list|,
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|serverLoadPB
parameter_list|)
block|{
return|return
name|toServerMetrics
argument_list|(
name|serverName
argument_list|,
literal|0
argument_list|,
literal|"0.0.0"
argument_list|,
name|serverLoadPB
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|ServerMetrics
name|toServerMetrics
parameter_list|(
name|ServerName
name|serverName
parameter_list|,
name|int
name|versionNumber
parameter_list|,
name|String
name|version
parameter_list|,
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|serverLoadPB
parameter_list|)
block|{
return|return
name|ServerMetricsBuilder
operator|.
name|newBuilder
argument_list|(
name|serverName
argument_list|)
operator|.
name|setRequestCountPerSecond
argument_list|(
name|serverLoadPB
operator|.
name|getNumberOfRequests
argument_list|()
argument_list|)
operator|.
name|setRequestCount
argument_list|(
name|serverLoadPB
operator|.
name|getTotalNumberOfRequests
argument_list|()
argument_list|)
operator|.
name|setInfoServerPort
argument_list|(
name|serverLoadPB
operator|.
name|getInfoServerPort
argument_list|()
argument_list|)
operator|.
name|setMaxHeapSize
argument_list|(
operator|new
name|Size
argument_list|(
name|serverLoadPB
operator|.
name|getMaxHeapMB
argument_list|()
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|)
operator|.
name|setUsedHeapSize
argument_list|(
operator|new
name|Size
argument_list|(
name|serverLoadPB
operator|.
name|getUsedHeapMB
argument_list|()
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|)
operator|.
name|setCoprocessorNames
argument_list|(
name|serverLoadPB
operator|.
name|getCoprocessorsList
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|HBaseProtos
operator|.
name|Coprocessor
operator|::
name|getName
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setRegionMetrics
argument_list|(
name|serverLoadPB
operator|.
name|getRegionLoadsList
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|RegionMetricsBuilder
operator|::
name|toRegionMetrics
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setReplicationLoadSources
argument_list|(
name|serverLoadPB
operator|.
name|getReplLoadSourceList
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|ProtobufUtil
operator|::
name|toReplicationLoadSource
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setReplicationLoadSink
argument_list|(
name|serverLoadPB
operator|.
name|hasReplLoadSink
argument_list|()
condition|?
name|ProtobufUtil
operator|.
name|toReplicationLoadSink
argument_list|(
name|serverLoadPB
operator|.
name|getReplLoadSink
argument_list|()
argument_list|)
else|:
literal|null
argument_list|)
operator|.
name|setReportTimestamp
argument_list|(
name|serverLoadPB
operator|.
name|getReportEndTime
argument_list|()
argument_list|)
operator|.
name|setLastReportTimestamp
argument_list|(
name|serverLoadPB
operator|.
name|getReportStartTime
argument_list|()
argument_list|)
operator|.
name|setVersionNumber
argument_list|(
name|versionNumber
argument_list|)
operator|.
name|setVersion
argument_list|(
name|version
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|List
argument_list|<
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|>
name|toCoprocessor
parameter_list|(
name|Collection
argument_list|<
name|String
argument_list|>
name|names
parameter_list|)
block|{
return|return
name|names
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|n
lambda|->
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|newBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|n
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|toServerLoad
parameter_list|(
name|ServerMetrics
name|metrics
parameter_list|)
block|{
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|.
name|Builder
name|builder
init|=
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|.
name|newBuilder
argument_list|()
operator|.
name|setNumberOfRequests
argument_list|(
name|metrics
operator|.
name|getRequestCountPerSecond
argument_list|()
argument_list|)
operator|.
name|setTotalNumberOfRequests
argument_list|(
name|metrics
operator|.
name|getRequestCount
argument_list|()
argument_list|)
operator|.
name|setInfoServerPort
argument_list|(
name|metrics
operator|.
name|getInfoServerPort
argument_list|()
argument_list|)
operator|.
name|setMaxHeapMB
argument_list|(
operator|(
name|int
operator|)
name|metrics
operator|.
name|getMaxHeapSize
argument_list|()
operator|.
name|get
argument_list|(
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|)
operator|.
name|setUsedHeapMB
argument_list|(
operator|(
name|int
operator|)
name|metrics
operator|.
name|getUsedHeapSize
argument_list|()
operator|.
name|get
argument_list|(
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|)
operator|.
name|addAllCoprocessors
argument_list|(
name|toCoprocessor
argument_list|(
name|metrics
operator|.
name|getCoprocessorNames
argument_list|()
argument_list|)
argument_list|)
operator|.
name|addAllRegionLoads
argument_list|(
name|metrics
operator|.
name|getRegionMetrics
argument_list|()
operator|.
name|values
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|RegionMetricsBuilder
operator|::
name|toRegionLoad
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
argument_list|)
operator|.
name|addAllReplLoadSource
argument_list|(
name|metrics
operator|.
name|getReplicationLoadSourceList
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|ProtobufUtil
operator|::
name|toReplicationLoadSource
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setReportStartTime
argument_list|(
name|metrics
operator|.
name|getLastReportTimestamp
argument_list|()
argument_list|)
operator|.
name|setReportEndTime
argument_list|(
name|metrics
operator|.
name|getReportTimestamp
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|metrics
operator|.
name|getReplicationLoadSink
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|setReplLoadSink
argument_list|(
name|ProtobufUtil
operator|.
name|toReplicationLoadSink
argument_list|(
name|metrics
operator|.
name|getReplicationLoadSink
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|ServerMetricsBuilder
name|newBuilder
parameter_list|(
name|ServerName
name|sn
parameter_list|)
block|{
return|return
operator|new
name|ServerMetricsBuilder
argument_list|(
name|sn
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|ServerName
name|serverName
decl_stmt|;
specifier|private
name|int
name|versionNumber
decl_stmt|;
specifier|private
name|String
name|version
init|=
literal|"0.0.0"
decl_stmt|;
specifier|private
name|long
name|requestCountPerSecond
decl_stmt|;
specifier|private
name|long
name|requestCount
decl_stmt|;
specifier|private
name|Size
name|usedHeapSize
init|=
name|Size
operator|.
name|ZERO
decl_stmt|;
specifier|private
name|Size
name|maxHeapSize
init|=
name|Size
operator|.
name|ZERO
decl_stmt|;
specifier|private
name|int
name|infoServerPort
decl_stmt|;
specifier|private
name|List
argument_list|<
name|ReplicationLoadSource
argument_list|>
name|sources
init|=
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
annotation|@
name|Nullable
specifier|private
name|ReplicationLoadSink
name|sink
init|=
literal|null
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|byte
index|[]
argument_list|,
name|RegionMetrics
argument_list|>
name|regionStatus
init|=
operator|new
name|TreeMap
argument_list|<>
argument_list|(
name|Bytes
operator|.
name|BYTES_COMPARATOR
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|Set
argument_list|<
name|String
argument_list|>
name|coprocessorNames
init|=
operator|new
name|TreeSet
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
name|long
name|reportTimestamp
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
specifier|private
name|long
name|lastReportTimestamp
init|=
literal|0
decl_stmt|;
specifier|private
name|ServerMetricsBuilder
parameter_list|(
name|ServerName
name|serverName
parameter_list|)
block|{
name|this
operator|.
name|serverName
operator|=
name|serverName
expr_stmt|;
block|}
specifier|public
name|ServerMetricsBuilder
name|setVersionNumber
parameter_list|(
name|int
name|versionNumber
parameter_list|)
block|{
name|this
operator|.
name|versionNumber
operator|=
name|versionNumber
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|ServerMetricsBuilder
name|setVersion
parameter_list|(
name|String
name|version
parameter_list|)
block|{
name|this
operator|.
name|version
operator|=
name|version
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|ServerMetricsBuilder
name|setRequestCountPerSecond
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|this
operator|.
name|requestCountPerSecond
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|ServerMetricsBuilder
name|setRequestCount
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|this
operator|.
name|requestCount
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|ServerMetricsBuilder
name|setUsedHeapSize
parameter_list|(
name|Size
name|value
parameter_list|)
block|{
name|this
operator|.
name|usedHeapSize
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|ServerMetricsBuilder
name|setMaxHeapSize
parameter_list|(
name|Size
name|value
parameter_list|)
block|{
name|this
operator|.
name|maxHeapSize
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|ServerMetricsBuilder
name|setInfoServerPort
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|infoServerPort
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|ServerMetricsBuilder
name|setReplicationLoadSources
parameter_list|(
name|List
argument_list|<
name|ReplicationLoadSource
argument_list|>
name|value
parameter_list|)
block|{
name|this
operator|.
name|sources
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|ServerMetricsBuilder
name|setReplicationLoadSink
parameter_list|(
name|ReplicationLoadSink
name|value
parameter_list|)
block|{
name|this
operator|.
name|sink
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|ServerMetricsBuilder
name|setRegionMetrics
parameter_list|(
name|List
argument_list|<
name|RegionMetrics
argument_list|>
name|value
parameter_list|)
block|{
name|value
operator|.
name|forEach
argument_list|(
name|v
lambda|->
name|this
operator|.
name|regionStatus
operator|.
name|put
argument_list|(
name|v
operator|.
name|getRegionName
argument_list|()
argument_list|,
name|v
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|ServerMetricsBuilder
name|setCoprocessorNames
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|value
parameter_list|)
block|{
name|coprocessorNames
operator|.
name|addAll
argument_list|(
name|value
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|ServerMetricsBuilder
name|setReportTimestamp
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|this
operator|.
name|reportTimestamp
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|ServerMetricsBuilder
name|setLastReportTimestamp
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|this
operator|.
name|lastReportTimestamp
operator|=
name|value
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|ServerMetrics
name|build
parameter_list|()
block|{
return|return
operator|new
name|ServerMetricsImpl
argument_list|(
name|serverName
argument_list|,
name|versionNumber
argument_list|,
name|version
argument_list|,
name|requestCountPerSecond
argument_list|,
name|requestCount
argument_list|,
name|usedHeapSize
argument_list|,
name|maxHeapSize
argument_list|,
name|infoServerPort
argument_list|,
name|sources
argument_list|,
name|sink
argument_list|,
name|regionStatus
argument_list|,
name|coprocessorNames
argument_list|,
name|reportTimestamp
argument_list|,
name|lastReportTimestamp
argument_list|)
return|;
block|}
specifier|private
specifier|static
class|class
name|ServerMetricsImpl
implements|implements
name|ServerMetrics
block|{
specifier|private
specifier|final
name|ServerName
name|serverName
decl_stmt|;
specifier|private
specifier|final
name|int
name|versionNumber
decl_stmt|;
specifier|private
specifier|final
name|String
name|version
decl_stmt|;
specifier|private
specifier|final
name|long
name|requestCountPerSecond
decl_stmt|;
specifier|private
specifier|final
name|long
name|requestCount
decl_stmt|;
specifier|private
specifier|final
name|Size
name|usedHeapSize
decl_stmt|;
specifier|private
specifier|final
name|Size
name|maxHeapSize
decl_stmt|;
specifier|private
specifier|final
name|int
name|infoServerPort
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|ReplicationLoadSource
argument_list|>
name|sources
decl_stmt|;
annotation|@
name|Nullable
specifier|private
specifier|final
name|ReplicationLoadSink
name|sink
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|byte
index|[]
argument_list|,
name|RegionMetrics
argument_list|>
name|regionStatus
decl_stmt|;
specifier|private
specifier|final
name|Set
argument_list|<
name|String
argument_list|>
name|coprocessorNames
decl_stmt|;
specifier|private
specifier|final
name|long
name|reportTimestamp
decl_stmt|;
specifier|private
specifier|final
name|long
name|lastReportTimestamp
decl_stmt|;
name|ServerMetricsImpl
parameter_list|(
name|ServerName
name|serverName
parameter_list|,
name|int
name|versionNumber
parameter_list|,
name|String
name|version
parameter_list|,
name|long
name|requestCountPerSecond
parameter_list|,
name|long
name|requestCount
parameter_list|,
name|Size
name|usedHeapSize
parameter_list|,
name|Size
name|maxHeapSize
parameter_list|,
name|int
name|infoServerPort
parameter_list|,
name|List
argument_list|<
name|ReplicationLoadSource
argument_list|>
name|sources
parameter_list|,
name|ReplicationLoadSink
name|sink
parameter_list|,
name|Map
argument_list|<
name|byte
index|[]
argument_list|,
name|RegionMetrics
argument_list|>
name|regionStatus
parameter_list|,
name|Set
argument_list|<
name|String
argument_list|>
name|coprocessorNames
parameter_list|,
name|long
name|reportTimestamp
parameter_list|,
name|long
name|lastReportTimestamp
parameter_list|)
block|{
name|this
operator|.
name|serverName
operator|=
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|serverName
argument_list|)
expr_stmt|;
name|this
operator|.
name|versionNumber
operator|=
name|versionNumber
expr_stmt|;
name|this
operator|.
name|version
operator|=
name|version
expr_stmt|;
name|this
operator|.
name|requestCountPerSecond
operator|=
name|requestCountPerSecond
expr_stmt|;
name|this
operator|.
name|requestCount
operator|=
name|requestCount
expr_stmt|;
name|this
operator|.
name|usedHeapSize
operator|=
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|usedHeapSize
argument_list|)
expr_stmt|;
name|this
operator|.
name|maxHeapSize
operator|=
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|maxHeapSize
argument_list|)
expr_stmt|;
name|this
operator|.
name|infoServerPort
operator|=
name|infoServerPort
expr_stmt|;
name|this
operator|.
name|sources
operator|=
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|sources
argument_list|)
expr_stmt|;
name|this
operator|.
name|sink
operator|=
name|sink
expr_stmt|;
name|this
operator|.
name|regionStatus
operator|=
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|regionStatus
argument_list|)
expr_stmt|;
name|this
operator|.
name|coprocessorNames
operator|=
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|coprocessorNames
argument_list|)
expr_stmt|;
name|this
operator|.
name|reportTimestamp
operator|=
name|reportTimestamp
expr_stmt|;
name|this
operator|.
name|lastReportTimestamp
operator|=
name|lastReportTimestamp
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|ServerName
name|getServerName
parameter_list|()
block|{
return|return
name|serverName
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getVersionNumber
parameter_list|()
block|{
return|return
name|versionNumber
return|;
block|}
specifier|public
name|String
name|getVersion
parameter_list|()
block|{
return|return
name|version
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getRequestCountPerSecond
parameter_list|()
block|{
return|return
name|requestCountPerSecond
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getRequestCount
parameter_list|()
block|{
return|return
name|requestCount
return|;
block|}
annotation|@
name|Override
specifier|public
name|Size
name|getUsedHeapSize
parameter_list|()
block|{
return|return
name|usedHeapSize
return|;
block|}
annotation|@
name|Override
specifier|public
name|Size
name|getMaxHeapSize
parameter_list|()
block|{
return|return
name|maxHeapSize
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getInfoServerPort
parameter_list|()
block|{
return|return
name|infoServerPort
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|ReplicationLoadSource
argument_list|>
name|getReplicationLoadSourceList
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|sources
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ReplicationLoadSink
name|getReplicationLoadSink
parameter_list|()
block|{
return|return
name|sink
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|byte
index|[]
argument_list|,
name|RegionMetrics
argument_list|>
name|getRegionMetrics
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|unmodifiableMap
argument_list|(
name|regionStatus
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getCoprocessorNames
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|unmodifiableSet
argument_list|(
name|coprocessorNames
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getReportTimestamp
parameter_list|()
block|{
return|return
name|reportTimestamp
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getLastReportTimestamp
parameter_list|()
block|{
return|return
name|lastReportTimestamp
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|int
name|storeCount
init|=
literal|0
decl_stmt|;
name|int
name|storeFileCount
init|=
literal|0
decl_stmt|;
name|long
name|uncompressedStoreFileSizeMB
init|=
literal|0
decl_stmt|;
name|long
name|storeFileSizeMB
init|=
literal|0
decl_stmt|;
name|long
name|memStoreSizeMB
init|=
literal|0
decl_stmt|;
name|long
name|storefileIndexSizeKB
init|=
literal|0
decl_stmt|;
name|long
name|rootLevelIndexSizeKB
init|=
literal|0
decl_stmt|;
name|long
name|readRequestsCount
init|=
literal|0
decl_stmt|;
name|long
name|cpRequestsCount
init|=
literal|0
decl_stmt|;
name|long
name|writeRequestsCount
init|=
literal|0
decl_stmt|;
name|long
name|filteredReadRequestsCount
init|=
literal|0
decl_stmt|;
name|long
name|bloomFilterSizeMB
init|=
literal|0
decl_stmt|;
name|long
name|compactingCellCount
init|=
literal|0
decl_stmt|;
name|long
name|compactedCellCount
init|=
literal|0
decl_stmt|;
for|for
control|(
name|RegionMetrics
name|r
range|:
name|getRegionMetrics
argument_list|()
operator|.
name|values
argument_list|()
control|)
block|{
name|storeCount
operator|+=
name|r
operator|.
name|getStoreCount
argument_list|()
expr_stmt|;
name|storeFileCount
operator|+=
name|r
operator|.
name|getStoreFileCount
argument_list|()
expr_stmt|;
name|uncompressedStoreFileSizeMB
operator|+=
name|r
operator|.
name|getUncompressedStoreFileSize
argument_list|()
operator|.
name|get
argument_list|(
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
expr_stmt|;
name|storeFileSizeMB
operator|+=
name|r
operator|.
name|getStoreFileSize
argument_list|()
operator|.
name|get
argument_list|(
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
expr_stmt|;
name|memStoreSizeMB
operator|+=
name|r
operator|.
name|getMemStoreSize
argument_list|()
operator|.
name|get
argument_list|(
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
expr_stmt|;
name|storefileIndexSizeKB
operator|+=
name|r
operator|.
name|getStoreFileUncompressedDataIndexSize
argument_list|()
operator|.
name|get
argument_list|(
name|Size
operator|.
name|Unit
operator|.
name|KILOBYTE
argument_list|)
expr_stmt|;
name|readRequestsCount
operator|+=
name|r
operator|.
name|getReadRequestCount
argument_list|()
expr_stmt|;
name|cpRequestsCount
operator|+=
name|r
operator|.
name|getCpRequestCount
argument_list|()
expr_stmt|;
name|writeRequestsCount
operator|+=
name|r
operator|.
name|getWriteRequestCount
argument_list|()
expr_stmt|;
name|filteredReadRequestsCount
operator|+=
name|r
operator|.
name|getFilteredReadRequestCount
argument_list|()
expr_stmt|;
name|rootLevelIndexSizeKB
operator|+=
name|r
operator|.
name|getStoreFileRootLevelIndexSize
argument_list|()
operator|.
name|get
argument_list|(
name|Size
operator|.
name|Unit
operator|.
name|KILOBYTE
argument_list|)
expr_stmt|;
name|bloomFilterSizeMB
operator|+=
name|r
operator|.
name|getBloomFilterSize
argument_list|()
operator|.
name|get
argument_list|(
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
expr_stmt|;
name|compactedCellCount
operator|+=
name|r
operator|.
name|getCompactedCellCount
argument_list|()
expr_stmt|;
name|compactingCellCount
operator|+=
name|r
operator|.
name|getCompactingCellCount
argument_list|()
expr_stmt|;
block|}
name|StringBuilder
name|sb
init|=
name|Strings
operator|.
name|appendKeyValue
argument_list|(
operator|new
name|StringBuilder
argument_list|()
argument_list|,
literal|"requestsPerSecond"
argument_list|,
name|Double
operator|.
name|valueOf
argument_list|(
name|getRequestCountPerSecond
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"numberOfOnlineRegions"
argument_list|,
name|Integer
operator|.
name|valueOf
argument_list|(
name|getRegionMetrics
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"usedHeapMB"
argument_list|,
name|getUsedHeapSize
argument_list|()
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"maxHeapMB"
argument_list|,
name|getMaxHeapSize
argument_list|()
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"numberOfStores"
argument_list|,
name|storeCount
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"numberOfStorefiles"
argument_list|,
name|storeFileCount
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"storefileUncompressedSizeMB"
argument_list|,
name|uncompressedStoreFileSizeMB
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"storefileSizeMB"
argument_list|,
name|storeFileSizeMB
argument_list|)
expr_stmt|;
if|if
condition|(
name|uncompressedStoreFileSizeMB
operator|!=
literal|0
condition|)
block|{
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"compressionRatio"
argument_list|,
name|String
operator|.
name|format
argument_list|(
literal|"%.4f"
argument_list|,
operator|(
name|float
operator|)
name|storeFileSizeMB
operator|/
operator|(
name|float
operator|)
name|uncompressedStoreFileSizeMB
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"memstoreSizeMB"
argument_list|,
name|memStoreSizeMB
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"readRequestsCount"
argument_list|,
name|readRequestsCount
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"cpRequestsCount"
argument_list|,
name|cpRequestsCount
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"filteredReadRequestsCount"
argument_list|,
name|filteredReadRequestsCount
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"writeRequestsCount"
argument_list|,
name|writeRequestsCount
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"rootIndexSizeKB"
argument_list|,
name|rootLevelIndexSizeKB
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"totalStaticIndexSizeKB"
argument_list|,
name|storefileIndexSizeKB
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"totalStaticBloomSizeKB"
argument_list|,
name|bloomFilterSizeMB
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"totalCompactingKVs"
argument_list|,
name|compactingCellCount
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"currentCompactedKVs"
argument_list|,
name|compactedCellCount
argument_list|)
expr_stmt|;
name|float
name|compactionProgressPct
init|=
name|Float
operator|.
name|NaN
decl_stmt|;
if|if
condition|(
name|compactingCellCount
operator|>
literal|0
condition|)
block|{
name|compactionProgressPct
operator|=
name|Float
operator|.
name|valueOf
argument_list|(
operator|(
name|float
operator|)
name|compactedCellCount
operator|/
name|compactingCellCount
argument_list|)
expr_stmt|;
block|}
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"compactionProgressPct"
argument_list|,
name|compactionProgressPct
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"coprocessors"
argument_list|,
name|getCoprocessorNames
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

