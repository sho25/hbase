begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ServerName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|ClientService
import|;
end_import

begin_comment
comment|/**  * Implementations call a RegionServer and implement {@link #call(int)}.  * Passed to a {@link RpcRetryingCaller} so we retry on fail.  * TODO: this class is actually tied to one region, because most of the paths make use of  *       the regioninfo part of location when building requests. The only reason it works for  *       multi-region requests (e.g. batch) is that they happen to not use the region parts.  *       This could be done cleaner (e.g. having a generic parameter and 2 derived classes,  *       RegionCallable and actual RegionServerCallable with ServerName.  * @param<T> the class that the ServerCallable handles  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
specifier|abstract
class|class
name|RegionServerCallable
parameter_list|<
name|T
parameter_list|>
extends|extends
name|AbstractRegionServerCallable
argument_list|<
name|T
argument_list|>
implements|implements
name|RetryingCallable
argument_list|<
name|T
argument_list|>
block|{
specifier|private
name|ClientService
operator|.
name|BlockingInterface
name|stub
decl_stmt|;
comment|/**    * @param connection Connection to use.    * @param tableName Table name to which<code>row</code> belongs.    * @param row The row we want in<code>tableName</code>.    */
specifier|public
name|RegionServerCallable
parameter_list|(
name|Connection
name|connection
parameter_list|,
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
name|row
parameter_list|)
block|{
name|super
argument_list|(
name|connection
argument_list|,
name|tableName
argument_list|,
name|row
argument_list|)
expr_stmt|;
block|}
name|void
name|setClientByServiceName
parameter_list|(
name|ServerName
name|service
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|setStub
argument_list|(
name|getConnection
argument_list|()
operator|.
name|getClient
argument_list|(
name|service
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * @return Client Rpc protobuf communication stub    */
specifier|protected
name|ClientService
operator|.
name|BlockingInterface
name|getStub
parameter_list|()
block|{
return|return
name|this
operator|.
name|stub
return|;
block|}
comment|/**    * Set the client protobuf communication stub    * @param stub to set    */
name|void
name|setStub
parameter_list|(
specifier|final
name|ClientService
operator|.
name|BlockingInterface
name|stub
parameter_list|)
block|{
name|this
operator|.
name|stub
operator|=
name|stub
expr_stmt|;
block|}
block|}
end_class

end_unit

