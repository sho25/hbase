begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|security
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_comment
comment|/**  * Available security capabilities  */
end_comment

begin_enum
annotation|@
name|InterfaceAudience
operator|.
name|Public
specifier|public
enum|enum
name|SecurityCapability
block|{
comment|// Note to implementors: These must match the numbering of Capability values in MasterProtos
name|SIMPLE_AUTHENTICATION
argument_list|(
literal|0
argument_list|)
block|,
name|SECURE_AUTHENTICATION
argument_list|(
literal|1
argument_list|)
block|,
name|AUTHORIZATION
argument_list|(
literal|2
argument_list|)
block|,
name|CELL_AUTHORIZATION
argument_list|(
literal|3
argument_list|)
block|,
name|CELL_VISIBILITY
argument_list|(
literal|4
argument_list|)
block|;
specifier|private
specifier|final
name|int
name|value
decl_stmt|;
specifier|public
name|int
name|getValue
parameter_list|()
block|{
return|return
name|value
return|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|toString
argument_list|()
return|;
block|}
specifier|private
name|SecurityCapability
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
specifier|public
specifier|static
name|SecurityCapability
name|valueOf
parameter_list|(
name|int
name|value
parameter_list|)
block|{
switch|switch
condition|(
name|value
condition|)
block|{
case|case
literal|0
case|:
return|return
name|SIMPLE_AUTHENTICATION
return|;
case|case
literal|1
case|:
return|return
name|SECURE_AUTHENTICATION
return|;
case|case
literal|2
case|:
return|return
name|AUTHORIZATION
return|;
case|case
literal|3
case|:
return|return
name|CELL_AUTHORIZATION
return|;
case|case
literal|4
case|:
return|return
name|CELL_VISIBILITY
return|;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Unknown SecurityCapability value "
operator|+
name|value
argument_list|)
throw|;
block|}
block|}
block|}
end_enum

end_unit

