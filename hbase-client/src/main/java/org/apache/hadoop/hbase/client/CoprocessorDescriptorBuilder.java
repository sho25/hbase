begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|Coprocessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_comment
comment|/**  * Used to build the {@link CoprocessorDescriptor}  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
specifier|public
specifier|final
class|class
name|CoprocessorDescriptorBuilder
block|{
specifier|public
specifier|static
name|CoprocessorDescriptor
name|of
parameter_list|(
name|String
name|className
parameter_list|)
block|{
return|return
operator|new
name|CoprocessorDescriptorBuilder
argument_list|(
name|className
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|CoprocessorDescriptorBuilder
name|newBuilder
parameter_list|(
name|String
name|className
parameter_list|)
block|{
return|return
operator|new
name|CoprocessorDescriptorBuilder
argument_list|(
name|className
argument_list|)
return|;
block|}
specifier|private
specifier|final
name|String
name|className
decl_stmt|;
specifier|private
name|String
name|jarPath
decl_stmt|;
specifier|private
name|int
name|priority
init|=
name|Coprocessor
operator|.
name|PRIORITY_USER
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|properties
init|=
operator|new
name|TreeMap
argument_list|()
decl_stmt|;
specifier|public
name|CoprocessorDescriptorBuilder
name|setJarPath
parameter_list|(
name|String
name|jarPath
parameter_list|)
block|{
name|this
operator|.
name|jarPath
operator|=
name|jarPath
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|CoprocessorDescriptorBuilder
name|setPriority
parameter_list|(
name|int
name|priority
parameter_list|)
block|{
name|this
operator|.
name|priority
operator|=
name|priority
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|CoprocessorDescriptorBuilder
name|setProperty
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|properties
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|CoprocessorDescriptorBuilder
name|setProperties
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|properties
parameter_list|)
block|{
name|this
operator|.
name|properties
operator|.
name|putAll
argument_list|(
name|properties
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|CoprocessorDescriptor
name|build
parameter_list|()
block|{
return|return
operator|new
name|CoprocessorDescriptorImpl
argument_list|(
name|className
argument_list|,
name|jarPath
argument_list|,
name|priority
argument_list|,
name|properties
argument_list|)
return|;
block|}
specifier|private
name|CoprocessorDescriptorBuilder
parameter_list|(
name|String
name|className
parameter_list|)
block|{
name|this
operator|.
name|className
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|className
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
class|class
name|CoprocessorDescriptorImpl
implements|implements
name|CoprocessorDescriptor
block|{
specifier|private
specifier|final
name|String
name|className
decl_stmt|;
specifier|private
specifier|final
name|String
name|jarPath
decl_stmt|;
specifier|private
specifier|final
name|int
name|priority
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|properties
decl_stmt|;
specifier|private
name|CoprocessorDescriptorImpl
parameter_list|(
name|String
name|className
parameter_list|,
name|String
name|jarPath
parameter_list|,
name|int
name|priority
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|properties
parameter_list|)
block|{
name|this
operator|.
name|className
operator|=
name|className
expr_stmt|;
name|this
operator|.
name|jarPath
operator|=
name|jarPath
expr_stmt|;
name|this
operator|.
name|priority
operator|=
name|priority
expr_stmt|;
name|this
operator|.
name|properties
operator|=
name|properties
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getClassName
parameter_list|()
block|{
return|return
name|className
return|;
block|}
annotation|@
name|Override
specifier|public
name|Optional
argument_list|<
name|String
argument_list|>
name|getJarPath
parameter_list|()
block|{
return|return
name|Optional
operator|.
name|ofNullable
argument_list|(
name|jarPath
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getPriority
parameter_list|()
block|{
return|return
name|priority
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getProperties
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|unmodifiableMap
argument_list|(
name|properties
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"class:"
operator|+
name|className
operator|+
literal|", jarPath:"
operator|+
name|jarPath
operator|+
literal|", priority:"
operator|+
name|priority
operator|+
literal|", properties:"
operator|+
name|properties
return|;
block|}
block|}
block|}
end_class

end_unit

