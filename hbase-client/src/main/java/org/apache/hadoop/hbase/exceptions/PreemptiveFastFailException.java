begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**   *   * Licensed to the Apache Software Foundation (ASF) under one   * or more contributor license agreements.  See the NOTICE file   * distributed with this work for additional information   * regarding copyright ownership.  The ASF licenses this file   * to you under the Apache License, Version 2.0 (the   * "License"); you may not use this file except in compliance   * with the License.  You may obtain a copy of the License at   *   *     http://www.apache.org/licenses/LICENSE-2.0   *   * Unless required by applicable law or agreed to in writing, software   * distributed under the License is distributed on an "AS IS" BASIS,   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   * See the License for the specific language governing permissions and   * limitations under the License. */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|exceptions
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|ConnectException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ServerName
import|;
end_import

begin_comment
comment|/**  * Thrown when the client believes that we are trying to communicate to has  * been repeatedly unresponsive for a while.  *  * On receiving such an exception. The HConnectionManager will skip all  * retries and fast fail the operation.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Evolving
specifier|public
class|class
name|PreemptiveFastFailException
extends|extends
name|ConnectException
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|7129103682617007177L
decl_stmt|;
specifier|private
name|long
name|failureCount
decl_stmt|,
name|timeOfFirstFailureMilliSec
decl_stmt|,
name|timeOfLatestAttemptMilliSec
decl_stmt|;
comment|/**     * @param count     * @param timeOfFirstFailureMilliSec     * @param timeOfLatestAttemptMilliSec     * @param serverName     */
specifier|public
name|PreemptiveFastFailException
parameter_list|(
name|long
name|count
parameter_list|,
name|long
name|timeOfFirstFailureMilliSec
parameter_list|,
name|long
name|timeOfLatestAttemptMilliSec
parameter_list|,
name|ServerName
name|serverName
parameter_list|)
block|{
name|super
argument_list|(
literal|"Exception happened "
operator|+
name|count
operator|+
literal|" times. to"
operator|+
name|serverName
argument_list|)
expr_stmt|;
name|this
operator|.
name|failureCount
operator|=
name|count
expr_stmt|;
name|this
operator|.
name|timeOfFirstFailureMilliSec
operator|=
name|timeOfFirstFailureMilliSec
expr_stmt|;
name|this
operator|.
name|timeOfLatestAttemptMilliSec
operator|=
name|timeOfLatestAttemptMilliSec
expr_stmt|;
block|}
specifier|public
name|long
name|getFirstFailureAt
parameter_list|()
block|{
return|return
name|timeOfFirstFailureMilliSec
return|;
block|}
specifier|public
name|long
name|getLastAttemptAt
parameter_list|()
block|{
return|return
name|timeOfLatestAttemptMilliSec
return|;
block|}
specifier|public
name|long
name|getFailureCount
parameter_list|()
block|{
return|return
name|failureCount
return|;
block|}
specifier|public
name|boolean
name|wasOperationAttemptedByServer
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
block|}
end_class

end_unit

