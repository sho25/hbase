begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivilegedExceptionAction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutorService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HRegionLocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HTableDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|MasterNotRunningException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ServerName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ZooKeeperConnectionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|coprocessor
operator|.
name|Batch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|coprocessor
operator|.
name|Batch
operator|.
name|Callback
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|AdminService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|ClientService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterAdminProtos
operator|.
name|MasterAdminService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterMonitorProtos
operator|.
name|MasterMonitorService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_comment
comment|/**  * This is a HConnection wrapper. Whenever a RPC connection is created,  * this class makes sure the specific user is used as the ticket. We assume  * just these methods will create any RPC connection based on the default  * HConnection implementation: getClient, getAdmin, getKeepAliveMasterMonitorService,  * and getKeepAliveMasterAdminService.  *  * This class is put here only because the HConnection interface exposes  * packaged private class MasterMonitorKeepAliveConnection and  * MasterAddKeepAliveConnection.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
specifier|public
class|class
name|HConnectionWrapper
implements|implements
name|HConnection
block|{
specifier|private
specifier|final
name|UserGroupInformation
name|ugi
decl_stmt|;
specifier|private
specifier|final
name|HConnection
name|hconnection
decl_stmt|;
specifier|public
name|HConnectionWrapper
parameter_list|(
specifier|final
name|UserGroupInformation
name|ugi
parameter_list|,
specifier|final
name|HConnection
name|hconnection
parameter_list|)
block|{
name|this
operator|.
name|hconnection
operator|=
name|hconnection
expr_stmt|;
name|this
operator|.
name|ugi
operator|=
name|ugi
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|HTableInterface
name|getTable
parameter_list|(
name|String
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|getTable
argument_list|(
name|tableName
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HTableInterface
name|getTable
parameter_list|(
name|byte
index|[]
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|getTable
argument_list|(
name|tableName
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HTableInterface
name|getTable
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|getTable
argument_list|(
name|tableName
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HTableInterface
name|getTable
parameter_list|(
name|String
name|tableName
parameter_list|,
name|ExecutorService
name|pool
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|getTable
argument_list|(
name|tableName
argument_list|,
name|pool
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HTableInterface
name|getTable
parameter_list|(
name|byte
index|[]
name|tableName
parameter_list|,
name|ExecutorService
name|pool
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|getTable
argument_list|(
name|tableName
argument_list|,
name|pool
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HTableInterface
name|getTable
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|ExecutorService
name|pool
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|getTable
argument_list|(
name|tableName
argument_list|,
name|pool
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|abort
parameter_list|(
name|String
name|why
parameter_list|,
name|Throwable
name|e
parameter_list|)
block|{
name|hconnection
operator|.
name|abort
argument_list|(
name|why
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isAborted
parameter_list|()
block|{
return|return
name|hconnection
operator|.
name|isAborted
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|hconnection
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Configuration
name|getConfiguration
parameter_list|()
block|{
return|return
name|hconnection
operator|.
name|getConfiguration
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isMasterRunning
parameter_list|()
throws|throws
name|MasterNotRunningException
throws|,
name|ZooKeeperConnectionException
block|{
return|return
name|hconnection
operator|.
name|isMasterRunning
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isTableEnabled
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|isTableEnabled
argument_list|(
name|tableName
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isTableEnabled
parameter_list|(
name|byte
index|[]
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|isTableEnabled
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|tableName
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isTableDisabled
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|isTableDisabled
argument_list|(
name|tableName
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isTableDisabled
parameter_list|(
name|byte
index|[]
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|isTableDisabled
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|tableName
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isTableAvailable
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|isTableAvailable
argument_list|(
name|tableName
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isTableAvailable
parameter_list|(
name|byte
index|[]
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|isTableAvailable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|tableName
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isTableAvailable
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
index|[]
name|splitKeys
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|isTableAvailable
argument_list|(
name|tableName
argument_list|,
name|splitKeys
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isTableAvailable
parameter_list|(
name|byte
index|[]
name|tableName
parameter_list|,
name|byte
index|[]
index|[]
name|splitKeys
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|isTableAvailable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|tableName
argument_list|)
argument_list|,
name|splitKeys
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HTableDescriptor
index|[]
name|listTables
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|listTables
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|HTableDescriptor
name|getHTableDescriptor
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|getHTableDescriptor
argument_list|(
name|tableName
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HTableDescriptor
name|getHTableDescriptor
parameter_list|(
name|byte
index|[]
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|getHTableDescriptor
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|tableName
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HRegionLocation
name|locateRegion
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
name|row
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|locateRegion
argument_list|(
name|tableName
argument_list|,
name|row
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HRegionLocation
name|locateRegion
parameter_list|(
name|byte
index|[]
name|tableName
parameter_list|,
name|byte
index|[]
name|row
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|locateRegion
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|tableName
argument_list|)
argument_list|,
name|row
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|clearRegionCache
parameter_list|()
block|{
name|hconnection
operator|.
name|clearRegionCache
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|clearRegionCache
parameter_list|(
name|TableName
name|tableName
parameter_list|)
block|{
name|hconnection
operator|.
name|clearRegionCache
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|clearRegionCache
parameter_list|(
name|byte
index|[]
name|tableName
parameter_list|)
block|{
name|clearRegionCache
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|tableName
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|deleteCachedRegionLocation
parameter_list|(
name|HRegionLocation
name|location
parameter_list|)
block|{
name|hconnection
operator|.
name|deleteCachedRegionLocation
argument_list|(
name|location
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|HRegionLocation
name|relocateRegion
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
name|row
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|relocateRegion
argument_list|(
name|tableName
argument_list|,
name|row
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HRegionLocation
name|relocateRegion
parameter_list|(
name|byte
index|[]
name|tableName
parameter_list|,
name|byte
index|[]
name|row
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|relocateRegion
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|tableName
argument_list|)
argument_list|,
name|row
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateCachedLocations
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
name|rowkey
parameter_list|,
name|Object
name|exception
parameter_list|,
name|HRegionLocation
name|source
parameter_list|)
block|{
name|hconnection
operator|.
name|updateCachedLocations
argument_list|(
name|tableName
argument_list|,
name|rowkey
argument_list|,
name|exception
argument_list|,
name|source
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateCachedLocations
parameter_list|(
name|byte
index|[]
name|tableName
parameter_list|,
name|byte
index|[]
name|rowkey
parameter_list|,
name|Object
name|exception
parameter_list|,
name|HRegionLocation
name|source
parameter_list|)
block|{
name|updateCachedLocations
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|tableName
argument_list|)
argument_list|,
name|rowkey
argument_list|,
name|exception
argument_list|,
name|source
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|HRegionLocation
name|locateRegion
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|locateRegion
argument_list|(
name|regionName
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|HRegionLocation
argument_list|>
name|locateRegions
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|locateRegions
argument_list|(
name|tableName
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|HRegionLocation
argument_list|>
name|locateRegions
parameter_list|(
name|byte
index|[]
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|locateRegions
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|tableName
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|HRegionLocation
argument_list|>
name|locateRegions
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|boolean
name|useCache
parameter_list|,
name|boolean
name|offlined
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|locateRegions
argument_list|(
name|tableName
argument_list|,
name|useCache
argument_list|,
name|offlined
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|HRegionLocation
argument_list|>
name|locateRegions
parameter_list|(
name|byte
index|[]
name|tableName
parameter_list|,
name|boolean
name|useCache
parameter_list|,
name|boolean
name|offlined
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|locateRegions
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|tableName
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|MasterAdminService
operator|.
name|BlockingInterface
name|getMasterAdmin
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|getMasterAdmin
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|MasterMonitorService
operator|.
name|BlockingInterface
name|getMasterMonitor
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|getMasterMonitor
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|AdminService
operator|.
name|BlockingInterface
name|getAdmin
parameter_list|(
name|ServerName
name|serverName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|getAdmin
argument_list|(
name|serverName
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ClientService
operator|.
name|BlockingInterface
name|getClient
parameter_list|(
specifier|final
name|ServerName
name|serverName
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|ugi
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|ClientService
operator|.
name|BlockingInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|ClientService
operator|.
name|BlockingInterface
name|run
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|getClient
argument_list|(
name|serverName
argument_list|)
return|;
block|}
block|}
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|interrupt
argument_list|()
expr_stmt|;
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|AdminService
operator|.
name|BlockingInterface
name|getAdmin
parameter_list|(
specifier|final
name|ServerName
name|serverName
parameter_list|,
specifier|final
name|boolean
name|getMaster
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|ugi
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|AdminService
operator|.
name|BlockingInterface
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|AdminService
operator|.
name|BlockingInterface
name|run
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|getAdmin
argument_list|(
name|serverName
argument_list|,
name|getMaster
argument_list|)
return|;
block|}
block|}
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|interrupt
argument_list|()
expr_stmt|;
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|HRegionLocation
name|getRegionLocation
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
name|row
parameter_list|,
name|boolean
name|reload
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|getRegionLocation
argument_list|(
name|tableName
argument_list|,
name|row
argument_list|,
name|reload
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HRegionLocation
name|getRegionLocation
parameter_list|(
name|byte
index|[]
name|tableName
parameter_list|,
name|byte
index|[]
name|row
parameter_list|,
name|boolean
name|reload
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|getRegionLocation
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|tableName
argument_list|)
argument_list|,
name|row
argument_list|,
name|reload
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|processBatch
parameter_list|(
name|List
argument_list|<
name|?
extends|extends
name|Row
argument_list|>
name|actions
parameter_list|,
name|TableName
name|tableName
parameter_list|,
name|ExecutorService
name|pool
parameter_list|,
name|Object
index|[]
name|results
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|hconnection
operator|.
name|processBatch
argument_list|(
name|actions
argument_list|,
name|tableName
argument_list|,
name|pool
argument_list|,
name|results
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|processBatch
parameter_list|(
name|List
argument_list|<
name|?
extends|extends
name|Row
argument_list|>
name|actions
parameter_list|,
name|byte
index|[]
name|tableName
parameter_list|,
name|ExecutorService
name|pool
parameter_list|,
name|Object
index|[]
name|results
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|processBatch
argument_list|(
name|actions
argument_list|,
name|TableName
operator|.
name|valueOf
argument_list|(
name|tableName
argument_list|)
argument_list|,
name|pool
argument_list|,
name|results
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|R
parameter_list|>
name|void
name|processBatchCallback
parameter_list|(
name|List
argument_list|<
name|?
extends|extends
name|Row
argument_list|>
name|list
parameter_list|,
name|TableName
name|tableName
parameter_list|,
name|ExecutorService
name|pool
parameter_list|,
name|Object
index|[]
name|results
parameter_list|,
name|Callback
argument_list|<
name|R
argument_list|>
name|callback
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|hconnection
operator|.
name|processBatchCallback
argument_list|(
name|list
argument_list|,
name|tableName
argument_list|,
name|pool
argument_list|,
name|results
argument_list|,
name|callback
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|R
parameter_list|>
name|void
name|processBatchCallback
parameter_list|(
name|List
argument_list|<
name|?
extends|extends
name|Row
argument_list|>
name|list
parameter_list|,
name|byte
index|[]
name|tableName
parameter_list|,
name|ExecutorService
name|pool
parameter_list|,
name|Object
index|[]
name|results
parameter_list|,
name|Callback
argument_list|<
name|R
argument_list|>
name|callback
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|processBatchCallback
argument_list|(
name|list
argument_list|,
name|TableName
operator|.
name|valueOf
argument_list|(
name|tableName
argument_list|)
argument_list|,
name|pool
argument_list|,
name|results
argument_list|,
name|callback
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setRegionCachePrefetch
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|boolean
name|enable
parameter_list|)
block|{
name|hconnection
operator|.
name|setRegionCachePrefetch
argument_list|(
name|tableName
argument_list|,
name|enable
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setRegionCachePrefetch
parameter_list|(
name|byte
index|[]
name|tableName
parameter_list|,
name|boolean
name|enable
parameter_list|)
block|{
name|setRegionCachePrefetch
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|tableName
argument_list|)
argument_list|,
name|enable
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|getRegionCachePrefetch
parameter_list|(
name|TableName
name|tableName
parameter_list|)
block|{
return|return
name|hconnection
operator|.
name|getRegionCachePrefetch
argument_list|(
name|tableName
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|getRegionCachePrefetch
parameter_list|(
name|byte
index|[]
name|tableName
parameter_list|)
block|{
return|return
name|getRegionCachePrefetch
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|tableName
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getCurrentNrHRS
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|getCurrentNrHRS
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|HTableDescriptor
index|[]
name|getHTableDescriptorsByTableName
parameter_list|(
name|List
argument_list|<
name|TableName
argument_list|>
name|tableNames
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|hconnection
operator|.
name|getHTableDescriptorsByTableName
argument_list|(
name|tableNames
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HTableDescriptor
index|[]
name|getHTableDescriptors
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|names
parameter_list|)
throws|throws
name|IOException
block|{
name|List
argument_list|<
name|TableName
argument_list|>
name|tableNames
init|=
operator|new
name|ArrayList
argument_list|<
name|TableName
argument_list|>
argument_list|(
name|names
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|name
range|:
name|names
control|)
block|{
name|tableNames
operator|.
name|add
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|getHTableDescriptorsByTableName
argument_list|(
name|tableNames
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isClosed
parameter_list|()
block|{
return|return
name|hconnection
operator|.
name|isClosed
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|clearCaches
parameter_list|(
name|ServerName
name|sn
parameter_list|)
block|{
name|hconnection
operator|.
name|clearCaches
argument_list|(
name|sn
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|MasterMonitorKeepAliveConnection
name|getKeepAliveMasterMonitorService
parameter_list|()
throws|throws
name|MasterNotRunningException
block|{
try|try
block|{
return|return
name|ugi
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|MasterMonitorKeepAliveConnection
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|MasterMonitorKeepAliveConnection
name|run
parameter_list|()
throws|throws
name|MasterNotRunningException
block|{
return|return
name|hconnection
operator|.
name|getKeepAliveMasterMonitorService
argument_list|()
return|;
block|}
block|}
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ie
parameter_list|)
block|{
throw|throw
operator|new
name|MasterNotRunningException
argument_list|(
name|ie
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|interrupt
argument_list|()
expr_stmt|;
throw|throw
operator|new
name|MasterNotRunningException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|MasterAdminKeepAliveConnection
name|getKeepAliveMasterAdminService
parameter_list|()
throws|throws
name|MasterNotRunningException
block|{
try|try
block|{
return|return
name|ugi
operator|.
name|doAs
argument_list|(
operator|new
name|PrivilegedExceptionAction
argument_list|<
name|MasterAdminKeepAliveConnection
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|MasterAdminKeepAliveConnection
name|run
parameter_list|()
throws|throws
name|MasterNotRunningException
block|{
return|return
name|hconnection
operator|.
name|getKeepAliveMasterAdminService
argument_list|()
return|;
block|}
block|}
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ie
parameter_list|)
block|{
throw|throw
operator|new
name|MasterNotRunningException
argument_list|(
name|ie
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|interrupt
argument_list|()
expr_stmt|;
throw|throw
operator|new
name|MasterNotRunningException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isDeadServer
parameter_list|(
name|ServerName
name|serverName
parameter_list|)
block|{
return|return
name|hconnection
operator|.
name|isDeadServer
argument_list|(
name|serverName
argument_list|)
return|;
block|}
block|}
end_class

end_unit

