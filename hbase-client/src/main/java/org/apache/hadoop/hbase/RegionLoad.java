begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnsafeByteOperations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
import|;
end_import

begin_comment
comment|/**  * Encapsulates per-region load metrics.  * @deprecated As of release 2.0.0, this will be removed in HBase 3.0.0  *             Use {@link RegionMetrics} instead.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|Deprecated
specifier|public
class|class
name|RegionLoad
implements|implements
name|RegionMetrics
block|{
comment|// DONT use this pb object since the byte array backed may be modified in rpc layer
comment|// we keep this pb object for BC.
specifier|protected
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|regionLoadPB
decl_stmt|;
specifier|private
specifier|final
name|RegionMetrics
name|metrics
decl_stmt|;
annotation|@
name|edu
operator|.
name|umd
operator|.
name|cs
operator|.
name|findbugs
operator|.
name|annotations
operator|.
name|SuppressWarnings
argument_list|(
name|value
operator|=
literal|"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD"
argument_list|)
specifier|public
name|RegionLoad
parameter_list|(
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|regionLoadPB
parameter_list|)
block|{
name|this
operator|.
name|regionLoadPB
operator|=
name|regionLoadPB
expr_stmt|;
name|this
operator|.
name|metrics
operator|=
name|RegionMetricsBuilder
operator|.
name|toRegionMetrics
argument_list|(
name|regionLoadPB
argument_list|)
expr_stmt|;
block|}
name|RegionLoad
parameter_list|(
name|RegionMetrics
name|metrics
parameter_list|)
block|{
name|this
operator|.
name|metrics
operator|=
name|metrics
expr_stmt|;
name|this
operator|.
name|regionLoadPB
operator|=
name|RegionMetricsBuilder
operator|.
name|toRegionLoad
argument_list|(
name|metrics
argument_list|)
expr_stmt|;
block|}
comment|/**    * @return the region name    * @deprecated As of release 2.0.0, this will be removed in HBase 3.0.0    *             Use {@link #getRegionName} instead.    */
annotation|@
name|Deprecated
specifier|public
name|byte
index|[]
name|getName
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getRegionName
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|byte
index|[]
name|getRegionName
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getRegionName
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getStoreCount
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getStoreCount
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getStoreFileCount
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getStoreFileCount
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Size
name|getStoreFileSize
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getStoreFileSize
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Size
name|getMemStoreSize
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getMemStoreSize
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getReadRequestCount
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getReadRequestCount
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getCpRequestCount
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getCpRequestCount
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getFilteredReadRequestCount
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getFilteredReadRequestCount
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Size
name|getStoreFileIndexSize
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getStoreFileIndexSize
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getWriteRequestCount
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getWriteRequestCount
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Size
name|getStoreFileRootLevelIndexSize
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getStoreFileRootLevelIndexSize
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Size
name|getStoreFileUncompressedDataIndexSize
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getStoreFileUncompressedDataIndexSize
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Size
name|getBloomFilterSize
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getBloomFilterSize
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getCompactingCellCount
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getCompactingCellCount
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getCompactedCellCount
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getCompactedCellCount
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getCompletedSequenceId
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getCompletedSequenceId
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|byte
index|[]
argument_list|,
name|Long
argument_list|>
name|getStoreSequenceId
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getStoreSequenceId
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Size
name|getUncompressedStoreFileSize
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getUncompressedStoreFileSize
argument_list|()
return|;
block|}
comment|/**    * @return the number of stores    * @deprecated As of release 2.0.0, this will be removed in HBase 3.0.0    *             Use {@link #getStoreCount} instead.    */
annotation|@
name|Deprecated
specifier|public
name|int
name|getStores
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getStoreCount
argument_list|()
return|;
block|}
comment|/**    * @return the number of storefiles    * @deprecated As of release 2.0.0, this will be removed in HBase 3.0.0    *             Use {@link #getStoreFileCount} instead.    */
annotation|@
name|Deprecated
specifier|public
name|int
name|getStorefiles
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getStoreFileCount
argument_list|()
return|;
block|}
comment|/**    * @return the total size of the storefiles, in MB    * @deprecated As of release 2.0.0, this will be removed in HBase 3.0.0    *             Use {@link #getStoreFileSize} instead.    */
annotation|@
name|Deprecated
specifier|public
name|int
name|getStorefileSizeMB
parameter_list|()
block|{
return|return
operator|(
name|int
operator|)
name|metrics
operator|.
name|getStoreFileSize
argument_list|()
operator|.
name|get
argument_list|(
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
return|;
block|}
comment|/**    * @return the memstore size, in MB    * @deprecated As of release 2.0.0, this will be removed in HBase 3.0.0    *             Use {@link #getMemStoreSize} instead.    */
annotation|@
name|Deprecated
specifier|public
name|int
name|getMemStoreSizeMB
parameter_list|()
block|{
return|return
operator|(
name|int
operator|)
name|metrics
operator|.
name|getMemStoreSize
argument_list|()
operator|.
name|get
argument_list|(
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
return|;
block|}
comment|/**    * @deprecated As of release 2.0.0, this will be removed in HBase 3.0.0    *             ((<a href="https://issues.apache.org/jira/browse/HBASE-3935">HBASE-3935</a>)).    *             Use {@link #getStoreFileRootLevelIndexSize} instead.    */
annotation|@
name|Deprecated
specifier|public
name|int
name|getStorefileIndexSizeMB
parameter_list|()
block|{
comment|// Return value divided by 1024
return|return
operator|(
name|getRootIndexSizeKB
argument_list|()
operator|>>
literal|10
operator|)
return|;
block|}
comment|/**    * @deprecated As of release 2.0.0, this will be removed in HBase 3.0.0    *             Use {@link #getStoreFileRootLevelIndexSize()} instead.    */
annotation|@
name|Deprecated
specifier|public
name|int
name|getStorefileIndexSizeKB
parameter_list|()
block|{
return|return
name|getRootIndexSizeKB
argument_list|()
return|;
block|}
comment|/**    * @return the number of requests made to region    * @deprecated As of release 2.0.0, this will be removed in HBase 3.0.0    *             Use {@link #getRequestCount()} instead.    */
annotation|@
name|Deprecated
specifier|public
name|long
name|getRequestsCount
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getRequestCount
argument_list|()
return|;
block|}
comment|/**    * @return the number of read requests made to region    * @deprecated As of release 2.0.0, this will be removed in HBase 3.0.0    *             Use {@link #getReadRequestCount} instead.    */
annotation|@
name|Deprecated
specifier|public
name|long
name|getReadRequestsCount
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getReadRequestCount
argument_list|()
return|;
block|}
comment|/**    * @return the number of filtered read requests made to region    * @deprecated As of release 2.0.0, this will be removed in HBase 3.0.0    *             Use {@link #getFilteredReadRequestCount} instead.    */
annotation|@
name|Deprecated
specifier|public
name|long
name|getFilteredReadRequestsCount
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getFilteredReadRequestCount
argument_list|()
return|;
block|}
comment|/**    * @return the number of write requests made to region    * @deprecated As of release 2.0.0, this will be removed in HBase 3.0.0    *             Use {@link #getWriteRequestCount} instead.    */
annotation|@
name|Deprecated
specifier|public
name|long
name|getWriteRequestsCount
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getWriteRequestCount
argument_list|()
return|;
block|}
comment|/**    * @return The current total size of root-level indexes for the region, in KB.    * @deprecated As of release 2.0.0, this will be removed in HBase 3.0.0    *             Use {@link #getStoreFileRootLevelIndexSize} instead.    */
annotation|@
name|Deprecated
specifier|public
name|int
name|getRootIndexSizeKB
parameter_list|()
block|{
return|return
operator|(
name|int
operator|)
name|metrics
operator|.
name|getStoreFileRootLevelIndexSize
argument_list|()
operator|.
name|get
argument_list|(
name|Size
operator|.
name|Unit
operator|.
name|KILOBYTE
argument_list|)
return|;
block|}
comment|/**    * @return The total size of all index blocks, not just the root level, in KB.    * @deprecated As of release 2.0.0, this will be removed in HBase 3.0.0    *             Use {@link #getStoreFileUncompressedDataIndexSize} instead.    */
annotation|@
name|Deprecated
specifier|public
name|int
name|getTotalStaticIndexSizeKB
parameter_list|()
block|{
return|return
operator|(
name|int
operator|)
name|metrics
operator|.
name|getStoreFileUncompressedDataIndexSize
argument_list|()
operator|.
name|get
argument_list|(
name|Size
operator|.
name|Unit
operator|.
name|KILOBYTE
argument_list|)
return|;
block|}
comment|/**    * @return The total size of all Bloom filter blocks, not just loaded into the    * block cache, in KB.    * @deprecated As of release 2.0.0, this will be removed in HBase 3.0.0    *             Use {@link #getBloomFilterSize} instead.    */
annotation|@
name|Deprecated
specifier|public
name|int
name|getTotalStaticBloomSizeKB
parameter_list|()
block|{
return|return
operator|(
name|int
operator|)
name|metrics
operator|.
name|getBloomFilterSize
argument_list|()
operator|.
name|get
argument_list|(
name|Size
operator|.
name|Unit
operator|.
name|KILOBYTE
argument_list|)
return|;
block|}
comment|/**    * @return the total number of kvs in current compaction    * @deprecated As of release 2.0.0, this will be removed in HBase 3.0.0    *             Use {@link #getCompactingCellCount} instead.    */
annotation|@
name|Deprecated
specifier|public
name|long
name|getTotalCompactingKVs
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getCompactingCellCount
argument_list|()
return|;
block|}
comment|/**    * @return the number of already compacted kvs in current compaction    * @deprecated As of release 2.0.0, this will be removed in HBase 3.0.0    *             Use {@link #getCompactedCellCount} instead.    */
annotation|@
name|Deprecated
specifier|public
name|long
name|getCurrentCompactedKVs
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getCompactedCellCount
argument_list|()
return|;
block|}
comment|/**    * This does not really belong inside RegionLoad but its being done in the name of expediency.    * @return the completed sequence Id for the region    * @deprecated As of release 2.0.0, this will be removed in HBase 3.0.0    *             Use {@link #getCompletedSequenceId} instead.    */
annotation|@
name|Deprecated
specifier|public
name|long
name|getCompleteSequenceId
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getCompletedSequenceId
argument_list|()
return|;
block|}
comment|/**    * @return completed sequence id per store.    * @deprecated As of release 2.0.0, this will be removed in HBase 3.0.0    *             Use {@link #getStoreSequenceId} instead.    */
annotation|@
name|Deprecated
specifier|public
name|List
argument_list|<
name|ClusterStatusProtos
operator|.
name|StoreSequenceId
argument_list|>
name|getStoreCompleteSequenceId
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getStoreSequenceId
argument_list|()
operator|.
name|entrySet
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|s
lambda|->
name|ClusterStatusProtos
operator|.
name|StoreSequenceId
operator|.
name|newBuilder
argument_list|()
operator|.
name|setFamilyName
argument_list|(
name|UnsafeByteOperations
operator|.
name|unsafeWrap
argument_list|(
name|s
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|)
operator|.
name|setSequenceId
argument_list|(
name|s
operator|.
name|getValue
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
return|;
block|}
comment|/**    * @return the uncompressed size of the storefiles in MB.    * @deprecated As of release 2.0.0, this will be removed in HBase 3.0.0    *             Use {@link #getUncompressedStoreFileSize} instead.    */
annotation|@
name|Deprecated
specifier|public
name|int
name|getStoreUncompressedSizeMB
parameter_list|()
block|{
return|return
operator|(
name|int
operator|)
name|metrics
operator|.
name|getUncompressedStoreFileSize
argument_list|()
operator|.
name|get
argument_list|(
name|Size
operator|.
name|Unit
operator|.
name|KILOBYTE
argument_list|)
return|;
block|}
comment|/**    * @return the data locality of region in the regionserver.    */
annotation|@
name|Override
specifier|public
name|float
name|getDataLocality
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getDataLocality
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getLastMajorCompactionTimestamp
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getLastMajorCompactionTimestamp
argument_list|()
return|;
block|}
comment|/**    * @return the timestamp of the oldest hfile for any store of this region.    * @deprecated As of release 2.0.0, this will be removed in HBase 3.0.0    *             Use {@link #getLastMajorCompactionTimestamp} instead.    */
annotation|@
name|Deprecated
specifier|public
name|long
name|getLastMajorCompactionTs
parameter_list|()
block|{
return|return
name|metrics
operator|.
name|getLastMajorCompactionTimestamp
argument_list|()
return|;
block|}
comment|/**    * @see java.lang.Object#toString()    */
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|sb
init|=
name|Strings
operator|.
name|appendKeyValue
argument_list|(
operator|new
name|StringBuilder
argument_list|()
argument_list|,
literal|"numberOfStores"
argument_list|,
name|this
operator|.
name|getStores
argument_list|()
argument_list|)
decl_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"numberOfStorefiles"
argument_list|,
name|this
operator|.
name|getStorefiles
argument_list|()
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"storefileUncompressedSizeMB"
argument_list|,
name|this
operator|.
name|getStoreUncompressedSizeMB
argument_list|()
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"lastMajorCompactionTimestamp"
argument_list|,
name|this
operator|.
name|getLastMajorCompactionTs
argument_list|()
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"storefileSizeMB"
argument_list|,
name|this
operator|.
name|getStorefileSizeMB
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|getStoreUncompressedSizeMB
argument_list|()
operator|!=
literal|0
condition|)
block|{
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"compressionRatio"
argument_list|,
name|String
operator|.
name|format
argument_list|(
literal|"%.4f"
argument_list|,
operator|(
name|float
operator|)
name|this
operator|.
name|getStorefileSizeMB
argument_list|()
operator|/
operator|(
name|float
operator|)
name|this
operator|.
name|getStoreUncompressedSizeMB
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"memstoreSizeMB"
argument_list|,
name|this
operator|.
name|getMemStoreSizeMB
argument_list|()
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"readRequestsCount"
argument_list|,
name|this
operator|.
name|getReadRequestsCount
argument_list|()
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"writeRequestsCount"
argument_list|,
name|this
operator|.
name|getWriteRequestsCount
argument_list|()
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"rootIndexSizeKB"
argument_list|,
name|this
operator|.
name|getRootIndexSizeKB
argument_list|()
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"totalStaticIndexSizeKB"
argument_list|,
name|this
operator|.
name|getTotalStaticIndexSizeKB
argument_list|()
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"totalStaticBloomSizeKB"
argument_list|,
name|this
operator|.
name|getTotalStaticBloomSizeKB
argument_list|()
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"totalCompactingKVs"
argument_list|,
name|this
operator|.
name|getTotalCompactingKVs
argument_list|()
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"currentCompactedKVs"
argument_list|,
name|this
operator|.
name|getCurrentCompactedKVs
argument_list|()
argument_list|)
expr_stmt|;
name|float
name|compactionProgressPct
init|=
name|Float
operator|.
name|NaN
decl_stmt|;
if|if
condition|(
name|this
operator|.
name|getTotalCompactingKVs
argument_list|()
operator|>
literal|0
condition|)
block|{
name|compactionProgressPct
operator|=
operator|(
operator|(
name|float
operator|)
name|this
operator|.
name|getCurrentCompactedKVs
argument_list|()
operator|/
operator|(
name|float
operator|)
name|this
operator|.
name|getTotalCompactingKVs
argument_list|()
operator|)
expr_stmt|;
block|}
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"compactionProgressPct"
argument_list|,
name|compactionProgressPct
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"completeSequenceId"
argument_list|,
name|this
operator|.
name|getCompleteSequenceId
argument_list|()
argument_list|)
expr_stmt|;
name|Strings
operator|.
name|appendKeyValue
argument_list|(
name|sb
argument_list|,
literal|"dataLocality"
argument_list|,
name|this
operator|.
name|getDataLocality
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

