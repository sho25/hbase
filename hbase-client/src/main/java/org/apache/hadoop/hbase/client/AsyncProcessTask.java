begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutorService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|coprocessor
operator|.
name|Batch
import|;
end_import

begin_comment
comment|/**  * Contains the attributes of a task which will be executed  * by {@link org.apache.hadoop.hbase.client.AsyncProcess}.  * The attributes will be validated by AsyncProcess.  * It's intended for advanced client applications.  * @param<T> The type of response from server-side  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Evolving
specifier|public
class|class
name|AsyncProcessTask
parameter_list|<
name|T
parameter_list|>
block|{
comment|/**    * The number of processed rows.    * The AsyncProcess has traffic control which may reject some rows.    */
specifier|public
enum|enum
name|SubmittedRows
block|{
name|ALL
block|,
name|AT_LEAST_ONE
block|,
name|NORMAL
block|}
specifier|public
specifier|static
parameter_list|<
name|T
parameter_list|>
name|Builder
argument_list|<
name|T
argument_list|>
name|newBuilder
parameter_list|(
specifier|final
name|Batch
operator|.
name|Callback
argument_list|<
name|T
argument_list|>
name|callback
parameter_list|)
block|{
return|return
operator|new
name|Builder
argument_list|<>
argument_list|(
name|callback
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
specifier|static
class|class
name|Builder
parameter_list|<
name|T
parameter_list|>
block|{
specifier|private
name|ExecutorService
name|pool
decl_stmt|;
specifier|private
name|TableName
name|tableName
decl_stmt|;
specifier|private
name|RowAccess
argument_list|<
name|?
extends|extends
name|Row
argument_list|>
name|rows
decl_stmt|;
specifier|private
name|SubmittedRows
name|submittedRows
init|=
name|SubmittedRows
operator|.
name|ALL
decl_stmt|;
specifier|private
name|Batch
operator|.
name|Callback
argument_list|<
name|T
argument_list|>
name|callback
decl_stmt|;
specifier|private
name|boolean
name|needResults
decl_stmt|;
specifier|private
name|int
name|rpcTimeout
decl_stmt|;
specifier|private
name|int
name|operationTimeout
decl_stmt|;
specifier|private
name|CancellableRegionServerCallable
name|callable
decl_stmt|;
specifier|private
name|Object
index|[]
name|results
decl_stmt|;
specifier|private
name|Builder
parameter_list|()
block|{     }
specifier|private
name|Builder
parameter_list|(
name|Batch
operator|.
name|Callback
argument_list|<
name|T
argument_list|>
name|callback
parameter_list|)
block|{
name|this
operator|.
name|callback
operator|=
name|callback
expr_stmt|;
block|}
name|Builder
argument_list|<
name|T
argument_list|>
name|setResults
parameter_list|(
name|Object
index|[]
name|results
parameter_list|)
block|{
name|this
operator|.
name|results
operator|=
name|results
expr_stmt|;
if|if
condition|(
name|results
operator|!=
literal|null
operator|&&
name|results
operator|.
name|length
operator|!=
literal|0
condition|)
block|{
name|setNeedResults
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
argument_list|<
name|T
argument_list|>
name|setPool
parameter_list|(
name|ExecutorService
name|pool
parameter_list|)
block|{
name|this
operator|.
name|pool
operator|=
name|pool
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
argument_list|<
name|T
argument_list|>
name|setRpcTimeout
parameter_list|(
name|int
name|rpcTimeout
parameter_list|)
block|{
name|this
operator|.
name|rpcTimeout
operator|=
name|rpcTimeout
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
argument_list|<
name|T
argument_list|>
name|setOperationTimeout
parameter_list|(
name|int
name|operationTimeout
parameter_list|)
block|{
name|this
operator|.
name|operationTimeout
operator|=
name|operationTimeout
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
argument_list|<
name|T
argument_list|>
name|setTableName
parameter_list|(
name|TableName
name|tableName
parameter_list|)
block|{
name|this
operator|.
name|tableName
operator|=
name|tableName
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
argument_list|<
name|T
argument_list|>
name|setRowAccess
parameter_list|(
name|List
argument_list|<
name|?
extends|extends
name|Row
argument_list|>
name|rows
parameter_list|)
block|{
name|this
operator|.
name|rows
operator|=
operator|new
name|ListRowAccess
argument_list|<>
argument_list|(
name|rows
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
argument_list|<
name|T
argument_list|>
name|setRowAccess
parameter_list|(
name|RowAccess
argument_list|<
name|?
extends|extends
name|Row
argument_list|>
name|rows
parameter_list|)
block|{
name|this
operator|.
name|rows
operator|=
name|rows
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
argument_list|<
name|T
argument_list|>
name|setSubmittedRows
parameter_list|(
name|SubmittedRows
name|submittedRows
parameter_list|)
block|{
name|this
operator|.
name|submittedRows
operator|=
name|submittedRows
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
argument_list|<
name|T
argument_list|>
name|setNeedResults
parameter_list|(
name|boolean
name|needResults
parameter_list|)
block|{
name|this
operator|.
name|needResults
operator|=
name|needResults
expr_stmt|;
return|return
name|this
return|;
block|}
name|Builder
argument_list|<
name|T
argument_list|>
name|setCallable
parameter_list|(
name|CancellableRegionServerCallable
name|callable
parameter_list|)
block|{
name|this
operator|.
name|callable
operator|=
name|callable
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|AsyncProcessTask
argument_list|<
name|T
argument_list|>
name|build
parameter_list|()
block|{
return|return
operator|new
name|AsyncProcessTask
argument_list|<>
argument_list|(
name|pool
argument_list|,
name|tableName
argument_list|,
name|rows
argument_list|,
name|submittedRows
argument_list|,
name|callback
argument_list|,
name|callable
argument_list|,
name|needResults
argument_list|,
name|rpcTimeout
argument_list|,
name|operationTimeout
argument_list|,
name|results
argument_list|)
return|;
block|}
block|}
specifier|private
specifier|final
name|ExecutorService
name|pool
decl_stmt|;
specifier|private
specifier|final
name|TableName
name|tableName
decl_stmt|;
specifier|private
specifier|final
name|RowAccess
argument_list|<
name|?
extends|extends
name|Row
argument_list|>
name|rows
decl_stmt|;
specifier|private
specifier|final
name|SubmittedRows
name|submittedRows
decl_stmt|;
specifier|private
specifier|final
name|Batch
operator|.
name|Callback
argument_list|<
name|T
argument_list|>
name|callback
decl_stmt|;
specifier|private
specifier|final
name|CancellableRegionServerCallable
name|callable
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|needResults
decl_stmt|;
specifier|private
specifier|final
name|int
name|rpcTimeout
decl_stmt|;
specifier|private
specifier|final
name|int
name|operationTimeout
decl_stmt|;
specifier|private
specifier|final
name|Object
index|[]
name|results
decl_stmt|;
name|AsyncProcessTask
parameter_list|(
name|AsyncProcessTask
argument_list|<
name|T
argument_list|>
name|task
parameter_list|)
block|{
name|this
argument_list|(
name|task
operator|.
name|getPool
argument_list|()
argument_list|,
name|task
operator|.
name|getTableName
argument_list|()
argument_list|,
name|task
operator|.
name|getRowAccess
argument_list|()
argument_list|,
name|task
operator|.
name|getSubmittedRows
argument_list|()
argument_list|,
name|task
operator|.
name|getCallback
argument_list|()
argument_list|,
name|task
operator|.
name|getCallable
argument_list|()
argument_list|,
name|task
operator|.
name|getNeedResults
argument_list|()
argument_list|,
name|task
operator|.
name|getRpcTimeout
argument_list|()
argument_list|,
name|task
operator|.
name|getOperationTimeout
argument_list|()
argument_list|,
name|task
operator|.
name|getResults
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|AsyncProcessTask
parameter_list|(
name|ExecutorService
name|pool
parameter_list|,
name|TableName
name|tableName
parameter_list|,
name|RowAccess
argument_list|<
name|?
extends|extends
name|Row
argument_list|>
name|rows
parameter_list|,
name|SubmittedRows
name|size
parameter_list|,
name|Batch
operator|.
name|Callback
argument_list|<
name|T
argument_list|>
name|callback
parameter_list|,
name|CancellableRegionServerCallable
name|callable
parameter_list|,
name|boolean
name|needResults
parameter_list|,
name|int
name|rpcTimeout
parameter_list|,
name|int
name|operationTimeout
parameter_list|,
name|Object
index|[]
name|results
parameter_list|)
block|{
name|this
operator|.
name|pool
operator|=
name|pool
expr_stmt|;
name|this
operator|.
name|tableName
operator|=
name|tableName
expr_stmt|;
name|this
operator|.
name|rows
operator|=
name|rows
expr_stmt|;
name|this
operator|.
name|submittedRows
operator|=
name|size
expr_stmt|;
name|this
operator|.
name|callback
operator|=
name|callback
expr_stmt|;
name|this
operator|.
name|callable
operator|=
name|callable
expr_stmt|;
name|this
operator|.
name|needResults
operator|=
name|needResults
expr_stmt|;
name|this
operator|.
name|rpcTimeout
operator|=
name|rpcTimeout
expr_stmt|;
name|this
operator|.
name|operationTimeout
operator|=
name|operationTimeout
expr_stmt|;
name|this
operator|.
name|results
operator|=
name|results
expr_stmt|;
block|}
specifier|public
name|int
name|getOperationTimeout
parameter_list|()
block|{
return|return
name|operationTimeout
return|;
block|}
specifier|public
name|ExecutorService
name|getPool
parameter_list|()
block|{
return|return
name|pool
return|;
block|}
specifier|public
name|TableName
name|getTableName
parameter_list|()
block|{
return|return
name|tableName
return|;
block|}
specifier|public
name|RowAccess
argument_list|<
name|?
extends|extends
name|Row
argument_list|>
name|getRowAccess
parameter_list|()
block|{
return|return
name|rows
return|;
block|}
specifier|public
name|SubmittedRows
name|getSubmittedRows
parameter_list|()
block|{
return|return
name|submittedRows
return|;
block|}
specifier|public
name|Batch
operator|.
name|Callback
argument_list|<
name|T
argument_list|>
name|getCallback
parameter_list|()
block|{
return|return
name|callback
return|;
block|}
name|CancellableRegionServerCallable
name|getCallable
parameter_list|()
block|{
return|return
name|callable
return|;
block|}
name|Object
index|[]
name|getResults
parameter_list|()
block|{
return|return
name|results
return|;
block|}
specifier|public
name|boolean
name|getNeedResults
parameter_list|()
block|{
return|return
name|needResults
return|;
block|}
specifier|public
name|int
name|getRpcTimeout
parameter_list|()
block|{
return|return
name|rpcTimeout
return|;
block|}
specifier|static
class|class
name|ListRowAccess
parameter_list|<
name|T
parameter_list|>
implements|implements
name|RowAccess
argument_list|<
name|T
argument_list|>
block|{
specifier|private
specifier|final
name|List
argument_list|<
name|T
argument_list|>
name|data
decl_stmt|;
name|ListRowAccess
parameter_list|(
specifier|final
name|List
argument_list|<
name|T
argument_list|>
name|data
parameter_list|)
block|{
name|this
operator|.
name|data
operator|=
name|data
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|size
parameter_list|()
block|{
return|return
name|data
operator|.
name|size
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isEmpty
parameter_list|()
block|{
return|return
name|data
operator|.
name|isEmpty
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|T
argument_list|>
name|iterator
parameter_list|()
block|{
return|return
name|data
operator|.
name|iterator
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

