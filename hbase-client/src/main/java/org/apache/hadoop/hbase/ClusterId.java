begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|exceptions
operator|.
name|DeserializationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|ProtobufUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_comment
comment|/**  * The identifier for this cluster.  * It is serialized to the filesystem and up into zookeeper.  This is a container for the id.  * Also knows how to serialize and deserialize the cluster id.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|ClusterId
block|{
specifier|private
specifier|final
name|String
name|id
decl_stmt|;
comment|/**    * New ClusterID.  Generates a uniqueid.    */
specifier|public
name|ClusterId
parameter_list|()
block|{
name|this
argument_list|(
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ClusterId
parameter_list|(
specifier|final
name|String
name|uuid
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|uuid
expr_stmt|;
block|}
comment|/**    * @return The clusterid serialized using pb w/ pb magic prefix    */
specifier|public
name|byte
index|[]
name|toByteArray
parameter_list|()
block|{
return|return
name|ProtobufUtil
operator|.
name|prependPBMagic
argument_list|(
name|convert
argument_list|()
operator|.
name|toByteArray
argument_list|()
argument_list|)
return|;
block|}
comment|/**    * @param bytes A pb serialized {@link ClusterId} instance with pb magic prefix    * @return An instance of {@link ClusterId} made from<code>bytes</code>    * @throws DeserializationException    * @see #toByteArray()    */
specifier|public
specifier|static
name|ClusterId
name|parseFrom
parameter_list|(
specifier|final
name|byte
index|[]
name|bytes
parameter_list|)
throws|throws
name|DeserializationException
block|{
if|if
condition|(
name|ProtobufUtil
operator|.
name|isPBMagicPrefix
argument_list|(
name|bytes
argument_list|)
condition|)
block|{
name|int
name|pblen
init|=
name|ProtobufUtil
operator|.
name|lengthOfPBMagic
argument_list|()
decl_stmt|;
name|ClusterIdProtos
operator|.
name|ClusterId
operator|.
name|Builder
name|builder
init|=
name|ClusterIdProtos
operator|.
name|ClusterId
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|ClusterIdProtos
operator|.
name|ClusterId
name|cid
init|=
literal|null
decl_stmt|;
try|try
block|{
name|ProtobufUtil
operator|.
name|mergeFrom
argument_list|(
name|builder
argument_list|,
name|bytes
argument_list|,
name|pblen
argument_list|,
name|bytes
operator|.
name|length
operator|-
name|pblen
argument_list|)
expr_stmt|;
name|cid
operator|=
name|builder
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|DeserializationException
argument_list|(
name|e
argument_list|)
throw|;
block|}
return|return
name|convert
argument_list|(
name|cid
argument_list|)
return|;
block|}
else|else
block|{
comment|// Presume it was written out this way, the old way.
return|return
operator|new
name|ClusterId
argument_list|(
name|Bytes
operator|.
name|toString
argument_list|(
name|bytes
argument_list|)
argument_list|)
return|;
block|}
block|}
comment|/**    * @return A pb instance to represent this instance.    */
name|ClusterIdProtos
operator|.
name|ClusterId
name|convert
parameter_list|()
block|{
name|ClusterIdProtos
operator|.
name|ClusterId
operator|.
name|Builder
name|builder
init|=
name|ClusterIdProtos
operator|.
name|ClusterId
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
return|return
name|builder
operator|.
name|setClusterId
argument_list|(
name|this
operator|.
name|id
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
comment|/**    * @param cid    * @return A {@link ClusterId} made from the passed in<code>cid</code>    */
specifier|static
name|ClusterId
name|convert
parameter_list|(
specifier|final
name|ClusterIdProtos
operator|.
name|ClusterId
name|cid
parameter_list|)
block|{
return|return
operator|new
name|ClusterId
argument_list|(
name|cid
operator|.
name|getClusterId
argument_list|()
argument_list|)
return|;
block|}
comment|/**    * @see java.lang.Object#toString()    */
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|this
operator|.
name|id
return|;
block|}
block|}
end_class

end_unit

