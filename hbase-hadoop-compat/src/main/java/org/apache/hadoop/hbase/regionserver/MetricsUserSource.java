begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsCollector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_interface
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
interface|interface
name|MetricsUserSource
extends|extends
name|Comparable
argument_list|<
name|MetricsUserSource
argument_list|>
block|{
comment|//These client metrics will be reported through clusterStatus and hbtop only
interface|interface
name|ClientMetrics
block|{
name|void
name|incrementReadRequest
parameter_list|()
function_decl|;
name|void
name|incrementWriteRequest
parameter_list|()
function_decl|;
name|String
name|getHostName
parameter_list|()
function_decl|;
name|long
name|getReadRequestsCount
parameter_list|()
function_decl|;
name|long
name|getWriteRequestsCount
parameter_list|()
function_decl|;
name|void
name|incrementFilteredReadRequests
parameter_list|()
function_decl|;
name|long
name|getFilteredReadRequests
parameter_list|()
function_decl|;
block|}
name|String
name|getUser
parameter_list|()
function_decl|;
name|void
name|register
parameter_list|()
function_decl|;
name|void
name|deregister
parameter_list|()
function_decl|;
name|void
name|updatePut
parameter_list|(
name|long
name|t
parameter_list|)
function_decl|;
name|void
name|updateDelete
parameter_list|(
name|long
name|t
parameter_list|)
function_decl|;
name|void
name|updateGet
parameter_list|(
name|long
name|t
parameter_list|)
function_decl|;
name|void
name|updateIncrement
parameter_list|(
name|long
name|t
parameter_list|)
function_decl|;
name|void
name|updateAppend
parameter_list|(
name|long
name|t
parameter_list|)
function_decl|;
name|void
name|updateReplay
parameter_list|(
name|long
name|t
parameter_list|)
function_decl|;
name|void
name|updateScanTime
parameter_list|(
name|long
name|t
parameter_list|)
function_decl|;
name|void
name|getMetrics
parameter_list|(
name|MetricsCollector
name|metricsCollector
parameter_list|,
name|boolean
name|all
parameter_list|)
function_decl|;
comment|/**    * Metrics collected at client level for a user(needed for reporting through clusterStatus    * and  hbtop currently)    * @return metrics per hostname    */
name|Map
argument_list|<
name|String
argument_list|,
name|ClientMetrics
argument_list|>
name|getClientMetrics
parameter_list|()
function_decl|;
comment|/**    * Create a instance of ClientMetrics if not present otherwise return the previous one    *    * @param hostName hostname of the client    * @return Instance of ClientMetrics    */
name|ClientMetrics
name|getOrCreateMetricsClient
parameter_list|(
name|String
name|hostName
parameter_list|)
function_decl|;
block|}
end_interface

end_unit

