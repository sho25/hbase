begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|AbstractQueue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_comment
comment|/**  * A bounded non-thread safe implementation of {@link java.util.Queue}.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|BoundedArrayQueue
parameter_list|<
name|E
parameter_list|>
extends|extends
name|AbstractQueue
argument_list|<
name|E
argument_list|>
block|{
specifier|private
name|Object
index|[]
name|items
decl_stmt|;
specifier|private
name|int
name|takeIndex
decl_stmt|,
name|putIndex
decl_stmt|;
specifier|private
name|int
name|count
decl_stmt|;
specifier|public
name|BoundedArrayQueue
parameter_list|(
name|int
name|maxElements
parameter_list|)
block|{
name|items
operator|=
operator|new
name|Object
index|[
name|maxElements
index|]
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|size
parameter_list|()
block|{
return|return
name|count
return|;
block|}
comment|/**    * Not implemented and will throw {@link UnsupportedOperationException}    */
annotation|@
name|Override
specifier|public
name|Iterator
argument_list|<
name|E
argument_list|>
name|iterator
parameter_list|()
block|{
comment|// We don't need this. Leaving it as not implemented.
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|offer
parameter_list|(
name|E
name|e
parameter_list|)
block|{
if|if
condition|(
name|count
operator|==
name|items
operator|.
name|length
condition|)
return|return
literal|false
return|;
name|items
index|[
name|putIndex
index|]
operator|=
name|e
expr_stmt|;
if|if
condition|(
operator|++
name|putIndex
operator|==
name|items
operator|.
name|length
condition|)
name|putIndex
operator|=
literal|0
expr_stmt|;
name|count
operator|++
expr_stmt|;
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|E
name|poll
parameter_list|()
block|{
return|return
operator|(
name|count
operator|==
literal|0
operator|)
condition|?
literal|null
else|:
name|dequeue
argument_list|()
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|private
name|E
name|dequeue
parameter_list|()
block|{
name|E
name|x
init|=
operator|(
name|E
operator|)
name|items
index|[
name|takeIndex
index|]
decl_stmt|;
name|items
index|[
name|takeIndex
index|]
operator|=
literal|null
expr_stmt|;
if|if
condition|(
operator|++
name|takeIndex
operator|==
name|items
operator|.
name|length
condition|)
name|takeIndex
operator|=
literal|0
expr_stmt|;
name|count
operator|--
expr_stmt|;
return|return
name|x
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Override
specifier|public
name|E
name|peek
parameter_list|()
block|{
return|return
operator|(
name|E
operator|)
name|items
index|[
name|takeIndex
index|]
return|;
block|}
block|}
end_class

end_unit

