begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|LongAdder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|GsonBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|LongSerializationPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|TypeAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|stream
operator|.
name|JsonReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|stream
operator|.
name|JsonWriter
import|;
end_import

begin_comment
comment|/**  * Helper class for gson.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
specifier|final
class|class
name|GsonUtil
block|{
specifier|private
name|GsonUtil
parameter_list|()
block|{   }
comment|/**    * Create a builder which is used to create a Gson instance.    *<p/>    * Will set some common configs for the builder.    */
specifier|public
specifier|static
name|GsonBuilder
name|createGson
parameter_list|()
block|{
return|return
operator|new
name|GsonBuilder
argument_list|()
operator|.
name|setLongSerializationPolicy
argument_list|(
name|LongSerializationPolicy
operator|.
name|STRING
argument_list|)
operator|.
name|registerTypeAdapter
argument_list|(
name|LongAdder
operator|.
name|class
argument_list|,
operator|new
name|TypeAdapter
argument_list|<
name|LongAdder
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|JsonWriter
name|out
parameter_list|,
name|LongAdder
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|out
operator|.
name|value
argument_list|(
name|value
operator|.
name|longValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|LongAdder
name|read
parameter_list|(
name|JsonReader
name|in
parameter_list|)
throws|throws
name|IOException
block|{
name|LongAdder
name|value
init|=
operator|new
name|LongAdder
argument_list|()
decl_stmt|;
name|value
operator|.
name|add
argument_list|(
name|in
operator|.
name|nextLong
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|value
return|;
block|}
block|}
argument_list|)
return|;
block|}
block|}
end_class

end_unit

