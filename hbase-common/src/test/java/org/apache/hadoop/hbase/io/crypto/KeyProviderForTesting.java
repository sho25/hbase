begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements. See the NOTICE file distributed with this  * work for additional information regarding copyright ownership. The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations under  * the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|io
operator|.
name|crypto
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Key
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|crypto
operator|.
name|spec
operator|.
name|SecretKeySpec
import|;
end_import

begin_comment
comment|/**  * Return a fixed secret key for AES for testing.  */
end_comment

begin_class
specifier|public
class|class
name|KeyProviderForTesting
implements|implements
name|KeyProvider
block|{
annotation|@
name|Override
specifier|public
name|void
name|init
parameter_list|(
name|String
name|parameters
parameter_list|)
block|{ }
annotation|@
name|Override
specifier|public
name|Key
name|getKey
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|SecretKeySpec
argument_list|(
name|Encryption
operator|.
name|hash128
argument_list|(
name|name
argument_list|)
argument_list|,
literal|"AES"
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Key
index|[]
name|getKeys
parameter_list|(
name|String
index|[]
name|aliases
parameter_list|)
block|{
name|Key
index|[]
name|result
init|=
operator|new
name|Key
index|[
name|aliases
operator|.
name|length
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|aliases
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|result
index|[
name|i
index|]
operator|=
operator|new
name|SecretKeySpec
argument_list|(
name|Encryption
operator|.
name|hash128
argument_list|(
name|aliases
index|[
name|i
index|]
argument_list|)
argument_list|,
literal|"AES"
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

