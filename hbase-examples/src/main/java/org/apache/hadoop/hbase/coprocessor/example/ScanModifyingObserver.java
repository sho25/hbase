begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|example
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|CoprocessorEnvironment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Scan
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|ObserverContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|RegionCoprocessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|RegionCoprocessorEnvironment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|RegionObserver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_comment
comment|/**  * A RegionObserver which modifies incoming Scan requests to include additional  * columns than what the user actually requested.  */
end_comment

begin_class
specifier|public
class|class
name|ScanModifyingObserver
implements|implements
name|RegionCoprocessor
implements|,
name|RegionObserver
block|{
specifier|public
specifier|static
specifier|final
name|String
name|FAMILY_TO_ADD_KEY
init|=
literal|"hbase.examples.coprocessor.scanmodifying.family"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|QUALIFIER_TO_ADD_KEY
init|=
literal|"hbase.examples.coprocessor.scanmodifying.qualifier"
decl_stmt|;
specifier|private
name|byte
index|[]
name|FAMILY_TO_ADD
init|=
literal|null
decl_stmt|;
specifier|private
name|byte
index|[]
name|QUALIFIER_TO_ADD
init|=
literal|null
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|start
parameter_list|(
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
name|CoprocessorEnvironment
name|env
parameter_list|)
throws|throws
name|IOException
block|{
name|RegionCoprocessorEnvironment
name|renv
init|=
operator|(
name|RegionCoprocessorEnvironment
operator|)
name|env
decl_stmt|;
name|FAMILY_TO_ADD
operator|=
name|Bytes
operator|.
name|toBytes
argument_list|(
name|renv
operator|.
name|getConfiguration
argument_list|()
operator|.
name|get
argument_list|(
name|FAMILY_TO_ADD_KEY
argument_list|)
argument_list|)
expr_stmt|;
name|QUALIFIER_TO_ADD
operator|=
name|Bytes
operator|.
name|toBytes
argument_list|(
name|renv
operator|.
name|getConfiguration
argument_list|()
operator|.
name|get
argument_list|(
name|QUALIFIER_TO_ADD_KEY
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Optional
argument_list|<
name|RegionObserver
argument_list|>
name|getRegionObserver
parameter_list|()
block|{
comment|// Extremely important to be sure that the coprocessor is invoked as a RegionObserver
return|return
name|Optional
operator|.
name|of
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|preScannerOpen
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
name|Scan
name|scan
parameter_list|)
throws|throws
name|IOException
block|{
comment|// Add another family:qualifier
name|scan
operator|.
name|addColumn
argument_list|(
name|FAMILY_TO_ADD
argument_list|,
name|QUALIFIER_TO_ADD
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

