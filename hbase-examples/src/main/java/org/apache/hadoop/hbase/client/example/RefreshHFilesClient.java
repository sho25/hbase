begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|example
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Closeable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|coprocessor
operator|.
name|Batch
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ipc
operator|.
name|CoprocessorRpcUtils
operator|.
name|BlockingRpcCallback
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ipc
operator|.
name|ServerRpcController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|RefreshHFilesProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * This client class is for invoking the refresh HFile function deployed on the  * Region Server side via the RefreshHFilesService.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|RefreshHFilesClient
implements|implements
name|Closeable
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|RefreshHFilesClient
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|Connection
name|connection
decl_stmt|;
comment|/**    * Constructor with Conf object    *    * @param cfg    */
specifier|public
name|RefreshHFilesClient
parameter_list|(
name|Configuration
name|cfg
parameter_list|)
block|{
try|try
block|{
name|this
operator|.
name|connection
operator|=
name|ConnectionFactory
operator|.
name|createConnection
argument_list|(
name|cfg
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|this
operator|.
name|connection
operator|!=
literal|null
operator|&&
operator|!
name|this
operator|.
name|connection
operator|.
name|isClosed
argument_list|()
condition|)
block|{
name|this
operator|.
name|connection
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|refreshHFiles
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|Throwable
block|{
try|try
init|(
name|Table
name|table
init|=
name|connection
operator|.
name|getTable
argument_list|(
name|tableName
argument_list|)
init|)
block|{
name|refreshHFiles
argument_list|(
name|table
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|refreshHFiles
parameter_list|(
specifier|final
name|Table
name|table
parameter_list|)
throws|throws
name|Throwable
block|{
specifier|final
name|RefreshHFilesProtos
operator|.
name|RefreshHFilesRequest
name|request
init|=
name|RefreshHFilesProtos
operator|.
name|RefreshHFilesRequest
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
name|table
operator|.
name|coprocessorService
argument_list|(
name|RefreshHFilesProtos
operator|.
name|RefreshHFilesService
operator|.
name|class
argument_list|,
name|HConstants
operator|.
name|EMPTY_START_ROW
argument_list|,
name|HConstants
operator|.
name|EMPTY_END_ROW
argument_list|,
operator|new
name|Batch
operator|.
name|Call
argument_list|<
name|RefreshHFilesProtos
operator|.
name|RefreshHFilesService
argument_list|,
name|RefreshHFilesProtos
operator|.
name|RefreshHFilesResponse
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|RefreshHFilesProtos
operator|.
name|RefreshHFilesResponse
name|call
parameter_list|(
name|RefreshHFilesProtos
operator|.
name|RefreshHFilesService
name|refreshHFilesService
parameter_list|)
throws|throws
name|IOException
block|{
name|ServerRpcController
name|controller
init|=
operator|new
name|ServerRpcController
argument_list|()
decl_stmt|;
name|BlockingRpcCallback
argument_list|<
name|RefreshHFilesProtos
operator|.
name|RefreshHFilesResponse
argument_list|>
name|rpcCallback
init|=
operator|new
name|BlockingRpcCallback
argument_list|<>
argument_list|()
decl_stmt|;
name|refreshHFilesService
operator|.
name|refreshHFiles
argument_list|(
name|controller
argument_list|,
name|request
argument_list|,
name|rpcCallback
argument_list|)
expr_stmt|;
if|if
condition|(
name|controller
operator|.
name|failedOnException
argument_list|()
condition|)
block|{
throw|throw
name|controller
operator|.
name|getFailedOn
argument_list|()
throw|;
block|}
return|return
name|rpcCallback
operator|.
name|get
argument_list|()
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Done refreshing HFiles"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

