begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|metrics
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseInterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceStability
import|;
end_import

begin_comment
comment|/**  * MetricRegistries is collection of MetricRegistry's. MetricsRegistries implementations should do  * ref-counting of MetricRegistry's via create() and remove() methods.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|LimitedPrivate
argument_list|(
name|HBaseInterfaceAudience
operator|.
name|COPROC
argument_list|)
annotation|@
name|InterfaceStability
operator|.
name|Evolving
specifier|public
specifier|abstract
class|class
name|MetricRegistries
block|{
specifier|private
specifier|static
specifier|final
class|class
name|LazyHolder
block|{
specifier|private
specifier|static
specifier|final
name|MetricRegistries
name|GLOBAL
init|=
name|MetricRegistriesLoader
operator|.
name|load
argument_list|()
decl_stmt|;
block|}
comment|/**    * Return the global singleton instance for the MetricRegistries.    * @return MetricRegistries implementation.    */
specifier|public
specifier|static
name|MetricRegistries
name|global
parameter_list|()
block|{
return|return
name|LazyHolder
operator|.
name|GLOBAL
return|;
block|}
comment|/**    * Removes all the MetricRegisties.    */
specifier|public
specifier|abstract
name|void
name|clear
parameter_list|()
function_decl|;
comment|/**    * Create or return MetricRegistry with the given info. MetricRegistry will only be created    * if current reference count is 0. Otherwise ref counted is incremented, and an existing instance    * will be returned.    * @param info the info object for the MetricRegistrytry.    * @return created or existing MetricRegistry.    */
specifier|public
specifier|abstract
name|MetricRegistry
name|create
parameter_list|(
name|MetricRegistryInfo
name|info
parameter_list|)
function_decl|;
comment|/**    * Decrements the ref count of the MetricRegistry, and removes if ref count == 0.    * @param key the info object for the MetricRegistrytry.    * @return true if metric registry is removed.    */
specifier|public
specifier|abstract
name|boolean
name|remove
parameter_list|(
name|MetricRegistryInfo
name|key
parameter_list|)
function_decl|;
comment|/**    * Returns the MetricRegistry if found.    * @param info the info for the registry.    * @return a MetricRegistry optional.    */
specifier|public
specifier|abstract
name|Optional
argument_list|<
name|MetricRegistry
argument_list|>
name|get
parameter_list|(
name|MetricRegistryInfo
name|info
parameter_list|)
function_decl|;
comment|/**    * Returns MetricRegistryInfo's for the MetricRegistry's created.    * @return MetricRegistryInfo's for the MetricRegistry's created.    */
specifier|public
specifier|abstract
name|Set
argument_list|<
name|MetricRegistryInfo
argument_list|>
name|getMetricRegistryInfos
parameter_list|()
function_decl|;
comment|/**    * Returns MetricRegistry's created.    * @return MetricRegistry's created.    */
specifier|public
specifier|abstract
name|Collection
argument_list|<
name|MetricRegistry
argument_list|>
name|getMetricRegistries
parameter_list|()
function_decl|;
block|}
end_class

end_unit

