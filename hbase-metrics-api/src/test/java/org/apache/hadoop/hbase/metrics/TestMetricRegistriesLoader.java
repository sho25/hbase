begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|metrics
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|SmallTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_comment
comment|/**  * Test class for {@link MetricRegistriesLoader}.  */
end_comment

begin_class
annotation|@
name|Category
argument_list|(
name|SmallTests
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestMetricRegistriesLoader
block|{
annotation|@
name|Test
specifier|public
name|void
name|testLoadSinleInstance
parameter_list|()
block|{
name|MetricRegistries
name|loader
init|=
name|mock
argument_list|(
name|MetricRegistries
operator|.
name|class
argument_list|)
decl_stmt|;
name|MetricRegistries
name|instance
init|=
name|MetricRegistriesLoader
operator|.
name|load
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
name|loader
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|loader
argument_list|,
name|instance
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLoadMultipleInstances
parameter_list|()
block|{
name|MetricRegistries
name|loader1
init|=
name|mock
argument_list|(
name|MetricRegistries
operator|.
name|class
argument_list|)
decl_stmt|;
name|MetricRegistries
name|loader2
init|=
name|mock
argument_list|(
name|MetricRegistries
operator|.
name|class
argument_list|)
decl_stmt|;
name|MetricRegistries
name|loader3
init|=
name|mock
argument_list|(
name|MetricRegistries
operator|.
name|class
argument_list|)
decl_stmt|;
name|MetricRegistries
name|instance
init|=
name|MetricRegistriesLoader
operator|.
name|load
argument_list|(
name|Lists
operator|.
name|newArrayList
argument_list|(
name|loader1
argument_list|,
name|loader2
argument_list|,
name|loader3
argument_list|)
argument_list|)
decl_stmt|;
comment|// the load() returns the first instance
name|assertEquals
argument_list|(
name|loader1
argument_list|,
name|instance
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
name|loader2
argument_list|,
name|instance
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
name|loader3
argument_list|,
name|instance
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

