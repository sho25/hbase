begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|errorprone
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|auto
operator|.
name|service
operator|.
name|AutoService
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|errorprone
operator|.
name|BugPattern
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|errorprone
operator|.
name|VisitorState
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|errorprone
operator|.
name|bugpatterns
operator|.
name|BugChecker
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|errorprone
operator|.
name|matchers
operator|.
name|Description
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|source
operator|.
name|tree
operator|.
name|CompilationUnitTree
import|;
end_import

begin_class
annotation|@
name|AutoService
argument_list|(
name|BugChecker
operator|.
name|class
argument_list|)
annotation|@
name|BugPattern
argument_list|(
name|name
operator|=
literal|"AlwaysPasses"
argument_list|,
name|category
operator|=
name|BugPattern
operator|.
name|Category
operator|.
name|JDK
argument_list|,
name|summary
operator|=
literal|"A placeholder rule that never matches."
argument_list|,
name|severity
operator|=
name|BugPattern
operator|.
name|SeverityLevel
operator|.
name|ERROR
argument_list|,
name|suppressionAnnotations
operator|=
block|{}
argument_list|,
name|linkType
operator|=
name|BugPattern
operator|.
name|LinkType
operator|.
name|NONE
argument_list|)
specifier|public
class|class
name|AlwaysPasses
extends|extends
name|BugChecker
implements|implements
name|BugChecker
operator|.
name|CompilationUnitTreeMatcher
block|{
annotation|@
name|Override
specifier|public
name|Description
name|matchCompilationUnit
parameter_list|(
name|CompilationUnitTree
name|tree
parameter_list|,
name|VisitorState
name|state
parameter_list|)
block|{
return|return
name|Description
operator|.
name|NO_MATCH
return|;
block|}
block|}
end_class

end_unit

