begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ipc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|MetricsHBaseServerSourceFactoryImpl
extends|extends
name|MetricsHBaseServerSourceFactory
block|{
specifier|private
enum|enum
name|SourceStorage
block|{
name|INSTANCE
block|;
name|HashMap
argument_list|<
name|String
argument_list|,
name|MetricsHBaseServerSource
argument_list|>
name|sources
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|MetricsHBaseServerSource
argument_list|>
argument_list|()
decl_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|MetricsHBaseServerSource
name|create
parameter_list|(
name|String
name|serverName
parameter_list|,
name|MetricsHBaseServerWrapper
name|wrapper
parameter_list|)
block|{
return|return
name|getSource
argument_list|(
name|serverName
argument_list|,
name|wrapper
argument_list|)
return|;
block|}
specifier|private
specifier|static
specifier|synchronized
name|MetricsHBaseServerSource
name|getSource
parameter_list|(
name|String
name|serverName
parameter_list|,
name|MetricsHBaseServerWrapper
name|wrap
parameter_list|)
block|{
name|String
name|context
init|=
name|createContextName
argument_list|(
name|serverName
argument_list|)
decl_stmt|;
name|MetricsHBaseServerSource
name|source
init|=
name|SourceStorage
operator|.
name|INSTANCE
operator|.
name|sources
operator|.
name|get
argument_list|(
name|context
argument_list|)
decl_stmt|;
if|if
condition|(
name|source
operator|==
literal|null
condition|)
block|{
comment|//Create the source.
name|source
operator|=
operator|new
name|MetricsHBaseServerSourceImpl
argument_list|(
name|context
argument_list|,
name|METRICS_DESCRIPTION
argument_list|,
name|context
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
argument_list|,
name|context
operator|+
name|METRICS_JMX_CONTEXT_SUFFIX
argument_list|,
name|wrap
argument_list|)
expr_stmt|;
comment|//Store back in storage
name|SourceStorage
operator|.
name|INSTANCE
operator|.
name|sources
operator|.
name|put
argument_list|(
name|context
argument_list|,
name|source
argument_list|)
expr_stmt|;
block|}
return|return
name|source
return|;
block|}
block|}
end_class

end_unit

