begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|metrics
operator|.
name|BaseSourceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricHistogram
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|DynamicMetricsRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|VisibleForTesting
import|;
end_import

begin_comment
comment|/**  * Implementation of {@link MetricsTableLatencies} to track latencies for one table in a  * RegionServer.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|MetricsTableLatenciesImpl
extends|extends
name|BaseSourceImpl
implements|implements
name|MetricsTableLatencies
block|{
specifier|private
specifier|final
name|HashMap
argument_list|<
name|TableName
argument_list|,
name|TableHistograms
argument_list|>
name|histogramsByTable
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|VisibleForTesting
specifier|public
specifier|static
class|class
name|TableHistograms
block|{
specifier|final
name|MetricHistogram
name|getTimeHisto
decl_stmt|;
specifier|final
name|MetricHistogram
name|incrementTimeHisto
decl_stmt|;
specifier|final
name|MetricHistogram
name|appendTimeHisto
decl_stmt|;
specifier|final
name|MetricHistogram
name|putTimeHisto
decl_stmt|;
specifier|final
name|MetricHistogram
name|putBatchTimeHisto
decl_stmt|;
specifier|final
name|MetricHistogram
name|deleteTimeHisto
decl_stmt|;
specifier|final
name|MetricHistogram
name|deleteBatchTimeHisto
decl_stmt|;
specifier|final
name|MetricHistogram
name|scanTimeHisto
decl_stmt|;
specifier|final
name|MetricHistogram
name|scanSizeHisto
decl_stmt|;
name|TableHistograms
parameter_list|(
name|DynamicMetricsRegistry
name|registry
parameter_list|,
name|TableName
name|tn
parameter_list|)
block|{
name|getTimeHisto
operator|=
name|registry
operator|.
name|newTimeHistogram
argument_list|(
name|qualifyMetricsName
argument_list|(
name|tn
argument_list|,
name|GET_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|incrementTimeHisto
operator|=
name|registry
operator|.
name|newTimeHistogram
argument_list|(
name|qualifyMetricsName
argument_list|(
name|tn
argument_list|,
name|INCREMENT_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|appendTimeHisto
operator|=
name|registry
operator|.
name|newTimeHistogram
argument_list|(
name|qualifyMetricsName
argument_list|(
name|tn
argument_list|,
name|APPEND_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|putTimeHisto
operator|=
name|registry
operator|.
name|newTimeHistogram
argument_list|(
name|qualifyMetricsName
argument_list|(
name|tn
argument_list|,
name|PUT_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|putBatchTimeHisto
operator|=
name|registry
operator|.
name|newTimeHistogram
argument_list|(
name|qualifyMetricsName
argument_list|(
name|tn
argument_list|,
name|PUT_BATCH_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|deleteTimeHisto
operator|=
name|registry
operator|.
name|newTimeHistogram
argument_list|(
name|qualifyMetricsName
argument_list|(
name|tn
argument_list|,
name|DELETE_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|deleteBatchTimeHisto
operator|=
name|registry
operator|.
name|newTimeHistogram
argument_list|(
name|qualifyMetricsName
argument_list|(
name|tn
argument_list|,
name|DELETE_BATCH_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|scanTimeHisto
operator|=
name|registry
operator|.
name|newTimeHistogram
argument_list|(
name|qualifyMetricsName
argument_list|(
name|tn
argument_list|,
name|SCAN_TIME
argument_list|)
argument_list|)
expr_stmt|;
name|scanSizeHisto
operator|=
name|registry
operator|.
name|newSizeHistogram
argument_list|(
name|qualifyMetricsName
argument_list|(
name|tn
argument_list|,
name|SCAN_SIZE
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|updatePut
parameter_list|(
name|long
name|time
parameter_list|)
block|{
name|putTimeHisto
operator|.
name|add
argument_list|(
name|time
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|updatePutBatch
parameter_list|(
name|long
name|time
parameter_list|)
block|{
name|putBatchTimeHisto
operator|.
name|add
argument_list|(
name|time
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|updateDelete
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|deleteTimeHisto
operator|.
name|add
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|updateDeleteBatch
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|deleteBatchTimeHisto
operator|.
name|add
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|updateGet
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|getTimeHisto
operator|.
name|add
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|updateIncrement
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|incrementTimeHisto
operator|.
name|add
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|updateAppend
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|appendTimeHisto
operator|.
name|add
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|updateScanSize
parameter_list|(
name|long
name|scanSize
parameter_list|)
block|{
name|scanSizeHisto
operator|.
name|add
argument_list|(
name|scanSize
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|updateScanTime
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|scanTimeHisto
operator|.
name|add
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|VisibleForTesting
specifier|public
specifier|static
name|String
name|qualifyMetricsName
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|String
name|metric
parameter_list|)
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"Namespace_"
argument_list|)
operator|.
name|append
argument_list|(
name|tableName
operator|.
name|getNamespaceAsString
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"_table_"
argument_list|)
operator|.
name|append
argument_list|(
name|tableName
operator|.
name|getQualifierAsString
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"_metric_"
argument_list|)
operator|.
name|append
argument_list|(
name|metric
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
annotation|@
name|VisibleForTesting
specifier|public
name|TableHistograms
name|getOrCreateTableHistogram
parameter_list|(
name|String
name|tableName
parameter_list|)
block|{
comment|// TODO Java8's ConcurrentHashMap#computeIfAbsent would be stellar instead
specifier|final
name|TableName
name|tn
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|tableName
argument_list|)
decl_stmt|;
name|TableHistograms
name|latency
init|=
name|histogramsByTable
operator|.
name|get
argument_list|(
name|tn
argument_list|)
decl_stmt|;
if|if
condition|(
name|latency
operator|==
literal|null
condition|)
block|{
name|latency
operator|=
operator|new
name|TableHistograms
argument_list|(
name|getMetricsRegistry
argument_list|()
argument_list|,
name|tn
argument_list|)
expr_stmt|;
name|histogramsByTable
operator|.
name|put
argument_list|(
name|tn
argument_list|,
name|latency
argument_list|)
expr_stmt|;
block|}
return|return
name|latency
return|;
block|}
specifier|public
name|MetricsTableLatenciesImpl
parameter_list|()
block|{
name|this
argument_list|(
name|METRICS_NAME
argument_list|,
name|METRICS_DESCRIPTION
argument_list|,
name|METRICS_CONTEXT
argument_list|,
name|METRICS_JMX_CONTEXT
argument_list|)
expr_stmt|;
block|}
specifier|public
name|MetricsTableLatenciesImpl
parameter_list|(
name|String
name|metricsName
parameter_list|,
name|String
name|metricsDescription
parameter_list|,
name|String
name|metricsContext
parameter_list|,
name|String
name|metricsJmxContext
parameter_list|)
block|{
name|super
argument_list|(
name|metricsName
argument_list|,
name|metricsDescription
argument_list|,
name|metricsContext
argument_list|,
name|metricsJmxContext
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updatePut
parameter_list|(
name|String
name|tableName
parameter_list|,
name|long
name|t
parameter_list|)
block|{
name|getOrCreateTableHistogram
argument_list|(
name|tableName
argument_list|)
operator|.
name|updatePut
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updatePutBatch
parameter_list|(
name|String
name|tableName
parameter_list|,
name|long
name|t
parameter_list|)
block|{
name|getOrCreateTableHistogram
argument_list|(
name|tableName
argument_list|)
operator|.
name|updatePutBatch
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateDelete
parameter_list|(
name|String
name|tableName
parameter_list|,
name|long
name|t
parameter_list|)
block|{
name|getOrCreateTableHistogram
argument_list|(
name|tableName
argument_list|)
operator|.
name|updateDelete
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateDeleteBatch
parameter_list|(
name|String
name|tableName
parameter_list|,
name|long
name|t
parameter_list|)
block|{
name|getOrCreateTableHistogram
argument_list|(
name|tableName
argument_list|)
operator|.
name|updateDeleteBatch
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateGet
parameter_list|(
name|String
name|tableName
parameter_list|,
name|long
name|t
parameter_list|)
block|{
name|getOrCreateTableHistogram
argument_list|(
name|tableName
argument_list|)
operator|.
name|updateGet
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateIncrement
parameter_list|(
name|String
name|tableName
parameter_list|,
name|long
name|t
parameter_list|)
block|{
name|getOrCreateTableHistogram
argument_list|(
name|tableName
argument_list|)
operator|.
name|updateIncrement
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateAppend
parameter_list|(
name|String
name|tableName
parameter_list|,
name|long
name|t
parameter_list|)
block|{
name|getOrCreateTableHistogram
argument_list|(
name|tableName
argument_list|)
operator|.
name|updateAppend
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateScanSize
parameter_list|(
name|String
name|tableName
parameter_list|,
name|long
name|scanSize
parameter_list|)
block|{
name|getOrCreateTableHistogram
argument_list|(
name|tableName
argument_list|)
operator|.
name|updateScanSize
argument_list|(
name|scanSize
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateScanTime
parameter_list|(
name|String
name|tableName
parameter_list|,
name|long
name|t
parameter_list|)
block|{
name|getOrCreateTableHistogram
argument_list|(
name|tableName
argument_list|)
operator|.
name|updateScanTime
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

