begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements. See the NOTICE file distributed with this  * work for additional information regarding copyright ownership. The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|metrics
operator|.
name|BaseSourceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricHistogram
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableFastCounter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableGaugeLong
import|;
end_import

begin_comment
comment|/**  * Hadoop2 implementation of MetricsHeapMemoryManagerSource. Implements BaseSource through  * BaseSourceImpl, following the pattern  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|MetricsHeapMemoryManagerSourceImpl
extends|extends
name|BaseSourceImpl
implements|implements
name|MetricsHeapMemoryManagerSource
block|{
specifier|private
specifier|final
name|MetricHistogram
name|blockedFlushHistogram
decl_stmt|;
specifier|private
specifier|final
name|MetricHistogram
name|unblockedFlushHistogram
decl_stmt|;
specifier|private
specifier|final
name|MetricHistogram
name|incMemStoreSizeHistogram
decl_stmt|;
specifier|private
specifier|final
name|MetricHistogram
name|decMemStoreSizeHistogram
decl_stmt|;
specifier|private
specifier|final
name|MetricHistogram
name|incBlockCacheSizeHistogram
decl_stmt|;
specifier|private
specifier|final
name|MetricHistogram
name|decBlockCacheSizeHistogram
decl_stmt|;
specifier|private
specifier|final
name|MutableGaugeLong
name|blockedFlushGauge
decl_stmt|;
specifier|private
specifier|final
name|MutableGaugeLong
name|unblockedFlushGauge
decl_stmt|;
specifier|private
specifier|final
name|MutableGaugeLong
name|memStoreSizeGauge
decl_stmt|;
specifier|private
specifier|final
name|MutableGaugeLong
name|blockCacheSizeGauge
decl_stmt|;
specifier|private
specifier|final
name|MutableFastCounter
name|doNothingCounter
decl_stmt|;
specifier|private
specifier|final
name|MutableFastCounter
name|aboveHeapOccupancyLowWatermarkCounter
decl_stmt|;
specifier|public
name|MetricsHeapMemoryManagerSourceImpl
parameter_list|()
block|{
name|this
argument_list|(
name|METRICS_NAME
argument_list|,
name|METRICS_DESCRIPTION
argument_list|,
name|METRICS_CONTEXT
argument_list|,
name|METRICS_JMX_CONTEXT
argument_list|)
expr_stmt|;
block|}
specifier|public
name|MetricsHeapMemoryManagerSourceImpl
parameter_list|(
name|String
name|metricsName
parameter_list|,
name|String
name|metricsDescription
parameter_list|,
name|String
name|metricsContext
parameter_list|,
name|String
name|metricsJmxContext
parameter_list|)
block|{
name|super
argument_list|(
name|metricsName
argument_list|,
name|metricsDescription
argument_list|,
name|metricsContext
argument_list|,
name|metricsJmxContext
argument_list|)
expr_stmt|;
comment|// Histograms
name|blockedFlushHistogram
operator|=
name|getMetricsRegistry
argument_list|()
operator|.
name|newSizeHistogram
argument_list|(
name|BLOCKED_FLUSH_NAME
argument_list|,
name|BLOCKED_FLUSH_DESC
argument_list|)
expr_stmt|;
name|unblockedFlushHistogram
operator|=
name|getMetricsRegistry
argument_list|()
operator|.
name|newSizeHistogram
argument_list|(
name|UNBLOCKED_FLUSH_NAME
argument_list|,
name|UNBLOCKED_FLUSH_DESC
argument_list|)
expr_stmt|;
name|incMemStoreSizeHistogram
operator|=
name|getMetricsRegistry
argument_list|()
operator|.
name|newSizeHistogram
argument_list|(
name|INC_MEMSTORE_TUNING_NAME
argument_list|,
name|INC_MEMSTORE_TUNING_DESC
argument_list|)
expr_stmt|;
name|decMemStoreSizeHistogram
operator|=
name|getMetricsRegistry
argument_list|()
operator|.
name|newSizeHistogram
argument_list|(
name|DEC_MEMSTORE_TUNING_NAME
argument_list|,
name|DEC_MEMSTORE_TUNING_DESC
argument_list|)
expr_stmt|;
name|incBlockCacheSizeHistogram
operator|=
name|getMetricsRegistry
argument_list|()
operator|.
name|newSizeHistogram
argument_list|(
name|INC_BLOCKCACHE_TUNING_NAME
argument_list|,
name|INC_BLOCKCACHE_TUNING_DESC
argument_list|)
expr_stmt|;
name|decBlockCacheSizeHistogram
operator|=
name|getMetricsRegistry
argument_list|()
operator|.
name|newSizeHistogram
argument_list|(
name|DEC_BLOCKCACHE_TUNING_NAME
argument_list|,
name|DEC_BLOCKCACHE_TUNING_DESC
argument_list|)
expr_stmt|;
comment|// Gauges
name|blockedFlushGauge
operator|=
name|getMetricsRegistry
argument_list|()
operator|.
name|newGauge
argument_list|(
name|BLOCKED_FLUSH_GAUGE_NAME
argument_list|,
name|BLOCKED_FLUSH_GAUGE_DESC
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
name|unblockedFlushGauge
operator|=
name|getMetricsRegistry
argument_list|()
operator|.
name|newGauge
argument_list|(
name|UNBLOCKED_FLUSH_GAUGE_NAME
argument_list|,
name|UNBLOCKED_FLUSH_GAUGE_DESC
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
name|memStoreSizeGauge
operator|=
name|getMetricsRegistry
argument_list|()
operator|.
name|newGauge
argument_list|(
name|MEMSTORE_SIZE_GAUGE_NAME
argument_list|,
name|MEMSTORE_SIZE_GAUGE_DESC
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
name|blockCacheSizeGauge
operator|=
name|getMetricsRegistry
argument_list|()
operator|.
name|newGauge
argument_list|(
name|BLOCKCACHE_SIZE_GAUGE_NAME
argument_list|,
name|BLOCKCACHE_SIZE_GAUGE_DESC
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
comment|// Counters
name|doNothingCounter
operator|=
name|getMetricsRegistry
argument_list|()
operator|.
name|newCounter
argument_list|(
name|DO_NOTHING_COUNTER_NAME
argument_list|,
name|DO_NOTHING_COUNTER_DESC
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
name|aboveHeapOccupancyLowWatermarkCounter
operator|=
name|getMetricsRegistry
argument_list|()
operator|.
name|newCounter
argument_list|(
name|ABOVE_HEAP_LOW_WATERMARK_COUNTER_NAME
argument_list|,
name|ABOVE_HEAP_LOW_WATERMARK_COUNTER_DESC
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateBlockedFlushCount
parameter_list|(
name|long
name|blockedFlushCount
parameter_list|)
block|{
if|if
condition|(
name|blockedFlushCount
operator|>
literal|0
condition|)
block|{
name|blockedFlushHistogram
operator|.
name|add
argument_list|(
name|blockedFlushCount
argument_list|)
expr_stmt|;
name|blockedFlushGauge
operator|.
name|set
argument_list|(
name|blockedFlushCount
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateUnblockedFlushCount
parameter_list|(
name|long
name|unblockedFlushCount
parameter_list|)
block|{
if|if
condition|(
name|unblockedFlushCount
operator|>
literal|0
condition|)
block|{
name|unblockedFlushHistogram
operator|.
name|add
argument_list|(
name|unblockedFlushCount
argument_list|)
expr_stmt|;
name|unblockedFlushGauge
operator|.
name|set
argument_list|(
name|unblockedFlushCount
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|setCurBlockCacheSizeGauge
parameter_list|(
name|long
name|blockcacheSize
parameter_list|)
block|{
name|blockCacheSizeGauge
operator|.
name|set
argument_list|(
name|blockcacheSize
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setCurMemStoreSizeGauge
parameter_list|(
name|long
name|memstoreSize
parameter_list|)
block|{
name|memStoreSizeGauge
operator|.
name|set
argument_list|(
name|memstoreSize
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateMemStoreDeltaSizeHistogram
parameter_list|(
name|int
name|memStoreDeltaSize
parameter_list|)
block|{
if|if
condition|(
name|memStoreDeltaSize
operator|>=
literal|0
condition|)
block|{
name|incMemStoreSizeHistogram
operator|.
name|add
argument_list|(
name|memStoreDeltaSize
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|memStoreDeltaSize
operator|<
literal|0
condition|)
block|{
name|decMemStoreSizeHistogram
operator|.
name|add
argument_list|(
operator|-
name|memStoreDeltaSize
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateBlockCacheDeltaSizeHistogram
parameter_list|(
name|int
name|blockCacheDeltaSize
parameter_list|)
block|{
if|if
condition|(
name|blockCacheDeltaSize
operator|>=
literal|0
condition|)
block|{
name|incBlockCacheSizeHistogram
operator|.
name|add
argument_list|(
name|blockCacheDeltaSize
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|blockCacheDeltaSize
operator|<
literal|0
condition|)
block|{
name|decBlockCacheSizeHistogram
operator|.
name|add
argument_list|(
operator|-
name|blockCacheDeltaSize
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|increaseTunerDoNothingCounter
parameter_list|()
block|{
name|doNothingCounter
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|increaseAboveHeapOccupancyLowWatermarkCounter
parameter_list|()
block|{
name|aboveHeapOccupancyLowWatermarkCounter
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

