begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|zookeeper
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|metrics
operator|.
name|BaseSourceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsCollector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableGaugeLong
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableHistogram
import|;
end_import

begin_comment
comment|/**  * Class that transitions metrics from MetricsZooKeeper into the metrics subsystem.  *  * Implements BaseSource through BaseSourceImpl, following the pattern.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|MetricsZooKeeperSourceImpl
extends|extends
name|BaseSourceImpl
implements|implements
name|MetricsZooKeeperSource
block|{
specifier|private
specifier|final
name|MutableGaugeLong
name|authFailedFailedOpCount
decl_stmt|;
specifier|private
specifier|final
name|MutableGaugeLong
name|connectionLossFailedOpCount
decl_stmt|;
specifier|private
specifier|final
name|MutableGaugeLong
name|dataInconsistencyFailedOpCount
decl_stmt|;
specifier|private
specifier|final
name|MutableGaugeLong
name|invalidACLFailedOpCount
decl_stmt|;
specifier|private
specifier|final
name|MutableGaugeLong
name|noAuthFailedOpCount
decl_stmt|;
specifier|private
specifier|final
name|MutableGaugeLong
name|operationTimeOutFailedOpCount
decl_stmt|;
specifier|private
specifier|final
name|MutableGaugeLong
name|runtimeInconsistencyFailedOpCount
decl_stmt|;
specifier|private
specifier|final
name|MutableGaugeLong
name|sessionExpiredFailedOpCount
decl_stmt|;
specifier|private
specifier|final
name|MutableGaugeLong
name|systemErrorFailedOpCount
decl_stmt|;
specifier|private
specifier|final
name|MutableGaugeLong
name|totalFailedZKCalls
decl_stmt|;
specifier|private
name|MutableHistogram
name|readOpLatency
decl_stmt|;
specifier|private
name|MutableHistogram
name|writeOpLatency
decl_stmt|;
specifier|private
name|MutableHistogram
name|syncOpLatency
decl_stmt|;
specifier|public
name|MetricsZooKeeperSourceImpl
parameter_list|()
block|{
name|this
argument_list|(
name|METRICS_NAME
argument_list|,
name|METRICS_DESCRIPTION
argument_list|,
name|METRICS_CONTEXT
argument_list|,
name|METRICS_JMX_CONTEXT
argument_list|)
expr_stmt|;
block|}
specifier|public
name|MetricsZooKeeperSourceImpl
parameter_list|(
name|String
name|metricsName
parameter_list|,
name|String
name|metricsDescription
parameter_list|,
name|String
name|metricsContext
parameter_list|,
name|String
name|metricsJmxContext
parameter_list|)
block|{
name|super
argument_list|(
name|metricsName
argument_list|,
name|metricsDescription
argument_list|,
name|metricsContext
argument_list|,
name|metricsJmxContext
argument_list|)
expr_stmt|;
comment|//Create and store the metrics that will be used.
name|authFailedFailedOpCount
operator|=
name|this
operator|.
name|getMetricsRegistry
argument_list|()
operator|.
name|newGauge
argument_list|(
name|EXCEPTION_AUTHFAILED
argument_list|,
name|EXCEPTION_AUTHFAILED_DESC
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
name|connectionLossFailedOpCount
operator|=
name|this
operator|.
name|getMetricsRegistry
argument_list|()
operator|.
name|newGauge
argument_list|(
name|EXCEPTION_CONNECTIONLOSS
argument_list|,
name|EXCEPTION_CONNECTIONLOSS_DESC
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
name|dataInconsistencyFailedOpCount
operator|=
name|this
operator|.
name|getMetricsRegistry
argument_list|()
operator|.
name|newGauge
argument_list|(
name|EXCEPTION_DATAINCONSISTENCY
argument_list|,
name|EXCEPTION_DATAINCONSISTENCY_DESC
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
name|invalidACLFailedOpCount
operator|=
name|this
operator|.
name|getMetricsRegistry
argument_list|()
operator|.
name|newGauge
argument_list|(
name|EXCEPTION_INVALIDACL
argument_list|,
name|EXCEPTION_INVALIDACL_DESC
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
name|noAuthFailedOpCount
operator|=
name|this
operator|.
name|getMetricsRegistry
argument_list|()
operator|.
name|newGauge
argument_list|(
name|EXCEPTION_NOAUTH
argument_list|,
name|EXCEPTION_NOAUTH_DESC
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
name|operationTimeOutFailedOpCount
operator|=
name|this
operator|.
name|getMetricsRegistry
argument_list|()
operator|.
name|newGauge
argument_list|(
name|EXCEPTION_OPERATIONTIMEOUT
argument_list|,
name|EXCEPTION_OPERATIONTIMEOUT_DESC
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
name|runtimeInconsistencyFailedOpCount
operator|=
name|this
operator|.
name|getMetricsRegistry
argument_list|()
operator|.
name|newGauge
argument_list|(
name|EXCEPTION_RUNTIMEINCONSISTENCY
argument_list|,
name|EXCEPTION_RUNTIMEINCONSISTENCY_DESC
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
name|sessionExpiredFailedOpCount
operator|=
name|this
operator|.
name|getMetricsRegistry
argument_list|()
operator|.
name|newGauge
argument_list|(
name|EXCEPTION_SESSIONEXPIRED
argument_list|,
name|EXCEPTION_SESSIONEXPIRED_DESC
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
name|systemErrorFailedOpCount
operator|=
name|this
operator|.
name|getMetricsRegistry
argument_list|()
operator|.
name|newGauge
argument_list|(
name|EXCEPTION_SYSTEMERROR
argument_list|,
name|EXCEPTION_SYSTEMERROR_DESC
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
name|totalFailedZKCalls
operator|=
name|this
operator|.
name|getMetricsRegistry
argument_list|()
operator|.
name|newGauge
argument_list|(
name|TOTAL_FAILED_ZK_CALLS
argument_list|,
name|TOTAL_FAILED_ZK_CALLS_DESC
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
name|readOpLatency
operator|=
name|this
operator|.
name|getMetricsRegistry
argument_list|()
operator|.
name|newHistogram
argument_list|(
name|READ_OPERATION_LATENCY_NAME
argument_list|,
name|READ_OPERATION_LATENCY_DESC
argument_list|)
expr_stmt|;
name|writeOpLatency
operator|=
name|this
operator|.
name|getMetricsRegistry
argument_list|()
operator|.
name|newHistogram
argument_list|(
name|WRITE_OPERATION_LATENCY_NAME
argument_list|,
name|WRITE_OPERATION_LATENCY_DESC
argument_list|)
expr_stmt|;
name|syncOpLatency
operator|=
name|this
operator|.
name|getMetricsRegistry
argument_list|()
operator|.
name|newHistogram
argument_list|(
name|SYNC_OPERATION_LATENCY_NAME
argument_list|,
name|SYNC_OPERATION_LATENCY_DESC
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|getMetrics
parameter_list|(
name|MetricsCollector
name|metricsCollector
parameter_list|,
name|boolean
name|all
parameter_list|)
block|{
name|super
operator|.
name|getMetrics
argument_list|(
name|metricsCollector
argument_list|,
name|all
argument_list|)
expr_stmt|;
name|clearZKExceptionMetrics
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|clearZKExceptionMetrics
parameter_list|()
block|{
comment|//Reset the exception metrics.
name|clearMetricIfNotNull
argument_list|(
name|authFailedFailedOpCount
argument_list|)
expr_stmt|;
name|clearMetricIfNotNull
argument_list|(
name|connectionLossFailedOpCount
argument_list|)
expr_stmt|;
name|clearMetricIfNotNull
argument_list|(
name|dataInconsistencyFailedOpCount
argument_list|)
expr_stmt|;
name|clearMetricIfNotNull
argument_list|(
name|invalidACLFailedOpCount
argument_list|)
expr_stmt|;
name|clearMetricIfNotNull
argument_list|(
name|noAuthFailedOpCount
argument_list|)
expr_stmt|;
name|clearMetricIfNotNull
argument_list|(
name|operationTimeOutFailedOpCount
argument_list|)
expr_stmt|;
name|clearMetricIfNotNull
argument_list|(
name|runtimeInconsistencyFailedOpCount
argument_list|)
expr_stmt|;
name|clearMetricIfNotNull
argument_list|(
name|sessionExpiredFailedOpCount
argument_list|)
expr_stmt|;
name|clearMetricIfNotNull
argument_list|(
name|systemErrorFailedOpCount
argument_list|)
expr_stmt|;
name|clearMetricIfNotNull
argument_list|(
name|totalFailedZKCalls
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|clearMetricIfNotNull
parameter_list|(
name|MutableGaugeLong
name|metric
parameter_list|)
block|{
if|if
condition|(
name|metric
operator|!=
literal|null
condition|)
block|{
name|metric
operator|.
name|set
argument_list|(
literal|0L
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|incrementAuthFailedCount
parameter_list|()
block|{
name|authFailedFailedOpCount
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|incrementConnectionLossCount
parameter_list|()
block|{
name|connectionLossFailedOpCount
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|incrementDataInconsistencyCount
parameter_list|()
block|{
name|dataInconsistencyFailedOpCount
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|incrementInvalidACLCount
parameter_list|()
block|{
name|invalidACLFailedOpCount
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|incrementNoAuthCount
parameter_list|()
block|{
name|noAuthFailedOpCount
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|incrementOperationTimeoutCount
parameter_list|()
block|{
name|operationTimeOutFailedOpCount
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|incrementRuntimeInconsistencyCount
parameter_list|()
block|{
name|runtimeInconsistencyFailedOpCount
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|incrementSessionExpiredCount
parameter_list|()
block|{
name|sessionExpiredFailedOpCount
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|incrementSystemErrorCount
parameter_list|()
block|{
name|systemErrorFailedOpCount
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|incrementTotalFailedZKCalls
parameter_list|()
block|{
name|totalFailedZKCalls
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|recordReadOperationLatency
parameter_list|(
name|long
name|latency
parameter_list|)
block|{
name|readOpLatency
operator|.
name|add
argument_list|(
name|latency
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|recordWriteOperationLatency
parameter_list|(
name|long
name|latency
parameter_list|)
block|{
name|writeOpLatency
operator|.
name|add
argument_list|(
name|latency
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|recordSyncOperationLatency
parameter_list|(
name|long
name|latency
parameter_list|)
block|{
name|syncOpLatency
operator|.
name|add
argument_list|(
name|latency
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

