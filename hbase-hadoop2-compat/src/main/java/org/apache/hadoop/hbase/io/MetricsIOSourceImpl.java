begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|io
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|metrics
operator|.
name|BaseSourceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricHistogram
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsCollector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsRecordBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|Interns
import|;
end_import

begin_class
specifier|public
class|class
name|MetricsIOSourceImpl
extends|extends
name|BaseSourceImpl
implements|implements
name|MetricsIOSource
block|{
specifier|private
specifier|final
name|MetricsIOWrapper
name|wrapper
decl_stmt|;
specifier|private
specifier|final
name|MetricHistogram
name|fsReadTimeHisto
decl_stmt|;
specifier|private
specifier|final
name|MetricHistogram
name|fsPReadTimeHisto
decl_stmt|;
specifier|private
specifier|final
name|MetricHistogram
name|fsWriteTimeHisto
decl_stmt|;
specifier|public
name|MetricsIOSourceImpl
parameter_list|(
name|MetricsIOWrapper
name|wrapper
parameter_list|)
block|{
name|this
argument_list|(
name|METRICS_NAME
argument_list|,
name|METRICS_DESCRIPTION
argument_list|,
name|METRICS_CONTEXT
argument_list|,
name|METRICS_JMX_CONTEXT
argument_list|,
name|wrapper
argument_list|)
expr_stmt|;
block|}
specifier|public
name|MetricsIOSourceImpl
parameter_list|(
name|String
name|metricsName
parameter_list|,
name|String
name|metricsDescription
parameter_list|,
name|String
name|metricsContext
parameter_list|,
name|String
name|metricsJmxContext
parameter_list|,
name|MetricsIOWrapper
name|wrapper
parameter_list|)
block|{
name|super
argument_list|(
name|metricsName
argument_list|,
name|metricsDescription
argument_list|,
name|metricsContext
argument_list|,
name|metricsJmxContext
argument_list|)
expr_stmt|;
name|this
operator|.
name|wrapper
operator|=
name|wrapper
expr_stmt|;
name|fsReadTimeHisto
operator|=
name|getMetricsRegistry
argument_list|()
operator|.
name|newTimeHistogram
argument_list|(
name|FS_READ_TIME_HISTO_KEY
argument_list|,
name|FS_READ_TIME_HISTO_DESC
argument_list|)
expr_stmt|;
name|fsPReadTimeHisto
operator|=
name|getMetricsRegistry
argument_list|()
operator|.
name|newTimeHistogram
argument_list|(
name|FS_PREAD_TIME_HISTO_KEY
argument_list|,
name|FS_PREAD_TIME_HISTO_DESC
argument_list|)
expr_stmt|;
name|fsWriteTimeHisto
operator|=
name|getMetricsRegistry
argument_list|()
operator|.
name|newTimeHistogram
argument_list|(
name|FS_WRITE_HISTO_KEY
argument_list|,
name|FS_WRITE_TIME_HISTO_DESC
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateFsReadTime
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|fsReadTimeHisto
operator|.
name|add
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateFsPReadTime
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|fsPReadTimeHisto
operator|.
name|add
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateFsWriteTime
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|fsWriteTimeHisto
operator|.
name|add
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|getMetrics
parameter_list|(
name|MetricsCollector
name|metricsCollector
parameter_list|,
name|boolean
name|all
parameter_list|)
block|{
name|MetricsRecordBuilder
name|mrb
init|=
name|metricsCollector
operator|.
name|addRecord
argument_list|(
name|metricsName
argument_list|)
decl_stmt|;
comment|// wrapper can be null because this function is called inside of init.
if|if
condition|(
name|wrapper
operator|!=
literal|null
condition|)
block|{
name|mrb
operator|.
name|addCounter
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
name|CHECKSUM_FAILURES_KEY
argument_list|,
name|CHECKSUM_FAILURES_DESC
argument_list|)
argument_list|,
name|wrapper
operator|.
name|getChecksumFailures
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|metricsRegistry
operator|.
name|snapshot
argument_list|(
name|mrb
argument_list|,
name|all
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

