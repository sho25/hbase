begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicBoolean
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|LongAdder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricHistogram
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsCollector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsRecordBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|DynamicMetricsRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|MetricsUserSourceImpl
implements|implements
name|MetricsUserSource
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MetricsUserSourceImpl
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|String
name|userNamePrefix
decl_stmt|;
specifier|private
specifier|final
name|String
name|user
decl_stmt|;
specifier|private
specifier|final
name|String
name|userGetKey
decl_stmt|;
specifier|private
specifier|final
name|String
name|userScanTimeKey
decl_stmt|;
specifier|private
specifier|final
name|String
name|userPutKey
decl_stmt|;
specifier|private
specifier|final
name|String
name|userDeleteKey
decl_stmt|;
specifier|private
specifier|final
name|String
name|userIncrementKey
decl_stmt|;
specifier|private
specifier|final
name|String
name|userAppendKey
decl_stmt|;
specifier|private
specifier|final
name|String
name|userReplayKey
decl_stmt|;
specifier|private
name|MetricHistogram
name|getHisto
decl_stmt|;
specifier|private
name|MetricHistogram
name|scanTimeHisto
decl_stmt|;
specifier|private
name|MetricHistogram
name|putHisto
decl_stmt|;
specifier|private
name|MetricHistogram
name|deleteHisto
decl_stmt|;
specifier|private
name|MetricHistogram
name|incrementHisto
decl_stmt|;
specifier|private
name|MetricHistogram
name|appendHisto
decl_stmt|;
specifier|private
name|MetricHistogram
name|replayHisto
decl_stmt|;
specifier|private
specifier|final
name|int
name|hashCode
decl_stmt|;
specifier|private
name|AtomicBoolean
name|closed
init|=
operator|new
name|AtomicBoolean
argument_list|(
literal|false
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|MetricsUserAggregateSourceImpl
name|agg
decl_stmt|;
specifier|private
specifier|final
name|DynamicMetricsRegistry
name|registry
decl_stmt|;
specifier|private
name|ConcurrentHashMap
argument_list|<
name|String
argument_list|,
name|ClientMetrics
argument_list|>
name|clientMetricsMap
decl_stmt|;
specifier|static
class|class
name|ClientMetricsImpl
implements|implements
name|ClientMetrics
block|{
specifier|private
specifier|final
name|String
name|hostName
decl_stmt|;
specifier|final
name|LongAdder
name|readRequestsCount
init|=
operator|new
name|LongAdder
argument_list|()
decl_stmt|;
specifier|final
name|LongAdder
name|writeRequestsCount
init|=
operator|new
name|LongAdder
argument_list|()
decl_stmt|;
specifier|final
name|LongAdder
name|filteredRequestsCount
init|=
operator|new
name|LongAdder
argument_list|()
decl_stmt|;
specifier|public
name|ClientMetricsImpl
parameter_list|(
name|String
name|hostName
parameter_list|)
block|{
name|this
operator|.
name|hostName
operator|=
name|hostName
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|incrementReadRequest
parameter_list|()
block|{
name|readRequestsCount
operator|.
name|increment
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|incrementWriteRequest
parameter_list|()
block|{
name|writeRequestsCount
operator|.
name|increment
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getHostName
parameter_list|()
block|{
return|return
name|hostName
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getReadRequestsCount
parameter_list|()
block|{
return|return
name|readRequestsCount
operator|.
name|sum
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getWriteRequestsCount
parameter_list|()
block|{
return|return
name|writeRequestsCount
operator|.
name|sum
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|incrementFilteredReadRequests
parameter_list|()
block|{
name|filteredRequestsCount
operator|.
name|increment
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getFilteredReadRequests
parameter_list|()
block|{
return|return
name|filteredRequestsCount
operator|.
name|sum
argument_list|()
return|;
block|}
block|}
specifier|public
name|MetricsUserSourceImpl
parameter_list|(
name|String
name|user
parameter_list|,
name|MetricsUserAggregateSourceImpl
name|agg
parameter_list|)
block|{
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Creating new MetricsUserSourceImpl for user "
operator|+
name|user
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|user
operator|=
name|user
expr_stmt|;
name|this
operator|.
name|agg
operator|=
name|agg
expr_stmt|;
name|this
operator|.
name|registry
operator|=
name|agg
operator|.
name|getMetricsRegistry
argument_list|()
expr_stmt|;
name|this
operator|.
name|userNamePrefix
operator|=
literal|"user_"
operator|+
name|user
operator|+
literal|"_metric_"
expr_stmt|;
name|hashCode
operator|=
name|userNamePrefix
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|userGetKey
operator|=
name|userNamePrefix
operator|+
name|MetricsRegionServerSource
operator|.
name|GET_KEY
expr_stmt|;
name|userScanTimeKey
operator|=
name|userNamePrefix
operator|+
name|MetricsRegionServerSource
operator|.
name|SCAN_TIME_KEY
expr_stmt|;
name|userPutKey
operator|=
name|userNamePrefix
operator|+
name|MetricsRegionServerSource
operator|.
name|PUT_KEY
expr_stmt|;
name|userDeleteKey
operator|=
name|userNamePrefix
operator|+
name|MetricsRegionServerSource
operator|.
name|DELETE_KEY
expr_stmt|;
name|userIncrementKey
operator|=
name|userNamePrefix
operator|+
name|MetricsRegionServerSource
operator|.
name|INCREMENT_KEY
expr_stmt|;
name|userAppendKey
operator|=
name|userNamePrefix
operator|+
name|MetricsRegionServerSource
operator|.
name|APPEND_KEY
expr_stmt|;
name|userReplayKey
operator|=
name|userNamePrefix
operator|+
name|MetricsRegionServerSource
operator|.
name|REPLAY_KEY
expr_stmt|;
name|clientMetricsMap
operator|=
operator|new
name|ConcurrentHashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|agg
operator|.
name|register
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|register
parameter_list|()
block|{
synchronized|synchronized
init|(
name|this
init|)
block|{
name|getHisto
operator|=
name|registry
operator|.
name|newTimeHistogram
argument_list|(
name|userGetKey
argument_list|)
expr_stmt|;
name|scanTimeHisto
operator|=
name|registry
operator|.
name|newTimeHistogram
argument_list|(
name|userScanTimeKey
argument_list|)
expr_stmt|;
name|putHisto
operator|=
name|registry
operator|.
name|newTimeHistogram
argument_list|(
name|userPutKey
argument_list|)
expr_stmt|;
name|deleteHisto
operator|=
name|registry
operator|.
name|newTimeHistogram
argument_list|(
name|userDeleteKey
argument_list|)
expr_stmt|;
name|incrementHisto
operator|=
name|registry
operator|.
name|newTimeHistogram
argument_list|(
name|userIncrementKey
argument_list|)
expr_stmt|;
name|appendHisto
operator|=
name|registry
operator|.
name|newTimeHistogram
argument_list|(
name|userAppendKey
argument_list|)
expr_stmt|;
name|replayHisto
operator|=
name|registry
operator|.
name|newTimeHistogram
argument_list|(
name|userReplayKey
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|deregister
parameter_list|()
block|{
name|boolean
name|wasClosed
init|=
name|closed
operator|.
name|getAndSet
argument_list|(
literal|true
argument_list|)
decl_stmt|;
comment|// Has someone else already closed this for us?
if|if
condition|(
name|wasClosed
condition|)
block|{
return|return;
block|}
if|if
condition|(
name|LOG
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Removing user Metrics for user: "
operator|+
name|user
argument_list|)
expr_stmt|;
block|}
synchronized|synchronized
init|(
name|this
init|)
block|{
name|registry
operator|.
name|removeMetric
argument_list|(
name|userGetKey
argument_list|)
expr_stmt|;
name|registry
operator|.
name|removeMetric
argument_list|(
name|userScanTimeKey
argument_list|)
expr_stmt|;
name|registry
operator|.
name|removeMetric
argument_list|(
name|userPutKey
argument_list|)
expr_stmt|;
name|registry
operator|.
name|removeMetric
argument_list|(
name|userDeleteKey
argument_list|)
expr_stmt|;
name|registry
operator|.
name|removeMetric
argument_list|(
name|userIncrementKey
argument_list|)
expr_stmt|;
name|registry
operator|.
name|removeMetric
argument_list|(
name|userAppendKey
argument_list|)
expr_stmt|;
name|registry
operator|.
name|removeMetric
argument_list|(
name|userReplayKey
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|String
name|getUser
parameter_list|()
block|{
return|return
name|user
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
name|MetricsUserSource
name|source
parameter_list|)
block|{
if|if
condition|(
name|source
operator|==
literal|null
condition|)
block|{
return|return
operator|-
literal|1
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|source
operator|instanceof
name|MetricsUserSourceImpl
operator|)
condition|)
block|{
return|return
operator|-
literal|1
return|;
block|}
name|MetricsUserSourceImpl
name|impl
init|=
operator|(
name|MetricsUserSourceImpl
operator|)
name|source
decl_stmt|;
return|return
name|Long
operator|.
name|compare
argument_list|(
name|hashCode
argument_list|,
name|impl
operator|.
name|hashCode
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|hashCode
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
return|return
name|obj
operator|==
name|this
operator|||
operator|(
name|obj
operator|instanceof
name|MetricsUserSourceImpl
operator|&&
name|compareTo
argument_list|(
operator|(
name|MetricsUserSourceImpl
operator|)
name|obj
argument_list|)
operator|==
literal|0
operator|)
return|;
block|}
name|void
name|snapshot
parameter_list|(
name|MetricsRecordBuilder
name|mrb
parameter_list|,
name|boolean
name|ignored
parameter_list|)
block|{
comment|// If there is a close that started be double extra sure
comment|// that we're not getting any locks and not putting data
comment|// into the metrics that should be removed. So early out
comment|// before even getting the lock.
if|if
condition|(
name|closed
operator|.
name|get
argument_list|()
condition|)
block|{
return|return;
block|}
comment|// Grab the read
comment|// This ensures that removes of the metrics
comment|// can't happen while we are putting them back in.
synchronized|synchronized
init|(
name|this
init|)
block|{
comment|// It's possible that a close happened between checking
comment|// the closed variable and getting the lock.
if|if
condition|(
name|closed
operator|.
name|get
argument_list|()
condition|)
block|{
return|return;
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|updatePut
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|putHisto
operator|.
name|add
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateDelete
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|deleteHisto
operator|.
name|add
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateGet
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|getHisto
operator|.
name|add
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateIncrement
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|incrementHisto
operator|.
name|add
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateAppend
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|appendHisto
operator|.
name|add
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateReplay
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|replayHisto
operator|.
name|add
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateScanTime
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|scanTimeHisto
operator|.
name|add
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|getMetrics
parameter_list|(
name|MetricsCollector
name|metricsCollector
parameter_list|,
name|boolean
name|all
parameter_list|)
block|{
name|MetricsRecordBuilder
name|mrb
init|=
name|metricsCollector
operator|.
name|addRecord
argument_list|(
name|this
operator|.
name|userNamePrefix
argument_list|)
decl_stmt|;
name|registry
operator|.
name|snapshot
argument_list|(
name|mrb
argument_list|,
name|all
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|ClientMetrics
argument_list|>
name|getClientMetrics
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|unmodifiableMap
argument_list|(
name|clientMetricsMap
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ClientMetrics
name|getOrCreateMetricsClient
parameter_list|(
name|String
name|client
parameter_list|)
block|{
name|ClientMetrics
name|source
init|=
name|clientMetricsMap
operator|.
name|get
argument_list|(
name|client
argument_list|)
decl_stmt|;
if|if
condition|(
name|source
operator|!=
literal|null
condition|)
block|{
return|return
name|source
return|;
block|}
name|source
operator|=
operator|new
name|ClientMetricsImpl
argument_list|(
name|client
argument_list|)
expr_stmt|;
name|ClientMetrics
name|prev
init|=
name|clientMetricsMap
operator|.
name|putIfAbsent
argument_list|(
name|client
argument_list|,
name|source
argument_list|)
decl_stmt|;
if|if
condition|(
name|prev
operator|!=
literal|null
condition|)
block|{
return|return
name|prev
return|;
block|}
return|return
name|source
return|;
block|}
block|}
end_class

end_unit

