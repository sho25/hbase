begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|metrics
operator|.
name|BaseSourceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsCollector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|MetricsRecordBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|Interns
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|metrics2
operator|.
name|lib
operator|.
name|MutableCounterLong
import|;
end_import

begin_class
specifier|public
class|class
name|MetricsConnectionSourceImpl
extends|extends
name|BaseSourceImpl
implements|implements
name|MetricsConnectionSource
block|{
comment|// wrapper for access statistics collected in Connection instance
specifier|private
specifier|final
name|MetricsConnectionWrapper
name|wrapper
decl_stmt|;
comment|// Hadoop Metric2 objects for additional monitoring
specifier|private
specifier|final
name|MutableCounterLong
name|metaCacheHit
decl_stmt|;
specifier|private
specifier|final
name|MutableCounterLong
name|metaCacheMiss
decl_stmt|;
specifier|public
name|MetricsConnectionSourceImpl
parameter_list|(
name|MetricsConnectionWrapper
name|wrapper
parameter_list|)
block|{
name|this
argument_list|(
name|METRICS_NAME
argument_list|,
name|METRICS_DESCRIPTION
argument_list|,
name|METRICS_CONTEXT
argument_list|,
name|METRICS_JMX_CONTEXT
operator|+
name|wrapper
operator|.
name|getId
argument_list|()
argument_list|,
name|wrapper
argument_list|)
expr_stmt|;
block|}
specifier|public
name|MetricsConnectionSourceImpl
parameter_list|(
name|String
name|metricsName
parameter_list|,
name|String
name|metricsDescription
parameter_list|,
name|String
name|metricsContext
parameter_list|,
name|String
name|metricsJmxContext
parameter_list|,
name|MetricsConnectionWrapper
name|wrapper
parameter_list|)
block|{
name|super
argument_list|(
name|metricsName
argument_list|,
name|metricsDescription
argument_list|,
name|metricsContext
argument_list|,
name|metricsJmxContext
argument_list|)
expr_stmt|;
name|this
operator|.
name|wrapper
operator|=
name|wrapper
expr_stmt|;
name|metaCacheHit
operator|=
name|getMetricsRegistry
argument_list|()
operator|.
name|newCounter
argument_list|(
name|META_CACHE_HIT_NAME
argument_list|,
name|META_CACHE_HIT_DESC
argument_list|,
literal|0l
argument_list|)
expr_stmt|;
name|metaCacheMiss
operator|=
name|getMetricsRegistry
argument_list|()
operator|.
name|newCounter
argument_list|(
name|META_CACHE_MISS_NAME
argument_list|,
name|META_CACHE_MISS_DESC
argument_list|,
literal|0l
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|getMetrics
parameter_list|(
name|MetricsCollector
name|metricsCollector
parameter_list|,
name|boolean
name|all
parameter_list|)
block|{
name|MetricsRecordBuilder
name|mrb
init|=
name|metricsCollector
operator|.
name|addRecord
argument_list|(
name|metricsName
argument_list|)
decl_stmt|;
if|if
condition|(
name|wrapper
operator|!=
literal|null
condition|)
block|{
name|mrb
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
name|META_LOOKUP_POOL_LARGEST_SIZE_NAME
argument_list|,
name|META_LOOKUP_POOL_LARGEST_SIZE_DESC
argument_list|)
argument_list|,
name|wrapper
operator|.
name|getMetaLookupPoolLargestPoolSize
argument_list|()
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
name|META_LOOKUP_POOL_ACTIVE_THREAD_NAME
argument_list|,
name|META_LOOKUP_POOL_ACTIVE_THREAD_DESC
argument_list|)
argument_list|,
name|wrapper
operator|.
name|getMetaLookupPoolActiveCount
argument_list|()
argument_list|)
operator|.
name|tag
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
name|BATCH_POOL_ID_NAME
argument_list|,
name|BATCH_POOL_ID_DESC
argument_list|)
argument_list|,
name|wrapper
operator|.
name|getBatchPoolId
argument_list|()
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
name|BATCH_POOL_ACTIVE_THREAD_NAME
argument_list|,
name|BATCH_POOL_ACTIVE_THREAD_DESC
argument_list|)
argument_list|,
name|wrapper
operator|.
name|getBatchPoolActiveCount
argument_list|()
argument_list|)
operator|.
name|addGauge
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
name|BATCH_POOL_LARGEST_SIZE_NAME
argument_list|,
name|BATCH_POOL_LARGEST_SIZE_DESC
argument_list|)
argument_list|,
name|wrapper
operator|.
name|getBatchPoolLargestPoolSize
argument_list|()
argument_list|)
operator|.
name|tag
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
name|CONNECTION_ID_NAME
argument_list|,
name|CONNECTION_ID_DESC
argument_list|)
argument_list|,
name|wrapper
operator|.
name|getId
argument_list|()
argument_list|)
operator|.
name|tag
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
name|USER_NAME_NAME
argument_list|,
name|USER_NAME_DESC
argument_list|)
argument_list|,
name|wrapper
operator|.
name|getUserName
argument_list|()
argument_list|)
operator|.
name|tag
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
name|CLUSTER_ID_NAME
argument_list|,
name|CLUSTER_ID_DESC
argument_list|)
argument_list|,
name|wrapper
operator|.
name|getClusterId
argument_list|()
argument_list|)
operator|.
name|tag
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
name|ZOOKEEPER_QUORUM_NAME
argument_list|,
name|ZOOKEEPER_QUORUM_DESC
argument_list|)
argument_list|,
name|wrapper
operator|.
name|getZookeeperQuorum
argument_list|()
argument_list|)
operator|.
name|tag
argument_list|(
name|Interns
operator|.
name|info
argument_list|(
name|ZOOKEEPER_ZNODE_NAME
argument_list|,
name|ZOOKEEPER_ZNODE_DESC
argument_list|)
argument_list|,
name|wrapper
operator|.
name|getZookeeperBaseNode
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|metricsRegistry
operator|.
name|snapshot
argument_list|(
name|mrb
argument_list|,
name|all
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|incrMetaCacheHit
parameter_list|()
block|{
name|metaCacheHit
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|incrMetaCacheMiss
parameter_list|()
block|{
name|metaCacheMiss
operator|.
name|incr
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

