begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rsgroup
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|net
operator|.
name|Address
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|ProtobufUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|RSGroupProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|final
class|class
name|RSGroupProtobufUtil
block|{
specifier|private
name|RSGroupProtobufUtil
parameter_list|()
block|{   }
specifier|static
name|RSGroupInfo
name|toGroupInfo
parameter_list|(
name|RSGroupProtos
operator|.
name|RSGroupInfo
name|proto
parameter_list|)
block|{
name|RSGroupInfo
name|RSGroupInfo
init|=
operator|new
name|RSGroupInfo
argument_list|(
name|proto
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|HBaseProtos
operator|.
name|ServerName
name|el
range|:
name|proto
operator|.
name|getServersList
argument_list|()
control|)
block|{
name|RSGroupInfo
operator|.
name|addServer
argument_list|(
name|Address
operator|.
name|fromParts
argument_list|(
name|el
operator|.
name|getHostName
argument_list|()
argument_list|,
name|el
operator|.
name|getPort
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|HBaseProtos
operator|.
name|TableName
name|pTableName
range|:
name|proto
operator|.
name|getTablesList
argument_list|()
control|)
block|{
name|RSGroupInfo
operator|.
name|addTable
argument_list|(
name|ProtobufUtil
operator|.
name|toTableName
argument_list|(
name|pTableName
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|RSGroupInfo
return|;
block|}
specifier|static
name|RSGroupProtos
operator|.
name|RSGroupInfo
name|toProtoGroupInfo
parameter_list|(
name|RSGroupInfo
name|pojo
parameter_list|)
block|{
name|List
argument_list|<
name|HBaseProtos
operator|.
name|TableName
argument_list|>
name|tables
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|pojo
operator|.
name|getTables
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|TableName
name|arg
range|:
name|pojo
operator|.
name|getTables
argument_list|()
control|)
block|{
name|tables
operator|.
name|add
argument_list|(
name|ProtobufUtil
operator|.
name|toProtoTableName
argument_list|(
name|arg
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|HBaseProtos
operator|.
name|ServerName
argument_list|>
name|hostports
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|pojo
operator|.
name|getServers
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|Address
name|el
range|:
name|pojo
operator|.
name|getServers
argument_list|()
control|)
block|{
name|hostports
operator|.
name|add
argument_list|(
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|newBuilder
argument_list|()
operator|.
name|setHostName
argument_list|(
name|el
operator|.
name|getHostname
argument_list|()
argument_list|)
operator|.
name|setPort
argument_list|(
name|el
operator|.
name|getPort
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|RSGroupProtos
operator|.
name|RSGroupInfo
operator|.
name|newBuilder
argument_list|()
operator|.
name|setName
argument_list|(
name|pojo
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|addAllServers
argument_list|(
name|hostports
argument_list|)
operator|.
name|addAllTables
argument_list|(
name|tables
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
block|}
end_class

end_unit

