begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|LoadTestTool
import|;
end_import

begin_comment
comment|/**  * A base class for tests that do something with the cluster while running  * {@link LoadTestTool} to write and verify some data.  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|IngestIntegrationTestBase
block|{
specifier|private
specifier|static
name|String
name|tableName
init|=
literal|null
decl_stmt|;
comment|/** A soft limit on how long we should run */
specifier|private
specifier|static
specifier|final
name|String
name|RUN_TIME_KEY
init|=
literal|"hbase.%s.runtime"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|IngestIntegrationTestBase
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|protected
name|IntegrationTestingUtility
name|util
decl_stmt|;
specifier|protected
name|HBaseCluster
name|cluster
decl_stmt|;
specifier|private
name|LoadTestTool
name|loadTool
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|(
name|int
name|numSlavesBase
parameter_list|,
name|Configuration
name|conf
parameter_list|)
throws|throws
name|Exception
block|{
name|tableName
operator|=
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
expr_stmt|;
name|util
operator|=
name|getTestingUtil
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Initializing/checking cluster has "
operator|+
name|numSlavesBase
operator|+
literal|" servers"
argument_list|)
expr_stmt|;
name|util
operator|.
name|initializeCluster
argument_list|(
name|numSlavesBase
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Done initializing/checking cluster"
argument_list|)
expr_stmt|;
name|cluster
operator|=
name|util
operator|.
name|getHBaseClusterInterface
argument_list|()
expr_stmt|;
name|deleteTableIfNecessary
argument_list|()
expr_stmt|;
name|loadTool
operator|=
operator|new
name|LoadTestTool
argument_list|()
expr_stmt|;
name|loadTool
operator|.
name|setConf
argument_list|(
name|util
operator|.
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
comment|// Initialize load test tool before we start breaking things;
comment|// LoadTestTool init, even when it is a no-op, is very fragile.
name|int
name|ret
init|=
name|loadTool
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-tn"
block|,
name|tableName
block|,
literal|"-init_only"
block|}
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"Failed to initialize LoadTestTool"
argument_list|,
literal|0
argument_list|,
name|ret
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|IntegrationTestingUtility
name|getTestingUtil
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
if|if
condition|(
name|this
operator|.
name|util
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|conf
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|util
operator|=
operator|new
name|IntegrationTestingUtility
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|util
operator|=
operator|new
name|IntegrationTestingUtility
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|util
return|;
block|}
specifier|protected
name|void
name|setUp
parameter_list|(
name|int
name|numSlavesBase
parameter_list|)
throws|throws
name|Exception
block|{
name|setUp
argument_list|(
name|numSlavesBase
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Restoring the cluster"
argument_list|)
expr_stmt|;
name|util
operator|.
name|restoreCluster
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|debug
argument_list|(
literal|"Done restoring the cluster"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|deleteTableIfNecessary
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|util
operator|.
name|getHBaseAdmin
argument_list|()
operator|.
name|tableExists
argument_list|(
name|tableName
argument_list|)
condition|)
block|{
name|util
operator|.
name|deleteTable
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|tableName
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|runIngestTest
parameter_list|(
name|long
name|defaultRunTime
parameter_list|,
name|int
name|keysPerServerPerIter
parameter_list|,
name|int
name|colsPerKey
parameter_list|,
name|int
name|recordSize
parameter_list|,
name|int
name|writeThreads
parameter_list|)
throws|throws
name|Exception
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Running ingest"
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Cluster size:"
operator|+
name|util
operator|.
name|getHBaseClusterInterface
argument_list|()
operator|.
name|getClusterStatus
argument_list|()
operator|.
name|getServersSize
argument_list|()
argument_list|)
expr_stmt|;
name|long
name|start
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|String
name|runtimeKey
init|=
name|String
operator|.
name|format
argument_list|(
name|RUN_TIME_KEY
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|)
decl_stmt|;
name|long
name|runtime
init|=
name|util
operator|.
name|getConfiguration
argument_list|()
operator|.
name|getLong
argument_list|(
name|runtimeKey
argument_list|,
name|defaultRunTime
argument_list|)
decl_stmt|;
name|long
name|startKey
init|=
literal|0
decl_stmt|;
name|long
name|numKeys
init|=
name|getNumKeys
argument_list|(
name|keysPerServerPerIter
argument_list|)
decl_stmt|;
while|while
condition|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|start
operator|<
literal|0.9
operator|*
name|runtime
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Intended run time: "
operator|+
operator|(
name|runtime
operator|/
literal|60000
operator|)
operator|+
literal|" min, left:"
operator|+
operator|(
operator|(
name|runtime
operator|-
operator|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|start
operator|)
operator|)
operator|/
literal|60000
operator|)
operator|+
literal|" min"
argument_list|)
expr_stmt|;
name|int
name|ret
init|=
name|loadTool
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-tn"
block|,
name|tableName
block|,
literal|"-write"
block|,
name|String
operator|.
name|format
argument_list|(
literal|"%d:%d:%d"
argument_list|,
name|colsPerKey
argument_list|,
name|recordSize
argument_list|,
name|writeThreads
argument_list|)
block|,
literal|"-start_key"
block|,
name|String
operator|.
name|valueOf
argument_list|(
name|startKey
argument_list|)
block|,
literal|"-num_keys"
block|,
name|String
operator|.
name|valueOf
argument_list|(
name|numKeys
argument_list|)
block|,
literal|"-skip_init"
block|}
argument_list|)
decl_stmt|;
if|if
condition|(
literal|0
operator|!=
name|ret
condition|)
block|{
name|String
name|errorMsg
init|=
literal|"Load failed with error code "
operator|+
name|ret
decl_stmt|;
name|LOG
operator|.
name|error
argument_list|(
name|errorMsg
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
name|errorMsg
argument_list|)
expr_stmt|;
block|}
name|ret
operator|=
name|loadTool
operator|.
name|run
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"-tn"
block|,
name|tableName
block|,
literal|"-read"
block|,
literal|"100:20"
block|,
literal|"-start_key"
block|,
name|String
operator|.
name|valueOf
argument_list|(
name|startKey
argument_list|)
block|,
literal|"-num_keys"
block|,
name|String
operator|.
name|valueOf
argument_list|(
name|numKeys
argument_list|)
block|,
literal|"-skip_init"
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
literal|0
operator|!=
name|ret
condition|)
block|{
name|String
name|errorMsg
init|=
literal|"Verification failed with error code "
operator|+
name|ret
decl_stmt|;
name|LOG
operator|.
name|error
argument_list|(
name|errorMsg
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|fail
argument_list|(
name|errorMsg
argument_list|)
expr_stmt|;
block|}
name|startKey
operator|+=
name|numKeys
expr_stmt|;
block|}
block|}
comment|/** Estimates a data size based on the cluster size */
specifier|private
name|long
name|getNumKeys
parameter_list|(
name|int
name|keysPerServer
parameter_list|)
throws|throws
name|IOException
block|{
name|int
name|numRegionServers
init|=
name|cluster
operator|.
name|getClusterStatus
argument_list|()
operator|.
name|getServersSize
argument_list|()
decl_stmt|;
return|return
name|keysPerServer
operator|*
name|numRegionServers
return|;
block|}
block|}
end_class

end_unit

