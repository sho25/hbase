begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|chaos
operator|.
name|actions
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|math
operator|.
name|RandomUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ClusterStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ServerName
import|;
end_import

begin_comment
comment|/** * Action that tries to unbalance the regions of a cluster. */
end_comment

begin_class
specifier|public
class|class
name|UnbalanceRegionsAction
extends|extends
name|Action
block|{
specifier|private
name|double
name|fractionOfRegions
decl_stmt|;
specifier|private
name|double
name|fractionOfServers
decl_stmt|;
comment|/**    * Unbalances the regions on the cluster by choosing "target" servers, and moving    * some regions from each of the non-target servers to random target servers.    * @param fractionOfRegions Fraction of regions to move from each server.    * @param fractionOfServers Fraction of servers to be chosen as targets.    */
specifier|public
name|UnbalanceRegionsAction
parameter_list|(
name|double
name|fractionOfRegions
parameter_list|,
name|double
name|fractionOfServers
parameter_list|)
block|{
name|this
operator|.
name|fractionOfRegions
operator|=
name|fractionOfRegions
expr_stmt|;
name|this
operator|.
name|fractionOfServers
operator|=
name|fractionOfServers
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|perform
parameter_list|()
throws|throws
name|Exception
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Unbalancing regions"
argument_list|)
expr_stmt|;
name|ClusterStatus
name|status
init|=
name|this
operator|.
name|cluster
operator|.
name|getClusterStatus
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|ServerName
argument_list|>
name|victimServers
init|=
operator|new
name|LinkedList
argument_list|<
name|ServerName
argument_list|>
argument_list|(
name|status
operator|.
name|getServers
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|targetServerCount
init|=
operator|(
name|int
operator|)
name|Math
operator|.
name|ceil
argument_list|(
name|fractionOfServers
operator|*
name|victimServers
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ServerName
argument_list|>
name|targetServers
init|=
operator|new
name|ArrayList
argument_list|<
name|ServerName
argument_list|>
argument_list|(
name|targetServerCount
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|targetServerCount
condition|;
operator|++
name|i
control|)
block|{
name|int
name|victimIx
init|=
name|RandomUtils
operator|.
name|nextInt
argument_list|(
name|victimServers
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|targetServers
operator|.
name|add
argument_list|(
name|victimServers
operator|.
name|remove
argument_list|(
name|victimIx
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|unbalanceRegions
argument_list|(
name|status
argument_list|,
name|victimServers
argument_list|,
name|targetServers
argument_list|,
name|fractionOfRegions
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

