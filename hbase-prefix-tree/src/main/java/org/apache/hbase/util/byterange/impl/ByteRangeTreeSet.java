begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|util
operator|.
name|byterange
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|ByteRange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|CollectionUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|IterableUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|util
operator|.
name|byterange
operator|.
name|ByteRangeSet
import|;
end_import

begin_comment
comment|/**  * Not currently used in production, but here as a benchmark comparison against ByteRangeHashSet.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|ByteRangeTreeSet
extends|extends
name|ByteRangeSet
block|{
comment|/************************ constructors *****************************/
specifier|public
name|ByteRangeTreeSet
parameter_list|()
block|{
name|this
operator|.
name|uniqueIndexByUniqueRange
operator|=
operator|new
name|TreeMap
argument_list|<
name|ByteRange
argument_list|,
name|Integer
argument_list|>
argument_list|()
expr_stmt|;
block|}
specifier|public
name|ByteRangeTreeSet
parameter_list|(
name|List
argument_list|<
name|ByteRange
argument_list|>
name|rawByteArrays
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
comment|//needed to initialize the TreeSet
for|for
control|(
name|ByteRange
name|in
range|:
name|IterableUtils
operator|.
name|nullSafe
argument_list|(
name|rawByteArrays
argument_list|)
control|)
block|{
name|add
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|addToSortedRanges
parameter_list|()
block|{
name|sortedRanges
operator|.
name|addAll
argument_list|(
name|CollectionUtils
operator|.
name|nullSafe
argument_list|(
name|uniqueIndexByUniqueRange
operator|.
name|keySet
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

