begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|decode
operator|.
name|timestamp
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|PrefixTreeBlockMeta
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|nio
operator|.
name|ByteBuff
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|vint
operator|.
name|UFIntTool
import|;
end_import

begin_comment
comment|/**  * Given a block and its blockMeta, this will decode the timestamp for the i-th Cell in the block.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|TimestampDecoder
block|{
specifier|protected
name|PrefixTreeBlockMeta
name|blockMeta
decl_stmt|;
specifier|protected
name|ByteBuff
name|block
decl_stmt|;
comment|/************** construct ***********************/
specifier|public
name|TimestampDecoder
parameter_list|()
block|{   }
specifier|public
name|void
name|initOnBlock
parameter_list|(
name|PrefixTreeBlockMeta
name|blockMeta
parameter_list|,
name|ByteBuff
name|block
parameter_list|)
block|{
name|this
operator|.
name|block
operator|=
name|block
expr_stmt|;
name|this
operator|.
name|blockMeta
operator|=
name|blockMeta
expr_stmt|;
block|}
comment|/************** methods *************************/
specifier|public
name|long
name|getLong
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|blockMeta
operator|.
name|getTimestampIndexWidth
argument_list|()
operator|==
literal|0
condition|)
block|{
comment|//all timestamps in the block were identical
return|return
name|blockMeta
operator|.
name|getMinTimestamp
argument_list|()
return|;
block|}
name|int
name|startIndex
init|=
name|blockMeta
operator|.
name|getAbsoluteTimestampOffset
argument_list|()
operator|+
name|blockMeta
operator|.
name|getTimestampDeltaWidth
argument_list|()
operator|*
name|index
decl_stmt|;
name|long
name|delta
init|=
name|UFIntTool
operator|.
name|fromBytes
argument_list|(
name|block
argument_list|,
name|startIndex
argument_list|,
name|blockMeta
operator|.
name|getTimestampDeltaWidth
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|blockMeta
operator|.
name|getMinTimestamp
argument_list|()
operator|+
name|delta
return|;
block|}
block|}
end_class

end_unit

