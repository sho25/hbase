begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|encode
operator|.
name|tokenize
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_comment
comment|/**  * for recursively searching a PtBuilder  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|TokenizerRowSearchResult
block|{
comment|/************ fields ************************/
specifier|protected
name|TokenizerRowSearchPosition
name|difference
decl_stmt|;
specifier|protected
name|TokenizerNode
name|matchingNode
decl_stmt|;
comment|/*************** construct *****************/
specifier|public
name|TokenizerRowSearchResult
parameter_list|()
block|{   }
specifier|public
name|TokenizerRowSearchResult
parameter_list|(
name|TokenizerRowSearchPosition
name|difference
parameter_list|)
block|{
name|this
operator|.
name|difference
operator|=
name|difference
expr_stmt|;
block|}
specifier|public
name|TokenizerRowSearchResult
parameter_list|(
name|TokenizerNode
name|matchingNode
parameter_list|)
block|{
name|this
operator|.
name|difference
operator|=
name|TokenizerRowSearchPosition
operator|.
name|MATCH
expr_stmt|;
name|this
operator|.
name|matchingNode
operator|=
name|matchingNode
expr_stmt|;
block|}
comment|/*************** methods **********************/
specifier|public
name|boolean
name|isMatch
parameter_list|()
block|{
return|return
name|TokenizerRowSearchPosition
operator|.
name|MATCH
operator|==
name|difference
return|;
block|}
comment|/************* get/set ***************************/
specifier|public
name|TokenizerRowSearchPosition
name|getDifference
parameter_list|()
block|{
return|return
name|difference
return|;
block|}
specifier|public
name|TokenizerNode
name|getMatchingNode
parameter_list|()
block|{
return|return
name|matchingNode
return|;
block|}
specifier|public
name|void
name|set
parameter_list|(
name|TokenizerRowSearchPosition
name|difference
parameter_list|,
name|TokenizerNode
name|matchingNode
parameter_list|)
block|{
name|this
operator|.
name|difference
operator|=
name|difference
expr_stmt|;
name|this
operator|.
name|matchingNode
operator|=
name|matchingNode
expr_stmt|;
block|}
block|}
end_class

end_unit

