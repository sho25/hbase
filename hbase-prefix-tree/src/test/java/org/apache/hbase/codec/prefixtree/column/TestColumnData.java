begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|column
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|ByteRange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|column
operator|.
name|data
operator|.
name|TestColumnDataRandom
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|column
operator|.
name|data
operator|.
name|TestColumnDataSimple
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_interface
specifier|public
interface|interface
name|TestColumnData
block|{
name|List
argument_list|<
name|ByteRange
argument_list|>
name|getInputs
parameter_list|()
function_decl|;
name|List
argument_list|<
name|ByteRange
argument_list|>
name|getOutputs
parameter_list|()
function_decl|;
specifier|public
specifier|static
class|class
name|InMemory
block|{
specifier|public
name|Collection
argument_list|<
name|Object
index|[]
argument_list|>
name|getAllAsObjectArray
parameter_list|()
block|{
name|List
argument_list|<
name|Object
index|[]
argument_list|>
name|all
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
name|all
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
operator|new
name|TestColumnDataSimple
argument_list|()
block|}
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|leftShift
init|=
literal|0
init|;
name|leftShift
operator|<
literal|16
condition|;
operator|++
name|leftShift
control|)
block|{
name|all
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
operator|new
name|TestColumnDataRandom
argument_list|(
literal|1
operator|<<
name|leftShift
argument_list|)
block|}
argument_list|)
expr_stmt|;
block|}
return|return
name|all
return|;
block|}
block|}
block|}
end_interface

end_unit

