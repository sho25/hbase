begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|row
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|KeyValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|PrefixTreeBlockMeta
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|row
operator|.
name|data
operator|.
name|TestRowDataComplexQualifiers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|row
operator|.
name|data
operator|.
name|TestRowDataDeeper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|row
operator|.
name|data
operator|.
name|TestRowDataDifferentTimestamps
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|row
operator|.
name|data
operator|.
name|TestRowDataEmpty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|row
operator|.
name|data
operator|.
name|TestRowDataExerciseFInts
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|row
operator|.
name|data
operator|.
name|TestRowDataNub
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|row
operator|.
name|data
operator|.
name|TestRowDataNumberStrings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|row
operator|.
name|data
operator|.
name|TestRowDataQualifierByteOrdering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|row
operator|.
name|data
operator|.
name|TestRowDataRandomKeyValues
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|row
operator|.
name|data
operator|.
name|TestRowDataRandomKeyValuesWithTags
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|row
operator|.
name|data
operator|.
name|TestRowDataSearchWithPrefix
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|row
operator|.
name|data
operator|.
name|TestRowDataSearcherRowMiss
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|row
operator|.
name|data
operator|.
name|TestRowDataSimple
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|row
operator|.
name|data
operator|.
name|TestRowDataSingleQualifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|row
operator|.
name|data
operator|.
name|TestRowDataTrivial
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|row
operator|.
name|data
operator|.
name|TestRowDataTrivialWithTags
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|row
operator|.
name|data
operator|.
name|TestRowDataUrls
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|row
operator|.
name|data
operator|.
name|TestRowDataUrlsExample
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|codec
operator|.
name|prefixtree
operator|.
name|scanner
operator|.
name|CellSearcher
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_comment
comment|/*  * A master class for registering different implementations of TestRowData.  */
end_comment

begin_interface
specifier|public
interface|interface
name|TestRowData
block|{
name|List
argument_list|<
name|KeyValue
argument_list|>
name|getInputs
parameter_list|()
function_decl|;
name|List
argument_list|<
name|Integer
argument_list|>
name|getRowStartIndexes
parameter_list|()
function_decl|;
name|void
name|individualBlockMetaAssertions
parameter_list|(
name|PrefixTreeBlockMeta
name|blockMeta
parameter_list|)
function_decl|;
name|void
name|individualSearcherAssertions
parameter_list|(
name|CellSearcher
name|searcher
parameter_list|)
function_decl|;
specifier|static
class|class
name|InMemory
block|{
comment|/*      * The following are different styles of data that the codec may encounter.  Having these small      * representations of the data helps pinpoint what is wrong if the encoder breaks.      */
specifier|public
specifier|static
name|Collection
argument_list|<
name|TestRowData
argument_list|>
name|getAll
parameter_list|()
block|{
name|List
argument_list|<
name|TestRowData
argument_list|>
name|all
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
comment|//simple
name|all
operator|.
name|add
argument_list|(
operator|new
name|TestRowDataEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|all
operator|.
name|add
argument_list|(
operator|new
name|TestRowDataTrivial
argument_list|()
argument_list|)
expr_stmt|;
name|all
operator|.
name|add
argument_list|(
operator|new
name|TestRowDataTrivialWithTags
argument_list|()
argument_list|)
expr_stmt|;
name|all
operator|.
name|add
argument_list|(
operator|new
name|TestRowDataSimple
argument_list|()
argument_list|)
expr_stmt|;
name|all
operator|.
name|add
argument_list|(
operator|new
name|TestRowDataDeeper
argument_list|()
argument_list|)
expr_stmt|;
comment|//more specific
name|all
operator|.
name|add
argument_list|(
operator|new
name|TestRowDataSingleQualifier
argument_list|()
argument_list|)
expr_stmt|;
comment|//      all.add(new TestRowDataMultiFamilies());//multiple families disabled in PrefixTreeEncoder
name|all
operator|.
name|add
argument_list|(
operator|new
name|TestRowDataNub
argument_list|()
argument_list|)
expr_stmt|;
name|all
operator|.
name|add
argument_list|(
operator|new
name|TestRowDataSearcherRowMiss
argument_list|()
argument_list|)
expr_stmt|;
name|all
operator|.
name|add
argument_list|(
operator|new
name|TestRowDataQualifierByteOrdering
argument_list|()
argument_list|)
expr_stmt|;
name|all
operator|.
name|add
argument_list|(
operator|new
name|TestRowDataComplexQualifiers
argument_list|()
argument_list|)
expr_stmt|;
name|all
operator|.
name|add
argument_list|(
operator|new
name|TestRowDataDifferentTimestamps
argument_list|()
argument_list|)
expr_stmt|;
comment|//larger data volumes (hard to debug)
name|all
operator|.
name|add
argument_list|(
operator|new
name|TestRowDataNumberStrings
argument_list|()
argument_list|)
expr_stmt|;
name|all
operator|.
name|add
argument_list|(
operator|new
name|TestRowDataUrls
argument_list|()
argument_list|)
expr_stmt|;
name|all
operator|.
name|add
argument_list|(
operator|new
name|TestRowDataUrlsExample
argument_list|()
argument_list|)
expr_stmt|;
name|all
operator|.
name|add
argument_list|(
operator|new
name|TestRowDataExerciseFInts
argument_list|()
argument_list|)
expr_stmt|;
name|all
operator|.
name|add
argument_list|(
operator|new
name|TestRowDataRandomKeyValues
argument_list|()
argument_list|)
expr_stmt|;
name|all
operator|.
name|add
argument_list|(
operator|new
name|TestRowDataRandomKeyValuesWithTags
argument_list|()
argument_list|)
expr_stmt|;
comment|//test data for HBase-12078
name|all
operator|.
name|add
argument_list|(
operator|new
name|TestRowDataSearchWithPrefix
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|all
return|;
block|}
specifier|public
specifier|static
name|Collection
argument_list|<
name|Object
index|[]
argument_list|>
name|getAllAsObjectArray
parameter_list|()
block|{
name|List
argument_list|<
name|Object
index|[]
argument_list|>
name|all
init|=
name|Lists
operator|.
name|newArrayList
argument_list|()
decl_stmt|;
for|for
control|(
name|TestRowData
name|testRows
range|:
name|getAll
argument_list|()
control|)
block|{
name|all
operator|.
name|add
argument_list|(
operator|new
name|Object
index|[]
block|{
name|testRows
block|}
argument_list|)
expr_stmt|;
block|}
return|return
name|all
return|;
block|}
block|}
block|}
end_interface

end_unit

