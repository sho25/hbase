begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|ws
operator|.
name|rs
operator|.
name|core
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Marshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Unmarshaller
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseTestingUtility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HColumnDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HTableDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Admin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|client
operator|.
name|Client
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|client
operator|.
name|Cluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|client
operator|.
name|Response
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|model
operator|.
name|CellModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|model
operator|.
name|CellSetModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|model
operator|.
name|RowModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|jaxrs
operator|.
name|JacksonJaxbJsonProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_class
specifier|public
class|class
name|RowResourceBase
block|{
specifier|protected
specifier|static
specifier|final
name|String
name|TABLE
init|=
literal|"TestRowResource"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|TableName
name|TABLE_NAME
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|TABLE
argument_list|)
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|CFA
init|=
literal|"a"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|CFB
init|=
literal|"b"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|COLUMN_1
init|=
name|CFA
operator|+
literal|":1"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|COLUMN_2
init|=
name|CFB
operator|+
literal|":2"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|COLUMN_3
init|=
name|CFA
operator|+
literal|":"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|ROW_1
init|=
literal|"testrow1"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|VALUE_1
init|=
literal|"testvalue1"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|ROW_2
init|=
literal|"testrow2"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|VALUE_2
init|=
literal|"testvalue2"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|ROW_3
init|=
literal|"testrow3"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|VALUE_3
init|=
literal|"testvalue3"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|ROW_4
init|=
literal|"testrow4"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|VALUE_4
init|=
literal|"testvalue4"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|VALUE_5
init|=
literal|"5"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|VALUE_6
init|=
literal|"6"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|HBaseTestingUtility
name|TEST_UTIL
init|=
operator|new
name|HBaseTestingUtility
argument_list|()
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|HBaseRESTTestingUtility
name|REST_TEST_UTIL
init|=
operator|new
name|HBaseRESTTestingUtility
argument_list|()
decl_stmt|;
specifier|protected
specifier|static
name|Client
name|client
decl_stmt|;
specifier|protected
specifier|static
name|JAXBContext
name|context
decl_stmt|;
specifier|protected
specifier|static
name|Marshaller
name|xmlMarshaller
decl_stmt|;
specifier|protected
specifier|static
name|Unmarshaller
name|xmlUnmarshaller
decl_stmt|;
specifier|protected
specifier|static
name|Configuration
name|conf
decl_stmt|;
specifier|protected
specifier|static
name|ObjectMapper
name|jsonMapper
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|setUpBeforeClass
parameter_list|()
throws|throws
name|Exception
block|{
name|conf
operator|=
name|TEST_UTIL
operator|.
name|getConfiguration
argument_list|()
expr_stmt|;
name|TEST_UTIL
operator|.
name|startMiniCluster
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|REST_TEST_UTIL
operator|.
name|startServletContainer
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|context
operator|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|CellModel
operator|.
name|class
argument_list|,
name|CellSetModel
operator|.
name|class
argument_list|,
name|RowModel
operator|.
name|class
argument_list|)
expr_stmt|;
name|xmlMarshaller
operator|=
name|context
operator|.
name|createMarshaller
argument_list|()
expr_stmt|;
name|xmlUnmarshaller
operator|=
name|context
operator|.
name|createUnmarshaller
argument_list|()
expr_stmt|;
name|jsonMapper
operator|=
operator|new
name|JacksonJaxbJsonProvider
argument_list|()
operator|.
name|locateMapper
argument_list|(
name|CellSetModel
operator|.
name|class
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|)
expr_stmt|;
name|client
operator|=
operator|new
name|Client
argument_list|(
operator|new
name|Cluster
argument_list|()
operator|.
name|add
argument_list|(
literal|"localhost"
argument_list|,
name|REST_TEST_UTIL
operator|.
name|getServletPort
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|tearDownAfterClass
parameter_list|()
throws|throws
name|Exception
block|{
name|REST_TEST_UTIL
operator|.
name|shutdownServletContainer
argument_list|()
expr_stmt|;
name|TEST_UTIL
operator|.
name|shutdownMiniCluster
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|beforeMethod
parameter_list|()
throws|throws
name|Exception
block|{
name|Admin
name|admin
init|=
name|TEST_UTIL
operator|.
name|getAdmin
argument_list|()
decl_stmt|;
if|if
condition|(
name|admin
operator|.
name|tableExists
argument_list|(
name|TABLE_NAME
argument_list|)
condition|)
block|{
name|TEST_UTIL
operator|.
name|deleteTable
argument_list|(
name|TABLE_NAME
argument_list|)
expr_stmt|;
block|}
name|HTableDescriptor
name|htd
init|=
operator|new
name|HTableDescriptor
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|TABLE
argument_list|)
argument_list|)
decl_stmt|;
name|htd
operator|.
name|addFamily
argument_list|(
operator|new
name|HColumnDescriptor
argument_list|(
name|CFA
argument_list|)
argument_list|)
expr_stmt|;
name|htd
operator|.
name|addFamily
argument_list|(
operator|new
name|HColumnDescriptor
argument_list|(
name|CFB
argument_list|)
argument_list|)
expr_stmt|;
name|admin
operator|.
name|createTable
argument_list|(
name|htd
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|afterMethod
parameter_list|()
throws|throws
name|Exception
block|{
name|Admin
name|admin
init|=
name|TEST_UTIL
operator|.
name|getAdmin
argument_list|()
decl_stmt|;
if|if
condition|(
name|admin
operator|.
name|tableExists
argument_list|(
name|TABLE_NAME
argument_list|)
condition|)
block|{
name|TEST_UTIL
operator|.
name|deleteTable
argument_list|(
name|TABLE_NAME
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
name|Response
name|putValuePB
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|StringBuilder
name|path
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|column
argument_list|)
expr_stmt|;
return|return
name|putValuePB
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|,
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|static
name|Response
name|putValuePB
parameter_list|(
name|String
name|url
parameter_list|,
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|RowModel
name|rowModel
init|=
operator|new
name|RowModel
argument_list|(
name|row
argument_list|)
decl_stmt|;
name|rowModel
operator|.
name|addCell
argument_list|(
operator|new
name|CellModel
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|column
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|value
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|CellSetModel
name|cellSetModel
init|=
operator|new
name|CellSetModel
argument_list|()
decl_stmt|;
name|cellSetModel
operator|.
name|addRow
argument_list|(
name|rowModel
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|put
argument_list|(
name|url
argument_list|,
name|Constants
operator|.
name|MIMETYPE_PROTOBUF
argument_list|,
name|cellSetModel
operator|.
name|createProtobufOutput
argument_list|()
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|yield
argument_list|()
expr_stmt|;
return|return
name|response
return|;
block|}
specifier|protected
specifier|static
name|void
name|checkValueXML
parameter_list|(
name|String
name|url
parameter_list|,
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
name|Response
name|response
init|=
name|getValueXML
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getCode
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Constants
operator|.
name|MIMETYPE_XML
argument_list|,
name|response
operator|.
name|getHeader
argument_list|(
literal|"content-type"
argument_list|)
argument_list|)
expr_stmt|;
name|CellSetModel
name|cellSet
init|=
operator|(
name|CellSetModel
operator|)
name|xmlUnmarshaller
operator|.
name|unmarshal
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|response
operator|.
name|getBody
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|RowModel
name|rowModel
init|=
name|cellSet
operator|.
name|getRows
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|CellModel
name|cell
init|=
name|rowModel
operator|.
name|getCells
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Bytes
operator|.
name|toString
argument_list|(
name|cell
operator|.
name|getColumn
argument_list|()
argument_list|)
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Bytes
operator|.
name|toString
argument_list|(
name|cell
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|protected
specifier|static
name|void
name|checkValueXML
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
name|Response
name|response
init|=
name|getValueXML
argument_list|(
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getCode
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Constants
operator|.
name|MIMETYPE_XML
argument_list|,
name|response
operator|.
name|getHeader
argument_list|(
literal|"content-type"
argument_list|)
argument_list|)
expr_stmt|;
name|CellSetModel
name|cellSet
init|=
operator|(
name|CellSetModel
operator|)
name|xmlUnmarshaller
operator|.
name|unmarshal
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|response
operator|.
name|getBody
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|RowModel
name|rowModel
init|=
name|cellSet
operator|.
name|getRows
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|CellModel
name|cell
init|=
name|rowModel
operator|.
name|getCells
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Bytes
operator|.
name|toString
argument_list|(
name|cell
operator|.
name|getColumn
argument_list|()
argument_list|)
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Bytes
operator|.
name|toString
argument_list|(
name|cell
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|protected
specifier|static
name|void
name|checkIncrementValueXML
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|long
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
name|Response
name|response1
init|=
name|getValueXML
argument_list|(
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response1
operator|.
name|getCode
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Constants
operator|.
name|MIMETYPE_XML
argument_list|,
name|response1
operator|.
name|getHeader
argument_list|(
literal|"content-type"
argument_list|)
argument_list|)
expr_stmt|;
name|CellSetModel
name|cellSet
init|=
operator|(
name|CellSetModel
operator|)
name|xmlUnmarshaller
operator|.
name|unmarshal
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|response1
operator|.
name|getBody
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|RowModel
name|rowModel
init|=
name|cellSet
operator|.
name|getRows
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|CellModel
name|cell
init|=
name|rowModel
operator|.
name|getCells
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Bytes
operator|.
name|toString
argument_list|(
name|cell
operator|.
name|getColumn
argument_list|()
argument_list|)
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Bytes
operator|.
name|toLong
argument_list|(
name|cell
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|protected
specifier|static
name|Response
name|getValuePB
parameter_list|(
name|String
name|url
parameter_list|)
throws|throws
name|IOException
block|{
name|Response
name|response
init|=
name|client
operator|.
name|get
argument_list|(
name|url
argument_list|,
name|Constants
operator|.
name|MIMETYPE_PROTOBUF
argument_list|)
decl_stmt|;
return|return
name|response
return|;
block|}
specifier|protected
specifier|static
name|Response
name|putValueXML
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
name|StringBuilder
name|path
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|column
argument_list|)
expr_stmt|;
return|return
name|putValueXML
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|,
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|Response
name|putValueXML
parameter_list|(
name|String
name|url
parameter_list|,
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
name|RowModel
name|rowModel
init|=
operator|new
name|RowModel
argument_list|(
name|row
argument_list|)
decl_stmt|;
name|rowModel
operator|.
name|addCell
argument_list|(
operator|new
name|CellModel
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|column
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|value
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|CellSetModel
name|cellSetModel
init|=
operator|new
name|CellSetModel
argument_list|()
decl_stmt|;
name|cellSetModel
operator|.
name|addRow
argument_list|(
name|rowModel
argument_list|)
expr_stmt|;
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|xmlMarshaller
operator|.
name|marshal
argument_list|(
name|cellSetModel
argument_list|,
name|writer
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|put
argument_list|(
name|url
argument_list|,
name|Constants
operator|.
name|MIMETYPE_XML
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|yield
argument_list|()
expr_stmt|;
return|return
name|response
return|;
block|}
specifier|protected
specifier|static
name|Response
name|getValuePB
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|)
throws|throws
name|IOException
block|{
name|StringBuilder
name|path
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|column
argument_list|)
expr_stmt|;
return|return
name|getValuePB
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|void
name|checkValuePB
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|Response
name|response
init|=
name|getValuePB
argument_list|(
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getCode
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Constants
operator|.
name|MIMETYPE_PROTOBUF
argument_list|,
name|response
operator|.
name|getHeader
argument_list|(
literal|"content-type"
argument_list|)
argument_list|)
expr_stmt|;
name|CellSetModel
name|cellSet
init|=
operator|new
name|CellSetModel
argument_list|()
decl_stmt|;
name|cellSet
operator|.
name|getObjectFromMessage
argument_list|(
name|response
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
name|RowModel
name|rowModel
init|=
name|cellSet
operator|.
name|getRows
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|CellModel
name|cell
init|=
name|rowModel
operator|.
name|getCells
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Bytes
operator|.
name|toString
argument_list|(
name|cell
operator|.
name|getColumn
argument_list|()
argument_list|)
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Bytes
operator|.
name|toString
argument_list|(
name|cell
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|protected
specifier|static
name|void
name|checkIncrementValuePB
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|long
name|value
parameter_list|)
throws|throws
name|IOException
block|{
name|Response
name|response
init|=
name|getValuePB
argument_list|(
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getCode
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Constants
operator|.
name|MIMETYPE_PROTOBUF
argument_list|,
name|response
operator|.
name|getHeader
argument_list|(
literal|"content-type"
argument_list|)
argument_list|)
expr_stmt|;
name|CellSetModel
name|cellSet
init|=
operator|new
name|CellSetModel
argument_list|()
decl_stmt|;
name|cellSet
operator|.
name|getObjectFromMessage
argument_list|(
name|response
operator|.
name|getBody
argument_list|()
argument_list|)
expr_stmt|;
name|RowModel
name|rowModel
init|=
name|cellSet
operator|.
name|getRows
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|CellModel
name|cell
init|=
name|rowModel
operator|.
name|getCells
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Bytes
operator|.
name|toString
argument_list|(
name|cell
operator|.
name|getColumn
argument_list|()
argument_list|)
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Bytes
operator|.
name|toLong
argument_list|(
name|cell
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|protected
specifier|static
name|Response
name|checkAndPutValuePB
parameter_list|(
name|String
name|url
parameter_list|,
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|valueToCheck
parameter_list|,
name|String
name|valueToPut
parameter_list|,
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|otherCells
parameter_list|)
throws|throws
name|IOException
block|{
name|RowModel
name|rowModel
init|=
operator|new
name|RowModel
argument_list|(
name|row
argument_list|)
decl_stmt|;
name|rowModel
operator|.
name|addCell
argument_list|(
operator|new
name|CellModel
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|column
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|valueToPut
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|otherCells
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|otherCells
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|rowModel
operator|.
name|addCell
argument_list|(
operator|new
name|CellModel
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|// This Cell need to be added as last cell.
name|rowModel
operator|.
name|addCell
argument_list|(
operator|new
name|CellModel
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|column
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|valueToCheck
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|CellSetModel
name|cellSetModel
init|=
operator|new
name|CellSetModel
argument_list|()
decl_stmt|;
name|cellSetModel
operator|.
name|addRow
argument_list|(
name|rowModel
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|put
argument_list|(
name|url
argument_list|,
name|Constants
operator|.
name|MIMETYPE_PROTOBUF
argument_list|,
name|cellSetModel
operator|.
name|createProtobufOutput
argument_list|()
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|yield
argument_list|()
expr_stmt|;
return|return
name|response
return|;
block|}
specifier|protected
specifier|static
name|Response
name|checkAndPutValuePB
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|valueToCheck
parameter_list|,
name|String
name|valueToPut
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|checkAndPutValuePB
argument_list|(
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|valueToCheck
argument_list|,
name|valueToPut
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|Response
name|checkAndPutValuePB
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|valueToCheck
parameter_list|,
name|String
name|valueToPut
parameter_list|,
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|otherCells
parameter_list|)
throws|throws
name|IOException
block|{
name|StringBuilder
name|path
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|"?check=put"
argument_list|)
expr_stmt|;
return|return
name|checkAndPutValuePB
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|,
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|valueToCheck
argument_list|,
name|valueToPut
argument_list|,
name|otherCells
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|Response
name|checkAndPutValueXML
parameter_list|(
name|String
name|url
parameter_list|,
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|valueToCheck
parameter_list|,
name|String
name|valueToPut
parameter_list|,
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|otherCells
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
name|RowModel
name|rowModel
init|=
operator|new
name|RowModel
argument_list|(
name|row
argument_list|)
decl_stmt|;
name|rowModel
operator|.
name|addCell
argument_list|(
operator|new
name|CellModel
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|column
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|valueToPut
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|otherCells
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|otherCells
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|rowModel
operator|.
name|addCell
argument_list|(
operator|new
name|CellModel
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|// This Cell need to be added as last cell.
name|rowModel
operator|.
name|addCell
argument_list|(
operator|new
name|CellModel
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|column
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|valueToCheck
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|CellSetModel
name|cellSetModel
init|=
operator|new
name|CellSetModel
argument_list|()
decl_stmt|;
name|cellSetModel
operator|.
name|addRow
argument_list|(
name|rowModel
argument_list|)
expr_stmt|;
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|xmlMarshaller
operator|.
name|marshal
argument_list|(
name|cellSetModel
argument_list|,
name|writer
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|put
argument_list|(
name|url
argument_list|,
name|Constants
operator|.
name|MIMETYPE_XML
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|yield
argument_list|()
expr_stmt|;
return|return
name|response
return|;
block|}
specifier|protected
specifier|static
name|Response
name|checkAndPutValueXML
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|valueToCheck
parameter_list|,
name|String
name|valueToPut
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
return|return
name|checkAndPutValueXML
argument_list|(
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|valueToCheck
argument_list|,
name|valueToPut
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|Response
name|checkAndPutValueXML
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|valueToCheck
parameter_list|,
name|String
name|valueToPut
parameter_list|,
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|otherCells
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
name|StringBuilder
name|path
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|"?check=put"
argument_list|)
expr_stmt|;
return|return
name|checkAndPutValueXML
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|,
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|valueToCheck
argument_list|,
name|valueToPut
argument_list|,
name|otherCells
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|Response
name|checkAndDeleteXML
parameter_list|(
name|String
name|url
parameter_list|,
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|valueToCheck
parameter_list|,
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|cellsToDelete
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
name|RowModel
name|rowModel
init|=
operator|new
name|RowModel
argument_list|(
name|row
argument_list|)
decl_stmt|;
if|if
condition|(
name|cellsToDelete
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|cellsToDelete
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|rowModel
operator|.
name|addCell
argument_list|(
operator|new
name|CellModel
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Add this at the end
name|rowModel
operator|.
name|addCell
argument_list|(
operator|new
name|CellModel
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|column
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|valueToCheck
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|CellSetModel
name|cellSetModel
init|=
operator|new
name|CellSetModel
argument_list|()
decl_stmt|;
name|cellSetModel
operator|.
name|addRow
argument_list|(
name|rowModel
argument_list|)
expr_stmt|;
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|xmlMarshaller
operator|.
name|marshal
argument_list|(
name|cellSetModel
argument_list|,
name|writer
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|put
argument_list|(
name|url
argument_list|,
name|Constants
operator|.
name|MIMETYPE_XML
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|yield
argument_list|()
expr_stmt|;
return|return
name|response
return|;
block|}
specifier|protected
specifier|static
name|Response
name|checkAndDeleteXML
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|valueToCheck
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
return|return
name|checkAndDeleteXML
argument_list|(
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|valueToCheck
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|Response
name|checkAndDeleteXML
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|valueToCheck
parameter_list|,
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|cellsToDelete
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
name|StringBuilder
name|path
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|"?check=delete"
argument_list|)
expr_stmt|;
return|return
name|checkAndDeleteXML
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|,
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|valueToCheck
argument_list|,
name|cellsToDelete
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|Response
name|checkAndDeleteJson
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|valueToCheck
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
return|return
name|checkAndDeleteJson
argument_list|(
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|valueToCheck
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|Response
name|checkAndDeleteJson
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|valueToCheck
parameter_list|,
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|cellsToDelete
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
name|StringBuilder
name|path
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|"?check=delete"
argument_list|)
expr_stmt|;
return|return
name|checkAndDeleteJson
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|,
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|valueToCheck
argument_list|,
name|cellsToDelete
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|Response
name|checkAndDeleteJson
parameter_list|(
name|String
name|url
parameter_list|,
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|valueToCheck
parameter_list|,
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|cellsToDelete
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
name|RowModel
name|rowModel
init|=
operator|new
name|RowModel
argument_list|(
name|row
argument_list|)
decl_stmt|;
if|if
condition|(
name|cellsToDelete
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|cellsToDelete
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|rowModel
operator|.
name|addCell
argument_list|(
operator|new
name|CellModel
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Add this at the end
name|rowModel
operator|.
name|addCell
argument_list|(
operator|new
name|CellModel
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|column
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|valueToCheck
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|CellSetModel
name|cellSetModel
init|=
operator|new
name|CellSetModel
argument_list|()
decl_stmt|;
name|cellSetModel
operator|.
name|addRow
argument_list|(
name|rowModel
argument_list|)
expr_stmt|;
name|String
name|jsonString
init|=
name|jsonMapper
operator|.
name|writeValueAsString
argument_list|(
name|cellSetModel
argument_list|)
decl_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|put
argument_list|(
name|url
argument_list|,
name|Constants
operator|.
name|MIMETYPE_JSON
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|jsonString
argument_list|)
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|yield
argument_list|()
expr_stmt|;
return|return
name|response
return|;
block|}
specifier|protected
specifier|static
name|Response
name|checkAndDeletePB
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|checkAndDeletePB
argument_list|(
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|value
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|Response
name|checkAndDeletePB
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|value
parameter_list|,
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|cellsToDelete
parameter_list|)
throws|throws
name|IOException
block|{
name|StringBuilder
name|path
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|"?check=delete"
argument_list|)
expr_stmt|;
return|return
name|checkAndDeleteValuePB
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|,
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|value
argument_list|,
name|cellsToDelete
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|Response
name|checkAndDeleteValuePB
parameter_list|(
name|String
name|url
parameter_list|,
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|valueToCheck
parameter_list|,
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|cellsToDelete
parameter_list|)
throws|throws
name|IOException
block|{
name|RowModel
name|rowModel
init|=
operator|new
name|RowModel
argument_list|(
name|row
argument_list|)
decl_stmt|;
if|if
condition|(
name|cellsToDelete
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|cellsToDelete
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|rowModel
operator|.
name|addCell
argument_list|(
operator|new
name|CellModel
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Add this at the end
name|rowModel
operator|.
name|addCell
argument_list|(
operator|new
name|CellModel
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|column
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|valueToCheck
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|CellSetModel
name|cellSetModel
init|=
operator|new
name|CellSetModel
argument_list|()
decl_stmt|;
name|cellSetModel
operator|.
name|addRow
argument_list|(
name|rowModel
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|put
argument_list|(
name|url
argument_list|,
name|Constants
operator|.
name|MIMETYPE_PROTOBUF
argument_list|,
name|cellSetModel
operator|.
name|createProtobufOutput
argument_list|()
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|yield
argument_list|()
expr_stmt|;
return|return
name|response
return|;
block|}
specifier|protected
specifier|static
name|Response
name|getValueXML
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|startRow
parameter_list|,
name|String
name|endRow
parameter_list|,
name|String
name|column
parameter_list|)
throws|throws
name|IOException
block|{
name|StringBuilder
name|path
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|startRow
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|","
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|endRow
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|column
argument_list|)
expr_stmt|;
return|return
name|getValueXML
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|Response
name|getValueXML
parameter_list|(
name|String
name|url
parameter_list|)
throws|throws
name|IOException
block|{
name|Response
name|response
init|=
name|client
operator|.
name|get
argument_list|(
name|url
argument_list|,
name|Constants
operator|.
name|MIMETYPE_XML
argument_list|)
decl_stmt|;
return|return
name|response
return|;
block|}
specifier|protected
specifier|static
name|Response
name|getValueJson
parameter_list|(
name|String
name|url
parameter_list|)
throws|throws
name|IOException
block|{
name|Response
name|response
init|=
name|client
operator|.
name|get
argument_list|(
name|url
argument_list|,
name|Constants
operator|.
name|MIMETYPE_JSON
argument_list|)
decl_stmt|;
return|return
name|response
return|;
block|}
specifier|protected
specifier|static
name|Response
name|deleteValue
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|)
throws|throws
name|IOException
block|{
name|StringBuilder
name|path
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|column
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|delete
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|yield
argument_list|()
expr_stmt|;
return|return
name|response
return|;
block|}
specifier|protected
specifier|static
name|Response
name|getValueXML
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|)
throws|throws
name|IOException
block|{
name|StringBuilder
name|path
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|column
argument_list|)
expr_stmt|;
return|return
name|getValueXML
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|Response
name|deleteRow
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|)
throws|throws
name|IOException
block|{
name|StringBuilder
name|path
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|delete
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|yield
argument_list|()
expr_stmt|;
return|return
name|response
return|;
block|}
specifier|protected
specifier|static
name|Response
name|getValueJson
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|)
throws|throws
name|IOException
block|{
name|StringBuilder
name|path
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|column
argument_list|)
expr_stmt|;
return|return
name|getValueJson
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|void
name|checkValueJSON
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
name|Response
name|response
init|=
name|getValueJson
argument_list|(
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getCode
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Constants
operator|.
name|MIMETYPE_JSON
argument_list|,
name|response
operator|.
name|getHeader
argument_list|(
literal|"content-type"
argument_list|)
argument_list|)
expr_stmt|;
name|ObjectMapper
name|mapper
init|=
operator|new
name|JacksonJaxbJsonProvider
argument_list|()
operator|.
name|locateMapper
argument_list|(
name|CellSetModel
operator|.
name|class
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|)
decl_stmt|;
name|CellSetModel
name|cellSet
init|=
name|mapper
operator|.
name|readValue
argument_list|(
name|response
operator|.
name|getBody
argument_list|()
argument_list|,
name|CellSetModel
operator|.
name|class
argument_list|)
decl_stmt|;
name|RowModel
name|rowModel
init|=
name|cellSet
operator|.
name|getRows
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|CellModel
name|cell
init|=
name|rowModel
operator|.
name|getCells
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Bytes
operator|.
name|toString
argument_list|(
name|cell
operator|.
name|getColumn
argument_list|()
argument_list|)
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Bytes
operator|.
name|toString
argument_list|(
name|cell
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|protected
specifier|static
name|void
name|checkIncrementValueJSON
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|long
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
name|Response
name|response
init|=
name|getValueJson
argument_list|(
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|response
operator|.
name|getCode
argument_list|()
argument_list|,
literal|200
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Constants
operator|.
name|MIMETYPE_JSON
argument_list|,
name|response
operator|.
name|getHeader
argument_list|(
literal|"content-type"
argument_list|)
argument_list|)
expr_stmt|;
name|ObjectMapper
name|mapper
init|=
operator|new
name|JacksonJaxbJsonProvider
argument_list|()
operator|.
name|locateMapper
argument_list|(
name|CellSetModel
operator|.
name|class
argument_list|,
name|MediaType
operator|.
name|APPLICATION_JSON_TYPE
argument_list|)
decl_stmt|;
name|CellSetModel
name|cellSet
init|=
name|mapper
operator|.
name|readValue
argument_list|(
name|response
operator|.
name|getBody
argument_list|()
argument_list|,
name|CellSetModel
operator|.
name|class
argument_list|)
decl_stmt|;
name|RowModel
name|rowModel
init|=
name|cellSet
operator|.
name|getRows
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|CellModel
name|cell
init|=
name|rowModel
operator|.
name|getCells
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Bytes
operator|.
name|toString
argument_list|(
name|cell
operator|.
name|getColumn
argument_list|()
argument_list|)
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Bytes
operator|.
name|toLong
argument_list|(
name|cell
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|protected
specifier|static
name|Response
name|putValueJson
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
name|StringBuilder
name|path
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|column
argument_list|)
expr_stmt|;
return|return
name|putValueJson
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|,
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|Response
name|putValueJson
parameter_list|(
name|String
name|url
parameter_list|,
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
name|RowModel
name|rowModel
init|=
operator|new
name|RowModel
argument_list|(
name|row
argument_list|)
decl_stmt|;
name|rowModel
operator|.
name|addCell
argument_list|(
operator|new
name|CellModel
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|column
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|value
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|CellSetModel
name|cellSetModel
init|=
operator|new
name|CellSetModel
argument_list|()
decl_stmt|;
name|cellSetModel
operator|.
name|addRow
argument_list|(
name|rowModel
argument_list|)
expr_stmt|;
name|String
name|jsonString
init|=
name|jsonMapper
operator|.
name|writeValueAsString
argument_list|(
name|cellSetModel
argument_list|)
decl_stmt|;
name|Response
name|response
init|=
name|client
operator|.
name|put
argument_list|(
name|url
argument_list|,
name|Constants
operator|.
name|MIMETYPE_JSON
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|jsonString
argument_list|)
argument_list|)
decl_stmt|;
name|Thread
operator|.
name|yield
argument_list|()
expr_stmt|;
return|return
name|response
return|;
block|}
specifier|protected
specifier|static
name|Response
name|appendValueXML
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
name|StringBuilder
name|path
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|"?check=append"
argument_list|)
expr_stmt|;
return|return
name|putValueXML
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|,
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|Response
name|appendValuePB
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
name|StringBuilder
name|path
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|"?check=append"
argument_list|)
expr_stmt|;
return|return
name|putValuePB
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|,
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|Response
name|appendValueJson
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
name|StringBuilder
name|path
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|"?check=append"
argument_list|)
expr_stmt|;
return|return
name|putValueJson
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|,
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|Response
name|incrementValueXML
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
name|StringBuilder
name|path
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|"?check=increment"
argument_list|)
expr_stmt|;
return|return
name|putValueXML
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|,
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|Response
name|incrementValuePB
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
name|StringBuilder
name|path
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|"?check=increment"
argument_list|)
expr_stmt|;
return|return
name|putValuePB
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|,
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|Response
name|incrementValueJson
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|row
parameter_list|,
name|String
name|column
parameter_list|,
name|String
name|value
parameter_list|)
throws|throws
name|IOException
throws|,
name|JAXBException
block|{
name|StringBuilder
name|path
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|'/'
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|path
operator|.
name|append
argument_list|(
literal|"?check=increment"
argument_list|)
expr_stmt|;
return|return
name|putValueJson
argument_list|(
name|path
operator|.
name|toString
argument_list|()
argument_list|,
name|table
argument_list|,
name|row
argument_list|,
name|column
argument_list|,
name|value
argument_list|)
return|;
block|}
block|}
end_class

end_unit

