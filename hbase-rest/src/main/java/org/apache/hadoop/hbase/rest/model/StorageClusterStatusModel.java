begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAttribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElementWrapper
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|ByteStringer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|ProtobufMessageHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|ProtobufUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rest
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|StorageClusterStatusMessage
operator|.
name|StorageClusterStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_comment
comment|/**  * Representation of the status of a storage cluster:  *<p>  *<ul>  *<li>regions: the total number of regions served by the cluster</li>  *<li>requests: the total number of requests per second handled by the  * cluster in the last reporting interval</li>  *<li>averageLoad: the average load of the region servers in the cluster</li>  *<li>liveNodes: detailed status of the live region servers</li>  *<li>deadNodes: the names of region servers declared dead</li>  *</ul>  *  *<pre>  *&lt;complexType name="StorageClusterStatus"&gt;  *&lt;sequence&gt;  *&lt;element name="liveNode" type="tns:Node"  *       maxOccurs="unbounded" minOccurs="0"&gt;  *&lt;/element&gt;  *&lt;element name="deadNode" type="string" maxOccurs="unbounded"  *       minOccurs="0"&gt;  *&lt;/element&gt;  *&lt;/sequence&gt;  *&lt;attribute name="regions" type="int"&gt;&lt;/attribute&gt;  *&lt;attribute name="requests" type="int"&gt;&lt;/attribute&gt;  *&lt;attribute name="averageLoad" type="float"&gt;&lt;/attribute&gt;  *&lt;/complexType&gt;  *  *&lt;complexType name="Node"&gt;  *&lt;sequence&gt;  *&lt;element name="region" type="tns:Region"  *       maxOccurs="unbounded" minOccurs="0"&gt;&lt;/element&gt;  *&lt;/sequence&gt;  *&lt;attribute name="name" type="string"&gt;&lt;/attribute&gt;  *&lt;attribute name="startCode" type="int"&gt;&lt;/attribute&gt;  *&lt;attribute name="requests" type="int"&gt;&lt;/attribute&gt;  *&lt;attribute name="heapSizeMB" type="int"&gt;&lt;/attribute&gt;  *&lt;attribute name="maxHeapSizeMB" type="int"&gt;&lt;/attribute&gt;  *&lt;/complexType&gt;  *  *&lt;complexType name="Region"&gt;  *&lt;attribute name="name" type="base64Binary"&gt;&lt;/attribute&gt;  *&lt;attribute name="stores" type="int"&gt;&lt;/attribute&gt;  *&lt;attribute name="storefiles" type="int"&gt;&lt;/attribute&gt;  *&lt;attribute name="storefileSizeMB" type="int"&gt;&lt;/attribute&gt;  *&lt;attribute name="memstoreSizeMB" type="int"&gt;&lt;/attribute&gt;  *&lt;attribute name="storefileIndexSizeMB" type="int"&gt;&lt;/attribute&gt;  *&lt;attribute name="readRequestsCount" type="int"&gt;&lt;/attribute&gt;  *&lt;attribute name="writeRequestsCount" type="int"&gt;&lt;/attribute&gt;  *&lt;attribute name="rootIndexSizeKB" type="int"&gt;&lt;/attribute&gt;  *&lt;attribute name="totalStaticIndexSizeKB" type="int"&gt;&lt;/attribute&gt;  *&lt;attribute name="totalStaticBloomSizeKB" type="int"&gt;&lt;/attribute&gt;  *&lt;attribute name="totalCompactingKVs" type="int"&gt;&lt;/attribute&gt;  *&lt;attribute name="currentCompactedKVs" type="int"&gt;&lt;/attribute&gt;  *&lt;/complexType&gt;  *</pre>  */
end_comment

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"ClusterStatus"
argument_list|)
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|StorageClusterStatusModel
implements|implements
name|Serializable
implements|,
name|ProtobufMessageHandler
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
comment|/**    * Represents a region server.    */
specifier|public
specifier|static
class|class
name|Node
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
comment|/**      * Represents a region hosted on a region server.      */
specifier|public
specifier|static
class|class
name|Region
implements|implements
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|1326683840086398193L
decl_stmt|;
specifier|private
name|byte
index|[]
name|name
decl_stmt|;
specifier|private
name|int
name|stores
decl_stmt|;
specifier|private
name|int
name|storefiles
decl_stmt|;
specifier|private
name|int
name|storefileSizeMB
decl_stmt|;
specifier|private
name|int
name|memstoreSizeMB
decl_stmt|;
specifier|private
name|long
name|storefileIndexSizeKB
decl_stmt|;
specifier|private
name|long
name|readRequestsCount
decl_stmt|;
specifier|private
name|long
name|writeRequestsCount
decl_stmt|;
specifier|private
name|int
name|rootIndexSizeKB
decl_stmt|;
specifier|private
name|int
name|totalStaticIndexSizeKB
decl_stmt|;
specifier|private
name|int
name|totalStaticBloomSizeKB
decl_stmt|;
specifier|private
name|long
name|totalCompactingKVs
decl_stmt|;
specifier|private
name|long
name|currentCompactedKVs
decl_stmt|;
comment|/**        * Default constructor        */
specifier|public
name|Region
parameter_list|()
block|{       }
comment|/**        * Constructor        * @param name the region name        */
specifier|public
name|Region
parameter_list|(
name|byte
index|[]
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
comment|/**        * Constructor        * @param name the region name        * @param stores the number of stores        * @param storefiles the number of store files        * @param storefileSizeMB total size of store files, in MB        * @param memstoreSizeMB total size of memstore, in MB        * @param storefileIndexSizeKB total size of store file indexes, in KB        */
specifier|public
name|Region
parameter_list|(
name|byte
index|[]
name|name
parameter_list|,
name|int
name|stores
parameter_list|,
name|int
name|storefiles
parameter_list|,
name|int
name|storefileSizeMB
parameter_list|,
name|int
name|memstoreSizeMB
parameter_list|,
name|long
name|storefileIndexSizeKB
parameter_list|,
name|long
name|readRequestsCount
parameter_list|,
name|long
name|writeRequestsCount
parameter_list|,
name|int
name|rootIndexSizeKB
parameter_list|,
name|int
name|totalStaticIndexSizeKB
parameter_list|,
name|int
name|totalStaticBloomSizeKB
parameter_list|,
name|long
name|totalCompactingKVs
parameter_list|,
name|long
name|currentCompactedKVs
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|stores
operator|=
name|stores
expr_stmt|;
name|this
operator|.
name|storefiles
operator|=
name|storefiles
expr_stmt|;
name|this
operator|.
name|storefileSizeMB
operator|=
name|storefileSizeMB
expr_stmt|;
name|this
operator|.
name|memstoreSizeMB
operator|=
name|memstoreSizeMB
expr_stmt|;
name|this
operator|.
name|storefileIndexSizeKB
operator|=
name|storefileIndexSizeKB
expr_stmt|;
name|this
operator|.
name|readRequestsCount
operator|=
name|readRequestsCount
expr_stmt|;
name|this
operator|.
name|writeRequestsCount
operator|=
name|writeRequestsCount
expr_stmt|;
name|this
operator|.
name|rootIndexSizeKB
operator|=
name|rootIndexSizeKB
expr_stmt|;
name|this
operator|.
name|totalStaticIndexSizeKB
operator|=
name|totalStaticIndexSizeKB
expr_stmt|;
name|this
operator|.
name|totalStaticBloomSizeKB
operator|=
name|totalStaticBloomSizeKB
expr_stmt|;
name|this
operator|.
name|totalCompactingKVs
operator|=
name|totalCompactingKVs
expr_stmt|;
name|this
operator|.
name|currentCompactedKVs
operator|=
name|currentCompactedKVs
expr_stmt|;
block|}
comment|/**        * @return the region name        */
annotation|@
name|XmlAttribute
specifier|public
name|byte
index|[]
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
comment|/**        * @return the number of stores        */
annotation|@
name|XmlAttribute
specifier|public
name|int
name|getStores
parameter_list|()
block|{
return|return
name|stores
return|;
block|}
comment|/**        * @return the number of store files        */
annotation|@
name|XmlAttribute
specifier|public
name|int
name|getStorefiles
parameter_list|()
block|{
return|return
name|storefiles
return|;
block|}
comment|/**        * @return the total size of store files, in MB        */
annotation|@
name|XmlAttribute
specifier|public
name|int
name|getStorefileSizeMB
parameter_list|()
block|{
return|return
name|storefileSizeMB
return|;
block|}
comment|/**        * @return memstore size, in MB        */
annotation|@
name|XmlAttribute
specifier|public
name|int
name|getMemStoreSizeMB
parameter_list|()
block|{
return|return
name|memstoreSizeMB
return|;
block|}
comment|/**        * @return the total size of store file indexes, in KB        */
annotation|@
name|XmlAttribute
specifier|public
name|long
name|getStorefileIndexSizeKB
parameter_list|()
block|{
return|return
name|storefileIndexSizeKB
return|;
block|}
comment|/**        * @return the current total read requests made to region        */
annotation|@
name|XmlAttribute
specifier|public
name|long
name|getReadRequestsCount
parameter_list|()
block|{
return|return
name|readRequestsCount
return|;
block|}
comment|/**        * @return the current total write requests made to region        */
annotation|@
name|XmlAttribute
specifier|public
name|long
name|getWriteRequestsCount
parameter_list|()
block|{
return|return
name|writeRequestsCount
return|;
block|}
comment|/**        * @return The current total size of root-level indexes for the region, in KB.        */
annotation|@
name|XmlAttribute
specifier|public
name|int
name|getRootIndexSizeKB
parameter_list|()
block|{
return|return
name|rootIndexSizeKB
return|;
block|}
comment|/**        * @return The total size of static index, in KB        */
annotation|@
name|XmlAttribute
specifier|public
name|int
name|getTotalStaticIndexSizeKB
parameter_list|()
block|{
return|return
name|totalStaticIndexSizeKB
return|;
block|}
comment|/**        * @return The total size of static bloom, in KB        */
annotation|@
name|XmlAttribute
specifier|public
name|int
name|getTotalStaticBloomSizeKB
parameter_list|()
block|{
return|return
name|totalStaticBloomSizeKB
return|;
block|}
comment|/**        * @return The total number of compacting key-values        */
annotation|@
name|XmlAttribute
specifier|public
name|long
name|getTotalCompactingKVs
parameter_list|()
block|{
return|return
name|totalCompactingKVs
return|;
block|}
comment|/**        * @return The number of current compacted key-values        */
annotation|@
name|XmlAttribute
specifier|public
name|long
name|getCurrentCompactedKVs
parameter_list|()
block|{
return|return
name|currentCompactedKVs
return|;
block|}
comment|/**        * @param readRequestsCount The current total read requests made to region        */
specifier|public
name|void
name|setReadRequestsCount
parameter_list|(
name|long
name|readRequestsCount
parameter_list|)
block|{
name|this
operator|.
name|readRequestsCount
operator|=
name|readRequestsCount
expr_stmt|;
block|}
comment|/**        * @param rootIndexSizeKB The current total size of root-level indexes        *                        for the region, in KB        */
specifier|public
name|void
name|setRootIndexSizeKB
parameter_list|(
name|int
name|rootIndexSizeKB
parameter_list|)
block|{
name|this
operator|.
name|rootIndexSizeKB
operator|=
name|rootIndexSizeKB
expr_stmt|;
block|}
comment|/**        * @param writeRequestsCount The current total write requests made to region        */
specifier|public
name|void
name|setWriteRequestsCount
parameter_list|(
name|long
name|writeRequestsCount
parameter_list|)
block|{
name|this
operator|.
name|writeRequestsCount
operator|=
name|writeRequestsCount
expr_stmt|;
block|}
comment|/**        * @param currentCompactedKVs The completed count of key values        *                            in currently running compaction        */
specifier|public
name|void
name|setCurrentCompactedKVs
parameter_list|(
name|long
name|currentCompactedKVs
parameter_list|)
block|{
name|this
operator|.
name|currentCompactedKVs
operator|=
name|currentCompactedKVs
expr_stmt|;
block|}
comment|/**        * @param totalCompactingKVs The total compacting key values        *                           in currently running compaction        */
specifier|public
name|void
name|setTotalCompactingKVs
parameter_list|(
name|long
name|totalCompactingKVs
parameter_list|)
block|{
name|this
operator|.
name|totalCompactingKVs
operator|=
name|totalCompactingKVs
expr_stmt|;
block|}
comment|/**        * @param totalStaticBloomSizeKB The total size of all Bloom filter blocks,        *                               not just loaded into the block cache, in KB.        */
specifier|public
name|void
name|setTotalStaticBloomSizeKB
parameter_list|(
name|int
name|totalStaticBloomSizeKB
parameter_list|)
block|{
name|this
operator|.
name|totalStaticBloomSizeKB
operator|=
name|totalStaticBloomSizeKB
expr_stmt|;
block|}
comment|/**        * @param totalStaticIndexSizeKB The total size of all index blocks,        *                               not just the root level, in KB.        */
specifier|public
name|void
name|setTotalStaticIndexSizeKB
parameter_list|(
name|int
name|totalStaticIndexSizeKB
parameter_list|)
block|{
name|this
operator|.
name|totalStaticIndexSizeKB
operator|=
name|totalStaticIndexSizeKB
expr_stmt|;
block|}
comment|/**        * @param name the region name        */
specifier|public
name|void
name|setName
parameter_list|(
name|byte
index|[]
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
comment|/**        * @param stores the number of stores        */
specifier|public
name|void
name|setStores
parameter_list|(
name|int
name|stores
parameter_list|)
block|{
name|this
operator|.
name|stores
operator|=
name|stores
expr_stmt|;
block|}
comment|/**        * @param storefiles the number of store files        */
specifier|public
name|void
name|setStorefiles
parameter_list|(
name|int
name|storefiles
parameter_list|)
block|{
name|this
operator|.
name|storefiles
operator|=
name|storefiles
expr_stmt|;
block|}
comment|/**        * @param storefileSizeMB total size of store files, in MB        */
specifier|public
name|void
name|setStorefileSizeMB
parameter_list|(
name|int
name|storefileSizeMB
parameter_list|)
block|{
name|this
operator|.
name|storefileSizeMB
operator|=
name|storefileSizeMB
expr_stmt|;
block|}
comment|/**        * @param memstoreSizeMB memstore size, in MB        */
specifier|public
name|void
name|setMemStoreSizeMB
parameter_list|(
name|int
name|memstoreSizeMB
parameter_list|)
block|{
name|this
operator|.
name|memstoreSizeMB
operator|=
name|memstoreSizeMB
expr_stmt|;
block|}
comment|/**        * @param storefileIndexSizeKB total size of store file indexes, in KB        */
specifier|public
name|void
name|setStorefileIndexSizeKB
parameter_list|(
name|long
name|storefileIndexSizeKB
parameter_list|)
block|{
name|this
operator|.
name|storefileIndexSizeKB
operator|=
name|storefileIndexSizeKB
expr_stmt|;
block|}
block|}
specifier|private
name|String
name|name
decl_stmt|;
specifier|private
name|long
name|startCode
decl_stmt|;
specifier|private
name|long
name|requests
decl_stmt|;
specifier|private
name|int
name|heapSizeMB
decl_stmt|;
specifier|private
name|int
name|maxHeapSizeMB
decl_stmt|;
specifier|private
name|List
argument_list|<
name|Region
argument_list|>
name|regions
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
comment|/**      * Add a region name to the list      * @param name the region name      */
specifier|public
name|void
name|addRegion
parameter_list|(
name|byte
index|[]
name|name
parameter_list|,
name|int
name|stores
parameter_list|,
name|int
name|storefiles
parameter_list|,
name|int
name|storefileSizeMB
parameter_list|,
name|int
name|memstoreSizeMB
parameter_list|,
name|long
name|storefileIndexSizeKB
parameter_list|,
name|long
name|readRequestsCount
parameter_list|,
name|long
name|writeRequestsCount
parameter_list|,
name|int
name|rootIndexSizeKB
parameter_list|,
name|int
name|totalStaticIndexSizeKB
parameter_list|,
name|int
name|totalStaticBloomSizeKB
parameter_list|,
name|long
name|totalCompactingKVs
parameter_list|,
name|long
name|currentCompactedKVs
parameter_list|)
block|{
name|regions
operator|.
name|add
argument_list|(
operator|new
name|Region
argument_list|(
name|name
argument_list|,
name|stores
argument_list|,
name|storefiles
argument_list|,
name|storefileSizeMB
argument_list|,
name|memstoreSizeMB
argument_list|,
name|storefileIndexSizeKB
argument_list|,
name|readRequestsCount
argument_list|,
name|writeRequestsCount
argument_list|,
name|rootIndexSizeKB
argument_list|,
name|totalStaticIndexSizeKB
argument_list|,
name|totalStaticBloomSizeKB
argument_list|,
name|totalCompactingKVs
argument_list|,
name|currentCompactedKVs
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * @param index the index      * @return the region name      */
specifier|public
name|Region
name|getRegion
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|regions
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      * Default constructor      */
specifier|public
name|Node
parameter_list|()
block|{}
comment|/**      * Constructor      * @param name the region server name      * @param startCode the region server's start code      */
specifier|public
name|Node
parameter_list|(
name|String
name|name
parameter_list|,
name|long
name|startCode
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|startCode
operator|=
name|startCode
expr_stmt|;
block|}
comment|/**      * @return the region server's name      */
annotation|@
name|XmlAttribute
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
comment|/**      * @return the region server's start code      */
annotation|@
name|XmlAttribute
specifier|public
name|long
name|getStartCode
parameter_list|()
block|{
return|return
name|startCode
return|;
block|}
comment|/**      * @return the current heap size, in MB      */
annotation|@
name|XmlAttribute
specifier|public
name|int
name|getHeapSizeMB
parameter_list|()
block|{
return|return
name|heapSizeMB
return|;
block|}
comment|/**      * @return the maximum heap size, in MB      */
annotation|@
name|XmlAttribute
specifier|public
name|int
name|getMaxHeapSizeMB
parameter_list|()
block|{
return|return
name|maxHeapSizeMB
return|;
block|}
comment|/**      * @return the list of regions served by the region server      */
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"Region"
argument_list|)
specifier|public
name|List
argument_list|<
name|Region
argument_list|>
name|getRegions
parameter_list|()
block|{
return|return
name|regions
return|;
block|}
comment|/**      * @return the number of requests per second processed by the region server      */
annotation|@
name|XmlAttribute
specifier|public
name|long
name|getRequests
parameter_list|()
block|{
return|return
name|requests
return|;
block|}
comment|/**      * @param name the region server's hostname      */
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
comment|/**      * @param startCode the region server's start code      */
specifier|public
name|void
name|setStartCode
parameter_list|(
name|long
name|startCode
parameter_list|)
block|{
name|this
operator|.
name|startCode
operator|=
name|startCode
expr_stmt|;
block|}
comment|/**      * @param heapSizeMB the current heap size, in MB      */
specifier|public
name|void
name|setHeapSizeMB
parameter_list|(
name|int
name|heapSizeMB
parameter_list|)
block|{
name|this
operator|.
name|heapSizeMB
operator|=
name|heapSizeMB
expr_stmt|;
block|}
comment|/**      * @param maxHeapSizeMB the maximum heap size, in MB      */
specifier|public
name|void
name|setMaxHeapSizeMB
parameter_list|(
name|int
name|maxHeapSizeMB
parameter_list|)
block|{
name|this
operator|.
name|maxHeapSizeMB
operator|=
name|maxHeapSizeMB
expr_stmt|;
block|}
comment|/**      * @param regions a list of regions served by the region server      */
specifier|public
name|void
name|setRegions
parameter_list|(
name|List
argument_list|<
name|Region
argument_list|>
name|regions
parameter_list|)
block|{
name|this
operator|.
name|regions
operator|=
name|regions
expr_stmt|;
block|}
comment|/**      * @param requests the number of requests per second processed by the      * region server      */
specifier|public
name|void
name|setRequests
parameter_list|(
name|long
name|requests
parameter_list|)
block|{
name|this
operator|.
name|requests
operator|=
name|requests
expr_stmt|;
block|}
block|}
specifier|private
name|List
argument_list|<
name|Node
argument_list|>
name|liveNodes
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|deadNodes
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
name|int
name|regions
decl_stmt|;
specifier|private
name|long
name|requests
decl_stmt|;
specifier|private
name|double
name|averageLoad
decl_stmt|;
comment|/**    * Add a live node to the cluster representation.    * @param name the region server name    * @param startCode the region server's start code    * @param heapSizeMB the current heap size, in MB    * @param maxHeapSizeMB the maximum heap size, in MB    */
specifier|public
name|Node
name|addLiveNode
parameter_list|(
name|String
name|name
parameter_list|,
name|long
name|startCode
parameter_list|,
name|int
name|heapSizeMB
parameter_list|,
name|int
name|maxHeapSizeMB
parameter_list|)
block|{
name|Node
name|node
init|=
operator|new
name|Node
argument_list|(
name|name
argument_list|,
name|startCode
argument_list|)
decl_stmt|;
name|node
operator|.
name|setHeapSizeMB
argument_list|(
name|heapSizeMB
argument_list|)
expr_stmt|;
name|node
operator|.
name|setMaxHeapSizeMB
argument_list|(
name|maxHeapSizeMB
argument_list|)
expr_stmt|;
name|liveNodes
operator|.
name|add
argument_list|(
name|node
argument_list|)
expr_stmt|;
return|return
name|node
return|;
block|}
comment|/**    * @param index the index    * @return the region server model    */
specifier|public
name|Node
name|getLiveNode
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|liveNodes
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**    * Add a dead node to the cluster representation.    * @param node the dead region server's name    */
specifier|public
name|void
name|addDeadNode
parameter_list|(
name|String
name|node
parameter_list|)
block|{
name|deadNodes
operator|.
name|add
argument_list|(
name|node
argument_list|)
expr_stmt|;
block|}
comment|/**    * @param index the index    * @return the dead region server's name    */
specifier|public
name|String
name|getDeadNode
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|deadNodes
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**    * Default constructor    */
specifier|public
name|StorageClusterStatusModel
parameter_list|()
block|{   }
comment|/**    * @return the list of live nodes    */
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"Node"
argument_list|)
annotation|@
name|XmlElementWrapper
argument_list|(
name|name
operator|=
literal|"LiveNodes"
argument_list|)
specifier|public
name|List
argument_list|<
name|Node
argument_list|>
name|getLiveNodes
parameter_list|()
block|{
return|return
name|liveNodes
return|;
block|}
comment|/**    * @return the list of dead nodes    */
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"Node"
argument_list|)
annotation|@
name|XmlElementWrapper
argument_list|(
name|name
operator|=
literal|"DeadNodes"
argument_list|)
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getDeadNodes
parameter_list|()
block|{
return|return
name|deadNodes
return|;
block|}
comment|/**    * @return the total number of regions served by the cluster    */
annotation|@
name|XmlAttribute
specifier|public
name|int
name|getRegions
parameter_list|()
block|{
return|return
name|regions
return|;
block|}
comment|/**    * @return the total number of requests per second handled by the cluster in    * the last reporting interval    */
annotation|@
name|XmlAttribute
specifier|public
name|long
name|getRequests
parameter_list|()
block|{
return|return
name|requests
return|;
block|}
comment|/**    * @return the average load of the region servers in the cluster    */
annotation|@
name|XmlAttribute
specifier|public
name|double
name|getAverageLoad
parameter_list|()
block|{
return|return
name|averageLoad
return|;
block|}
comment|/**    * @param nodes the list of live node models    */
specifier|public
name|void
name|setLiveNodes
parameter_list|(
name|List
argument_list|<
name|Node
argument_list|>
name|nodes
parameter_list|)
block|{
name|this
operator|.
name|liveNodes
operator|=
name|nodes
expr_stmt|;
block|}
comment|/**    * @param nodes the list of dead node names    */
specifier|public
name|void
name|setDeadNodes
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|nodes
parameter_list|)
block|{
name|this
operator|.
name|deadNodes
operator|=
name|nodes
expr_stmt|;
block|}
comment|/**    * @param regions the total number of regions served by the cluster    */
specifier|public
name|void
name|setRegions
parameter_list|(
name|int
name|regions
parameter_list|)
block|{
name|this
operator|.
name|regions
operator|=
name|regions
expr_stmt|;
block|}
comment|/**    * @param requests the total number of requests per second handled by the    * cluster    */
specifier|public
name|void
name|setRequests
parameter_list|(
name|int
name|requests
parameter_list|)
block|{
name|this
operator|.
name|requests
operator|=
name|requests
expr_stmt|;
block|}
comment|/**    * @param averageLoad the average load of region servers in the cluster    */
specifier|public
name|void
name|setAverageLoad
parameter_list|(
name|double
name|averageLoad
parameter_list|)
block|{
name|this
operator|.
name|averageLoad
operator|=
name|averageLoad
expr_stmt|;
block|}
comment|/*    * (non-Javadoc)    * @see java.lang.Object#toString()    */
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"%d live servers, %d dead servers, "
operator|+
literal|"%.4f average load%n%n"
argument_list|,
name|liveNodes
operator|.
name|size
argument_list|()
argument_list|,
name|deadNodes
operator|.
name|size
argument_list|()
argument_list|,
name|averageLoad
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|liveNodes
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|liveNodes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|" live servers\n"
argument_list|)
expr_stmt|;
for|for
control|(
name|Node
name|node
range|:
name|liveNodes
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|"    "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|node
operator|.
name|name
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|' '
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|node
operator|.
name|startCode
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\n        requests="
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|node
operator|.
name|requests
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", regions="
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|node
operator|.
name|regions
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\n        heapSizeMB="
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|node
operator|.
name|heapSizeMB
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\n        maxHeapSizeMB="
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|node
operator|.
name|maxHeapSizeMB
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\n\n"
argument_list|)
expr_stmt|;
for|for
control|(
name|Node
operator|.
name|Region
name|region
range|:
name|node
operator|.
name|regions
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|"        "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|Bytes
operator|.
name|toString
argument_list|(
name|region
operator|.
name|name
argument_list|)
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\n            stores="
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|region
operator|.
name|stores
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\n            storefiless="
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|region
operator|.
name|storefiles
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\n            storefileSizeMB="
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|region
operator|.
name|storefileSizeMB
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\n            memstoreSizeMB="
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|region
operator|.
name|memstoreSizeMB
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\n            storefileIndexSizeKB="
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|region
operator|.
name|storefileIndexSizeKB
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\n            readRequestsCount="
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|region
operator|.
name|readRequestsCount
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\n            writeRequestsCount="
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|region
operator|.
name|writeRequestsCount
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\n            rootIndexSizeKB="
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|region
operator|.
name|rootIndexSizeKB
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\n            totalStaticIndexSizeKB="
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|region
operator|.
name|totalStaticIndexSizeKB
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\n            totalStaticBloomSizeKB="
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|region
operator|.
name|totalStaticBloomSizeKB
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\n            totalCompactingKVs="
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|region
operator|.
name|totalCompactingKVs
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"\n            currentCompactedKVs="
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|region
operator|.
name|currentCompactedKVs
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|'\n'
argument_list|)
expr_stmt|;
block|}
name|sb
operator|.
name|append
argument_list|(
literal|'\n'
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|deadNodes
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|'\n'
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|deadNodes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|" dead servers\n"
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|node
range|:
name|deadNodes
control|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|"    "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|node
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|'\n'
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|byte
index|[]
name|createProtobufOutput
parameter_list|()
block|{
name|StorageClusterStatus
operator|.
name|Builder
name|builder
init|=
name|StorageClusterStatus
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setRegions
argument_list|(
name|regions
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setRequests
argument_list|(
name|requests
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setAverageLoad
argument_list|(
name|averageLoad
argument_list|)
expr_stmt|;
for|for
control|(
name|Node
name|node
range|:
name|liveNodes
control|)
block|{
name|StorageClusterStatus
operator|.
name|Node
operator|.
name|Builder
name|nodeBuilder
init|=
name|StorageClusterStatus
operator|.
name|Node
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|nodeBuilder
operator|.
name|setName
argument_list|(
name|node
operator|.
name|name
argument_list|)
expr_stmt|;
name|nodeBuilder
operator|.
name|setStartCode
argument_list|(
name|node
operator|.
name|startCode
argument_list|)
expr_stmt|;
name|nodeBuilder
operator|.
name|setRequests
argument_list|(
name|node
operator|.
name|requests
argument_list|)
expr_stmt|;
name|nodeBuilder
operator|.
name|setHeapSizeMB
argument_list|(
name|node
operator|.
name|heapSizeMB
argument_list|)
expr_stmt|;
name|nodeBuilder
operator|.
name|setMaxHeapSizeMB
argument_list|(
name|node
operator|.
name|maxHeapSizeMB
argument_list|)
expr_stmt|;
for|for
control|(
name|Node
operator|.
name|Region
name|region
range|:
name|node
operator|.
name|regions
control|)
block|{
name|StorageClusterStatus
operator|.
name|Region
operator|.
name|Builder
name|regionBuilder
init|=
name|StorageClusterStatus
operator|.
name|Region
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|regionBuilder
operator|.
name|setName
argument_list|(
name|ByteStringer
operator|.
name|wrap
argument_list|(
name|region
operator|.
name|name
argument_list|)
argument_list|)
expr_stmt|;
name|regionBuilder
operator|.
name|setStores
argument_list|(
name|region
operator|.
name|stores
argument_list|)
expr_stmt|;
name|regionBuilder
operator|.
name|setStorefiles
argument_list|(
name|region
operator|.
name|storefiles
argument_list|)
expr_stmt|;
name|regionBuilder
operator|.
name|setStorefileSizeMB
argument_list|(
name|region
operator|.
name|storefileSizeMB
argument_list|)
expr_stmt|;
name|regionBuilder
operator|.
name|setMemStoreSizeMB
argument_list|(
name|region
operator|.
name|memstoreSizeMB
argument_list|)
expr_stmt|;
name|regionBuilder
operator|.
name|setStorefileIndexSizeKB
argument_list|(
name|region
operator|.
name|storefileIndexSizeKB
argument_list|)
expr_stmt|;
name|regionBuilder
operator|.
name|setReadRequestsCount
argument_list|(
name|region
operator|.
name|readRequestsCount
argument_list|)
expr_stmt|;
name|regionBuilder
operator|.
name|setWriteRequestsCount
argument_list|(
name|region
operator|.
name|writeRequestsCount
argument_list|)
expr_stmt|;
name|regionBuilder
operator|.
name|setRootIndexSizeKB
argument_list|(
name|region
operator|.
name|rootIndexSizeKB
argument_list|)
expr_stmt|;
name|regionBuilder
operator|.
name|setTotalStaticIndexSizeKB
argument_list|(
name|region
operator|.
name|totalStaticIndexSizeKB
argument_list|)
expr_stmt|;
name|regionBuilder
operator|.
name|setTotalStaticBloomSizeKB
argument_list|(
name|region
operator|.
name|totalStaticBloomSizeKB
argument_list|)
expr_stmt|;
name|regionBuilder
operator|.
name|setTotalCompactingKVs
argument_list|(
name|region
operator|.
name|totalCompactingKVs
argument_list|)
expr_stmt|;
name|regionBuilder
operator|.
name|setCurrentCompactedKVs
argument_list|(
name|region
operator|.
name|currentCompactedKVs
argument_list|)
expr_stmt|;
name|nodeBuilder
operator|.
name|addRegions
argument_list|(
name|regionBuilder
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|addLiveNodes
argument_list|(
name|nodeBuilder
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|String
name|node
range|:
name|deadNodes
control|)
block|{
name|builder
operator|.
name|addDeadNodes
argument_list|(
name|node
argument_list|)
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|build
argument_list|()
operator|.
name|toByteArray
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProtobufMessageHandler
name|getObjectFromMessage
parameter_list|(
name|byte
index|[]
name|message
parameter_list|)
throws|throws
name|IOException
block|{
name|StorageClusterStatus
operator|.
name|Builder
name|builder
init|=
name|StorageClusterStatus
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|ProtobufUtil
operator|.
name|mergeFrom
argument_list|(
name|builder
argument_list|,
name|message
argument_list|)
expr_stmt|;
if|if
condition|(
name|builder
operator|.
name|hasRegions
argument_list|()
condition|)
block|{
name|regions
operator|=
name|builder
operator|.
name|getRegions
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|builder
operator|.
name|hasRequests
argument_list|()
condition|)
block|{
name|requests
operator|=
name|builder
operator|.
name|getRequests
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|builder
operator|.
name|hasAverageLoad
argument_list|()
condition|)
block|{
name|averageLoad
operator|=
name|builder
operator|.
name|getAverageLoad
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|StorageClusterStatus
operator|.
name|Node
name|node
range|:
name|builder
operator|.
name|getLiveNodesList
argument_list|()
control|)
block|{
name|long
name|startCode
init|=
name|node
operator|.
name|hasStartCode
argument_list|()
condition|?
name|node
operator|.
name|getStartCode
argument_list|()
else|:
operator|-
literal|1
decl_stmt|;
name|StorageClusterStatusModel
operator|.
name|Node
name|nodeModel
init|=
name|addLiveNode
argument_list|(
name|node
operator|.
name|getName
argument_list|()
argument_list|,
name|startCode
argument_list|,
name|node
operator|.
name|getHeapSizeMB
argument_list|()
argument_list|,
name|node
operator|.
name|getMaxHeapSizeMB
argument_list|()
argument_list|)
decl_stmt|;
name|long
name|requests
init|=
name|node
operator|.
name|hasRequests
argument_list|()
condition|?
name|node
operator|.
name|getRequests
argument_list|()
else|:
literal|0
decl_stmt|;
name|nodeModel
operator|.
name|setRequests
argument_list|(
name|requests
argument_list|)
expr_stmt|;
for|for
control|(
name|StorageClusterStatus
operator|.
name|Region
name|region
range|:
name|node
operator|.
name|getRegionsList
argument_list|()
control|)
block|{
name|nodeModel
operator|.
name|addRegion
argument_list|(
name|region
operator|.
name|getName
argument_list|()
operator|.
name|toByteArray
argument_list|()
argument_list|,
name|region
operator|.
name|getStores
argument_list|()
argument_list|,
name|region
operator|.
name|getStorefiles
argument_list|()
argument_list|,
name|region
operator|.
name|getStorefileSizeMB
argument_list|()
argument_list|,
name|region
operator|.
name|getMemStoreSizeMB
argument_list|()
argument_list|,
name|region
operator|.
name|getStorefileIndexSizeKB
argument_list|()
argument_list|,
name|region
operator|.
name|getReadRequestsCount
argument_list|()
argument_list|,
name|region
operator|.
name|getWriteRequestsCount
argument_list|()
argument_list|,
name|region
operator|.
name|getRootIndexSizeKB
argument_list|()
argument_list|,
name|region
operator|.
name|getTotalStaticIndexSizeKB
argument_list|()
argument_list|,
name|region
operator|.
name|getTotalStaticBloomSizeKB
argument_list|()
argument_list|,
name|region
operator|.
name|getTotalCompactingKVs
argument_list|()
argument_list|,
name|region
operator|.
name|getCurrentCompactedKVs
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|String
name|node
range|:
name|builder
operator|.
name|getDeadNodesList
argument_list|()
control|)
block|{
name|addDeadNode
argument_list|(
name|node
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
block|}
end_class

end_unit

