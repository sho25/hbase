begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Generated by the protocol buffer compiler.  DO NOT EDIT!
end_comment

begin_comment
comment|// source: google/protobuf/type.proto
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
package|;
end_package

begin_interface
specifier|public
interface|interface
name|OptionOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.Option)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**    *<pre>    * The option's name. For protobuf built-in options (options defined in    * descriptor.proto), this is the short name. For example, `"map_entry"`.    * For custom options, it should be the fully-qualified name. For example,    * `"google.api.http"`.    *</pre>    *    *<code>string name = 1;</code>    */
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
function_decl|;
comment|/**    *<pre>    * The option's name. For protobuf built-in options (options defined in    * descriptor.proto), this is the short name. For example, `"map_entry"`.    * For custom options, it should be the fully-qualified name. For example,    * `"google.api.http"`.    *</pre>    *    *<code>string name = 1;</code>    */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
function_decl|;
comment|/**    *<pre>    * The option's value packed in an Any message. If the value is a primitive,    * the corresponding wrapper type defined in google/protobuf/wrappers.proto    * should be used. If the value is an enum, it should be stored as an int32    * value using the google.protobuf.Int32Value type.    *</pre>    *    *<code>.google.protobuf.Any value = 2;</code>    */
name|boolean
name|hasValue
parameter_list|()
function_decl|;
comment|/**    *<pre>    * The option's value packed in an Any message. If the value is a primitive,    * the corresponding wrapper type defined in google/protobuf/wrappers.proto    * should be used. If the value is an enum, it should be stored as an int32    * value using the google.protobuf.Int32Value type.    *</pre>    *    *<code>.google.protobuf.Any value = 2;</code>    */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Any
name|getValue
parameter_list|()
function_decl|;
comment|/**    *<pre>    * The option's value packed in an Any message. If the value is a primitive,    * the corresponding wrapper type defined in google/protobuf/wrappers.proto    * should be used. If the value is an enum, it should be stored as an int32    * value using the google.protobuf.Int32Value type.    *</pre>    *    *<code>.google.protobuf.Any value = 2;</code>    */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AnyOrBuilder
name|getValueOrBuilder
parameter_list|()
function_decl|;
block|}
end_interface

end_unit

