begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Generated by the protocol buffer compiler.  DO NOT EDIT!
end_comment

begin_comment
comment|// source: google/protobuf/struct.proto
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
package|;
end_package

begin_comment
comment|/**  *<pre>  * `Value` represents a dynamically typed value which can be either  * null, a number, a string, a boolean, a recursive struct value, or a  * list of values. A producer of value is expected to set one of that  * variants, absence of any variant indicates an error.  * The JSON representation for `Value` is JSON value.  *</pre>  *  * Protobuf type {@code google.protobuf.Value}  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|Value
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.Value)
name|ValueOrBuilder
block|{
comment|// Use Value.newBuilder() to construct.
specifier|private
name|Value
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Value
parameter_list|()
block|{   }
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|private
name|Value
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|input
operator|.
name|skipField
argument_list|(
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|8
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
name|kindCase_
operator|=
literal|1
expr_stmt|;
name|kind_
operator|=
name|rawValue
expr_stmt|;
break|break;
block|}
case|case
literal|17
case|:
block|{
name|kindCase_
operator|=
literal|2
expr_stmt|;
name|kind_
operator|=
name|input
operator|.
name|readDouble
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|input
operator|.
name|readStringRequireUtf8
argument_list|()
decl_stmt|;
name|kindCase_
operator|=
literal|3
expr_stmt|;
name|kind_
operator|=
name|s
expr_stmt|;
break|break;
block|}
case|case
literal|32
case|:
block|{
name|kindCase_
operator|=
literal|4
expr_stmt|;
name|kind_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|42
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|kindCase_
operator|==
literal|5
condition|)
block|{
name|subBuilder
operator|=
operator|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|)
name|kind_
operator|)
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|kind_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|)
name|kind_
argument_list|)
expr_stmt|;
name|kind_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|kindCase_
operator|=
literal|5
expr_stmt|;
break|break;
block|}
case|case
literal|50
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|kindCase_
operator|==
literal|6
condition|)
block|{
name|subBuilder
operator|=
operator|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|)
name|kind_
operator|)
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|kind_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|.
name|parser
argument_list|()
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|)
name|kind_
argument_list|)
expr_stmt|;
name|kind_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|kindCase_
operator|=
literal|6
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|StructProto
operator|.
name|internal_static_google_protobuf_Value_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|StructProto
operator|.
name|internal_static_google_protobuf_Value_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|kindCase_
init|=
literal|0
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|kind_
decl_stmt|;
specifier|public
enum|enum
name|KindCase
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLite
block|{
name|NULL_VALUE
argument_list|(
literal|1
argument_list|)
block|,
name|NUMBER_VALUE
argument_list|(
literal|2
argument_list|)
block|,
name|STRING_VALUE
argument_list|(
literal|3
argument_list|)
block|,
name|BOOL_VALUE
argument_list|(
literal|4
argument_list|)
block|,
name|STRUCT_VALUE
argument_list|(
literal|5
argument_list|)
block|,
name|LIST_VALUE
argument_list|(
literal|6
argument_list|)
block|,
name|KIND_NOT_SET
argument_list|(
literal|0
argument_list|)
block|;
specifier|private
specifier|final
name|int
name|value
decl_stmt|;
specifier|private
name|KindCase
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|/**      * @deprecated Use {@link #forNumber(int)} instead.      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
name|KindCase
name|valueOf
parameter_list|(
name|int
name|value
parameter_list|)
block|{
return|return
name|forNumber
argument_list|(
name|value
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|KindCase
name|forNumber
parameter_list|(
name|int
name|value
parameter_list|)
block|{
switch|switch
condition|(
name|value
condition|)
block|{
case|case
literal|1
case|:
return|return
name|NULL_VALUE
return|;
case|case
literal|2
case|:
return|return
name|NUMBER_VALUE
return|;
case|case
literal|3
case|:
return|return
name|STRING_VALUE
return|;
case|case
literal|4
case|:
return|return
name|BOOL_VALUE
return|;
case|case
literal|5
case|:
return|return
name|STRUCT_VALUE
return|;
case|case
literal|6
case|:
return|return
name|LIST_VALUE
return|;
case|case
literal|0
case|:
return|return
name|KIND_NOT_SET
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
specifier|public
name|int
name|getNumber
parameter_list|()
block|{
return|return
name|this
operator|.
name|value
return|;
block|}
block|}
empty_stmt|;
specifier|public
name|KindCase
name|getKindCase
parameter_list|()
block|{
return|return
name|KindCase
operator|.
name|forNumber
argument_list|(
name|kindCase_
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|NULL_VALUE_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
comment|/**    *<pre>    * Represents a null value.    *</pre>    *    *<code>.google.protobuf.NullValue null_value = 1;</code>    */
specifier|public
name|int
name|getNullValueValue
parameter_list|()
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|1
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|Integer
operator|)
name|kind_
return|;
block|}
return|return
literal|0
return|;
block|}
comment|/**    *<pre>    * Represents a null value.    *</pre>    *    *<code>.google.protobuf.NullValue null_value = 1;</code>    */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|NullValue
name|getNullValue
parameter_list|()
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|1
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|NullValue
name|result
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|NullValue
operator|.
name|valueOf
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|Integer
operator|)
name|kind_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|NullValue
operator|.
name|UNRECOGNIZED
else|:
name|result
return|;
block|}
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|NullValue
operator|.
name|NULL_VALUE
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|NUMBER_VALUE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
comment|/**    *<pre>    * Represents a double value.    *</pre>    *    *<code>double number_value = 2;</code>    */
specifier|public
name|double
name|getNumberValue
parameter_list|()
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|2
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|Double
operator|)
name|kind_
return|;
block|}
return|return
literal|0D
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|STRING_VALUE_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
comment|/**    *<pre>    * Represents a string value.    *</pre>    *    *<code>string string_value = 3;</code>    */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getStringValue
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|kindCase_
operator|==
literal|3
condition|)
block|{
name|ref
operator|=
name|kind_
expr_stmt|;
block|}
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|kindCase_
operator|==
literal|3
condition|)
block|{
name|kind_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**    *<pre>    * Represents a string value.    *</pre>    *    *<code>string string_value = 3;</code>    */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getStringValueBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|kindCase_
operator|==
literal|3
condition|)
block|{
name|ref
operator|=
name|kind_
expr_stmt|;
block|}
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
if|if
condition|(
name|kindCase_
operator|==
literal|3
condition|)
block|{
name|kind_
operator|=
name|b
expr_stmt|;
block|}
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|BOOL_VALUE_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
comment|/**    *<pre>    * Represents a boolean value.    *</pre>    *    *<code>bool bool_value = 4;</code>    */
specifier|public
name|boolean
name|getBoolValue
parameter_list|()
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|4
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|Boolean
operator|)
name|kind_
return|;
block|}
return|return
literal|false
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|STRUCT_VALUE_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
comment|/**    *<pre>    * Represents a structured value.    *</pre>    *    *<code>.google.protobuf.Struct struct_value = 5;</code>    */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
name|getStructValue
parameter_list|()
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|5
condition|)
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|)
name|kind_
return|;
block|}
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
comment|/**    *<pre>    * Represents a structured value.    *</pre>    *    *<code>.google.protobuf.Struct struct_value = 5;</code>    */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|StructOrBuilder
name|getStructValueOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|5
condition|)
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|)
name|kind_
return|;
block|}
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|LIST_VALUE_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
comment|/**    *<pre>    * Represents a repeated `Value`.    *</pre>    *    *<code>.google.protobuf.ListValue list_value = 6;</code>    */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
name|getListValue
parameter_list|()
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|6
condition|)
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|)
name|kind_
return|;
block|}
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
comment|/**    *<pre>    * Represents a repeated `Value`.    *</pre>    *    *<code>.google.protobuf.ListValue list_value = 6;</code>    */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValueOrBuilder
name|getListValueOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|6
condition|)
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|)
name|kind_
return|;
block|}
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|1
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|1
argument_list|,
operator|(
operator|(
name|java
operator|.
name|lang
operator|.
name|Integer
operator|)
name|kind_
operator|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|kindCase_
operator|==
literal|2
condition|)
block|{
name|output
operator|.
name|writeDouble
argument_list|(
literal|2
argument_list|,
call|(
name|double
call|)
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|Double
operator|)
name|kind_
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|kindCase_
operator|==
literal|3
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|3
argument_list|,
name|kind_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|kindCase_
operator|==
literal|4
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|4
argument_list|,
call|(
name|boolean
call|)
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|Boolean
operator|)
name|kind_
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|kindCase_
operator|==
literal|5
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|5
argument_list|,
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|)
name|kind_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|kindCase_
operator|==
literal|6
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|6
argument_list|,
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|)
name|kind_
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|kindCase_
operator|==
literal|1
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|1
argument_list|,
operator|(
operator|(
name|java
operator|.
name|lang
operator|.
name|Integer
operator|)
name|kind_
operator|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|kindCase_
operator|==
literal|2
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeDoubleSize
argument_list|(
literal|2
argument_list|,
call|(
name|double
call|)
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|Double
operator|)
name|kind_
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|kindCase_
operator|==
literal|3
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|3
argument_list|,
name|kind_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|kindCase_
operator|==
literal|4
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|4
argument_list|,
call|(
name|boolean
call|)
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|Boolean
operator|)
name|kind_
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|kindCase_
operator|==
literal|5
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|5
argument_list|,
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|)
name|kind_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|kindCase_
operator|==
literal|6
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|6
argument_list|,
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|)
name|kind_
argument_list|)
expr_stmt|;
block|}
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
name|getKindCase
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getKindCase
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|result
condition|)
return|return
literal|false
return|;
switch|switch
condition|(
name|kindCase_
condition|)
block|{
case|case
literal|1
case|:
name|result
operator|=
name|result
operator|&&
name|getNullValueValue
argument_list|()
operator|==
name|other
operator|.
name|getNullValueValue
argument_list|()
expr_stmt|;
break|break;
case|case
literal|2
case|:
name|result
operator|=
name|result
operator|&&
operator|(
name|java
operator|.
name|lang
operator|.
name|Double
operator|.
name|doubleToLongBits
argument_list|(
name|getNumberValue
argument_list|()
argument_list|)
operator|==
name|java
operator|.
name|lang
operator|.
name|Double
operator|.
name|doubleToLongBits
argument_list|(
name|other
operator|.
name|getNumberValue
argument_list|()
argument_list|)
operator|)
expr_stmt|;
break|break;
case|case
literal|3
case|:
name|result
operator|=
name|result
operator|&&
name|getStringValue
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getStringValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
literal|4
case|:
name|result
operator|=
name|result
operator|&&
operator|(
name|getBoolValue
argument_list|()
operator|==
name|other
operator|.
name|getBoolValue
argument_list|()
operator|)
expr_stmt|;
break|break;
case|case
literal|5
case|:
name|result
operator|=
name|result
operator|&&
name|getStructValue
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getStructValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
literal|6
case|:
name|result
operator|=
name|result
operator|&&
name|getListValue
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getListValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
literal|0
case|:
default|default:
block|}
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
switch|switch
condition|(
name|kindCase_
condition|)
block|{
case|case
literal|1
case|:
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|NULL_VALUE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getNullValueValue
argument_list|()
expr_stmt|;
break|break;
case|case
literal|2
case|:
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|NUMBER_VALUE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashLong
argument_list|(
name|java
operator|.
name|lang
operator|.
name|Double
operator|.
name|doubleToLongBits
argument_list|(
name|getNumberValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
literal|3
case|:
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|STRING_VALUE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getStringValue
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
break|break;
case|case
literal|4
case|:
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|BOOL_VALUE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getBoolValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
literal|5
case|:
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|STRUCT_VALUE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getStructValue
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
break|break;
case|case
literal|6
case|:
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|LIST_VALUE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getListValue
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
break|break;
case|case
literal|0
case|:
default|default:
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**    *<pre>    * `Value` represents a dynamically typed value which can be either    * null, a number, a string, a boolean, a recursive struct value, or a    * list of values. A producer of value is expected to set one of that    * variants, absence of any variant indicates an error.    * The JSON representation for `Value` is JSON value.    *</pre>    *    * Protobuf type {@code google.protobuf.Value}    */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.Value)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ValueOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|StructProto
operator|.
name|internal_static_google_protobuf_Value_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|StructProto
operator|.
name|internal_static_google_protobuf_Value_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.Value.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{       }
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|kindCase_
operator|=
literal|0
expr_stmt|;
name|kind_
operator|=
literal|null
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|StructProto
operator|.
name|internal_static_google_protobuf_Value_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
argument_list|(
name|this
argument_list|)
decl_stmt|;
if|if
condition|(
name|kindCase_
operator|==
literal|1
condition|)
block|{
name|result
operator|.
name|kind_
operator|=
name|kind_
expr_stmt|;
block|}
if|if
condition|(
name|kindCase_
operator|==
literal|2
condition|)
block|{
name|result
operator|.
name|kind_
operator|=
name|kind_
expr_stmt|;
block|}
if|if
condition|(
name|kindCase_
operator|==
literal|3
condition|)
block|{
name|result
operator|.
name|kind_
operator|=
name|kind_
expr_stmt|;
block|}
if|if
condition|(
name|kindCase_
operator|==
literal|4
condition|)
block|{
name|result
operator|.
name|kind_
operator|=
name|kind_
expr_stmt|;
block|}
if|if
condition|(
name|kindCase_
operator|==
literal|5
condition|)
block|{
if|if
condition|(
name|structValueBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|kind_
operator|=
name|kind_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|kind_
operator|=
name|structValueBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
name|kindCase_
operator|==
literal|6
condition|)
block|{
if|if
condition|(
name|listValueBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|kind_
operator|=
name|kind_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|kind_
operator|=
name|listValueBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
block|}
name|result
operator|.
name|kindCase_
operator|=
name|kindCase_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
switch|switch
condition|(
name|other
operator|.
name|getKindCase
argument_list|()
condition|)
block|{
case|case
name|NULL_VALUE
case|:
block|{
name|setNullValueValue
argument_list|(
name|other
operator|.
name|getNullValueValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|NUMBER_VALUE
case|:
block|{
name|setNumberValue
argument_list|(
name|other
operator|.
name|getNumberValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|STRING_VALUE
case|:
block|{
name|kindCase_
operator|=
literal|3
expr_stmt|;
name|kind_
operator|=
name|other
operator|.
name|kind_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
name|BOOL_VALUE
case|:
block|{
name|setBoolValue
argument_list|(
name|other
operator|.
name|getBoolValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|STRUCT_VALUE
case|:
block|{
name|mergeStructValue
argument_list|(
name|other
operator|.
name|getStructValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|LIST_VALUE
case|:
block|{
name|mergeListValue
argument_list|(
name|other
operator|.
name|getListValue
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|KIND_NOT_SET
case|:
block|{
break|break;
block|}
block|}
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|kindCase_
init|=
literal|0
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|kind_
decl_stmt|;
specifier|public
name|KindCase
name|getKindCase
parameter_list|()
block|{
return|return
name|KindCase
operator|.
name|forNumber
argument_list|(
name|kindCase_
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearKind
parameter_list|()
block|{
name|kindCase_
operator|=
literal|0
expr_stmt|;
name|kind_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      *<pre>      * Represents a null value.      *</pre>      *      *<code>.google.protobuf.NullValue null_value = 1;</code>      */
specifier|public
name|int
name|getNullValueValue
parameter_list|()
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|1
condition|)
block|{
return|return
operator|(
operator|(
name|java
operator|.
name|lang
operator|.
name|Integer
operator|)
name|kind_
operator|)
operator|.
name|intValue
argument_list|()
return|;
block|}
return|return
literal|0
return|;
block|}
comment|/**      *<pre>      * Represents a null value.      *</pre>      *      *<code>.google.protobuf.NullValue null_value = 1;</code>      */
specifier|public
name|Builder
name|setNullValueValue
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|kindCase_
operator|=
literal|1
expr_stmt|;
name|kind_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      *<pre>      * Represents a null value.      *</pre>      *      *<code>.google.protobuf.NullValue null_value = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|NullValue
name|getNullValue
parameter_list|()
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|1
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|NullValue
name|result
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|NullValue
operator|.
name|valueOf
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|Integer
operator|)
name|kind_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|NullValue
operator|.
name|UNRECOGNIZED
else|:
name|result
return|;
block|}
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|NullValue
operator|.
name|NULL_VALUE
return|;
block|}
comment|/**      *<pre>      * Represents a null value.      *</pre>      *      *<code>.google.protobuf.NullValue null_value = 1;</code>      */
specifier|public
name|Builder
name|setNullValue
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|NullValue
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|kindCase_
operator|=
literal|1
expr_stmt|;
name|kind_
operator|=
name|value
operator|.
name|getNumber
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      *<pre>      * Represents a null value.      *</pre>      *      *<code>.google.protobuf.NullValue null_value = 1;</code>      */
specifier|public
name|Builder
name|clearNullValue
parameter_list|()
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|1
condition|)
block|{
name|kindCase_
operator|=
literal|0
expr_stmt|;
name|kind_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**      *<pre>      * Represents a double value.      *</pre>      *      *<code>double number_value = 2;</code>      */
specifier|public
name|double
name|getNumberValue
parameter_list|()
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|2
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|Double
operator|)
name|kind_
return|;
block|}
return|return
literal|0D
return|;
block|}
comment|/**      *<pre>      * Represents a double value.      *</pre>      *      *<code>double number_value = 2;</code>      */
specifier|public
name|Builder
name|setNumberValue
parameter_list|(
name|double
name|value
parameter_list|)
block|{
name|kindCase_
operator|=
literal|2
expr_stmt|;
name|kind_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      *<pre>      * Represents a double value.      *</pre>      *      *<code>double number_value = 2;</code>      */
specifier|public
name|Builder
name|clearNumberValue
parameter_list|()
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|2
condition|)
block|{
name|kindCase_
operator|=
literal|0
expr_stmt|;
name|kind_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**      *<pre>      * Represents a string value.      *</pre>      *      *<code>string string_value = 3;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getStringValue
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|kindCase_
operator|==
literal|3
condition|)
block|{
name|ref
operator|=
name|kind_
expr_stmt|;
block|}
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|kindCase_
operator|==
literal|3
condition|)
block|{
name|kind_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**      *<pre>      * Represents a string value.      *</pre>      *      *<code>string string_value = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getStringValueBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|kindCase_
operator|==
literal|3
condition|)
block|{
name|ref
operator|=
name|kind_
expr_stmt|;
block|}
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
if|if
condition|(
name|kindCase_
operator|==
literal|3
condition|)
block|{
name|kind_
operator|=
name|b
expr_stmt|;
block|}
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**      *<pre>      * Represents a string value.      *</pre>      *      *<code>string string_value = 3;</code>      */
specifier|public
name|Builder
name|setStringValue
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|kindCase_
operator|=
literal|3
expr_stmt|;
name|kind_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      *<pre>      * Represents a string value.      *</pre>      *      *<code>string string_value = 3;</code>      */
specifier|public
name|Builder
name|clearStringValue
parameter_list|()
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|3
condition|)
block|{
name|kindCase_
operator|=
literal|0
expr_stmt|;
name|kind_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**      *<pre>      * Represents a string value.      *</pre>      *      *<code>string string_value = 3;</code>      */
specifier|public
name|Builder
name|setStringValueBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|checkByteStringIsUtf8
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|kindCase_
operator|=
literal|3
expr_stmt|;
name|kind_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      *<pre>      * Represents a boolean value.      *</pre>      *      *<code>bool bool_value = 4;</code>      */
specifier|public
name|boolean
name|getBoolValue
parameter_list|()
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|4
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|Boolean
operator|)
name|kind_
return|;
block|}
return|return
literal|false
return|;
block|}
comment|/**      *<pre>      * Represents a boolean value.      *</pre>      *      *<code>bool bool_value = 4;</code>      */
specifier|public
name|Builder
name|setBoolValue
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|kindCase_
operator|=
literal|4
expr_stmt|;
name|kind_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      *<pre>      * Represents a boolean value.      *</pre>      *      *<code>bool bool_value = 4;</code>      */
specifier|public
name|Builder
name|clearBoolValue
parameter_list|()
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|4
condition|)
block|{
name|kindCase_
operator|=
literal|0
expr_stmt|;
name|kind_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|StructOrBuilder
argument_list|>
name|structValueBuilder_
decl_stmt|;
comment|/**      *<pre>      * Represents a structured value.      *</pre>      *      *<code>.google.protobuf.Struct struct_value = 5;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
name|getStructValue
parameter_list|()
block|{
if|if
condition|(
name|structValueBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|5
condition|)
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|)
name|kind_
return|;
block|}
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
else|else
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|5
condition|)
block|{
return|return
name|structValueBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
block|}
comment|/**      *<pre>      * Represents a structured value.      *</pre>      *      *<code>.google.protobuf.Struct struct_value = 5;</code>      */
specifier|public
name|Builder
name|setStructValue
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
name|value
parameter_list|)
block|{
if|if
condition|(
name|structValueBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|kind_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|structValueBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|kindCase_
operator|=
literal|5
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      *<pre>      * Represents a structured value.      *</pre>      *      *<code>.google.protobuf.Struct struct_value = 5;</code>      */
specifier|public
name|Builder
name|setStructValue
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|structValueBuilder_
operator|==
literal|null
condition|)
block|{
name|kind_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|structValueBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|kindCase_
operator|=
literal|5
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      *<pre>      * Represents a structured value.      *</pre>      *      *<code>.google.protobuf.Struct struct_value = 5;</code>      */
specifier|public
name|Builder
name|mergeStructValue
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
name|value
parameter_list|)
block|{
if|if
condition|(
name|structValueBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|5
operator|&&
name|kind_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|kind_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|.
name|newBuilder
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|)
name|kind_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|kind_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|5
condition|)
block|{
name|structValueBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|structValueBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|kindCase_
operator|=
literal|5
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      *<pre>      * Represents a structured value.      *</pre>      *      *<code>.google.protobuf.Struct struct_value = 5;</code>      */
specifier|public
name|Builder
name|clearStructValue
parameter_list|()
block|{
if|if
condition|(
name|structValueBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|5
condition|)
block|{
name|kindCase_
operator|=
literal|0
expr_stmt|;
name|kind_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|5
condition|)
block|{
name|kindCase_
operator|=
literal|0
expr_stmt|;
name|kind_
operator|=
literal|null
expr_stmt|;
block|}
name|structValueBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**      *<pre>      * Represents a structured value.      *</pre>      *      *<code>.google.protobuf.Struct struct_value = 5;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|.
name|Builder
name|getStructValueBuilder
parameter_list|()
block|{
return|return
name|getStructValueFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**      *<pre>      * Represents a structured value.      *</pre>      *      *<code>.google.protobuf.Struct struct_value = 5;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|StructOrBuilder
name|getStructValueOrBuilder
parameter_list|()
block|{
if|if
condition|(
operator|(
name|kindCase_
operator|==
literal|5
operator|)
operator|&&
operator|(
name|structValueBuilder_
operator|!=
literal|null
operator|)
condition|)
block|{
return|return
name|structValueBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|5
condition|)
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|)
name|kind_
return|;
block|}
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
block|}
comment|/**      *<pre>      * Represents a structured value.      *</pre>      *      *<code>.google.protobuf.Struct struct_value = 5;</code>      */
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|StructOrBuilder
argument_list|>
name|getStructValueFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|structValueBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|kindCase_
operator|==
literal|5
operator|)
condition|)
block|{
name|kind_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
name|structValueBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|StructOrBuilder
argument_list|>
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Struct
operator|)
name|kind_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|kind_
operator|=
literal|null
expr_stmt|;
block|}
name|kindCase_
operator|=
literal|5
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
empty_stmt|;
return|return
name|structValueBuilder_
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValueOrBuilder
argument_list|>
name|listValueBuilder_
decl_stmt|;
comment|/**      *<pre>      * Represents a repeated `Value`.      *</pre>      *      *<code>.google.protobuf.ListValue list_value = 6;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
name|getListValue
parameter_list|()
block|{
if|if
condition|(
name|listValueBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|6
condition|)
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|)
name|kind_
return|;
block|}
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
else|else
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|6
condition|)
block|{
return|return
name|listValueBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
block|}
comment|/**      *<pre>      * Represents a repeated `Value`.      *</pre>      *      *<code>.google.protobuf.ListValue list_value = 6;</code>      */
specifier|public
name|Builder
name|setListValue
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
name|value
parameter_list|)
block|{
if|if
condition|(
name|listValueBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|kind_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|listValueBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|kindCase_
operator|=
literal|6
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      *<pre>      * Represents a repeated `Value`.      *</pre>      *      *<code>.google.protobuf.ListValue list_value = 6;</code>      */
specifier|public
name|Builder
name|setListValue
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|listValueBuilder_
operator|==
literal|null
condition|)
block|{
name|kind_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|listValueBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|kindCase_
operator|=
literal|6
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      *<pre>      * Represents a repeated `Value`.      *</pre>      *      *<code>.google.protobuf.ListValue list_value = 6;</code>      */
specifier|public
name|Builder
name|mergeListValue
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
name|value
parameter_list|)
block|{
if|if
condition|(
name|listValueBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|6
operator|&&
name|kind_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|kind_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|.
name|newBuilder
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|)
name|kind_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|kind_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|6
condition|)
block|{
name|listValueBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|listValueBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|kindCase_
operator|=
literal|6
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      *<pre>      * Represents a repeated `Value`.      *</pre>      *      *<code>.google.protobuf.ListValue list_value = 6;</code>      */
specifier|public
name|Builder
name|clearListValue
parameter_list|()
block|{
if|if
condition|(
name|listValueBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|6
condition|)
block|{
name|kindCase_
operator|=
literal|0
expr_stmt|;
name|kind_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|6
condition|)
block|{
name|kindCase_
operator|=
literal|0
expr_stmt|;
name|kind_
operator|=
literal|null
expr_stmt|;
block|}
name|listValueBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**      *<pre>      * Represents a repeated `Value`.      *</pre>      *      *<code>.google.protobuf.ListValue list_value = 6;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|.
name|Builder
name|getListValueBuilder
parameter_list|()
block|{
return|return
name|getListValueFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**      *<pre>      * Represents a repeated `Value`.      *</pre>      *      *<code>.google.protobuf.ListValue list_value = 6;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValueOrBuilder
name|getListValueOrBuilder
parameter_list|()
block|{
if|if
condition|(
operator|(
name|kindCase_
operator|==
literal|6
operator|)
operator|&&
operator|(
name|listValueBuilder_
operator|!=
literal|null
operator|)
condition|)
block|{
return|return
name|listValueBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
if|if
condition|(
name|kindCase_
operator|==
literal|6
condition|)
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|)
name|kind_
return|;
block|}
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
block|}
comment|/**      *<pre>      * Represents a repeated `Value`.      *</pre>      *      *<code>.google.protobuf.ListValue list_value = 6;</code>      */
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValueOrBuilder
argument_list|>
name|getListValueFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|listValueBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
operator|(
name|kindCase_
operator|==
literal|6
operator|)
condition|)
block|{
name|kind_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
name|listValueBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValueOrBuilder
argument_list|>
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ListValue
operator|)
name|kind_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|kind_
operator|=
literal|null
expr_stmt|;
block|}
name|kindCase_
operator|=
literal|6
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
empty_stmt|;
return|return
name|listValueBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.Value)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.Value)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Value
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Value
argument_list|>
argument_list|()
block|{
specifier|public
name|Value
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Value
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Value
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Value
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Value
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
end_class

end_unit

