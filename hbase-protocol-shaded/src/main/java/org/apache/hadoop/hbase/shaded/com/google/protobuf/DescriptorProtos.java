begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Generated by the protocol buffer compiler.  DO NOT EDIT!
end_comment

begin_comment
comment|// source: google/protobuf/descriptor.proto
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
package|;
end_package

begin_class
specifier|public
specifier|final
class|class
name|DescriptorProtos
block|{
specifier|private
name|DescriptorProtos
parameter_list|()
block|{}
specifier|public
specifier|static
name|void
name|registerAllExtensions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|registry
parameter_list|)
block|{   }
specifier|public
specifier|static
name|void
name|registerAllExtensions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistry
name|registry
parameter_list|)
block|{
name|registerAllExtensions
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
operator|)
name|registry
argument_list|)
expr_stmt|;
block|}
specifier|public
interface|interface
name|FileDescriptorSetOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.FileDescriptorSet)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
argument_list|>
name|getFileList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|getFile
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>      */
name|int
name|getFileCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProtoOrBuilder
argument_list|>
name|getFileOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProtoOrBuilder
name|getFileOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    *<pre>    * The protocol compiler can output a FileDescriptorSet containing the .proto    * files it parses.    *</pre>    *    * Protobuf type {@code google.protobuf.FileDescriptorSet}    */
specifier|public
specifier|static
specifier|final
class|class
name|FileDescriptorSet
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.FileDescriptorSet)
name|FileDescriptorSetOrBuilder
block|{
comment|// Use FileDescriptorSet.newBuilder() to construct.
specifier|private
name|FileDescriptorSet
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|FileDescriptorSet
parameter_list|()
block|{
name|file_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|FileDescriptorSet
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|file_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|file_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|file_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|file_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FileDescriptorSet_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FileDescriptorSet_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|FILE_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
argument_list|>
name|file_
decl_stmt|;
comment|/**      *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
argument_list|>
name|getFileList
parameter_list|()
block|{
return|return
name|file_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProtoOrBuilder
argument_list|>
name|getFileOrBuilderList
parameter_list|()
block|{
return|return
name|file_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>      */
specifier|public
name|int
name|getFileCount
parameter_list|()
block|{
return|return
name|file_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|getFile
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|file_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProtoOrBuilder
name|getFileOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|file_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getFileCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getFile
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|file_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|file_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|file_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|file_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
name|getFileList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getFileList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|getFileCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|FILE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getFileList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      *<pre>      * The protocol compiler can output a FileDescriptorSet containing the .proto      * files it parses.      *</pre>      *      * Protobuf type {@code google.protobuf.FileDescriptorSet}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.FileDescriptorSet)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSetOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FileDescriptorSet_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FileDescriptorSet_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.FileDescriptorSet.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getFileFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|fileBuilder_
operator|==
literal|null
condition|)
block|{
name|file_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|fileBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FileDescriptorSet_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
if|if
condition|(
name|fileBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|file_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|file_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|file_
operator|=
name|file_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|file_
operator|=
name|fileBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|fileBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|file_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|file_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|file_
operator|=
name|other
operator|.
name|file_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureFileIsMutable
argument_list|()
expr_stmt|;
name|file_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|file_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|file_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|fileBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|fileBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|fileBuilder_
operator|=
literal|null
expr_stmt|;
name|file_
operator|=
name|other
operator|.
name|file_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|fileBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getFileFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|fileBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|file_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getFileCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getFile
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
argument_list|>
name|file_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureFileIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|file_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
argument_list|>
argument_list|(
name|file_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProtoOrBuilder
argument_list|>
name|fileBuilder_
decl_stmt|;
comment|/**        *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
argument_list|>
name|getFileList
parameter_list|()
block|{
if|if
condition|(
name|fileBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|file_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|fileBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>        */
specifier|public
name|int
name|getFileCount
parameter_list|()
block|{
if|if
condition|(
name|fileBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|file_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|fileBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|getFile
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|fileBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|file_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|fileBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>        */
specifier|public
name|Builder
name|setFile
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|fileBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureFileIsMutable
argument_list|()
expr_stmt|;
name|file_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|fileBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>        */
specifier|public
name|Builder
name|setFile
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|fileBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureFileIsMutable
argument_list|()
expr_stmt|;
name|file_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|fileBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>        */
specifier|public
name|Builder
name|addFile
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|fileBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureFileIsMutable
argument_list|()
expr_stmt|;
name|file_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|fileBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>        */
specifier|public
name|Builder
name|addFile
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|fileBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureFileIsMutable
argument_list|()
expr_stmt|;
name|file_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|fileBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>        */
specifier|public
name|Builder
name|addFile
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|fileBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureFileIsMutable
argument_list|()
expr_stmt|;
name|file_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|fileBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>        */
specifier|public
name|Builder
name|addFile
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|fileBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureFileIsMutable
argument_list|()
expr_stmt|;
name|file_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|fileBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>        */
specifier|public
name|Builder
name|addAllFile
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|fileBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureFileIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|file_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|fileBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>        */
specifier|public
name|Builder
name|clearFile
parameter_list|()
block|{
if|if
condition|(
name|fileBuilder_
operator|==
literal|null
condition|)
block|{
name|file_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|fileBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>        */
specifier|public
name|Builder
name|removeFile
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|fileBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureFileIsMutable
argument_list|()
expr_stmt|;
name|file_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|fileBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|.
name|Builder
name|getFileBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getFileFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProtoOrBuilder
name|getFileOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|fileBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|file_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|fileBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProtoOrBuilder
argument_list|>
name|getFileOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|fileBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|fileBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|file_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|.
name|Builder
name|addFileBuilder
parameter_list|()
block|{
return|return
name|getFileFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|.
name|Builder
name|addFileBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getFileFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FileDescriptorProto file = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|.
name|Builder
argument_list|>
name|getFileBuilderList
parameter_list|()
block|{
return|return
name|getFileFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProtoOrBuilder
argument_list|>
name|getFileFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|fileBuilder_
operator|==
literal|null
condition|)
block|{
name|fileBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProtoOrBuilder
argument_list|>
argument_list|(
name|file_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|file_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|fileBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.FileDescriptorSet)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.FileDescriptorSet)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FileDescriptorSet
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|FileDescriptorSet
argument_list|>
argument_list|()
block|{
specifier|public
name|FileDescriptorSet
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|FileDescriptorSet
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FileDescriptorSet
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FileDescriptorSet
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorSet
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|FileDescriptorProtoOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.FileDescriptorProto)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<pre>      * file name, relative to root of source tree      *</pre>      *      *<code>optional string name = 1;</code>      */
name|boolean
name|hasName
parameter_list|()
function_decl|;
comment|/**      *<pre>      * file name, relative to root of source tree      *</pre>      *      *<code>optional string name = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
function_decl|;
comment|/**      *<pre>      * file name, relative to root of source tree      *</pre>      *      *<code>optional string name = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
function_decl|;
comment|/**      *<pre>      * e.g. "foo", "foo.bar", etc.      *</pre>      *      *<code>optional string package = 2;</code>      */
name|boolean
name|hasPackage
parameter_list|()
function_decl|;
comment|/**      *<pre>      * e.g. "foo", "foo.bar", etc.      *</pre>      *      *<code>optional string package = 2;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getPackage
parameter_list|()
function_decl|;
comment|/**      *<pre>      * e.g. "foo", "foo.bar", etc.      *</pre>      *      *<code>optional string package = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getPackageBytes
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Names of files imported by this file.      *</pre>      *      *<code>repeated string dependency = 3;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|getDependencyList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Names of files imported by this file.      *</pre>      *      *<code>repeated string dependency = 3;</code>      */
name|int
name|getDependencyCount
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Names of files imported by this file.      *</pre>      *      *<code>repeated string dependency = 3;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getDependency
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<pre>      * Names of files imported by this file.      *</pre>      *      *<code>repeated string dependency = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getDependencyBytes
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<pre>      * Indexes of the public imported files in the dependency list above.      *</pre>      *      *<code>repeated int32 public_dependency = 10;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|getPublicDependencyList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Indexes of the public imported files in the dependency list above.      *</pre>      *      *<code>repeated int32 public_dependency = 10;</code>      */
name|int
name|getPublicDependencyCount
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Indexes of the public imported files in the dependency list above.      *</pre>      *      *<code>repeated int32 public_dependency = 10;</code>      */
name|int
name|getPublicDependency
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<pre>      * Indexes of the weak imported files in the dependency list.      * For Google-internal migration only. Do not use.      *</pre>      *      *<code>repeated int32 weak_dependency = 11;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|getWeakDependencyList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Indexes of the weak imported files in the dependency list.      * For Google-internal migration only. Do not use.      *</pre>      *      *<code>repeated int32 weak_dependency = 11;</code>      */
name|int
name|getWeakDependencyCount
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Indexes of the weak imported files in the dependency list.      * For Google-internal migration only. Do not use.      *</pre>      *      *<code>repeated int32 weak_dependency = 11;</code>      */
name|int
name|getWeakDependency
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<pre>      * All top-level definitions in this file.      *</pre>      *      *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|>
name|getMessageTypeList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * All top-level definitions in this file.      *</pre>      *      *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|getMessageType
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<pre>      * All top-level definitions in this file.      *</pre>      *      *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>      */
name|int
name|getMessageTypeCount
parameter_list|()
function_decl|;
comment|/**      *<pre>      * All top-level definitions in this file.      *</pre>      *      *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProtoOrBuilder
argument_list|>
name|getMessageTypeOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * All top-level definitions in this file.      *</pre>      *      *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProtoOrBuilder
name|getMessageTypeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|>
name|getEnumTypeList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|getEnumType
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>      */
name|int
name|getEnumTypeCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProtoOrBuilder
argument_list|>
name|getEnumTypeOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProtoOrBuilder
name|getEnumTypeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
argument_list|>
name|getServiceList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|getService
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>      */
name|int
name|getServiceCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProtoOrBuilder
argument_list|>
name|getServiceOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProtoOrBuilder
name|getServiceOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
name|getExtensionList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|getExtension
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>      */
name|int
name|getExtensionCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
argument_list|>
name|getExtensionOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
name|getExtensionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>optional .google.protobuf.FileOptions options = 8;</code>      */
name|boolean
name|hasOptions
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.FileOptions options = 8;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|getOptions
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.FileOptions options = 8;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
function_decl|;
comment|/**      *<pre>      * This field contains optional information about the original source code.      * You may safely remove this entire field without harming runtime      * functionality of the descriptors -- the information is needed only by      * development tools.      *</pre>      *      *<code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>      */
name|boolean
name|hasSourceCodeInfo
parameter_list|()
function_decl|;
comment|/**      *<pre>      * This field contains optional information about the original source code.      * You may safely remove this entire field without harming runtime      * functionality of the descriptors -- the information is needed only by      * development tools.      *</pre>      *      *<code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|getSourceCodeInfo
parameter_list|()
function_decl|;
comment|/**      *<pre>      * This field contains optional information about the original source code.      * You may safely remove this entire field without harming runtime      * functionality of the descriptors -- the information is needed only by      * development tools.      *</pre>      *      *<code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfoOrBuilder
name|getSourceCodeInfoOrBuilder
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The syntax of the proto file.      * The supported values are "proto2" and "proto3".      *</pre>      *      *<code>optional string syntax = 12;</code>      */
name|boolean
name|hasSyntax
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The syntax of the proto file.      * The supported values are "proto2" and "proto3".      *</pre>      *      *<code>optional string syntax = 12;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getSyntax
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The syntax of the proto file.      * The supported values are "proto2" and "proto3".      *</pre>      *      *<code>optional string syntax = 12;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSyntaxBytes
parameter_list|()
function_decl|;
block|}
comment|/**    *<pre>    * Describes a complete .proto file.    *</pre>    *    * Protobuf type {@code google.protobuf.FileDescriptorProto}    */
specifier|public
specifier|static
specifier|final
class|class
name|FileDescriptorProto
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.FileDescriptorProto)
name|FileDescriptorProtoOrBuilder
block|{
comment|// Use FileDescriptorProto.newBuilder() to construct.
specifier|private
name|FileDescriptorProto
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|FileDescriptorProto
parameter_list|()
block|{
name|name_
operator|=
literal|""
expr_stmt|;
name|package_
operator|=
literal|""
expr_stmt|;
name|dependency_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|publicDependency_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|weakDependency_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|messageType_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|enumType_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|service_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|extension_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|syntax_
operator|=
literal|""
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|FileDescriptorProto
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|package_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|dependency_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|dependency_
operator|.
name|add
argument_list|(
name|bs
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|34
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|messageType_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
name|messageType_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|42
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|enumType_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000040
expr_stmt|;
block|}
name|enumType_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|50
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|service_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000080
expr_stmt|;
block|}
name|service_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|58
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|extension_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000100
expr_stmt|;
block|}
name|extension_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|66
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|options_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|options_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|options_
argument_list|)
expr_stmt|;
name|options_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
break|break;
block|}
case|case
literal|74
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|sourceCodeInfo_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|sourceCodeInfo_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|sourceCodeInfo_
argument_list|)
expr_stmt|;
name|sourceCodeInfo_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
break|break;
block|}
case|case
literal|80
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|publicDependency_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|publicDependency_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readInt32
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|82
case|:
block|{
name|int
name|length
init|=
name|input
operator|.
name|readRawVarint32
argument_list|()
decl_stmt|;
name|int
name|limit
init|=
name|input
operator|.
name|pushLimit
argument_list|(
name|length
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
operator|&&
name|input
operator|.
name|getBytesUntilLimit
argument_list|()
operator|>
literal|0
condition|)
block|{
name|publicDependency_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
while|while
condition|(
name|input
operator|.
name|getBytesUntilLimit
argument_list|()
operator|>
literal|0
condition|)
block|{
name|publicDependency_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readInt32
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|input
operator|.
name|popLimit
argument_list|(
name|limit
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|88
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|weakDependency_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|weakDependency_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readInt32
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|90
case|:
block|{
name|int
name|length
init|=
name|input
operator|.
name|readRawVarint32
argument_list|()
decl_stmt|;
name|int
name|limit
init|=
name|input
operator|.
name|pushLimit
argument_list|(
name|length
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
operator|&&
name|input
operator|.
name|getBytesUntilLimit
argument_list|()
operator|>
literal|0
condition|)
block|{
name|weakDependency_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
while|while
condition|(
name|input
operator|.
name|getBytesUntilLimit
argument_list|()
operator|>
literal|0
condition|)
block|{
name|weakDependency_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readInt32
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|input
operator|.
name|popLimit
argument_list|(
name|limit
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|98
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|syntax_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|dependency_
operator|=
name|dependency_
operator|.
name|getUnmodifiableView
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|messageType_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|messageType_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|enumType_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|enumType_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|service_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|service_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|extension_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|extension_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|publicDependency_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|publicDependency_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|weakDependency_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|weakDependency_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FileDescriptorProto_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FileDescriptorProto_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|NAME_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
decl_stmt|;
comment|/**      *<pre>      * file name, relative to root of source tree      *</pre>      *      *<code>optional string name = 1;</code>      */
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<pre>      * file name, relative to root of source tree      *</pre>      *      *<code>optional string name = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|name_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<pre>      * file name, relative to root of source tree      *</pre>      *      *<code>optional string name = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|PACKAGE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|package_
decl_stmt|;
comment|/**      *<pre>      * e.g. "foo", "foo.bar", etc.      *</pre>      *      *<code>optional string package = 2;</code>      */
specifier|public
name|boolean
name|hasPackage
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<pre>      * e.g. "foo", "foo.bar", etc.      *</pre>      *      *<code>optional string package = 2;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getPackage
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|package_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|package_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<pre>      * e.g. "foo", "foo.bar", etc.      *</pre>      *      *<code>optional string package = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getPackageBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|package_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|package_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|DEPENDENCY_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringList
name|dependency_
decl_stmt|;
comment|/**      *<pre>      * Names of files imported by this file.      *</pre>      *      *<code>repeated string dependency = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolStringList
name|getDependencyList
parameter_list|()
block|{
return|return
name|dependency_
return|;
block|}
comment|/**      *<pre>      * Names of files imported by this file.      *</pre>      *      *<code>repeated string dependency = 3;</code>      */
specifier|public
name|int
name|getDependencyCount
parameter_list|()
block|{
return|return
name|dependency_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<pre>      * Names of files imported by this file.      *</pre>      *      *<code>repeated string dependency = 3;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getDependency
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|dependency_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<pre>      * Names of files imported by this file.      *</pre>      *      *<code>repeated string dependency = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getDependencyBytes
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|dependency_
operator|.
name|getByteString
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|PUBLIC_DEPENDENCY_FIELD_NUMBER
init|=
literal|10
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|publicDependency_
decl_stmt|;
comment|/**      *<pre>      * Indexes of the public imported files in the dependency list above.      *</pre>      *      *<code>repeated int32 public_dependency = 10;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|getPublicDependencyList
parameter_list|()
block|{
return|return
name|publicDependency_
return|;
block|}
comment|/**      *<pre>      * Indexes of the public imported files in the dependency list above.      *</pre>      *      *<code>repeated int32 public_dependency = 10;</code>      */
specifier|public
name|int
name|getPublicDependencyCount
parameter_list|()
block|{
return|return
name|publicDependency_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<pre>      * Indexes of the public imported files in the dependency list above.      *</pre>      *      *<code>repeated int32 public_dependency = 10;</code>      */
specifier|public
name|int
name|getPublicDependency
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|publicDependency_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|WEAK_DEPENDENCY_FIELD_NUMBER
init|=
literal|11
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|weakDependency_
decl_stmt|;
comment|/**      *<pre>      * Indexes of the weak imported files in the dependency list.      * For Google-internal migration only. Do not use.      *</pre>      *      *<code>repeated int32 weak_dependency = 11;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|getWeakDependencyList
parameter_list|()
block|{
return|return
name|weakDependency_
return|;
block|}
comment|/**      *<pre>      * Indexes of the weak imported files in the dependency list.      * For Google-internal migration only. Do not use.      *</pre>      *      *<code>repeated int32 weak_dependency = 11;</code>      */
specifier|public
name|int
name|getWeakDependencyCount
parameter_list|()
block|{
return|return
name|weakDependency_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<pre>      * Indexes of the weak imported files in the dependency list.      * For Google-internal migration only. Do not use.      *</pre>      *      *<code>repeated int32 weak_dependency = 11;</code>      */
specifier|public
name|int
name|getWeakDependency
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|weakDependency_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|MESSAGE_TYPE_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|>
name|messageType_
decl_stmt|;
comment|/**      *<pre>      * All top-level definitions in this file.      *</pre>      *      *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|>
name|getMessageTypeList
parameter_list|()
block|{
return|return
name|messageType_
return|;
block|}
comment|/**      *<pre>      * All top-level definitions in this file.      *</pre>      *      *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProtoOrBuilder
argument_list|>
name|getMessageTypeOrBuilderList
parameter_list|()
block|{
return|return
name|messageType_
return|;
block|}
comment|/**      *<pre>      * All top-level definitions in this file.      *</pre>      *      *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>      */
specifier|public
name|int
name|getMessageTypeCount
parameter_list|()
block|{
return|return
name|messageType_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<pre>      * All top-level definitions in this file.      *</pre>      *      *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|getMessageType
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|messageType_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<pre>      * All top-level definitions in this file.      *</pre>      *      *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProtoOrBuilder
name|getMessageTypeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|messageType_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|ENUM_TYPE_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|>
name|enumType_
decl_stmt|;
comment|/**      *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|>
name|getEnumTypeList
parameter_list|()
block|{
return|return
name|enumType_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProtoOrBuilder
argument_list|>
name|getEnumTypeOrBuilderList
parameter_list|()
block|{
return|return
name|enumType_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>      */
specifier|public
name|int
name|getEnumTypeCount
parameter_list|()
block|{
return|return
name|enumType_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|getEnumType
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|enumType_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProtoOrBuilder
name|getEnumTypeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|enumType_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|SERVICE_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
argument_list|>
name|service_
decl_stmt|;
comment|/**      *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
argument_list|>
name|getServiceList
parameter_list|()
block|{
return|return
name|service_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProtoOrBuilder
argument_list|>
name|getServiceOrBuilderList
parameter_list|()
block|{
return|return
name|service_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>      */
specifier|public
name|int
name|getServiceCount
parameter_list|()
block|{
return|return
name|service_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|getService
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|service_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProtoOrBuilder
name|getServiceOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|service_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|EXTENSION_FIELD_NUMBER
init|=
literal|7
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
name|extension_
decl_stmt|;
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
name|getExtensionList
parameter_list|()
block|{
return|return
name|extension_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
argument_list|>
name|getExtensionOrBuilderList
parameter_list|()
block|{
return|return
name|extension_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>      */
specifier|public
name|int
name|getExtensionCount
parameter_list|()
block|{
return|return
name|extension_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|getExtension
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|extension_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
name|getExtensionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|extension_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|OPTIONS_FIELD_NUMBER
init|=
literal|8
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|options_
decl_stmt|;
comment|/**      *<code>optional .google.protobuf.FileOptions options = 8;</code>      */
specifier|public
name|boolean
name|hasOptions
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<code>optional .google.protobuf.FileOptions options = 8;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|getOptions
parameter_list|()
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
comment|/**      *<code>optional .google.protobuf.FileOptions options = 8;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|SOURCE_CODE_INFO_FIELD_NUMBER
init|=
literal|9
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|sourceCodeInfo_
decl_stmt|;
comment|/**      *<pre>      * This field contains optional information about the original source code.      * You may safely remove this entire field without harming runtime      * functionality of the descriptors -- the information is needed only by      * development tools.      *</pre>      *      *<code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>      */
specifier|public
name|boolean
name|hasSourceCodeInfo
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**      *<pre>      * This field contains optional information about the original source code.      * You may safely remove this entire field without harming runtime      * functionality of the descriptors -- the information is needed only by      * development tools.      *</pre>      *      *<code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|getSourceCodeInfo
parameter_list|()
block|{
return|return
name|sourceCodeInfo_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|sourceCodeInfo_
return|;
block|}
comment|/**      *<pre>      * This field contains optional information about the original source code.      * You may safely remove this entire field without harming runtime      * functionality of the descriptors -- the information is needed only by      * development tools.      *</pre>      *      *<code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfoOrBuilder
name|getSourceCodeInfoOrBuilder
parameter_list|()
block|{
return|return
name|sourceCodeInfo_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|sourceCodeInfo_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|SYNTAX_FIELD_NUMBER
init|=
literal|12
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|syntax_
decl_stmt|;
comment|/**      *<pre>      * The syntax of the proto file.      * The supported values are "proto2" and "proto3".      *</pre>      *      *<code>optional string syntax = 12;</code>      */
specifier|public
name|boolean
name|hasSyntax
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**      *<pre>      * The syntax of the proto file.      * The supported values are "proto2" and "proto3".      *</pre>      *      *<code>optional string syntax = 12;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getSyntax
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|syntax_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|syntax_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<pre>      * The syntax of the proto file.      * The supported values are "proto2" and "proto3".      *</pre>      *      *<code>optional string syntax = 12;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSyntaxBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|syntax_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|syntax_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getMessageTypeCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getMessageType
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getEnumTypeCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getEnumType
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getServiceCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getService
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getExtensionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getExtension
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getOptions
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|1
argument_list|,
name|name_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|2
argument_list|,
name|package_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|dependency_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|3
argument_list|,
name|dependency_
operator|.
name|getRaw
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|messageType_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|4
argument_list|,
name|messageType_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|enumType_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|5
argument_list|,
name|enumType_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|service_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|6
argument_list|,
name|service_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|extension_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|7
argument_list|,
name|extension_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|8
argument_list|,
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|9
argument_list|,
name|getSourceCodeInfo
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|publicDependency_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeInt32
argument_list|(
literal|10
argument_list|,
name|publicDependency_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|weakDependency_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeInt32
argument_list|(
literal|11
argument_list|,
name|weakDependency_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|12
argument_list|,
name|syntax_
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|1
argument_list|,
name|name_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|2
argument_list|,
name|package_
argument_list|)
expr_stmt|;
block|}
block|{
name|int
name|dataSize
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|dependency_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|dataSize
operator|+=
name|computeStringSizeNoTag
argument_list|(
name|dependency_
operator|.
name|getRaw
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|dataSize
expr_stmt|;
name|size
operator|+=
literal|1
operator|*
name|getDependencyList
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|messageType_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|4
argument_list|,
name|messageType_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|enumType_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|5
argument_list|,
name|enumType_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|service_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|6
argument_list|,
name|service_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|extension_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|7
argument_list|,
name|extension_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|8
argument_list|,
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|9
argument_list|,
name|getSourceCodeInfo
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|{
name|int
name|dataSize
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|publicDependency_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|dataSize
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32SizeNoTag
argument_list|(
name|publicDependency_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|dataSize
expr_stmt|;
name|size
operator|+=
literal|1
operator|*
name|getPublicDependencyList
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
block|{
name|int
name|dataSize
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|weakDependency_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|dataSize
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32SizeNoTag
argument_list|(
name|weakDependency_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|dataSize
expr_stmt|;
name|size
operator|+=
literal|1
operator|*
name|getWeakDependencyList
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|12
argument_list|,
name|syntax_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasName
argument_list|()
operator|==
name|other
operator|.
name|hasName
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasName
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasPackage
argument_list|()
operator|==
name|other
operator|.
name|hasPackage
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasPackage
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getPackage
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getPackage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getDependencyList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getDependencyList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getPublicDependencyList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getPublicDependencyList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getWeakDependencyList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getWeakDependencyList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getMessageTypeList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getMessageTypeList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getEnumTypeList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getEnumTypeList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getServiceList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getServiceList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getExtensionList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getExtensionList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasOptions
argument_list|()
operator|==
name|other
operator|.
name|hasOptions
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getOptions
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasSourceCodeInfo
argument_list|()
operator|==
name|other
operator|.
name|hasSourceCodeInfo
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasSourceCodeInfo
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getSourceCodeInfo
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getSourceCodeInfo
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasSyntax
argument_list|()
operator|==
name|other
operator|.
name|hasSyntax
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasSyntax
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getSyntax
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getSyntax
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasName
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|NAME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getName
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasPackage
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|PACKAGE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getPackage
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getDependencyCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|DEPENDENCY_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getDependencyList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getPublicDependencyCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|PUBLIC_DEPENDENCY_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getPublicDependencyList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getWeakDependencyCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|WEAK_DEPENDENCY_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getWeakDependencyList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getMessageTypeCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|MESSAGE_TYPE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getMessageTypeList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getEnumTypeCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|ENUM_TYPE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getEnumTypeList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getServiceCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|SERVICE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getServiceList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getExtensionCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|EXTENSION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getExtensionList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|OPTIONS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getOptions
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasSourceCodeInfo
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|SOURCE_CODE_INFO_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getSourceCodeInfo
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasSyntax
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|SYNTAX_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getSyntax
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      *<pre>      * Describes a complete .proto file.      *</pre>      *      * Protobuf type {@code google.protobuf.FileDescriptorProto}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.FileDescriptorProto)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProtoOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FileDescriptorProto_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FileDescriptorProto_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.FileDescriptorProto.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getMessageTypeFieldBuilder
argument_list|()
expr_stmt|;
name|getEnumTypeFieldBuilder
argument_list|()
expr_stmt|;
name|getServiceFieldBuilder
argument_list|()
expr_stmt|;
name|getExtensionFieldBuilder
argument_list|()
expr_stmt|;
name|getOptionsFieldBuilder
argument_list|()
expr_stmt|;
name|getSourceCodeInfoFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|name_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|package_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|dependency_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|publicDependency_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|weakDependency_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
if|if
condition|(
name|messageTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|messageType_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
block|}
else|else
block|{
name|messageTypeBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|enumType_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
block|}
else|else
block|{
name|enumTypeBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|serviceBuilder_
operator|==
literal|null
condition|)
block|{
name|service_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
block|}
else|else
block|{
name|serviceBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
name|extension_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
block|}
else|else
block|{
name|extensionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
if|if
condition|(
name|sourceCodeInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|sourceCodeInfo_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|sourceCodeInfoBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000400
operator|)
expr_stmt|;
name|syntax_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000800
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FileDescriptorProto_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|name_
operator|=
name|name_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|package_
operator|=
name|package_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|dependency_
operator|=
name|dependency_
operator|.
name|getUnmodifiableView
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|dependency_
operator|=
name|dependency_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|publicDependency_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|publicDependency_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|publicDependency_
operator|=
name|publicDependency_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|weakDependency_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|weakDependency_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|weakDependency_
operator|=
name|weakDependency_
expr_stmt|;
if|if
condition|(
name|messageTypeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|messageType_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|messageType_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|messageType_
operator|=
name|messageType_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|messageType_
operator|=
name|messageTypeBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|enumType_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|enumType_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|enumType_
operator|=
name|enumType_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|enumType_
operator|=
name|enumTypeBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|serviceBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|service_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|service_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|service_
operator|=
name|service_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|service_
operator|=
name|serviceBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|extension_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|extension_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|extension_
operator|=
name|extension_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|extension_
operator|=
name|extensionBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|options_
operator|=
name|options_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|options_
operator|=
name|optionsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
if|if
condition|(
name|sourceCodeInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|sourceCodeInfo_
operator|=
name|sourceCodeInfo_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|sourceCodeInfo_
operator|=
name|sourceCodeInfoBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|result
operator|.
name|syntax_
operator|=
name|syntax_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|other
operator|.
name|name_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasPackage
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|package_
operator|=
name|other
operator|.
name|package_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|other
operator|.
name|dependency_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|dependency_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|dependency_
operator|=
name|other
operator|.
name|dependency_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureDependencyIsMutable
argument_list|()
expr_stmt|;
name|dependency_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|dependency_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|other
operator|.
name|publicDependency_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|publicDependency_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|publicDependency_
operator|=
name|other
operator|.
name|publicDependency_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensurePublicDependencyIsMutable
argument_list|()
expr_stmt|;
name|publicDependency_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|publicDependency_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|other
operator|.
name|weakDependency_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|weakDependency_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|weakDependency_
operator|=
name|other
operator|.
name|weakDependency_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureWeakDependencyIsMutable
argument_list|()
expr_stmt|;
name|weakDependency_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|weakDependency_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|messageTypeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|messageType_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|messageType_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|messageType_
operator|=
name|other
operator|.
name|messageType_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureMessageTypeIsMutable
argument_list|()
expr_stmt|;
name|messageType_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|messageType_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|messageType_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|messageTypeBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|messageTypeBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|messageTypeBuilder_
operator|=
literal|null
expr_stmt|;
name|messageType_
operator|=
name|other
operator|.
name|messageType_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|messageTypeBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getMessageTypeFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|messageTypeBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|messageType_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|enumType_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|enumType_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|enumType_
operator|=
name|other
operator|.
name|enumType_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureEnumTypeIsMutable
argument_list|()
expr_stmt|;
name|enumType_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|enumType_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|enumType_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|enumTypeBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|enumTypeBuilder_
operator|=
literal|null
expr_stmt|;
name|enumType_
operator|=
name|other
operator|.
name|enumType_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|enumTypeBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getEnumTypeFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|enumTypeBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|enumType_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|serviceBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|service_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|service_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|service_
operator|=
name|other
operator|.
name|service_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureServiceIsMutable
argument_list|()
expr_stmt|;
name|service_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|service_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|service_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|serviceBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|serviceBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|serviceBuilder_
operator|=
literal|null
expr_stmt|;
name|service_
operator|=
name|other
operator|.
name|service_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|serviceBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getServiceFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|serviceBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|service_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|extension_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|extension_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|extension_
operator|=
name|other
operator|.
name|extension_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureExtensionIsMutable
argument_list|()
expr_stmt|;
name|extension_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|extension_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|extension_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|extensionBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|extensionBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|extensionBuilder_
operator|=
literal|null
expr_stmt|;
name|extension_
operator|=
name|other
operator|.
name|extension_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
name|extensionBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getExtensionFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|extensionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|extension_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|other
operator|.
name|hasOptions
argument_list|()
condition|)
block|{
name|mergeOptions
argument_list|(
name|other
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasSourceCodeInfo
argument_list|()
condition|)
block|{
name|mergeSourceCodeInfo
argument_list|(
name|other
operator|.
name|getSourceCodeInfo
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasSyntax
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000800
expr_stmt|;
name|syntax_
operator|=
name|other
operator|.
name|syntax_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getMessageTypeCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getMessageType
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getEnumTypeCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getEnumType
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getServiceCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getService
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getExtensionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getExtension
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getOptions
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
init|=
literal|""
decl_stmt|;
comment|/**        *<pre>        * file name, relative to root of source tree        *</pre>        *        *<code>optional string name = 1;</code>        */
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<pre>        * file name, relative to root of source tree        *</pre>        *        *<code>optional string name = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|name_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * file name, relative to root of source tree        *</pre>        *        *<code>optional string name = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * file name, relative to root of source tree        *</pre>        *        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|setName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * file name, relative to root of source tree        *</pre>        *        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|clearName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|name_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * file name, relative to root of source tree        *</pre>        *        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|setNameBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|package_
init|=
literal|""
decl_stmt|;
comment|/**        *<pre>        * e.g. "foo", "foo.bar", etc.        *</pre>        *        *<code>optional string package = 2;</code>        */
specifier|public
name|boolean
name|hasPackage
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<pre>        * e.g. "foo", "foo.bar", etc.        *</pre>        *        *<code>optional string package = 2;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getPackage
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|package_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|package_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * e.g. "foo", "foo.bar", etc.        *</pre>        *        *<code>optional string package = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getPackageBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|package_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|package_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * e.g. "foo", "foo.bar", etc.        *</pre>        *        *<code>optional string package = 2;</code>        */
specifier|public
name|Builder
name|setPackage
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|package_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * e.g. "foo", "foo.bar", etc.        *</pre>        *        *<code>optional string package = 2;</code>        */
specifier|public
name|Builder
name|clearPackage
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|package_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getPackage
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * e.g. "foo", "foo.bar", etc.        *</pre>        *        *<code>optional string package = 2;</code>        */
specifier|public
name|Builder
name|setPackageBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|package_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringList
name|dependency_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
decl_stmt|;
specifier|private
name|void
name|ensureDependencyIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|dependency_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
argument_list|(
name|dependency_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
block|}
comment|/**        *<pre>        * Names of files imported by this file.        *</pre>        *        *<code>repeated string dependency = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolStringList
name|getDependencyList
parameter_list|()
block|{
return|return
name|dependency_
operator|.
name|getUnmodifiableView
argument_list|()
return|;
block|}
comment|/**        *<pre>        * Names of files imported by this file.        *</pre>        *        *<code>repeated string dependency = 3;</code>        */
specifier|public
name|int
name|getDependencyCount
parameter_list|()
block|{
return|return
name|dependency_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**        *<pre>        * Names of files imported by this file.        *</pre>        *        *<code>repeated string dependency = 3;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getDependency
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|dependency_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<pre>        * Names of files imported by this file.        *</pre>        *        *<code>repeated string dependency = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getDependencyBytes
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|dependency_
operator|.
name|getByteString
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<pre>        * Names of files imported by this file.        *</pre>        *        *<code>repeated string dependency = 3;</code>        */
specifier|public
name|Builder
name|setDependency
parameter_list|(
name|int
name|index
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureDependencyIsMutable
argument_list|()
expr_stmt|;
name|dependency_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Names of files imported by this file.        *</pre>        *        *<code>repeated string dependency = 3;</code>        */
specifier|public
name|Builder
name|addDependency
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureDependencyIsMutable
argument_list|()
expr_stmt|;
name|dependency_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Names of files imported by this file.        *</pre>        *        *<code>repeated string dependency = 3;</code>        */
specifier|public
name|Builder
name|addAllDependency
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|ensureDependencyIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|dependency_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Names of files imported by this file.        *</pre>        *        *<code>repeated string dependency = 3;</code>        */
specifier|public
name|Builder
name|clearDependency
parameter_list|()
block|{
name|dependency_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Names of files imported by this file.        *</pre>        *        *<code>repeated string dependency = 3;</code>        */
specifier|public
name|Builder
name|addDependencyBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureDependencyIsMutable
argument_list|()
expr_stmt|;
name|dependency_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|publicDependency_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensurePublicDependencyIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|publicDependency_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
argument_list|(
name|publicDependency_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
block|}
comment|/**        *<pre>        * Indexes of the public imported files in the dependency list above.        *</pre>        *        *<code>repeated int32 public_dependency = 10;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|getPublicDependencyList
parameter_list|()
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|publicDependency_
argument_list|)
return|;
block|}
comment|/**        *<pre>        * Indexes of the public imported files in the dependency list above.        *</pre>        *        *<code>repeated int32 public_dependency = 10;</code>        */
specifier|public
name|int
name|getPublicDependencyCount
parameter_list|()
block|{
return|return
name|publicDependency_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**        *<pre>        * Indexes of the public imported files in the dependency list above.        *</pre>        *        *<code>repeated int32 public_dependency = 10;</code>        */
specifier|public
name|int
name|getPublicDependency
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|publicDependency_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<pre>        * Indexes of the public imported files in the dependency list above.        *</pre>        *        *<code>repeated int32 public_dependency = 10;</code>        */
specifier|public
name|Builder
name|setPublicDependency
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|value
parameter_list|)
block|{
name|ensurePublicDependencyIsMutable
argument_list|()
expr_stmt|;
name|publicDependency_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Indexes of the public imported files in the dependency list above.        *</pre>        *        *<code>repeated int32 public_dependency = 10;</code>        */
specifier|public
name|Builder
name|addPublicDependency
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|ensurePublicDependencyIsMutable
argument_list|()
expr_stmt|;
name|publicDependency_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Indexes of the public imported files in the dependency list above.        *</pre>        *        *<code>repeated int32 public_dependency = 10;</code>        */
specifier|public
name|Builder
name|addAllPublicDependency
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|values
parameter_list|)
block|{
name|ensurePublicDependencyIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|publicDependency_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Indexes of the public imported files in the dependency list above.        *</pre>        *        *<code>repeated int32 public_dependency = 10;</code>        */
specifier|public
name|Builder
name|clearPublicDependency
parameter_list|()
block|{
name|publicDependency_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|weakDependency_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureWeakDependencyIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|weakDependency_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
argument_list|(
name|weakDependency_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
block|}
comment|/**        *<pre>        * Indexes of the weak imported files in the dependency list.        * For Google-internal migration only. Do not use.        *</pre>        *        *<code>repeated int32 weak_dependency = 11;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|getWeakDependencyList
parameter_list|()
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|weakDependency_
argument_list|)
return|;
block|}
comment|/**        *<pre>        * Indexes of the weak imported files in the dependency list.        * For Google-internal migration only. Do not use.        *</pre>        *        *<code>repeated int32 weak_dependency = 11;</code>        */
specifier|public
name|int
name|getWeakDependencyCount
parameter_list|()
block|{
return|return
name|weakDependency_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**        *<pre>        * Indexes of the weak imported files in the dependency list.        * For Google-internal migration only. Do not use.        *</pre>        *        *<code>repeated int32 weak_dependency = 11;</code>        */
specifier|public
name|int
name|getWeakDependency
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|weakDependency_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<pre>        * Indexes of the weak imported files in the dependency list.        * For Google-internal migration only. Do not use.        *</pre>        *        *<code>repeated int32 weak_dependency = 11;</code>        */
specifier|public
name|Builder
name|setWeakDependency
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|value
parameter_list|)
block|{
name|ensureWeakDependencyIsMutable
argument_list|()
expr_stmt|;
name|weakDependency_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Indexes of the weak imported files in the dependency list.        * For Google-internal migration only. Do not use.        *</pre>        *        *<code>repeated int32 weak_dependency = 11;</code>        */
specifier|public
name|Builder
name|addWeakDependency
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|ensureWeakDependencyIsMutable
argument_list|()
expr_stmt|;
name|weakDependency_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Indexes of the weak imported files in the dependency list.        * For Google-internal migration only. Do not use.        *</pre>        *        *<code>repeated int32 weak_dependency = 11;</code>        */
specifier|public
name|Builder
name|addAllWeakDependency
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|values
parameter_list|)
block|{
name|ensureWeakDependencyIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|weakDependency_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Indexes of the weak imported files in the dependency list.        * For Google-internal migration only. Do not use.        *</pre>        *        *<code>repeated int32 weak_dependency = 11;</code>        */
specifier|public
name|Builder
name|clearWeakDependency
parameter_list|()
block|{
name|weakDependency_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|>
name|messageType_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureMessageTypeIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|messageType_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|>
argument_list|(
name|messageType_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProtoOrBuilder
argument_list|>
name|messageTypeBuilder_
decl_stmt|;
comment|/**        *<pre>        * All top-level definitions in this file.        *</pre>        *        *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|>
name|getMessageTypeList
parameter_list|()
block|{
if|if
condition|(
name|messageTypeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|messageType_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|messageTypeBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * All top-level definitions in this file.        *</pre>        *        *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>        */
specifier|public
name|int
name|getMessageTypeCount
parameter_list|()
block|{
if|if
condition|(
name|messageTypeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|messageType_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|messageTypeBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * All top-level definitions in this file.        *</pre>        *        *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|getMessageType
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|messageTypeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|messageType_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|messageTypeBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * All top-level definitions in this file.        *</pre>        *        *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>        */
specifier|public
name|Builder
name|setMessageType
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|messageTypeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureMessageTypeIsMutable
argument_list|()
expr_stmt|;
name|messageType_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageTypeBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * All top-level definitions in this file.        *</pre>        *        *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>        */
specifier|public
name|Builder
name|setMessageType
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|messageTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMessageTypeIsMutable
argument_list|()
expr_stmt|;
name|messageType_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageTypeBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * All top-level definitions in this file.        *</pre>        *        *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>        */
specifier|public
name|Builder
name|addMessageType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|messageTypeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureMessageTypeIsMutable
argument_list|()
expr_stmt|;
name|messageType_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageTypeBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * All top-level definitions in this file.        *</pre>        *        *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>        */
specifier|public
name|Builder
name|addMessageType
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|messageTypeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureMessageTypeIsMutable
argument_list|()
expr_stmt|;
name|messageType_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageTypeBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * All top-level definitions in this file.        *</pre>        *        *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>        */
specifier|public
name|Builder
name|addMessageType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|messageTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMessageTypeIsMutable
argument_list|()
expr_stmt|;
name|messageType_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageTypeBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * All top-level definitions in this file.        *</pre>        *        *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>        */
specifier|public
name|Builder
name|addMessageType
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|messageTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMessageTypeIsMutable
argument_list|()
expr_stmt|;
name|messageType_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageTypeBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * All top-level definitions in this file.        *</pre>        *        *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>        */
specifier|public
name|Builder
name|addAllMessageType
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|messageTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMessageTypeIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|messageType_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageTypeBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * All top-level definitions in this file.        *</pre>        *        *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>        */
specifier|public
name|Builder
name|clearMessageType
parameter_list|()
block|{
if|if
condition|(
name|messageTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|messageType_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageTypeBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * All top-level definitions in this file.        *</pre>        *        *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>        */
specifier|public
name|Builder
name|removeMessageType
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|messageTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMessageTypeIsMutable
argument_list|()
expr_stmt|;
name|messageType_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|messageTypeBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * All top-level definitions in this file.        *</pre>        *        *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|Builder
name|getMessageTypeBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getMessageTypeFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<pre>        * All top-level definitions in this file.        *</pre>        *        *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProtoOrBuilder
name|getMessageTypeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|messageTypeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|messageType_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|messageTypeBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * All top-level definitions in this file.        *</pre>        *        *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProtoOrBuilder
argument_list|>
name|getMessageTypeOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|messageTypeBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|messageTypeBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|messageType_
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * All top-level definitions in this file.        *</pre>        *        *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|Builder
name|addMessageTypeBuilder
parameter_list|()
block|{
return|return
name|getMessageTypeFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<pre>        * All top-level definitions in this file.        *</pre>        *        *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|Builder
name|addMessageTypeBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getMessageTypeFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<pre>        * All top-level definitions in this file.        *</pre>        *        *<code>repeated .google.protobuf.DescriptorProto message_type = 4;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|Builder
argument_list|>
name|getMessageTypeBuilderList
parameter_list|()
block|{
return|return
name|getMessageTypeFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProtoOrBuilder
argument_list|>
name|getMessageTypeFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|messageTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|messageTypeBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProtoOrBuilder
argument_list|>
argument_list|(
name|messageType_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|messageType_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|messageTypeBuilder_
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|>
name|enumType_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureEnumTypeIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|enumType_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|>
argument_list|(
name|enumType_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProtoOrBuilder
argument_list|>
name|enumTypeBuilder_
decl_stmt|;
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|>
name|getEnumTypeList
parameter_list|()
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|enumType_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|enumTypeBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>        */
specifier|public
name|int
name|getEnumTypeCount
parameter_list|()
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|enumType_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|enumTypeBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|getEnumType
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|enumType_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|enumTypeBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>        */
specifier|public
name|Builder
name|setEnumType
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureEnumTypeIsMutable
argument_list|()
expr_stmt|;
name|enumType_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enumTypeBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>        */
specifier|public
name|Builder
name|setEnumType
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureEnumTypeIsMutable
argument_list|()
expr_stmt|;
name|enumType_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enumTypeBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>        */
specifier|public
name|Builder
name|addEnumType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureEnumTypeIsMutable
argument_list|()
expr_stmt|;
name|enumType_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enumTypeBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>        */
specifier|public
name|Builder
name|addEnumType
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureEnumTypeIsMutable
argument_list|()
expr_stmt|;
name|enumType_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enumTypeBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>        */
specifier|public
name|Builder
name|addEnumType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureEnumTypeIsMutable
argument_list|()
expr_stmt|;
name|enumType_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enumTypeBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>        */
specifier|public
name|Builder
name|addEnumType
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureEnumTypeIsMutable
argument_list|()
expr_stmt|;
name|enumType_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enumTypeBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>        */
specifier|public
name|Builder
name|addAllEnumType
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureEnumTypeIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|enumType_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enumTypeBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>        */
specifier|public
name|Builder
name|clearEnumType
parameter_list|()
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|enumType_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enumTypeBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>        */
specifier|public
name|Builder
name|removeEnumType
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureEnumTypeIsMutable
argument_list|()
expr_stmt|;
name|enumType_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enumTypeBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|Builder
name|getEnumTypeBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getEnumTypeFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProtoOrBuilder
name|getEnumTypeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|enumType_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|enumTypeBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProtoOrBuilder
argument_list|>
name|getEnumTypeOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|enumTypeBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|enumType_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|Builder
name|addEnumTypeBuilder
parameter_list|()
block|{
return|return
name|getEnumTypeFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|Builder
name|addEnumTypeBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getEnumTypeFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 5;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|Builder
argument_list|>
name|getEnumTypeBuilderList
parameter_list|()
block|{
return|return
name|getEnumTypeFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProtoOrBuilder
argument_list|>
name|getEnumTypeFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|enumTypeBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProtoOrBuilder
argument_list|>
argument_list|(
name|enumType_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|enumType_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|enumTypeBuilder_
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
argument_list|>
name|service_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureServiceIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|service_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
argument_list|>
argument_list|(
name|service_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProtoOrBuilder
argument_list|>
name|serviceBuilder_
decl_stmt|;
comment|/**        *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
argument_list|>
name|getServiceList
parameter_list|()
block|{
if|if
condition|(
name|serviceBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|service_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|serviceBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>        */
specifier|public
name|int
name|getServiceCount
parameter_list|()
block|{
if|if
condition|(
name|serviceBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|service_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|serviceBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|getService
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|serviceBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|service_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|serviceBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>        */
specifier|public
name|Builder
name|setService
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|serviceBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureServiceIsMutable
argument_list|()
expr_stmt|;
name|service_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serviceBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>        */
specifier|public
name|Builder
name|setService
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|serviceBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureServiceIsMutable
argument_list|()
expr_stmt|;
name|service_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serviceBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>        */
specifier|public
name|Builder
name|addService
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|serviceBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureServiceIsMutable
argument_list|()
expr_stmt|;
name|service_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serviceBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>        */
specifier|public
name|Builder
name|addService
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|serviceBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureServiceIsMutable
argument_list|()
expr_stmt|;
name|service_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serviceBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>        */
specifier|public
name|Builder
name|addService
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|serviceBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureServiceIsMutable
argument_list|()
expr_stmt|;
name|service_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serviceBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>        */
specifier|public
name|Builder
name|addService
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|serviceBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureServiceIsMutable
argument_list|()
expr_stmt|;
name|service_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serviceBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>        */
specifier|public
name|Builder
name|addAllService
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|serviceBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureServiceIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|service_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serviceBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>        */
specifier|public
name|Builder
name|clearService
parameter_list|()
block|{
if|if
condition|(
name|serviceBuilder_
operator|==
literal|null
condition|)
block|{
name|service_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serviceBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>        */
specifier|public
name|Builder
name|removeService
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|serviceBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureServiceIsMutable
argument_list|()
expr_stmt|;
name|service_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serviceBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|.
name|Builder
name|getServiceBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getServiceFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProtoOrBuilder
name|getServiceOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|serviceBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|service_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|serviceBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProtoOrBuilder
argument_list|>
name|getServiceOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|serviceBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|serviceBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|service_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|.
name|Builder
name|addServiceBuilder
parameter_list|()
block|{
return|return
name|getServiceFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|.
name|Builder
name|addServiceBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getServiceFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.ServiceDescriptorProto service = 6;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|.
name|Builder
argument_list|>
name|getServiceBuilderList
parameter_list|()
block|{
return|return
name|getServiceFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProtoOrBuilder
argument_list|>
name|getServiceFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|serviceBuilder_
operator|==
literal|null
condition|)
block|{
name|serviceBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProtoOrBuilder
argument_list|>
argument_list|(
name|service_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|service_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|serviceBuilder_
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
name|extension_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureExtensionIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|extension_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
argument_list|(
name|extension_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
argument_list|>
name|extensionBuilder_
decl_stmt|;
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
name|getExtensionList
parameter_list|()
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|extension_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|extensionBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>        */
specifier|public
name|int
name|getExtensionCount
parameter_list|()
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|extension_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|extensionBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|getExtension
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|extension_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|extensionBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>        */
specifier|public
name|Builder
name|setExtension
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureExtensionIsMutable
argument_list|()
expr_stmt|;
name|extension_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>        */
specifier|public
name|Builder
name|setExtension
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureExtensionIsMutable
argument_list|()
expr_stmt|;
name|extension_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>        */
specifier|public
name|Builder
name|addExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureExtensionIsMutable
argument_list|()
expr_stmt|;
name|extension_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>        */
specifier|public
name|Builder
name|addExtension
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureExtensionIsMutable
argument_list|()
expr_stmt|;
name|extension_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>        */
specifier|public
name|Builder
name|addExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureExtensionIsMutable
argument_list|()
expr_stmt|;
name|extension_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>        */
specifier|public
name|Builder
name|addExtension
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureExtensionIsMutable
argument_list|()
expr_stmt|;
name|extension_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>        */
specifier|public
name|Builder
name|addAllExtension
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureExtensionIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|extension_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>        */
specifier|public
name|Builder
name|clearExtension
parameter_list|()
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
name|extension_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>        */
specifier|public
name|Builder
name|removeExtension
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureExtensionIsMutable
argument_list|()
expr_stmt|;
name|extension_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
name|getExtensionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getExtensionFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
name|getExtensionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|extension_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|extensionBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
argument_list|>
name|getExtensionOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|extensionBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|extensionBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|extension_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
name|addExtensionBuilder
parameter_list|()
block|{
return|return
name|getExtensionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
name|addExtensionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getExtensionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 7;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
argument_list|>
name|getExtensionBuilderList
parameter_list|()
block|{
return|return
name|getExtensionFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
argument_list|>
name|getExtensionFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
name|extensionBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
argument_list|>
argument_list|(
name|extension_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|extension_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|extensionBuilder_
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|options_
init|=
literal|null
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptionsOrBuilder
argument_list|>
name|optionsBuilder_
decl_stmt|;
comment|/**        *<code>optional .google.protobuf.FileOptions options = 8;</code>        */
specifier|public
name|boolean
name|hasOptions
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
return|;
block|}
comment|/**        *<code>optional .google.protobuf.FileOptions options = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|getOptions
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
else|else
block|{
return|return
name|optionsBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .google.protobuf.FileOptions options = 8;</code>        */
specifier|public
name|Builder
name|setOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|value
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|options_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.FileOptions options = 8;</code>        */
specifier|public
name|Builder
name|setOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.FileOptions options = 8;</code>        */
specifier|public
name|Builder
name|mergeOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|value
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
operator|&&
name|options_
operator|!=
literal|null
operator|&&
name|options_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|options_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|newBuilder
argument_list|(
name|options_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|options_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.FileOptions options = 8;</code>        */
specifier|public
name|Builder
name|clearOptions
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.FileOptions options = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|Builder
name|getOptionsBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getOptionsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .google.protobuf.FileOptions options = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|optionsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
block|}
comment|/**        *<code>optional .google.protobuf.FileOptions options = 8;</code>        */
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptionsOrBuilder
argument_list|>
name|getOptionsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|optionsBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptionsOrBuilder
argument_list|>
argument_list|(
name|getOptions
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|options_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|optionsBuilder_
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|sourceCodeInfo_
init|=
literal|null
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfoOrBuilder
argument_list|>
name|sourceCodeInfoBuilder_
decl_stmt|;
comment|/**        *<pre>        * This field contains optional information about the original source code.        * You may safely remove this entire field without harming runtime        * functionality of the descriptors -- the information is needed only by        * development tools.        *</pre>        *        *<code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>        */
specifier|public
name|boolean
name|hasSourceCodeInfo
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
return|;
block|}
comment|/**        *<pre>        * This field contains optional information about the original source code.        * You may safely remove this entire field without harming runtime        * functionality of the descriptors -- the information is needed only by        * development tools.        *</pre>        *        *<code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|getSourceCodeInfo
parameter_list|()
block|{
if|if
condition|(
name|sourceCodeInfoBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|sourceCodeInfo_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|sourceCodeInfo_
return|;
block|}
else|else
block|{
return|return
name|sourceCodeInfoBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * This field contains optional information about the original source code.        * You may safely remove this entire field without harming runtime        * functionality of the descriptors -- the information is needed only by        * development tools.        *</pre>        *        *<code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>        */
specifier|public
name|Builder
name|setSourceCodeInfo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|value
parameter_list|)
block|{
if|if
condition|(
name|sourceCodeInfoBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|sourceCodeInfo_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sourceCodeInfoBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * This field contains optional information about the original source code.        * You may safely remove this entire field without harming runtime        * functionality of the descriptors -- the information is needed only by        * development tools.        *</pre>        *        *<code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>        */
specifier|public
name|Builder
name|setSourceCodeInfo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|sourceCodeInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|sourceCodeInfo_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sourceCodeInfoBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * This field contains optional information about the original source code.        * You may safely remove this entire field without harming runtime        * functionality of the descriptors -- the information is needed only by        * development tools.        *</pre>        *        *<code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>        */
specifier|public
name|Builder
name|mergeSourceCodeInfo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|value
parameter_list|)
block|{
if|if
condition|(
name|sourceCodeInfoBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
operator|&&
name|sourceCodeInfo_
operator|!=
literal|null
operator|&&
name|sourceCodeInfo_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|sourceCodeInfo_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|newBuilder
argument_list|(
name|sourceCodeInfo_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sourceCodeInfo_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sourceCodeInfoBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * This field contains optional information about the original source code.        * You may safely remove this entire field without harming runtime        * functionality of the descriptors -- the information is needed only by        * development tools.        *</pre>        *        *<code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>        */
specifier|public
name|Builder
name|clearSourceCodeInfo
parameter_list|()
block|{
if|if
condition|(
name|sourceCodeInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|sourceCodeInfo_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|sourceCodeInfoBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000400
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * This field contains optional information about the original source code.        * You may safely remove this entire field without harming runtime        * functionality of the descriptors -- the information is needed only by        * development tools.        *</pre>        *        *<code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Builder
name|getSourceCodeInfoBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getSourceCodeInfoFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<pre>        * This field contains optional information about the original source code.        * You may safely remove this entire field without harming runtime        * functionality of the descriptors -- the information is needed only by        * development tools.        *</pre>        *        *<code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfoOrBuilder
name|getSourceCodeInfoOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|sourceCodeInfoBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|sourceCodeInfoBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|sourceCodeInfo_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|sourceCodeInfo_
return|;
block|}
block|}
comment|/**        *<pre>        * This field contains optional information about the original source code.        * You may safely remove this entire field without harming runtime        * functionality of the descriptors -- the information is needed only by        * development tools.        *</pre>        *        *<code>optional .google.protobuf.SourceCodeInfo source_code_info = 9;</code>        */
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfoOrBuilder
argument_list|>
name|getSourceCodeInfoFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|sourceCodeInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|sourceCodeInfoBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfoOrBuilder
argument_list|>
argument_list|(
name|getSourceCodeInfo
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|sourceCodeInfo_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|sourceCodeInfoBuilder_
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|syntax_
init|=
literal|""
decl_stmt|;
comment|/**        *<pre>        * The syntax of the proto file.        * The supported values are "proto2" and "proto3".        *</pre>        *        *<code>optional string syntax = 12;</code>        */
specifier|public
name|boolean
name|hasSyntax
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
return|;
block|}
comment|/**        *<pre>        * The syntax of the proto file.        * The supported values are "proto2" and "proto3".        *</pre>        *        *<code>optional string syntax = 12;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getSyntax
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|syntax_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|syntax_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * The syntax of the proto file.        * The supported values are "proto2" and "proto3".        *</pre>        *        *<code>optional string syntax = 12;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSyntaxBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|syntax_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|syntax_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * The syntax of the proto file.        * The supported values are "proto2" and "proto3".        *</pre>        *        *<code>optional string syntax = 12;</code>        */
specifier|public
name|Builder
name|setSyntax
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000800
expr_stmt|;
name|syntax_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The syntax of the proto file.        * The supported values are "proto2" and "proto3".        *</pre>        *        *<code>optional string syntax = 12;</code>        */
specifier|public
name|Builder
name|clearSyntax
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000800
operator|)
expr_stmt|;
name|syntax_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getSyntax
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The syntax of the proto file.        * The supported values are "proto2" and "proto3".        *</pre>        *        *<code>optional string syntax = 12;</code>        */
specifier|public
name|Builder
name|setSyntaxBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000800
expr_stmt|;
name|syntax_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.FileDescriptorProto)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.FileDescriptorProto)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FileDescriptorProto
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|FileDescriptorProto
argument_list|>
argument_list|()
block|{
specifier|public
name|FileDescriptorProto
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|FileDescriptorProto
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FileDescriptorProto
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FileDescriptorProto
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileDescriptorProto
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|DescriptorProtoOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.DescriptorProto)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>optional string name = 1;</code>      */
name|boolean
name|hasName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string name = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string name = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
name|getFieldList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|getField
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>      */
name|int
name|getFieldCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
argument_list|>
name|getFieldOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
name|getFieldOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
name|getExtensionList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|getExtension
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>      */
name|int
name|getExtensionCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
argument_list|>
name|getExtensionOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
name|getExtensionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|>
name|getNestedTypeList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|getNestedType
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>      */
name|int
name|getNestedTypeCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProtoOrBuilder
argument_list|>
name|getNestedTypeOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProtoOrBuilder
name|getNestedTypeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|>
name|getEnumTypeList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|getEnumType
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>      */
name|int
name|getEnumTypeCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProtoOrBuilder
argument_list|>
name|getEnumTypeOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProtoOrBuilder
name|getEnumTypeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
argument_list|>
name|getExtensionRangeList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|getExtensionRange
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>      */
name|int
name|getExtensionRangeCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRangeOrBuilder
argument_list|>
name|getExtensionRangeOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRangeOrBuilder
name|getExtensionRangeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
argument_list|>
name|getOneofDeclList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|getOneofDecl
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>      */
name|int
name|getOneofDeclCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProtoOrBuilder
argument_list|>
name|getOneofDeclOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProtoOrBuilder
name|getOneofDeclOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>optional .google.protobuf.MessageOptions options = 7;</code>      */
name|boolean
name|hasOptions
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.MessageOptions options = 7;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|getOptions
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.MessageOptions options = 7;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
argument_list|>
name|getReservedRangeList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|getReservedRange
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>      */
name|int
name|getReservedRangeCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRangeOrBuilder
argument_list|>
name|getReservedRangeOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRangeOrBuilder
name|getReservedRangeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<pre>      * Reserved field names, which may not be used by fields in the same message.      * A given name may only be reserved once.      *</pre>      *      *<code>repeated string reserved_name = 10;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|getReservedNameList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Reserved field names, which may not be used by fields in the same message.      * A given name may only be reserved once.      *</pre>      *      *<code>repeated string reserved_name = 10;</code>      */
name|int
name|getReservedNameCount
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Reserved field names, which may not be used by fields in the same message.      * A given name may only be reserved once.      *</pre>      *      *<code>repeated string reserved_name = 10;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getReservedName
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<pre>      * Reserved field names, which may not be used by fields in the same message.      * A given name may only be reserved once.      *</pre>      *      *<code>repeated string reserved_name = 10;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getReservedNameBytes
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    *<pre>    * Describes a message type.    *</pre>    *    * Protobuf type {@code google.protobuf.DescriptorProto}    */
specifier|public
specifier|static
specifier|final
class|class
name|DescriptorProto
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.DescriptorProto)
name|DescriptorProtoOrBuilder
block|{
comment|// Use DescriptorProto.newBuilder() to construct.
specifier|private
name|DescriptorProto
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|DescriptorProto
parameter_list|()
block|{
name|name_
operator|=
literal|""
expr_stmt|;
name|field_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|extension_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|nestedType_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|enumType_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|extensionRange_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|oneofDecl_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|reservedRange_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|reservedName_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|DescriptorProto
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|field_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|field_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|nestedType_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|nestedType_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|34
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|enumType_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|enumType_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|42
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|extensionRange_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
name|extensionRange_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|50
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|extension_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|extension_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|58
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|options_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|options_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|options_
argument_list|)
expr_stmt|;
name|options_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
break|break;
block|}
case|case
literal|66
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|oneofDecl_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000040
expr_stmt|;
block|}
name|oneofDecl_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|74
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|reservedRange_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000100
expr_stmt|;
block|}
name|reservedRange_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|82
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|reservedName_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000200
expr_stmt|;
block|}
name|reservedName_
operator|.
name|add
argument_list|(
name|bs
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|field_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|field_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|nestedType_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|nestedType_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|enumType_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|enumType_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|extensionRange_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|extensionRange_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|extension_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|extension_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|oneofDecl_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|oneofDecl_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|reservedRange_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|reservedRange_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|reservedName_
operator|=
name|reservedName_
operator|.
name|getUnmodifiableView
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_DescriptorProto_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_DescriptorProto_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
interface|interface
name|ExtensionRangeOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.DescriptorProto.ExtensionRange)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**        *<code>optional int32 start = 1;</code>        */
name|boolean
name|hasStart
parameter_list|()
function_decl|;
comment|/**        *<code>optional int32 start = 1;</code>        */
name|int
name|getStart
parameter_list|()
function_decl|;
comment|/**        *<code>optional int32 end = 2;</code>        */
name|boolean
name|hasEnd
parameter_list|()
function_decl|;
comment|/**        *<code>optional int32 end = 2;</code>        */
name|int
name|getEnd
parameter_list|()
function_decl|;
block|}
comment|/**      * Protobuf type {@code google.protobuf.DescriptorProto.ExtensionRange}      */
specifier|public
specifier|static
specifier|final
class|class
name|ExtensionRange
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.DescriptorProto.ExtensionRange)
name|ExtensionRangeOrBuilder
block|{
comment|// Use ExtensionRange.newBuilder() to construct.
specifier|private
name|ExtensionRange
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ExtensionRange
parameter_list|()
block|{
name|start_
operator|=
literal|0
expr_stmt|;
name|end_
operator|=
literal|0
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|ExtensionRange
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|8
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|start_
operator|=
name|input
operator|.
name|readInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|end_
operator|=
name|input
operator|.
name|readInt32
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_DescriptorProto_ExtensionRange_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|START_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|int
name|start_
decl_stmt|;
comment|/**        *<code>optional int32 start = 1;</code>        */
specifier|public
name|boolean
name|hasStart
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional int32 start = 1;</code>        */
specifier|public
name|int
name|getStart
parameter_list|()
block|{
return|return
name|start_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|END_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|int
name|end_
decl_stmt|;
comment|/**        *<code>optional int32 end = 2;</code>        */
specifier|public
name|boolean
name|hasEnd
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional int32 end = 2;</code>        */
specifier|public
name|int
name|getEnd
parameter_list|()
block|{
return|return
name|end_
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt32
argument_list|(
literal|1
argument_list|,
name|start_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt32
argument_list|(
literal|2
argument_list|,
name|end_
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32Size
argument_list|(
literal|1
argument_list|,
name|start_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32Size
argument_list|(
literal|2
argument_list|,
name|end_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasStart
argument_list|()
operator|==
name|other
operator|.
name|hasStart
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasStart
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getStart
argument_list|()
operator|==
name|other
operator|.
name|getStart
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasEnd
argument_list|()
operator|==
name|other
operator|.
name|hasEnd
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasEnd
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getEnd
argument_list|()
operator|==
name|other
operator|.
name|getEnd
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasStart
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|START_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getStart
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasEnd
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|END_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getEnd
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**        * Protobuf type {@code google.protobuf.DescriptorProto.ExtensionRange}        */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.DescriptorProto.ExtensionRange)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRangeOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_DescriptorProto_ExtensionRange_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.DescriptorProto.ExtensionRange.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{           }
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|start_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|end_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|start_
operator|=
name|start_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|end_
operator|=
name|end_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasStart
argument_list|()
condition|)
block|{
name|setStart
argument_list|(
name|other
operator|.
name|getStart
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasEnd
argument_list|()
condition|)
block|{
name|setEnd
argument_list|(
name|other
operator|.
name|getEnd
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|int
name|start_
decl_stmt|;
comment|/**          *<code>optional int32 start = 1;</code>          */
specifier|public
name|boolean
name|hasStart
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**          *<code>optional int32 start = 1;</code>          */
specifier|public
name|int
name|getStart
parameter_list|()
block|{
return|return
name|start_
return|;
block|}
comment|/**          *<code>optional int32 start = 1;</code>          */
specifier|public
name|Builder
name|setStart
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|start_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional int32 start = 1;</code>          */
specifier|public
name|Builder
name|clearStart
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|start_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|int
name|end_
decl_stmt|;
comment|/**          *<code>optional int32 end = 2;</code>          */
specifier|public
name|boolean
name|hasEnd
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**          *<code>optional int32 end = 2;</code>          */
specifier|public
name|int
name|getEnd
parameter_list|()
block|{
return|return
name|end_
return|;
block|}
comment|/**          *<code>optional int32 end = 2;</code>          */
specifier|public
name|Builder
name|setEnd
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|end_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional int32 end = 2;</code>          */
specifier|public
name|Builder
name|clearEnd
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|end_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.DescriptorProto.ExtensionRange)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.DescriptorProto.ExtensionRange)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ExtensionRange
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|ExtensionRange
argument_list|>
argument_list|()
block|{
specifier|public
name|ExtensionRange
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|ExtensionRange
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ExtensionRange
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ExtensionRange
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|ReservedRangeOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.DescriptorProto.ReservedRange)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**        *<pre>        * Inclusive.        *</pre>        *        *<code>optional int32 start = 1;</code>        */
name|boolean
name|hasStart
parameter_list|()
function_decl|;
comment|/**        *<pre>        * Inclusive.        *</pre>        *        *<code>optional int32 start = 1;</code>        */
name|int
name|getStart
parameter_list|()
function_decl|;
comment|/**        *<pre>        * Exclusive.        *</pre>        *        *<code>optional int32 end = 2;</code>        */
name|boolean
name|hasEnd
parameter_list|()
function_decl|;
comment|/**        *<pre>        * Exclusive.        *</pre>        *        *<code>optional int32 end = 2;</code>        */
name|int
name|getEnd
parameter_list|()
function_decl|;
block|}
comment|/**      *<pre>      * Range of reserved tag numbers. Reserved tag numbers may not be used by      * fields or extension ranges in the same message. Reserved ranges may      * not overlap.      *</pre>      *      * Protobuf type {@code google.protobuf.DescriptorProto.ReservedRange}      */
specifier|public
specifier|static
specifier|final
class|class
name|ReservedRange
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.DescriptorProto.ReservedRange)
name|ReservedRangeOrBuilder
block|{
comment|// Use ReservedRange.newBuilder() to construct.
specifier|private
name|ReservedRange
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ReservedRange
parameter_list|()
block|{
name|start_
operator|=
literal|0
expr_stmt|;
name|end_
operator|=
literal|0
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|ReservedRange
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|8
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|start_
operator|=
name|input
operator|.
name|readInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|end_
operator|=
name|input
operator|.
name|readInt32
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_DescriptorProto_ReservedRange_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|START_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|int
name|start_
decl_stmt|;
comment|/**        *<pre>        * Inclusive.        *</pre>        *        *<code>optional int32 start = 1;</code>        */
specifier|public
name|boolean
name|hasStart
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<pre>        * Inclusive.        *</pre>        *        *<code>optional int32 start = 1;</code>        */
specifier|public
name|int
name|getStart
parameter_list|()
block|{
return|return
name|start_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|END_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|int
name|end_
decl_stmt|;
comment|/**        *<pre>        * Exclusive.        *</pre>        *        *<code>optional int32 end = 2;</code>        */
specifier|public
name|boolean
name|hasEnd
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<pre>        * Exclusive.        *</pre>        *        *<code>optional int32 end = 2;</code>        */
specifier|public
name|int
name|getEnd
parameter_list|()
block|{
return|return
name|end_
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt32
argument_list|(
literal|1
argument_list|,
name|start_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt32
argument_list|(
literal|2
argument_list|,
name|end_
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32Size
argument_list|(
literal|1
argument_list|,
name|start_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32Size
argument_list|(
literal|2
argument_list|,
name|end_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasStart
argument_list|()
operator|==
name|other
operator|.
name|hasStart
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasStart
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getStart
argument_list|()
operator|==
name|other
operator|.
name|getStart
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasEnd
argument_list|()
operator|==
name|other
operator|.
name|hasEnd
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasEnd
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getEnd
argument_list|()
operator|==
name|other
operator|.
name|getEnd
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasStart
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|START_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getStart
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasEnd
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|END_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getEnd
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**        *<pre>        * Range of reserved tag numbers. Reserved tag numbers may not be used by        * fields or extension ranges in the same message. Reserved ranges may        * not overlap.        *</pre>        *        * Protobuf type {@code google.protobuf.DescriptorProto.ReservedRange}        */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.DescriptorProto.ReservedRange)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRangeOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_DescriptorProto_ReservedRange_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.DescriptorProto.ReservedRange.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{           }
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|start_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|end_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|start_
operator|=
name|start_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|end_
operator|=
name|end_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasStart
argument_list|()
condition|)
block|{
name|setStart
argument_list|(
name|other
operator|.
name|getStart
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasEnd
argument_list|()
condition|)
block|{
name|setEnd
argument_list|(
name|other
operator|.
name|getEnd
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|int
name|start_
decl_stmt|;
comment|/**          *<pre>          * Inclusive.          *</pre>          *          *<code>optional int32 start = 1;</code>          */
specifier|public
name|boolean
name|hasStart
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**          *<pre>          * Inclusive.          *</pre>          *          *<code>optional int32 start = 1;</code>          */
specifier|public
name|int
name|getStart
parameter_list|()
block|{
return|return
name|start_
return|;
block|}
comment|/**          *<pre>          * Inclusive.          *</pre>          *          *<code>optional int32 start = 1;</code>          */
specifier|public
name|Builder
name|setStart
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|start_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<pre>          * Inclusive.          *</pre>          *          *<code>optional int32 start = 1;</code>          */
specifier|public
name|Builder
name|clearStart
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|start_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|int
name|end_
decl_stmt|;
comment|/**          *<pre>          * Exclusive.          *</pre>          *          *<code>optional int32 end = 2;</code>          */
specifier|public
name|boolean
name|hasEnd
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**          *<pre>          * Exclusive.          *</pre>          *          *<code>optional int32 end = 2;</code>          */
specifier|public
name|int
name|getEnd
parameter_list|()
block|{
return|return
name|end_
return|;
block|}
comment|/**          *<pre>          * Exclusive.          *</pre>          *          *<code>optional int32 end = 2;</code>          */
specifier|public
name|Builder
name|setEnd
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|end_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<pre>          * Exclusive.          *</pre>          *          *<code>optional int32 end = 2;</code>          */
specifier|public
name|Builder
name|clearEnd
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|end_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.DescriptorProto.ReservedRange)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.DescriptorProto.ReservedRange)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ReservedRange
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|ReservedRange
argument_list|>
argument_list|()
block|{
specifier|public
name|ReservedRange
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|ReservedRange
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ReservedRange
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ReservedRange
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|NAME_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
decl_stmt|;
comment|/**      *<code>optional string name = 1;</code>      */
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>optional string name = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|name_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string name = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|FIELD_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
name|field_
decl_stmt|;
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
name|getFieldList
parameter_list|()
block|{
return|return
name|field_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
argument_list|>
name|getFieldOrBuilderList
parameter_list|()
block|{
return|return
name|field_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>      */
specifier|public
name|int
name|getFieldCount
parameter_list|()
block|{
return|return
name|field_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|getField
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|field_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
name|getFieldOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|field_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|EXTENSION_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
name|extension_
decl_stmt|;
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
name|getExtensionList
parameter_list|()
block|{
return|return
name|extension_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
argument_list|>
name|getExtensionOrBuilderList
parameter_list|()
block|{
return|return
name|extension_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>      */
specifier|public
name|int
name|getExtensionCount
parameter_list|()
block|{
return|return
name|extension_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|getExtension
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|extension_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
name|getExtensionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|extension_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|NESTED_TYPE_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|>
name|nestedType_
decl_stmt|;
comment|/**      *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|>
name|getNestedTypeList
parameter_list|()
block|{
return|return
name|nestedType_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProtoOrBuilder
argument_list|>
name|getNestedTypeOrBuilderList
parameter_list|()
block|{
return|return
name|nestedType_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>      */
specifier|public
name|int
name|getNestedTypeCount
parameter_list|()
block|{
return|return
name|nestedType_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|getNestedType
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|nestedType_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProtoOrBuilder
name|getNestedTypeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|nestedType_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|ENUM_TYPE_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|>
name|enumType_
decl_stmt|;
comment|/**      *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|>
name|getEnumTypeList
parameter_list|()
block|{
return|return
name|enumType_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProtoOrBuilder
argument_list|>
name|getEnumTypeOrBuilderList
parameter_list|()
block|{
return|return
name|enumType_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>      */
specifier|public
name|int
name|getEnumTypeCount
parameter_list|()
block|{
return|return
name|enumType_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|getEnumType
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|enumType_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProtoOrBuilder
name|getEnumTypeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|enumType_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|EXTENSION_RANGE_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
argument_list|>
name|extensionRange_
decl_stmt|;
comment|/**      *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
argument_list|>
name|getExtensionRangeList
parameter_list|()
block|{
return|return
name|extensionRange_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRangeOrBuilder
argument_list|>
name|getExtensionRangeOrBuilderList
parameter_list|()
block|{
return|return
name|extensionRange_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>      */
specifier|public
name|int
name|getExtensionRangeCount
parameter_list|()
block|{
return|return
name|extensionRange_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|getExtensionRange
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|extensionRange_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRangeOrBuilder
name|getExtensionRangeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|extensionRange_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|ONEOF_DECL_FIELD_NUMBER
init|=
literal|8
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
argument_list|>
name|oneofDecl_
decl_stmt|;
comment|/**      *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
argument_list|>
name|getOneofDeclList
parameter_list|()
block|{
return|return
name|oneofDecl_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProtoOrBuilder
argument_list|>
name|getOneofDeclOrBuilderList
parameter_list|()
block|{
return|return
name|oneofDecl_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>      */
specifier|public
name|int
name|getOneofDeclCount
parameter_list|()
block|{
return|return
name|oneofDecl_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|getOneofDecl
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|oneofDecl_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProtoOrBuilder
name|getOneofDeclOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|oneofDecl_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|OPTIONS_FIELD_NUMBER
init|=
literal|7
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|options_
decl_stmt|;
comment|/**      *<code>optional .google.protobuf.MessageOptions options = 7;</code>      */
specifier|public
name|boolean
name|hasOptions
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>optional .google.protobuf.MessageOptions options = 7;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|getOptions
parameter_list|()
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
comment|/**      *<code>optional .google.protobuf.MessageOptions options = 7;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|RESERVED_RANGE_FIELD_NUMBER
init|=
literal|9
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
argument_list|>
name|reservedRange_
decl_stmt|;
comment|/**      *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
argument_list|>
name|getReservedRangeList
parameter_list|()
block|{
return|return
name|reservedRange_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRangeOrBuilder
argument_list|>
name|getReservedRangeOrBuilderList
parameter_list|()
block|{
return|return
name|reservedRange_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>      */
specifier|public
name|int
name|getReservedRangeCount
parameter_list|()
block|{
return|return
name|reservedRange_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|getReservedRange
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|reservedRange_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRangeOrBuilder
name|getReservedRangeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|reservedRange_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|RESERVED_NAME_FIELD_NUMBER
init|=
literal|10
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringList
name|reservedName_
decl_stmt|;
comment|/**      *<pre>      * Reserved field names, which may not be used by fields in the same message.      * A given name may only be reserved once.      *</pre>      *      *<code>repeated string reserved_name = 10;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolStringList
name|getReservedNameList
parameter_list|()
block|{
return|return
name|reservedName_
return|;
block|}
comment|/**      *<pre>      * Reserved field names, which may not be used by fields in the same message.      * A given name may only be reserved once.      *</pre>      *      *<code>repeated string reserved_name = 10;</code>      */
specifier|public
name|int
name|getReservedNameCount
parameter_list|()
block|{
return|return
name|reservedName_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<pre>      * Reserved field names, which may not be used by fields in the same message.      * A given name may only be reserved once.      *</pre>      *      *<code>repeated string reserved_name = 10;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getReservedName
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|reservedName_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<pre>      * Reserved field names, which may not be used by fields in the same message.      * A given name may only be reserved once.      *</pre>      *      *<code>repeated string reserved_name = 10;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getReservedNameBytes
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|reservedName_
operator|.
name|getByteString
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getFieldCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getField
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getExtensionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getExtension
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getNestedTypeCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getNestedType
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getEnumTypeCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getEnumType
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getOneofDeclCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getOneofDecl
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getOptions
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|1
argument_list|,
name|name_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|field_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|field_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nestedType_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|3
argument_list|,
name|nestedType_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|enumType_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|4
argument_list|,
name|enumType_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|extensionRange_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|5
argument_list|,
name|extensionRange_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|extension_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|6
argument_list|,
name|extension_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|7
argument_list|,
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|oneofDecl_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|8
argument_list|,
name|oneofDecl_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|reservedRange_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|9
argument_list|,
name|reservedRange_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|reservedName_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|10
argument_list|,
name|reservedName_
operator|.
name|getRaw
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|1
argument_list|,
name|name_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|field_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|field_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|nestedType_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|3
argument_list|,
name|nestedType_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|enumType_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|4
argument_list|,
name|enumType_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|extensionRange_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|5
argument_list|,
name|extensionRange_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|extension_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|6
argument_list|,
name|extension_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|7
argument_list|,
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|oneofDecl_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|8
argument_list|,
name|oneofDecl_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|reservedRange_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|9
argument_list|,
name|reservedRange_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|{
name|int
name|dataSize
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|reservedName_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|dataSize
operator|+=
name|computeStringSizeNoTag
argument_list|(
name|reservedName_
operator|.
name|getRaw
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|dataSize
expr_stmt|;
name|size
operator|+=
literal|1
operator|*
name|getReservedNameList
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasName
argument_list|()
operator|==
name|other
operator|.
name|hasName
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasName
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getFieldList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getFieldList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getExtensionList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getExtensionList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getNestedTypeList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getNestedTypeList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getEnumTypeList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getEnumTypeList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getExtensionRangeList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getExtensionRangeList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getOneofDeclList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getOneofDeclList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasOptions
argument_list|()
operator|==
name|other
operator|.
name|hasOptions
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getOptions
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getReservedRangeList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getReservedRangeList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getReservedNameList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getReservedNameList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasName
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|NAME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getName
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getFieldCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|FIELD_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getFieldList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getExtensionCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|EXTENSION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getExtensionList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getNestedTypeCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|NESTED_TYPE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getNestedTypeList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getEnumTypeCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|ENUM_TYPE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getEnumTypeList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getExtensionRangeCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|EXTENSION_RANGE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getExtensionRangeList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getOneofDeclCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|ONEOF_DECL_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getOneofDeclList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|OPTIONS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getOptions
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getReservedRangeCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|RESERVED_RANGE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getReservedRangeList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getReservedNameCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|RESERVED_NAME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getReservedNameList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      *<pre>      * Describes a message type.      *</pre>      *      * Protobuf type {@code google.protobuf.DescriptorProto}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.DescriptorProto)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProtoOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_DescriptorProto_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_DescriptorProto_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.DescriptorProto.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getFieldFieldBuilder
argument_list|()
expr_stmt|;
name|getExtensionFieldBuilder
argument_list|()
expr_stmt|;
name|getNestedTypeFieldBuilder
argument_list|()
expr_stmt|;
name|getEnumTypeFieldBuilder
argument_list|()
expr_stmt|;
name|getExtensionRangeFieldBuilder
argument_list|()
expr_stmt|;
name|getOneofDeclFieldBuilder
argument_list|()
expr_stmt|;
name|getOptionsFieldBuilder
argument_list|()
expr_stmt|;
name|getReservedRangeFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|name_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
if|if
condition|(
name|fieldBuilder_
operator|==
literal|null
condition|)
block|{
name|field_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|fieldBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
name|extension_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
else|else
block|{
name|extensionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|nestedTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|nestedType_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
block|}
else|else
block|{
name|nestedTypeBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|enumType_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
block|}
else|else
block|{
name|enumTypeBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|extensionRangeBuilder_
operator|==
literal|null
condition|)
block|{
name|extensionRange_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
block|}
else|else
block|{
name|extensionRangeBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|oneofDeclBuilder_
operator|==
literal|null
condition|)
block|{
name|oneofDecl_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
block|}
else|else
block|{
name|oneofDeclBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
if|if
condition|(
name|reservedRangeBuilder_
operator|==
literal|null
condition|)
block|{
name|reservedRange_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
block|}
else|else
block|{
name|reservedRangeBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|reservedName_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_DescriptorProto_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|name_
operator|=
name|name_
expr_stmt|;
if|if
condition|(
name|fieldBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|field_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|field_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|field_
operator|=
name|field_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|field_
operator|=
name|fieldBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|extension_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|extension_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|extension_
operator|=
name|extension_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|extension_
operator|=
name|extensionBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|nestedTypeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|nestedType_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|nestedType_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|nestedType_
operator|=
name|nestedType_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|nestedType_
operator|=
name|nestedTypeBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|enumType_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|enumType_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|enumType_
operator|=
name|enumType_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|enumType_
operator|=
name|enumTypeBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|extensionRangeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|extensionRange_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|extensionRange_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|extensionRange_
operator|=
name|extensionRange_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|extensionRange_
operator|=
name|extensionRangeBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|oneofDeclBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|oneofDecl_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|oneofDecl_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|oneofDecl_
operator|=
name|oneofDecl_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|oneofDecl_
operator|=
name|oneofDeclBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|options_
operator|=
name|options_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|options_
operator|=
name|optionsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|reservedRangeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|reservedRange_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|reservedRange_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|reservedRange_
operator|=
name|reservedRange_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|reservedRange_
operator|=
name|reservedRangeBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|reservedName_
operator|=
name|reservedName_
operator|.
name|getUnmodifiableView
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|reservedName_
operator|=
name|reservedName_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|other
operator|.
name|name_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|fieldBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|field_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|field_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|field_
operator|=
name|other
operator|.
name|field_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureFieldIsMutable
argument_list|()
expr_stmt|;
name|field_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|field_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|field_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|fieldBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|fieldBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|fieldBuilder_
operator|=
literal|null
expr_stmt|;
name|field_
operator|=
name|other
operator|.
name|field_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|fieldBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getFieldFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|fieldBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|field_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|extension_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|extension_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|extension_
operator|=
name|other
operator|.
name|extension_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureExtensionIsMutable
argument_list|()
expr_stmt|;
name|extension_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|extension_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|extension_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|extensionBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|extensionBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|extensionBuilder_
operator|=
literal|null
expr_stmt|;
name|extension_
operator|=
name|other
operator|.
name|extension_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|extensionBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getExtensionFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|extensionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|extension_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|nestedTypeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|nestedType_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|nestedType_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|nestedType_
operator|=
name|other
operator|.
name|nestedType_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureNestedTypeIsMutable
argument_list|()
expr_stmt|;
name|nestedType_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|nestedType_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|nestedType_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|nestedTypeBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|nestedTypeBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|nestedTypeBuilder_
operator|=
literal|null
expr_stmt|;
name|nestedType_
operator|=
name|other
operator|.
name|nestedType_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|nestedTypeBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getNestedTypeFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|nestedTypeBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|nestedType_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|enumType_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|enumType_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|enumType_
operator|=
name|other
operator|.
name|enumType_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureEnumTypeIsMutable
argument_list|()
expr_stmt|;
name|enumType_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|enumType_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|enumType_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|enumTypeBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|enumTypeBuilder_
operator|=
literal|null
expr_stmt|;
name|enumType_
operator|=
name|other
operator|.
name|enumType_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|enumTypeBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getEnumTypeFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|enumTypeBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|enumType_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|extensionRangeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|extensionRange_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|extensionRange_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|extensionRange_
operator|=
name|other
operator|.
name|extensionRange_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureExtensionRangeIsMutable
argument_list|()
expr_stmt|;
name|extensionRange_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|extensionRange_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|extensionRange_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|extensionRangeBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|extensionRangeBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|extensionRangeBuilder_
operator|=
literal|null
expr_stmt|;
name|extensionRange_
operator|=
name|other
operator|.
name|extensionRange_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|extensionRangeBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getExtensionRangeFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|extensionRangeBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|extensionRange_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|oneofDeclBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|oneofDecl_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|oneofDecl_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|oneofDecl_
operator|=
name|other
operator|.
name|oneofDecl_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureOneofDeclIsMutable
argument_list|()
expr_stmt|;
name|oneofDecl_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|oneofDecl_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|oneofDecl_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|oneofDeclBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|oneofDeclBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|oneofDeclBuilder_
operator|=
literal|null
expr_stmt|;
name|oneofDecl_
operator|=
name|other
operator|.
name|oneofDecl_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|oneofDeclBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getOneofDeclFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|oneofDeclBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|oneofDecl_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|other
operator|.
name|hasOptions
argument_list|()
condition|)
block|{
name|mergeOptions
argument_list|(
name|other
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|reservedRangeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|reservedRange_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|reservedRange_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|reservedRange_
operator|=
name|other
operator|.
name|reservedRange_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureReservedRangeIsMutable
argument_list|()
expr_stmt|;
name|reservedRange_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|reservedRange_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|reservedRange_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|reservedRangeBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|reservedRangeBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|reservedRangeBuilder_
operator|=
literal|null
expr_stmt|;
name|reservedRange_
operator|=
name|other
operator|.
name|reservedRange_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
name|reservedRangeBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getReservedRangeFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|reservedRangeBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|reservedRange_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
operator|!
name|other
operator|.
name|reservedName_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|reservedName_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|reservedName_
operator|=
name|other
operator|.
name|reservedName_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureReservedNameIsMutable
argument_list|()
expr_stmt|;
name|reservedName_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|reservedName_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getFieldCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getField
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getExtensionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getExtension
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getNestedTypeCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getNestedType
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getEnumTypeCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getEnumType
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getOneofDeclCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getOneofDecl
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getOptions
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|name_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|setName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|clearName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|name_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|setNameBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
name|field_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureFieldIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|field_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
argument_list|(
name|field_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
argument_list|>
name|fieldBuilder_
decl_stmt|;
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
name|getFieldList
parameter_list|()
block|{
if|if
condition|(
name|fieldBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|field_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|fieldBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>        */
specifier|public
name|int
name|getFieldCount
parameter_list|()
block|{
if|if
condition|(
name|fieldBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|field_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|fieldBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|getField
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|fieldBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|field_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|fieldBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>        */
specifier|public
name|Builder
name|setField
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|fieldBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureFieldIsMutable
argument_list|()
expr_stmt|;
name|field_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|fieldBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>        */
specifier|public
name|Builder
name|setField
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|fieldBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureFieldIsMutable
argument_list|()
expr_stmt|;
name|field_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|fieldBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>        */
specifier|public
name|Builder
name|addField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|fieldBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureFieldIsMutable
argument_list|()
expr_stmt|;
name|field_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|fieldBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>        */
specifier|public
name|Builder
name|addField
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|fieldBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureFieldIsMutable
argument_list|()
expr_stmt|;
name|field_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|fieldBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>        */
specifier|public
name|Builder
name|addField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|fieldBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureFieldIsMutable
argument_list|()
expr_stmt|;
name|field_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|fieldBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>        */
specifier|public
name|Builder
name|addField
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|fieldBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureFieldIsMutable
argument_list|()
expr_stmt|;
name|field_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|fieldBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>        */
specifier|public
name|Builder
name|addAllField
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|fieldBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureFieldIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|field_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|fieldBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>        */
specifier|public
name|Builder
name|clearField
parameter_list|()
block|{
if|if
condition|(
name|fieldBuilder_
operator|==
literal|null
condition|)
block|{
name|field_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|fieldBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>        */
specifier|public
name|Builder
name|removeField
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|fieldBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureFieldIsMutable
argument_list|()
expr_stmt|;
name|field_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|fieldBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
name|getFieldBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getFieldFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
name|getFieldOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|fieldBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|field_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|fieldBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
argument_list|>
name|getFieldOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|fieldBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|fieldBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|field_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
name|addFieldBuilder
parameter_list|()
block|{
return|return
name|getFieldFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
name|addFieldBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getFieldFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto field = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
argument_list|>
name|getFieldBuilderList
parameter_list|()
block|{
return|return
name|getFieldFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
argument_list|>
name|getFieldFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|fieldBuilder_
operator|==
literal|null
condition|)
block|{
name|fieldBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
argument_list|>
argument_list|(
name|field_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|field_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|fieldBuilder_
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
name|extension_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureExtensionIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|extension_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
argument_list|(
name|extension_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
argument_list|>
name|extensionBuilder_
decl_stmt|;
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
name|getExtensionList
parameter_list|()
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|extension_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|extensionBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>        */
specifier|public
name|int
name|getExtensionCount
parameter_list|()
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|extension_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|extensionBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|getExtension
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|extension_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|extensionBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>        */
specifier|public
name|Builder
name|setExtension
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureExtensionIsMutable
argument_list|()
expr_stmt|;
name|extension_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>        */
specifier|public
name|Builder
name|setExtension
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureExtensionIsMutable
argument_list|()
expr_stmt|;
name|extension_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>        */
specifier|public
name|Builder
name|addExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureExtensionIsMutable
argument_list|()
expr_stmt|;
name|extension_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>        */
specifier|public
name|Builder
name|addExtension
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureExtensionIsMutable
argument_list|()
expr_stmt|;
name|extension_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>        */
specifier|public
name|Builder
name|addExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureExtensionIsMutable
argument_list|()
expr_stmt|;
name|extension_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>        */
specifier|public
name|Builder
name|addExtension
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureExtensionIsMutable
argument_list|()
expr_stmt|;
name|extension_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>        */
specifier|public
name|Builder
name|addAllExtension
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureExtensionIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|extension_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>        */
specifier|public
name|Builder
name|clearExtension
parameter_list|()
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
name|extension_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>        */
specifier|public
name|Builder
name|removeExtension
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureExtensionIsMutable
argument_list|()
expr_stmt|;
name|extension_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
name|getExtensionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getExtensionFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
name|getExtensionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|extension_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|extensionBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
argument_list|>
name|getExtensionOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|extensionBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|extensionBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|extension_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
name|addExtensionBuilder
parameter_list|()
block|{
return|return
name|getExtensionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
name|addExtensionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getExtensionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.FieldDescriptorProto extension = 6;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
argument_list|>
name|getExtensionBuilderList
parameter_list|()
block|{
return|return
name|getExtensionFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
argument_list|>
name|getExtensionFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|extensionBuilder_
operator|==
literal|null
condition|)
block|{
name|extensionBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
argument_list|>
argument_list|(
name|extension_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|extension_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|extensionBuilder_
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|>
name|nestedType_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureNestedTypeIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|nestedType_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|>
argument_list|(
name|nestedType_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProtoOrBuilder
argument_list|>
name|nestedTypeBuilder_
decl_stmt|;
comment|/**        *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|>
name|getNestedTypeList
parameter_list|()
block|{
if|if
condition|(
name|nestedTypeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|nestedType_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|nestedTypeBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>        */
specifier|public
name|int
name|getNestedTypeCount
parameter_list|()
block|{
if|if
condition|(
name|nestedTypeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|nestedType_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|nestedTypeBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|getNestedType
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|nestedTypeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|nestedType_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|nestedTypeBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>        */
specifier|public
name|Builder
name|setNestedType
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|nestedTypeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureNestedTypeIsMutable
argument_list|()
expr_stmt|;
name|nestedType_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|nestedTypeBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>        */
specifier|public
name|Builder
name|setNestedType
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|nestedTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureNestedTypeIsMutable
argument_list|()
expr_stmt|;
name|nestedType_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|nestedTypeBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>        */
specifier|public
name|Builder
name|addNestedType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|nestedTypeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureNestedTypeIsMutable
argument_list|()
expr_stmt|;
name|nestedType_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|nestedTypeBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>        */
specifier|public
name|Builder
name|addNestedType
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|nestedTypeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureNestedTypeIsMutable
argument_list|()
expr_stmt|;
name|nestedType_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|nestedTypeBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>        */
specifier|public
name|Builder
name|addNestedType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|nestedTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureNestedTypeIsMutable
argument_list|()
expr_stmt|;
name|nestedType_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|nestedTypeBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>        */
specifier|public
name|Builder
name|addNestedType
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|nestedTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureNestedTypeIsMutable
argument_list|()
expr_stmt|;
name|nestedType_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|nestedTypeBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>        */
specifier|public
name|Builder
name|addAllNestedType
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|nestedTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureNestedTypeIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|nestedType_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|nestedTypeBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>        */
specifier|public
name|Builder
name|clearNestedType
parameter_list|()
block|{
if|if
condition|(
name|nestedTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|nestedType_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|nestedTypeBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>        */
specifier|public
name|Builder
name|removeNestedType
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|nestedTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureNestedTypeIsMutable
argument_list|()
expr_stmt|;
name|nestedType_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|nestedTypeBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|Builder
name|getNestedTypeBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getNestedTypeFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProtoOrBuilder
name|getNestedTypeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|nestedTypeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|nestedType_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|nestedTypeBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProtoOrBuilder
argument_list|>
name|getNestedTypeOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|nestedTypeBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|nestedTypeBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|nestedType_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|Builder
name|addNestedTypeBuilder
parameter_list|()
block|{
return|return
name|getNestedTypeFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|Builder
name|addNestedTypeBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getNestedTypeFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto nested_type = 3;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|Builder
argument_list|>
name|getNestedTypeBuilderList
parameter_list|()
block|{
return|return
name|getNestedTypeFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProtoOrBuilder
argument_list|>
name|getNestedTypeFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|nestedTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|nestedTypeBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProtoOrBuilder
argument_list|>
argument_list|(
name|nestedType_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|nestedType_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|nestedTypeBuilder_
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|>
name|enumType_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureEnumTypeIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|enumType_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|>
argument_list|(
name|enumType_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProtoOrBuilder
argument_list|>
name|enumTypeBuilder_
decl_stmt|;
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|>
name|getEnumTypeList
parameter_list|()
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|enumType_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|enumTypeBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>        */
specifier|public
name|int
name|getEnumTypeCount
parameter_list|()
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|enumType_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|enumTypeBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|getEnumType
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|enumType_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|enumTypeBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>        */
specifier|public
name|Builder
name|setEnumType
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureEnumTypeIsMutable
argument_list|()
expr_stmt|;
name|enumType_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enumTypeBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>        */
specifier|public
name|Builder
name|setEnumType
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureEnumTypeIsMutable
argument_list|()
expr_stmt|;
name|enumType_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enumTypeBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>        */
specifier|public
name|Builder
name|addEnumType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureEnumTypeIsMutable
argument_list|()
expr_stmt|;
name|enumType_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enumTypeBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>        */
specifier|public
name|Builder
name|addEnumType
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureEnumTypeIsMutable
argument_list|()
expr_stmt|;
name|enumType_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enumTypeBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>        */
specifier|public
name|Builder
name|addEnumType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureEnumTypeIsMutable
argument_list|()
expr_stmt|;
name|enumType_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enumTypeBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>        */
specifier|public
name|Builder
name|addEnumType
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureEnumTypeIsMutable
argument_list|()
expr_stmt|;
name|enumType_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enumTypeBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>        */
specifier|public
name|Builder
name|addAllEnumType
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureEnumTypeIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|enumType_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enumTypeBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>        */
specifier|public
name|Builder
name|clearEnumType
parameter_list|()
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|enumType_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enumTypeBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>        */
specifier|public
name|Builder
name|removeEnumType
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureEnumTypeIsMutable
argument_list|()
expr_stmt|;
name|enumType_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|enumTypeBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|Builder
name|getEnumTypeBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getEnumTypeFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProtoOrBuilder
name|getEnumTypeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|enumType_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|enumTypeBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProtoOrBuilder
argument_list|>
name|getEnumTypeOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|enumTypeBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|enumType_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|Builder
name|addEnumTypeBuilder
parameter_list|()
block|{
return|return
name|getEnumTypeFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|Builder
name|addEnumTypeBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getEnumTypeFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumDescriptorProto enum_type = 4;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|Builder
argument_list|>
name|getEnumTypeBuilderList
parameter_list|()
block|{
return|return
name|getEnumTypeFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProtoOrBuilder
argument_list|>
name|getEnumTypeFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|enumTypeBuilder_
operator|==
literal|null
condition|)
block|{
name|enumTypeBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProtoOrBuilder
argument_list|>
argument_list|(
name|enumType_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|enumType_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|enumTypeBuilder_
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
argument_list|>
name|extensionRange_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureExtensionRangeIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|extensionRange_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
argument_list|>
argument_list|(
name|extensionRange_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRangeOrBuilder
argument_list|>
name|extensionRangeBuilder_
decl_stmt|;
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
argument_list|>
name|getExtensionRangeList
parameter_list|()
block|{
if|if
condition|(
name|extensionRangeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|extensionRange_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|extensionRangeBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>        */
specifier|public
name|int
name|getExtensionRangeCount
parameter_list|()
block|{
if|if
condition|(
name|extensionRangeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|extensionRange_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|extensionRangeBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|getExtensionRange
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|extensionRangeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|extensionRange_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|extensionRangeBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>        */
specifier|public
name|Builder
name|setExtensionRange
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|value
parameter_list|)
block|{
if|if
condition|(
name|extensionRangeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureExtensionRangeIsMutable
argument_list|()
expr_stmt|;
name|extensionRange_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionRangeBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>        */
specifier|public
name|Builder
name|setExtensionRange
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|extensionRangeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureExtensionRangeIsMutable
argument_list|()
expr_stmt|;
name|extensionRange_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionRangeBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>        */
specifier|public
name|Builder
name|addExtensionRange
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|value
parameter_list|)
block|{
if|if
condition|(
name|extensionRangeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureExtensionRangeIsMutable
argument_list|()
expr_stmt|;
name|extensionRange_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionRangeBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>        */
specifier|public
name|Builder
name|addExtensionRange
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
name|value
parameter_list|)
block|{
if|if
condition|(
name|extensionRangeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureExtensionRangeIsMutable
argument_list|()
expr_stmt|;
name|extensionRange_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionRangeBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>        */
specifier|public
name|Builder
name|addExtensionRange
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|extensionRangeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureExtensionRangeIsMutable
argument_list|()
expr_stmt|;
name|extensionRange_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionRangeBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>        */
specifier|public
name|Builder
name|addExtensionRange
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|extensionRangeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureExtensionRangeIsMutable
argument_list|()
expr_stmt|;
name|extensionRange_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionRangeBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>        */
specifier|public
name|Builder
name|addAllExtensionRange
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|extensionRangeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureExtensionRangeIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|extensionRange_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionRangeBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>        */
specifier|public
name|Builder
name|clearExtensionRange
parameter_list|()
block|{
if|if
condition|(
name|extensionRangeBuilder_
operator|==
literal|null
condition|)
block|{
name|extensionRange_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionRangeBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>        */
specifier|public
name|Builder
name|removeExtensionRange
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|extensionRangeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureExtensionRangeIsMutable
argument_list|()
expr_stmt|;
name|extensionRange_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|extensionRangeBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|.
name|Builder
name|getExtensionRangeBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getExtensionRangeFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRangeOrBuilder
name|getExtensionRangeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|extensionRangeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|extensionRange_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|extensionRangeBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRangeOrBuilder
argument_list|>
name|getExtensionRangeOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|extensionRangeBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|extensionRangeBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|extensionRange_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|.
name|Builder
name|addExtensionRangeBuilder
parameter_list|()
block|{
return|return
name|getExtensionRangeFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|.
name|Builder
name|addExtensionRangeBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getExtensionRangeFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ExtensionRange extension_range = 5;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|.
name|Builder
argument_list|>
name|getExtensionRangeBuilderList
parameter_list|()
block|{
return|return
name|getExtensionRangeFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRangeOrBuilder
argument_list|>
name|getExtensionRangeFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|extensionRangeBuilder_
operator|==
literal|null
condition|)
block|{
name|extensionRangeBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRange
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ExtensionRangeOrBuilder
argument_list|>
argument_list|(
name|extensionRange_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|extensionRange_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|extensionRangeBuilder_
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
argument_list|>
name|oneofDecl_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureOneofDeclIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|oneofDecl_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
argument_list|>
argument_list|(
name|oneofDecl_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProtoOrBuilder
argument_list|>
name|oneofDeclBuilder_
decl_stmt|;
comment|/**        *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
argument_list|>
name|getOneofDeclList
parameter_list|()
block|{
if|if
condition|(
name|oneofDeclBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|oneofDecl_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|oneofDeclBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>        */
specifier|public
name|int
name|getOneofDeclCount
parameter_list|()
block|{
if|if
condition|(
name|oneofDeclBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|oneofDecl_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|oneofDeclBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|getOneofDecl
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|oneofDeclBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|oneofDecl_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|oneofDeclBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>        */
specifier|public
name|Builder
name|setOneofDecl
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|oneofDeclBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureOneofDeclIsMutable
argument_list|()
expr_stmt|;
name|oneofDecl_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|oneofDeclBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>        */
specifier|public
name|Builder
name|setOneofDecl
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|oneofDeclBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureOneofDeclIsMutable
argument_list|()
expr_stmt|;
name|oneofDecl_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|oneofDeclBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>        */
specifier|public
name|Builder
name|addOneofDecl
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|oneofDeclBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureOneofDeclIsMutable
argument_list|()
expr_stmt|;
name|oneofDecl_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|oneofDeclBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>        */
specifier|public
name|Builder
name|addOneofDecl
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|oneofDeclBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureOneofDeclIsMutable
argument_list|()
expr_stmt|;
name|oneofDecl_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|oneofDeclBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>        */
specifier|public
name|Builder
name|addOneofDecl
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|oneofDeclBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureOneofDeclIsMutable
argument_list|()
expr_stmt|;
name|oneofDecl_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|oneofDeclBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>        */
specifier|public
name|Builder
name|addOneofDecl
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|oneofDeclBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureOneofDeclIsMutable
argument_list|()
expr_stmt|;
name|oneofDecl_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|oneofDeclBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>        */
specifier|public
name|Builder
name|addAllOneofDecl
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|oneofDeclBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureOneofDeclIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|oneofDecl_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|oneofDeclBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>        */
specifier|public
name|Builder
name|clearOneofDecl
parameter_list|()
block|{
if|if
condition|(
name|oneofDeclBuilder_
operator|==
literal|null
condition|)
block|{
name|oneofDecl_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|oneofDeclBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>        */
specifier|public
name|Builder
name|removeOneofDecl
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|oneofDeclBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureOneofDeclIsMutable
argument_list|()
expr_stmt|;
name|oneofDecl_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|oneofDeclBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|.
name|Builder
name|getOneofDeclBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getOneofDeclFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProtoOrBuilder
name|getOneofDeclOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|oneofDeclBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|oneofDecl_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|oneofDeclBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProtoOrBuilder
argument_list|>
name|getOneofDeclOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|oneofDeclBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|oneofDeclBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|oneofDecl_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|.
name|Builder
name|addOneofDeclBuilder
parameter_list|()
block|{
return|return
name|getOneofDeclFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|.
name|Builder
name|addOneofDeclBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getOneofDeclFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.OneofDescriptorProto oneof_decl = 8;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|.
name|Builder
argument_list|>
name|getOneofDeclBuilderList
parameter_list|()
block|{
return|return
name|getOneofDeclFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProtoOrBuilder
argument_list|>
name|getOneofDeclFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|oneofDeclBuilder_
operator|==
literal|null
condition|)
block|{
name|oneofDeclBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProtoOrBuilder
argument_list|>
argument_list|(
name|oneofDecl_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|oneofDecl_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|oneofDeclBuilder_
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|options_
init|=
literal|null
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptionsOrBuilder
argument_list|>
name|optionsBuilder_
decl_stmt|;
comment|/**        *<code>optional .google.protobuf.MessageOptions options = 7;</code>        */
specifier|public
name|boolean
name|hasOptions
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
return|;
block|}
comment|/**        *<code>optional .google.protobuf.MessageOptions options = 7;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|getOptions
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
else|else
block|{
return|return
name|optionsBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .google.protobuf.MessageOptions options = 7;</code>        */
specifier|public
name|Builder
name|setOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|value
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|options_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.MessageOptions options = 7;</code>        */
specifier|public
name|Builder
name|setOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.MessageOptions options = 7;</code>        */
specifier|public
name|Builder
name|mergeOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|value
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
operator|&&
name|options_
operator|!=
literal|null
operator|&&
name|options_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|options_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|.
name|newBuilder
argument_list|(
name|options_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|options_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.MessageOptions options = 7;</code>        */
specifier|public
name|Builder
name|clearOptions
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.MessageOptions options = 7;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|.
name|Builder
name|getOptionsBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getOptionsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .google.protobuf.MessageOptions options = 7;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|optionsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
block|}
comment|/**        *<code>optional .google.protobuf.MessageOptions options = 7;</code>        */
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptionsOrBuilder
argument_list|>
name|getOptionsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|optionsBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptionsOrBuilder
argument_list|>
argument_list|(
name|getOptions
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|options_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|optionsBuilder_
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
argument_list|>
name|reservedRange_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureReservedRangeIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|reservedRange_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
argument_list|>
argument_list|(
name|reservedRange_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRangeOrBuilder
argument_list|>
name|reservedRangeBuilder_
decl_stmt|;
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
argument_list|>
name|getReservedRangeList
parameter_list|()
block|{
if|if
condition|(
name|reservedRangeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|reservedRange_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|reservedRangeBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>        */
specifier|public
name|int
name|getReservedRangeCount
parameter_list|()
block|{
if|if
condition|(
name|reservedRangeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|reservedRange_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|reservedRangeBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|getReservedRange
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|reservedRangeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|reservedRange_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|reservedRangeBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>        */
specifier|public
name|Builder
name|setReservedRange
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|value
parameter_list|)
block|{
if|if
condition|(
name|reservedRangeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureReservedRangeIsMutable
argument_list|()
expr_stmt|;
name|reservedRange_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|reservedRangeBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>        */
specifier|public
name|Builder
name|setReservedRange
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|reservedRangeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureReservedRangeIsMutable
argument_list|()
expr_stmt|;
name|reservedRange_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|reservedRangeBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>        */
specifier|public
name|Builder
name|addReservedRange
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|value
parameter_list|)
block|{
if|if
condition|(
name|reservedRangeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureReservedRangeIsMutable
argument_list|()
expr_stmt|;
name|reservedRange_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|reservedRangeBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>        */
specifier|public
name|Builder
name|addReservedRange
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
name|value
parameter_list|)
block|{
if|if
condition|(
name|reservedRangeBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureReservedRangeIsMutable
argument_list|()
expr_stmt|;
name|reservedRange_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|reservedRangeBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>        */
specifier|public
name|Builder
name|addReservedRange
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|reservedRangeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureReservedRangeIsMutable
argument_list|()
expr_stmt|;
name|reservedRange_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|reservedRangeBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>        */
specifier|public
name|Builder
name|addReservedRange
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|reservedRangeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureReservedRangeIsMutable
argument_list|()
expr_stmt|;
name|reservedRange_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|reservedRangeBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>        */
specifier|public
name|Builder
name|addAllReservedRange
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|reservedRangeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureReservedRangeIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|reservedRange_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|reservedRangeBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>        */
specifier|public
name|Builder
name|clearReservedRange
parameter_list|()
block|{
if|if
condition|(
name|reservedRangeBuilder_
operator|==
literal|null
condition|)
block|{
name|reservedRange_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|reservedRangeBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>        */
specifier|public
name|Builder
name|removeReservedRange
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|reservedRangeBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureReservedRangeIsMutable
argument_list|()
expr_stmt|;
name|reservedRange_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|reservedRangeBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|.
name|Builder
name|getReservedRangeBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getReservedRangeFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRangeOrBuilder
name|getReservedRangeOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|reservedRangeBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|reservedRange_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|reservedRangeBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRangeOrBuilder
argument_list|>
name|getReservedRangeOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|reservedRangeBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|reservedRangeBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|reservedRange_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|.
name|Builder
name|addReservedRangeBuilder
parameter_list|()
block|{
return|return
name|getReservedRangeFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|.
name|Builder
name|addReservedRangeBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getReservedRangeFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.DescriptorProto.ReservedRange reserved_range = 9;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|.
name|Builder
argument_list|>
name|getReservedRangeBuilderList
parameter_list|()
block|{
return|return
name|getReservedRangeFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRangeOrBuilder
argument_list|>
name|getReservedRangeFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|reservedRangeBuilder_
operator|==
literal|null
condition|)
block|{
name|reservedRangeBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRange
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
operator|.
name|ReservedRangeOrBuilder
argument_list|>
argument_list|(
name|reservedRange_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|reservedRange_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|reservedRangeBuilder_
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringList
name|reservedName_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
decl_stmt|;
specifier|private
name|void
name|ensureReservedNameIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|reservedName_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
argument_list|(
name|reservedName_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
block|}
block|}
comment|/**        *<pre>        * Reserved field names, which may not be used by fields in the same message.        * A given name may only be reserved once.        *</pre>        *        *<code>repeated string reserved_name = 10;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolStringList
name|getReservedNameList
parameter_list|()
block|{
return|return
name|reservedName_
operator|.
name|getUnmodifiableView
argument_list|()
return|;
block|}
comment|/**        *<pre>        * Reserved field names, which may not be used by fields in the same message.        * A given name may only be reserved once.        *</pre>        *        *<code>repeated string reserved_name = 10;</code>        */
specifier|public
name|int
name|getReservedNameCount
parameter_list|()
block|{
return|return
name|reservedName_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**        *<pre>        * Reserved field names, which may not be used by fields in the same message.        * A given name may only be reserved once.        *</pre>        *        *<code>repeated string reserved_name = 10;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getReservedName
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|reservedName_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<pre>        * Reserved field names, which may not be used by fields in the same message.        * A given name may only be reserved once.        *</pre>        *        *<code>repeated string reserved_name = 10;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getReservedNameBytes
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|reservedName_
operator|.
name|getByteString
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<pre>        * Reserved field names, which may not be used by fields in the same message.        * A given name may only be reserved once.        *</pre>        *        *<code>repeated string reserved_name = 10;</code>        */
specifier|public
name|Builder
name|setReservedName
parameter_list|(
name|int
name|index
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureReservedNameIsMutable
argument_list|()
expr_stmt|;
name|reservedName_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Reserved field names, which may not be used by fields in the same message.        * A given name may only be reserved once.        *</pre>        *        *<code>repeated string reserved_name = 10;</code>        */
specifier|public
name|Builder
name|addReservedName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureReservedNameIsMutable
argument_list|()
expr_stmt|;
name|reservedName_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Reserved field names, which may not be used by fields in the same message.        * A given name may only be reserved once.        *</pre>        *        *<code>repeated string reserved_name = 10;</code>        */
specifier|public
name|Builder
name|addAllReservedName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|ensureReservedNameIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|reservedName_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Reserved field names, which may not be used by fields in the same message.        * A given name may only be reserved once.        *</pre>        *        *<code>repeated string reserved_name = 10;</code>        */
specifier|public
name|Builder
name|clearReservedName
parameter_list|()
block|{
name|reservedName_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Reserved field names, which may not be used by fields in the same message.        * A given name may only be reserved once.        *</pre>        *        *<code>repeated string reserved_name = 10;</code>        */
specifier|public
name|Builder
name|addReservedNameBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureReservedNameIsMutable
argument_list|()
expr_stmt|;
name|reservedName_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.DescriptorProto)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.DescriptorProto)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|DescriptorProto
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|DescriptorProto
argument_list|>
argument_list|()
block|{
specifier|public
name|DescriptorProto
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|DescriptorProto
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|DescriptorProto
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|DescriptorProto
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|DescriptorProto
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|FieldDescriptorProtoOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.FieldDescriptorProto)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>optional string name = 1;</code>      */
name|boolean
name|hasName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string name = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string name = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
function_decl|;
comment|/**      *<code>optional int32 number = 3;</code>      */
name|boolean
name|hasNumber
parameter_list|()
function_decl|;
comment|/**      *<code>optional int32 number = 3;</code>      */
name|int
name|getNumber
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.FieldDescriptorProto.Label label = 4;</code>      */
name|boolean
name|hasLabel
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.FieldDescriptorProto.Label label = 4;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Label
name|getLabel
parameter_list|()
function_decl|;
comment|/**      *<pre>      * If type_name is set, this need not be set.  If both this and type_name      * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.      *</pre>      *      *<code>optional .google.protobuf.FieldDescriptorProto.Type type = 5;</code>      */
name|boolean
name|hasType
parameter_list|()
function_decl|;
comment|/**      *<pre>      * If type_name is set, this need not be set.  If both this and type_name      * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.      *</pre>      *      *<code>optional .google.protobuf.FieldDescriptorProto.Type type = 5;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Type
name|getType
parameter_list|()
function_decl|;
comment|/**      *<pre>      * For message and enum types, this is the name of the type.  If the name      * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping      * rules are used to find the type (i.e. first the nested types within this      * message are searched, then within the parent, on up to the root      * namespace).      *</pre>      *      *<code>optional string type_name = 6;</code>      */
name|boolean
name|hasTypeName
parameter_list|()
function_decl|;
comment|/**      *<pre>      * For message and enum types, this is the name of the type.  If the name      * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping      * rules are used to find the type (i.e. first the nested types within this      * message are searched, then within the parent, on up to the root      * namespace).      *</pre>      *      *<code>optional string type_name = 6;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getTypeName
parameter_list|()
function_decl|;
comment|/**      *<pre>      * For message and enum types, this is the name of the type.  If the name      * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping      * rules are used to find the type (i.e. first the nested types within this      * message are searched, then within the parent, on up to the root      * namespace).      *</pre>      *      *<code>optional string type_name = 6;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTypeNameBytes
parameter_list|()
function_decl|;
comment|/**      *<pre>      * For extensions, this is the name of the type being extended.  It is      * resolved in the same manner as type_name.      *</pre>      *      *<code>optional string extendee = 2;</code>      */
name|boolean
name|hasExtendee
parameter_list|()
function_decl|;
comment|/**      *<pre>      * For extensions, this is the name of the type being extended.  It is      * resolved in the same manner as type_name.      *</pre>      *      *<code>optional string extendee = 2;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getExtendee
parameter_list|()
function_decl|;
comment|/**      *<pre>      * For extensions, this is the name of the type being extended.  It is      * resolved in the same manner as type_name.      *</pre>      *      *<code>optional string extendee = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getExtendeeBytes
parameter_list|()
function_decl|;
comment|/**      *<pre>      * For numeric types, contains the original text representation of the value.      * For booleans, "true" or "false".      * For strings, contains the default text contents (not escaped in any way).      * For bytes, contains the C escaped value.  All bytes&gt;= 128 are escaped.      * TODO(kenton):  Base-64 encode?      *</pre>      *      *<code>optional string default_value = 7;</code>      */
name|boolean
name|hasDefaultValue
parameter_list|()
function_decl|;
comment|/**      *<pre>      * For numeric types, contains the original text representation of the value.      * For booleans, "true" or "false".      * For strings, contains the default text contents (not escaped in any way).      * For bytes, contains the C escaped value.  All bytes&gt;= 128 are escaped.      * TODO(kenton):  Base-64 encode?      *</pre>      *      *<code>optional string default_value = 7;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getDefaultValue
parameter_list|()
function_decl|;
comment|/**      *<pre>      * For numeric types, contains the original text representation of the value.      * For booleans, "true" or "false".      * For strings, contains the default text contents (not escaped in any way).      * For bytes, contains the C escaped value.  All bytes&gt;= 128 are escaped.      * TODO(kenton):  Base-64 encode?      *</pre>      *      *<code>optional string default_value = 7;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getDefaultValueBytes
parameter_list|()
function_decl|;
comment|/**      *<pre>      * If set, gives the index of a oneof in the containing type's oneof_decl      * list.  This field is a member of that oneof.      *</pre>      *      *<code>optional int32 oneof_index = 9;</code>      */
name|boolean
name|hasOneofIndex
parameter_list|()
function_decl|;
comment|/**      *<pre>      * If set, gives the index of a oneof in the containing type's oneof_decl      * list.  This field is a member of that oneof.      *</pre>      *      *<code>optional int32 oneof_index = 9;</code>      */
name|int
name|getOneofIndex
parameter_list|()
function_decl|;
comment|/**      *<pre>      * JSON name of this field. The value is set by protocol compiler. If the      * user has set a "json_name" option on this field, that option's value      * will be used. Otherwise, it's deduced from the field's name by converting      * it to camelCase.      *</pre>      *      *<code>optional string json_name = 10;</code>      */
name|boolean
name|hasJsonName
parameter_list|()
function_decl|;
comment|/**      *<pre>      * JSON name of this field. The value is set by protocol compiler. If the      * user has set a "json_name" option on this field, that option's value      * will be used. Otherwise, it's deduced from the field's name by converting      * it to camelCase.      *</pre>      *      *<code>optional string json_name = 10;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getJsonName
parameter_list|()
function_decl|;
comment|/**      *<pre>      * JSON name of this field. The value is set by protocol compiler. If the      * user has set a "json_name" option on this field, that option's value      * will be used. Otherwise, it's deduced from the field's name by converting      * it to camelCase.      *</pre>      *      *<code>optional string json_name = 10;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getJsonNameBytes
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.FieldOptions options = 8;</code>      */
name|boolean
name|hasOptions
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.FieldOptions options = 8;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|getOptions
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.FieldOptions options = 8;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    *<pre>    * Describes a field within a message.    *</pre>    *    * Protobuf type {@code google.protobuf.FieldDescriptorProto}    */
specifier|public
specifier|static
specifier|final
class|class
name|FieldDescriptorProto
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.FieldDescriptorProto)
name|FieldDescriptorProtoOrBuilder
block|{
comment|// Use FieldDescriptorProto.newBuilder() to construct.
specifier|private
name|FieldDescriptorProto
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|FieldDescriptorProto
parameter_list|()
block|{
name|name_
operator|=
literal|""
expr_stmt|;
name|number_
operator|=
literal|0
expr_stmt|;
name|label_
operator|=
literal|1
expr_stmt|;
name|type_
operator|=
literal|1
expr_stmt|;
name|typeName_
operator|=
literal|""
expr_stmt|;
name|extendee_
operator|=
literal|""
expr_stmt|;
name|defaultValue_
operator|=
literal|""
expr_stmt|;
name|oneofIndex_
operator|=
literal|0
expr_stmt|;
name|jsonName_
operator|=
literal|""
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|FieldDescriptorProto
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|extendee_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|24
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|number_
operator|=
name|input
operator|.
name|readInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|32
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Label
name|value
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Label
operator|.
name|valueOf
argument_list|(
name|rawValue
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unknownFields
operator|.
name|mergeVarintField
argument_list|(
literal|4
argument_list|,
name|rawValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|label_
operator|=
name|rawValue
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|40
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Type
name|value
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Type
operator|.
name|valueOf
argument_list|(
name|rawValue
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unknownFields
operator|.
name|mergeVarintField
argument_list|(
literal|5
argument_list|,
name|rawValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|type_
operator|=
name|rawValue
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|50
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|typeName_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|58
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|defaultValue_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|66
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|options_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|options_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|options_
argument_list|)
expr_stmt|;
name|options_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
break|break;
block|}
case|case
literal|72
case|:
block|{
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
name|oneofIndex_
operator|=
name|input
operator|.
name|readInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|82
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
name|jsonName_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FieldDescriptorProto_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FieldDescriptorProto_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      * Protobuf enum {@code google.protobuf.FieldDescriptorProto.Type}      */
specifier|public
enum|enum
name|Type
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolMessageEnum
block|{
comment|/**        *<pre>        * 0 is reserved for errors.        * Order is weird for historical reasons.        *</pre>        *        *<code>TYPE_DOUBLE = 1;</code>        */
name|TYPE_DOUBLE
argument_list|(
literal|1
argument_list|)
block|,
comment|/**        *<code>TYPE_FLOAT = 2;</code>        */
name|TYPE_FLOAT
argument_list|(
literal|2
argument_list|)
block|,
comment|/**        *<pre>        * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if        * negative values are likely.        *</pre>        *        *<code>TYPE_INT64 = 3;</code>        */
name|TYPE_INT64
argument_list|(
literal|3
argument_list|)
block|,
comment|/**        *<code>TYPE_UINT64 = 4;</code>        */
name|TYPE_UINT64
argument_list|(
literal|4
argument_list|)
block|,
comment|/**        *<pre>        * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if        * negative values are likely.        *</pre>        *        *<code>TYPE_INT32 = 5;</code>        */
name|TYPE_INT32
argument_list|(
literal|5
argument_list|)
block|,
comment|/**        *<code>TYPE_FIXED64 = 6;</code>        */
name|TYPE_FIXED64
argument_list|(
literal|6
argument_list|)
block|,
comment|/**        *<code>TYPE_FIXED32 = 7;</code>        */
name|TYPE_FIXED32
argument_list|(
literal|7
argument_list|)
block|,
comment|/**        *<code>TYPE_BOOL = 8;</code>        */
name|TYPE_BOOL
argument_list|(
literal|8
argument_list|)
block|,
comment|/**        *<code>TYPE_STRING = 9;</code>        */
name|TYPE_STRING
argument_list|(
literal|9
argument_list|)
block|,
comment|/**        *<pre>        * Tag-delimited aggregate.        * Group type is deprecated and not supported in proto3. However, Proto3        * implementations should still be able to parse the group wire format and        * treat group fields as unknown fields.        *</pre>        *        *<code>TYPE_GROUP = 10;</code>        */
name|TYPE_GROUP
argument_list|(
literal|10
argument_list|)
block|,
comment|/**        *<pre>        * Length-delimited aggregate.        *</pre>        *        *<code>TYPE_MESSAGE = 11;</code>        */
name|TYPE_MESSAGE
argument_list|(
literal|11
argument_list|)
block|,
comment|/**        *<pre>        * New in version 2.        *</pre>        *        *<code>TYPE_BYTES = 12;</code>        */
name|TYPE_BYTES
argument_list|(
literal|12
argument_list|)
block|,
comment|/**        *<code>TYPE_UINT32 = 13;</code>        */
name|TYPE_UINT32
argument_list|(
literal|13
argument_list|)
block|,
comment|/**        *<code>TYPE_ENUM = 14;</code>        */
name|TYPE_ENUM
argument_list|(
literal|14
argument_list|)
block|,
comment|/**        *<code>TYPE_SFIXED32 = 15;</code>        */
name|TYPE_SFIXED32
argument_list|(
literal|15
argument_list|)
block|,
comment|/**        *<code>TYPE_SFIXED64 = 16;</code>        */
name|TYPE_SFIXED64
argument_list|(
literal|16
argument_list|)
block|,
comment|/**        *<pre>        * Uses ZigZag encoding.        *</pre>        *        *<code>TYPE_SINT32 = 17;</code>        */
name|TYPE_SINT32
argument_list|(
literal|17
argument_list|)
block|,
comment|/**        *<pre>        * Uses ZigZag encoding.        *</pre>        *        *<code>TYPE_SINT64 = 18;</code>        */
name|TYPE_SINT64
argument_list|(
literal|18
argument_list|)
block|,       ;
comment|/**        *<pre>        * 0 is reserved for errors.        * Order is weird for historical reasons.        *</pre>        *        *<code>TYPE_DOUBLE = 1;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_DOUBLE_VALUE
init|=
literal|1
decl_stmt|;
comment|/**        *<code>TYPE_FLOAT = 2;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_FLOAT_VALUE
init|=
literal|2
decl_stmt|;
comment|/**        *<pre>        * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if        * negative values are likely.        *</pre>        *        *<code>TYPE_INT64 = 3;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_INT64_VALUE
init|=
literal|3
decl_stmt|;
comment|/**        *<code>TYPE_UINT64 = 4;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_UINT64_VALUE
init|=
literal|4
decl_stmt|;
comment|/**        *<pre>        * Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if        * negative values are likely.        *</pre>        *        *<code>TYPE_INT32 = 5;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_INT32_VALUE
init|=
literal|5
decl_stmt|;
comment|/**        *<code>TYPE_FIXED64 = 6;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_FIXED64_VALUE
init|=
literal|6
decl_stmt|;
comment|/**        *<code>TYPE_FIXED32 = 7;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_FIXED32_VALUE
init|=
literal|7
decl_stmt|;
comment|/**        *<code>TYPE_BOOL = 8;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_BOOL_VALUE
init|=
literal|8
decl_stmt|;
comment|/**        *<code>TYPE_STRING = 9;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_STRING_VALUE
init|=
literal|9
decl_stmt|;
comment|/**        *<pre>        * Tag-delimited aggregate.        * Group type is deprecated and not supported in proto3. However, Proto3        * implementations should still be able to parse the group wire format and        * treat group fields as unknown fields.        *</pre>        *        *<code>TYPE_GROUP = 10;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_GROUP_VALUE
init|=
literal|10
decl_stmt|;
comment|/**        *<pre>        * Length-delimited aggregate.        *</pre>        *        *<code>TYPE_MESSAGE = 11;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_MESSAGE_VALUE
init|=
literal|11
decl_stmt|;
comment|/**        *<pre>        * New in version 2.        *</pre>        *        *<code>TYPE_BYTES = 12;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_BYTES_VALUE
init|=
literal|12
decl_stmt|;
comment|/**        *<code>TYPE_UINT32 = 13;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_UINT32_VALUE
init|=
literal|13
decl_stmt|;
comment|/**        *<code>TYPE_ENUM = 14;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_ENUM_VALUE
init|=
literal|14
decl_stmt|;
comment|/**        *<code>TYPE_SFIXED32 = 15;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_SFIXED32_VALUE
init|=
literal|15
decl_stmt|;
comment|/**        *<code>TYPE_SFIXED64 = 16;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_SFIXED64_VALUE
init|=
literal|16
decl_stmt|;
comment|/**        *<pre>        * Uses ZigZag encoding.        *</pre>        *        *<code>TYPE_SINT32 = 17;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_SINT32_VALUE
init|=
literal|17
decl_stmt|;
comment|/**        *<pre>        * Uses ZigZag encoding.        *</pre>        *        *<code>TYPE_SINT64 = 18;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_SINT64_VALUE
init|=
literal|18
decl_stmt|;
specifier|public
specifier|final
name|int
name|getNumber
parameter_list|()
block|{
return|return
name|value
return|;
block|}
comment|/**        * @deprecated Use {@link #forNumber(int)} instead.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
name|Type
name|valueOf
parameter_list|(
name|int
name|value
parameter_list|)
block|{
return|return
name|forNumber
argument_list|(
name|value
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Type
name|forNumber
parameter_list|(
name|int
name|value
parameter_list|)
block|{
switch|switch
condition|(
name|value
condition|)
block|{
case|case
literal|1
case|:
return|return
name|TYPE_DOUBLE
return|;
case|case
literal|2
case|:
return|return
name|TYPE_FLOAT
return|;
case|case
literal|3
case|:
return|return
name|TYPE_INT64
return|;
case|case
literal|4
case|:
return|return
name|TYPE_UINT64
return|;
case|case
literal|5
case|:
return|return
name|TYPE_INT32
return|;
case|case
literal|6
case|:
return|return
name|TYPE_FIXED64
return|;
case|case
literal|7
case|:
return|return
name|TYPE_FIXED32
return|;
case|case
literal|8
case|:
return|return
name|TYPE_BOOL
return|;
case|case
literal|9
case|:
return|return
name|TYPE_STRING
return|;
case|case
literal|10
case|:
return|return
name|TYPE_GROUP
return|;
case|case
literal|11
case|:
return|return
name|TYPE_MESSAGE
return|;
case|case
literal|12
case|:
return|return
name|TYPE_BYTES
return|;
case|case
literal|13
case|:
return|return
name|TYPE_UINT32
return|;
case|case
literal|14
case|:
return|return
name|TYPE_ENUM
return|;
case|case
literal|15
case|:
return|return
name|TYPE_SFIXED32
return|;
case|case
literal|16
case|:
return|return
name|TYPE_SFIXED64
return|;
case|case
literal|17
case|:
return|return
name|TYPE_SINT32
return|;
case|case
literal|18
case|:
return|return
name|TYPE_SINT64
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|Type
argument_list|>
name|internalGetValueMap
parameter_list|()
block|{
return|return
name|internalValueMap
return|;
block|}
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|Type
argument_list|>
name|internalValueMap
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|Type
argument_list|>
argument_list|()
block|{
specifier|public
name|Type
name|findValueByNumber
parameter_list|(
name|int
name|number
parameter_list|)
block|{
return|return
name|Type
operator|.
name|forNumber
argument_list|(
name|number
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|getValueDescriptor
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
name|ordinal
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getEnumTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
specifier|private
specifier|static
specifier|final
name|Type
index|[]
name|VALUES
init|=
name|values
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|Type
name|valueOf
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|desc
parameter_list|)
block|{
if|if
condition|(
name|desc
operator|.
name|getType
argument_list|()
operator|!=
name|getDescriptor
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|IllegalArgumentException
argument_list|(
literal|"EnumValueDescriptor is not for this type."
argument_list|)
throw|;
block|}
return|return
name|VALUES
index|[
name|desc
operator|.
name|getIndex
argument_list|()
index|]
return|;
block|}
specifier|private
specifier|final
name|int
name|value
decl_stmt|;
specifier|private
name|Type
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(enum_scope:google.protobuf.FieldDescriptorProto.Type)
block|}
comment|/**      * Protobuf enum {@code google.protobuf.FieldDescriptorProto.Label}      */
specifier|public
enum|enum
name|Label
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolMessageEnum
block|{
comment|/**        *<pre>        * 0 is reserved for errors        *</pre>        *        *<code>LABEL_OPTIONAL = 1;</code>        */
name|LABEL_OPTIONAL
argument_list|(
literal|1
argument_list|)
block|,
comment|/**        *<code>LABEL_REQUIRED = 2;</code>        */
name|LABEL_REQUIRED
argument_list|(
literal|2
argument_list|)
block|,
comment|/**        *<code>LABEL_REPEATED = 3;</code>        */
name|LABEL_REPEATED
argument_list|(
literal|3
argument_list|)
block|,       ;
comment|/**        *<pre>        * 0 is reserved for errors        *</pre>        *        *<code>LABEL_OPTIONAL = 1;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|LABEL_OPTIONAL_VALUE
init|=
literal|1
decl_stmt|;
comment|/**        *<code>LABEL_REQUIRED = 2;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|LABEL_REQUIRED_VALUE
init|=
literal|2
decl_stmt|;
comment|/**        *<code>LABEL_REPEATED = 3;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|LABEL_REPEATED_VALUE
init|=
literal|3
decl_stmt|;
specifier|public
specifier|final
name|int
name|getNumber
parameter_list|()
block|{
return|return
name|value
return|;
block|}
comment|/**        * @deprecated Use {@link #forNumber(int)} instead.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
name|Label
name|valueOf
parameter_list|(
name|int
name|value
parameter_list|)
block|{
return|return
name|forNumber
argument_list|(
name|value
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Label
name|forNumber
parameter_list|(
name|int
name|value
parameter_list|)
block|{
switch|switch
condition|(
name|value
condition|)
block|{
case|case
literal|1
case|:
return|return
name|LABEL_OPTIONAL
return|;
case|case
literal|2
case|:
return|return
name|LABEL_REQUIRED
return|;
case|case
literal|3
case|:
return|return
name|LABEL_REPEATED
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|Label
argument_list|>
name|internalGetValueMap
parameter_list|()
block|{
return|return
name|internalValueMap
return|;
block|}
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|Label
argument_list|>
name|internalValueMap
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|Label
argument_list|>
argument_list|()
block|{
specifier|public
name|Label
name|findValueByNumber
parameter_list|(
name|int
name|number
parameter_list|)
block|{
return|return
name|Label
operator|.
name|forNumber
argument_list|(
name|number
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|getValueDescriptor
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
name|ordinal
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getEnumTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
return|;
block|}
specifier|private
specifier|static
specifier|final
name|Label
index|[]
name|VALUES
init|=
name|values
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|Label
name|valueOf
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|desc
parameter_list|)
block|{
if|if
condition|(
name|desc
operator|.
name|getType
argument_list|()
operator|!=
name|getDescriptor
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|IllegalArgumentException
argument_list|(
literal|"EnumValueDescriptor is not for this type."
argument_list|)
throw|;
block|}
return|return
name|VALUES
index|[
name|desc
operator|.
name|getIndex
argument_list|()
index|]
return|;
block|}
specifier|private
specifier|final
name|int
name|value
decl_stmt|;
specifier|private
name|Label
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(enum_scope:google.protobuf.FieldDescriptorProto.Label)
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|NAME_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
decl_stmt|;
comment|/**      *<code>optional string name = 1;</code>      */
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>optional string name = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|name_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string name = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|NUMBER_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|int
name|number_
decl_stmt|;
comment|/**      *<code>optional int32 number = 3;</code>      */
specifier|public
name|boolean
name|hasNumber
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>optional int32 number = 3;</code>      */
specifier|public
name|int
name|getNumber
parameter_list|()
block|{
return|return
name|number_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|LABEL_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|int
name|label_
decl_stmt|;
comment|/**      *<code>optional .google.protobuf.FieldDescriptorProto.Label label = 4;</code>      */
specifier|public
name|boolean
name|hasLabel
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<code>optional .google.protobuf.FieldDescriptorProto.Label label = 4;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Label
name|getLabel
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Label
name|result
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Label
operator|.
name|valueOf
argument_list|(
name|label_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Label
operator|.
name|LABEL_OPTIONAL
else|:
name|result
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|int
name|type_
decl_stmt|;
comment|/**      *<pre>      * If type_name is set, this need not be set.  If both this and type_name      * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.      *</pre>      *      *<code>optional .google.protobuf.FieldDescriptorProto.Type type = 5;</code>      */
specifier|public
name|boolean
name|hasType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**      *<pre>      * If type_name is set, this need not be set.  If both this and type_name      * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.      *</pre>      *      *<code>optional .google.protobuf.FieldDescriptorProto.Type type = 5;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Type
name|getType
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Type
name|result
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Type
operator|.
name|valueOf
argument_list|(
name|type_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Type
operator|.
name|TYPE_DOUBLE
else|:
name|result
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|TYPE_NAME_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|typeName_
decl_stmt|;
comment|/**      *<pre>      * For message and enum types, this is the name of the type.  If the name      * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping      * rules are used to find the type (i.e. first the nested types within this      * message are searched, then within the parent, on up to the root      * namespace).      *</pre>      *      *<code>optional string type_name = 6;</code>      */
specifier|public
name|boolean
name|hasTypeName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**      *<pre>      * For message and enum types, this is the name of the type.  If the name      * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping      * rules are used to find the type (i.e. first the nested types within this      * message are searched, then within the parent, on up to the root      * namespace).      *</pre>      *      *<code>optional string type_name = 6;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getTypeName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|typeName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|typeName_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<pre>      * For message and enum types, this is the name of the type.  If the name      * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping      * rules are used to find the type (i.e. first the nested types within this      * message are searched, then within the parent, on up to the root      * namespace).      *</pre>      *      *<code>optional string type_name = 6;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTypeNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|typeName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|typeName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|EXTENDEE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|extendee_
decl_stmt|;
comment|/**      *<pre>      * For extensions, this is the name of the type being extended.  It is      * resolved in the same manner as type_name.      *</pre>      *      *<code>optional string extendee = 2;</code>      */
specifier|public
name|boolean
name|hasExtendee
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**      *<pre>      * For extensions, this is the name of the type being extended.  It is      * resolved in the same manner as type_name.      *</pre>      *      *<code>optional string extendee = 2;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getExtendee
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|extendee_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|extendee_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<pre>      * For extensions, this is the name of the type being extended.  It is      * resolved in the same manner as type_name.      *</pre>      *      *<code>optional string extendee = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getExtendeeBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|extendee_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|extendee_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_VALUE_FIELD_NUMBER
init|=
literal|7
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|defaultValue_
decl_stmt|;
comment|/**      *<pre>      * For numeric types, contains the original text representation of the value.      * For booleans, "true" or "false".      * For strings, contains the default text contents (not escaped in any way).      * For bytes, contains the C escaped value.  All bytes&gt;= 128 are escaped.      * TODO(kenton):  Base-64 encode?      *</pre>      *      *<code>optional string default_value = 7;</code>      */
specifier|public
name|boolean
name|hasDefaultValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
return|;
block|}
comment|/**      *<pre>      * For numeric types, contains the original text representation of the value.      * For booleans, "true" or "false".      * For strings, contains the default text contents (not escaped in any way).      * For bytes, contains the C escaped value.  All bytes&gt;= 128 are escaped.      * TODO(kenton):  Base-64 encode?      *</pre>      *      *<code>optional string default_value = 7;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getDefaultValue
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|defaultValue_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|defaultValue_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<pre>      * For numeric types, contains the original text representation of the value.      * For booleans, "true" or "false".      * For strings, contains the default text contents (not escaped in any way).      * For bytes, contains the C escaped value.  All bytes&gt;= 128 are escaped.      * TODO(kenton):  Base-64 encode?      *</pre>      *      *<code>optional string default_value = 7;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getDefaultValueBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|defaultValue_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|defaultValue_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|ONEOF_INDEX_FIELD_NUMBER
init|=
literal|9
decl_stmt|;
specifier|private
name|int
name|oneofIndex_
decl_stmt|;
comment|/**      *<pre>      * If set, gives the index of a oneof in the containing type's oneof_decl      * list.  This field is a member of that oneof.      *</pre>      *      *<code>optional int32 oneof_index = 9;</code>      */
specifier|public
name|boolean
name|hasOneofIndex
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
return|;
block|}
comment|/**      *<pre>      * If set, gives the index of a oneof in the containing type's oneof_decl      * list.  This field is a member of that oneof.      *</pre>      *      *<code>optional int32 oneof_index = 9;</code>      */
specifier|public
name|int
name|getOneofIndex
parameter_list|()
block|{
return|return
name|oneofIndex_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|JSON_NAME_FIELD_NUMBER
init|=
literal|10
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|jsonName_
decl_stmt|;
comment|/**      *<pre>      * JSON name of this field. The value is set by protocol compiler. If the      * user has set a "json_name" option on this field, that option's value      * will be used. Otherwise, it's deduced from the field's name by converting      * it to camelCase.      *</pre>      *      *<code>optional string json_name = 10;</code>      */
specifier|public
name|boolean
name|hasJsonName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
return|;
block|}
comment|/**      *<pre>      * JSON name of this field. The value is set by protocol compiler. If the      * user has set a "json_name" option on this field, that option's value      * will be used. Otherwise, it's deduced from the field's name by converting      * it to camelCase.      *</pre>      *      *<code>optional string json_name = 10;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getJsonName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|jsonName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|jsonName_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<pre>      * JSON name of this field. The value is set by protocol compiler. If the      * user has set a "json_name" option on this field, that option's value      * will be used. Otherwise, it's deduced from the field's name by converting      * it to camelCase.      *</pre>      *      *<code>optional string json_name = 10;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getJsonNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|jsonName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|jsonName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|OPTIONS_FIELD_NUMBER
init|=
literal|8
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|options_
decl_stmt|;
comment|/**      *<code>optional .google.protobuf.FieldOptions options = 8;</code>      */
specifier|public
name|boolean
name|hasOptions
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
return|;
block|}
comment|/**      *<code>optional .google.protobuf.FieldOptions options = 8;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|getOptions
parameter_list|()
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
comment|/**      *<code>optional .google.protobuf.FieldOptions options = 8;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getOptions
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|1
argument_list|,
name|name_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|2
argument_list|,
name|extendee_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt32
argument_list|(
literal|3
argument_list|,
name|number_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|4
argument_list|,
name|label_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|5
argument_list|,
name|type_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|6
argument_list|,
name|typeName_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|7
argument_list|,
name|defaultValue_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|8
argument_list|,
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt32
argument_list|(
literal|9
argument_list|,
name|oneofIndex_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|10
argument_list|,
name|jsonName_
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|1
argument_list|,
name|name_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|2
argument_list|,
name|extendee_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32Size
argument_list|(
literal|3
argument_list|,
name|number_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|4
argument_list|,
name|label_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|5
argument_list|,
name|type_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|6
argument_list|,
name|typeName_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|7
argument_list|,
name|defaultValue_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|8
argument_list|,
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32Size
argument_list|(
literal|9
argument_list|,
name|oneofIndex_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|10
argument_list|,
name|jsonName_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasName
argument_list|()
operator|==
name|other
operator|.
name|hasName
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasName
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasNumber
argument_list|()
operator|==
name|other
operator|.
name|hasNumber
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasNumber
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getNumber
argument_list|()
operator|==
name|other
operator|.
name|getNumber
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasLabel
argument_list|()
operator|==
name|other
operator|.
name|hasLabel
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasLabel
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|label_
operator|==
name|other
operator|.
name|label_
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasType
argument_list|()
operator|==
name|other
operator|.
name|hasType
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasType
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|type_
operator|==
name|other
operator|.
name|type_
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasTypeName
argument_list|()
operator|==
name|other
operator|.
name|hasTypeName
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasTypeName
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getTypeName
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getTypeName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasExtendee
argument_list|()
operator|==
name|other
operator|.
name|hasExtendee
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasExtendee
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getExtendee
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getExtendee
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasDefaultValue
argument_list|()
operator|==
name|other
operator|.
name|hasDefaultValue
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasDefaultValue
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getDefaultValue
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getDefaultValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasOneofIndex
argument_list|()
operator|==
name|other
operator|.
name|hasOneofIndex
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasOneofIndex
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getOneofIndex
argument_list|()
operator|==
name|other
operator|.
name|getOneofIndex
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasJsonName
argument_list|()
operator|==
name|other
operator|.
name|hasJsonName
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasJsonName
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getJsonName
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getJsonName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasOptions
argument_list|()
operator|==
name|other
operator|.
name|hasOptions
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getOptions
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasName
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|NAME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getName
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasNumber
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|NUMBER_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getNumber
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasLabel
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|LABEL_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|label_
expr_stmt|;
block|}
if|if
condition|(
name|hasType
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|TYPE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|type_
expr_stmt|;
block|}
if|if
condition|(
name|hasTypeName
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|TYPE_NAME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getTypeName
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasExtendee
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|EXTENDEE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getExtendee
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasDefaultValue
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|DEFAULT_VALUE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getDefaultValue
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasOneofIndex
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|ONEOF_INDEX_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getOneofIndex
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasJsonName
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|JSON_NAME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getJsonName
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|OPTIONS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getOptions
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      *<pre>      * Describes a field within a message.      *</pre>      *      * Protobuf type {@code google.protobuf.FieldDescriptorProto}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.FieldDescriptorProto)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProtoOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FieldDescriptorProto_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FieldDescriptorProto_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.FieldDescriptorProto.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getOptionsFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|name_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|number_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|label_
operator|=
literal|1
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|type_
operator|=
literal|1
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|typeName_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|extendee_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|defaultValue_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|oneofIndex_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|jsonName_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FieldDescriptorProto_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|name_
operator|=
name|name_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|number_
operator|=
name|number_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|label_
operator|=
name|label_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|result
operator|.
name|type_
operator|=
name|type_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|result
operator|.
name|typeName_
operator|=
name|typeName_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
name|result
operator|.
name|extendee_
operator|=
name|extendee_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000040
expr_stmt|;
block|}
name|result
operator|.
name|defaultValue_
operator|=
name|defaultValue_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000080
expr_stmt|;
block|}
name|result
operator|.
name|oneofIndex_
operator|=
name|oneofIndex_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000100
expr_stmt|;
block|}
name|result
operator|.
name|jsonName_
operator|=
name|jsonName_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000200
expr_stmt|;
block|}
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|options_
operator|=
name|options_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|options_
operator|=
name|optionsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|other
operator|.
name|name_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasNumber
argument_list|()
condition|)
block|{
name|setNumber
argument_list|(
name|other
operator|.
name|getNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasLabel
argument_list|()
condition|)
block|{
name|setLabel
argument_list|(
name|other
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasType
argument_list|()
condition|)
block|{
name|setType
argument_list|(
name|other
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasTypeName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|typeName_
operator|=
name|other
operator|.
name|typeName_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasExtendee
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|extendee_
operator|=
name|other
operator|.
name|extendee_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasDefaultValue
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|defaultValue_
operator|=
name|other
operator|.
name|defaultValue_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasOneofIndex
argument_list|()
condition|)
block|{
name|setOneofIndex
argument_list|(
name|other
operator|.
name|getOneofIndex
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasJsonName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
name|jsonName_
operator|=
name|other
operator|.
name|jsonName_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasOptions
argument_list|()
condition|)
block|{
name|mergeOptions
argument_list|(
name|other
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getOptions
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|name_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|setName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|clearName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|name_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|setNameBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|int
name|number_
decl_stmt|;
comment|/**        *<code>optional int32 number = 3;</code>        */
specifier|public
name|boolean
name|hasNumber
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional int32 number = 3;</code>        */
specifier|public
name|int
name|getNumber
parameter_list|()
block|{
return|return
name|number_
return|;
block|}
comment|/**        *<code>optional int32 number = 3;</code>        */
specifier|public
name|Builder
name|setNumber
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|number_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int32 number = 3;</code>        */
specifier|public
name|Builder
name|clearNumber
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|number_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|int
name|label_
init|=
literal|1
decl_stmt|;
comment|/**        *<code>optional .google.protobuf.FieldDescriptorProto.Label label = 4;</code>        */
specifier|public
name|boolean
name|hasLabel
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>optional .google.protobuf.FieldDescriptorProto.Label label = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Label
name|getLabel
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Label
name|result
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Label
operator|.
name|valueOf
argument_list|(
name|label_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Label
operator|.
name|LABEL_OPTIONAL
else|:
name|result
return|;
block|}
comment|/**        *<code>optional .google.protobuf.FieldDescriptorProto.Label label = 4;</code>        */
specifier|public
name|Builder
name|setLabel
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Label
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|label_
operator|=
name|value
operator|.
name|getNumber
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.FieldDescriptorProto.Label label = 4;</code>        */
specifier|public
name|Builder
name|clearLabel
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|label_
operator|=
literal|1
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|int
name|type_
init|=
literal|1
decl_stmt|;
comment|/**        *<pre>        * If type_name is set, this need not be set.  If both this and type_name        * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.        *</pre>        *        *<code>optional .google.protobuf.FieldDescriptorProto.Type type = 5;</code>        */
specifier|public
name|boolean
name|hasType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**        *<pre>        * If type_name is set, this need not be set.  If both this and type_name        * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.        *</pre>        *        *<code>optional .google.protobuf.FieldDescriptorProto.Type type = 5;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Type
name|getType
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Type
name|result
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Type
operator|.
name|valueOf
argument_list|(
name|type_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Type
operator|.
name|TYPE_DOUBLE
else|:
name|result
return|;
block|}
comment|/**        *<pre>        * If type_name is set, this need not be set.  If both this and type_name        * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.        *</pre>        *        *<code>optional .google.protobuf.FieldDescriptorProto.Type type = 5;</code>        */
specifier|public
name|Builder
name|setType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
operator|.
name|Type
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|type_
operator|=
name|value
operator|.
name|getNumber
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * If type_name is set, this need not be set.  If both this and type_name        * are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.        *</pre>        *        *<code>optional .google.protobuf.FieldDescriptorProto.Type type = 5;</code>        */
specifier|public
name|Builder
name|clearType
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|type_
operator|=
literal|1
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|typeName_
init|=
literal|""
decl_stmt|;
comment|/**        *<pre>        * For message and enum types, this is the name of the type.  If the name        * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping        * rules are used to find the type (i.e. first the nested types within this        * message are searched, then within the parent, on up to the root        * namespace).        *</pre>        *        *<code>optional string type_name = 6;</code>        */
specifier|public
name|boolean
name|hasTypeName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**        *<pre>        * For message and enum types, this is the name of the type.  If the name        * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping        * rules are used to find the type (i.e. first the nested types within this        * message are searched, then within the parent, on up to the root        * namespace).        *</pre>        *        *<code>optional string type_name = 6;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getTypeName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|typeName_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|typeName_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * For message and enum types, this is the name of the type.  If the name        * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping        * rules are used to find the type (i.e. first the nested types within this        * message are searched, then within the parent, on up to the root        * namespace).        *</pre>        *        *<code>optional string type_name = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTypeNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|typeName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|typeName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * For message and enum types, this is the name of the type.  If the name        * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping        * rules are used to find the type (i.e. first the nested types within this        * message are searched, then within the parent, on up to the root        * namespace).        *</pre>        *        *<code>optional string type_name = 6;</code>        */
specifier|public
name|Builder
name|setTypeName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|typeName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * For message and enum types, this is the name of the type.  If the name        * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping        * rules are used to find the type (i.e. first the nested types within this        * message are searched, then within the parent, on up to the root        * namespace).        *</pre>        *        *<code>optional string type_name = 6;</code>        */
specifier|public
name|Builder
name|clearTypeName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|typeName_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getTypeName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * For message and enum types, this is the name of the type.  If the name        * starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping        * rules are used to find the type (i.e. first the nested types within this        * message are searched, then within the parent, on up to the root        * namespace).        *</pre>        *        *<code>optional string type_name = 6;</code>        */
specifier|public
name|Builder
name|setTypeNameBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|typeName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|extendee_
init|=
literal|""
decl_stmt|;
comment|/**        *<pre>        * For extensions, this is the name of the type being extended.  It is        * resolved in the same manner as type_name.        *</pre>        *        *<code>optional string extendee = 2;</code>        */
specifier|public
name|boolean
name|hasExtendee
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**        *<pre>        * For extensions, this is the name of the type being extended.  It is        * resolved in the same manner as type_name.        *</pre>        *        *<code>optional string extendee = 2;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getExtendee
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|extendee_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|extendee_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * For extensions, this is the name of the type being extended.  It is        * resolved in the same manner as type_name.        *</pre>        *        *<code>optional string extendee = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getExtendeeBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|extendee_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|extendee_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * For extensions, this is the name of the type being extended.  It is        * resolved in the same manner as type_name.        *</pre>        *        *<code>optional string extendee = 2;</code>        */
specifier|public
name|Builder
name|setExtendee
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|extendee_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * For extensions, this is the name of the type being extended.  It is        * resolved in the same manner as type_name.        *</pre>        *        *<code>optional string extendee = 2;</code>        */
specifier|public
name|Builder
name|clearExtendee
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|extendee_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getExtendee
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * For extensions, this is the name of the type being extended.  It is        * resolved in the same manner as type_name.        *</pre>        *        *<code>optional string extendee = 2;</code>        */
specifier|public
name|Builder
name|setExtendeeBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|extendee_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|defaultValue_
init|=
literal|""
decl_stmt|;
comment|/**        *<pre>        * For numeric types, contains the original text representation of the value.        * For booleans, "true" or "false".        * For strings, contains the default text contents (not escaped in any way).        * For bytes, contains the C escaped value.  All bytes&gt;= 128 are escaped.        * TODO(kenton):  Base-64 encode?        *</pre>        *        *<code>optional string default_value = 7;</code>        */
specifier|public
name|boolean
name|hasDefaultValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
return|;
block|}
comment|/**        *<pre>        * For numeric types, contains the original text representation of the value.        * For booleans, "true" or "false".        * For strings, contains the default text contents (not escaped in any way).        * For bytes, contains the C escaped value.  All bytes&gt;= 128 are escaped.        * TODO(kenton):  Base-64 encode?        *</pre>        *        *<code>optional string default_value = 7;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getDefaultValue
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|defaultValue_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|defaultValue_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * For numeric types, contains the original text representation of the value.        * For booleans, "true" or "false".        * For strings, contains the default text contents (not escaped in any way).        * For bytes, contains the C escaped value.  All bytes&gt;= 128 are escaped.        * TODO(kenton):  Base-64 encode?        *</pre>        *        *<code>optional string default_value = 7;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getDefaultValueBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|defaultValue_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|defaultValue_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * For numeric types, contains the original text representation of the value.        * For booleans, "true" or "false".        * For strings, contains the default text contents (not escaped in any way).        * For bytes, contains the C escaped value.  All bytes&gt;= 128 are escaped.        * TODO(kenton):  Base-64 encode?        *</pre>        *        *<code>optional string default_value = 7;</code>        */
specifier|public
name|Builder
name|setDefaultValue
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|defaultValue_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * For numeric types, contains the original text representation of the value.        * For booleans, "true" or "false".        * For strings, contains the default text contents (not escaped in any way).        * For bytes, contains the C escaped value.  All bytes&gt;= 128 are escaped.        * TODO(kenton):  Base-64 encode?        *</pre>        *        *<code>optional string default_value = 7;</code>        */
specifier|public
name|Builder
name|clearDefaultValue
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|defaultValue_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getDefaultValue
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * For numeric types, contains the original text representation of the value.        * For booleans, "true" or "false".        * For strings, contains the default text contents (not escaped in any way).        * For bytes, contains the C escaped value.  All bytes&gt;= 128 are escaped.        * TODO(kenton):  Base-64 encode?        *</pre>        *        *<code>optional string default_value = 7;</code>        */
specifier|public
name|Builder
name|setDefaultValueBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|defaultValue_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|int
name|oneofIndex_
decl_stmt|;
comment|/**        *<pre>        * If set, gives the index of a oneof in the containing type's oneof_decl        * list.  This field is a member of that oneof.        *</pre>        *        *<code>optional int32 oneof_index = 9;</code>        */
specifier|public
name|boolean
name|hasOneofIndex
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
return|;
block|}
comment|/**        *<pre>        * If set, gives the index of a oneof in the containing type's oneof_decl        * list.  This field is a member of that oneof.        *</pre>        *        *<code>optional int32 oneof_index = 9;</code>        */
specifier|public
name|int
name|getOneofIndex
parameter_list|()
block|{
return|return
name|oneofIndex_
return|;
block|}
comment|/**        *<pre>        * If set, gives the index of a oneof in the containing type's oneof_decl        * list.  This field is a member of that oneof.        *</pre>        *        *<code>optional int32 oneof_index = 9;</code>        */
specifier|public
name|Builder
name|setOneofIndex
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
name|oneofIndex_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * If set, gives the index of a oneof in the containing type's oneof_decl        * list.  This field is a member of that oneof.        *</pre>        *        *<code>optional int32 oneof_index = 9;</code>        */
specifier|public
name|Builder
name|clearOneofIndex
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|oneofIndex_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|jsonName_
init|=
literal|""
decl_stmt|;
comment|/**        *<pre>        * JSON name of this field. The value is set by protocol compiler. If the        * user has set a "json_name" option on this field, that option's value        * will be used. Otherwise, it's deduced from the field's name by converting        * it to camelCase.        *</pre>        *        *<code>optional string json_name = 10;</code>        */
specifier|public
name|boolean
name|hasJsonName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
return|;
block|}
comment|/**        *<pre>        * JSON name of this field. The value is set by protocol compiler. If the        * user has set a "json_name" option on this field, that option's value        * will be used. Otherwise, it's deduced from the field's name by converting        * it to camelCase.        *</pre>        *        *<code>optional string json_name = 10;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getJsonName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|jsonName_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|jsonName_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * JSON name of this field. The value is set by protocol compiler. If the        * user has set a "json_name" option on this field, that option's value        * will be used. Otherwise, it's deduced from the field's name by converting        * it to camelCase.        *</pre>        *        *<code>optional string json_name = 10;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getJsonNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|jsonName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|jsonName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * JSON name of this field. The value is set by protocol compiler. If the        * user has set a "json_name" option on this field, that option's value        * will be used. Otherwise, it's deduced from the field's name by converting        * it to camelCase.        *</pre>        *        *<code>optional string json_name = 10;</code>        */
specifier|public
name|Builder
name|setJsonName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
name|jsonName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * JSON name of this field. The value is set by protocol compiler. If the        * user has set a "json_name" option on this field, that option's value        * will be used. Otherwise, it's deduced from the field's name by converting        * it to camelCase.        *</pre>        *        *<code>optional string json_name = 10;</code>        */
specifier|public
name|Builder
name|clearJsonName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
name|jsonName_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getJsonName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * JSON name of this field. The value is set by protocol compiler. If the        * user has set a "json_name" option on this field, that option's value        * will be used. Otherwise, it's deduced from the field's name by converting        * it to camelCase.        *</pre>        *        *<code>optional string json_name = 10;</code>        */
specifier|public
name|Builder
name|setJsonNameBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
name|jsonName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|options_
init|=
literal|null
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptionsOrBuilder
argument_list|>
name|optionsBuilder_
decl_stmt|;
comment|/**        *<code>optional .google.protobuf.FieldOptions options = 8;</code>        */
specifier|public
name|boolean
name|hasOptions
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
return|;
block|}
comment|/**        *<code>optional .google.protobuf.FieldOptions options = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|getOptions
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
else|else
block|{
return|return
name|optionsBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .google.protobuf.FieldOptions options = 8;</code>        */
specifier|public
name|Builder
name|setOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|value
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|options_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.FieldOptions options = 8;</code>        */
specifier|public
name|Builder
name|setOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.FieldOptions options = 8;</code>        */
specifier|public
name|Builder
name|mergeOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|value
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
operator|&&
name|options_
operator|!=
literal|null
operator|&&
name|options_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|options_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|newBuilder
argument_list|(
name|options_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|options_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.FieldOptions options = 8;</code>        */
specifier|public
name|Builder
name|clearOptions
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.FieldOptions options = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|Builder
name|getOptionsBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getOptionsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .google.protobuf.FieldOptions options = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|optionsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
block|}
comment|/**        *<code>optional .google.protobuf.FieldOptions options = 8;</code>        */
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptionsOrBuilder
argument_list|>
name|getOptionsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|optionsBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptionsOrBuilder
argument_list|>
argument_list|(
name|getOptions
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|options_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|optionsBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.FieldDescriptorProto)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.FieldDescriptorProto)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FieldDescriptorProto
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|FieldDescriptorProto
argument_list|>
argument_list|()
block|{
specifier|public
name|FieldDescriptorProto
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|FieldDescriptorProto
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FieldDescriptorProto
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FieldDescriptorProto
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldDescriptorProto
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|OneofDescriptorProtoOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.OneofDescriptorProto)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>optional string name = 1;</code>      */
name|boolean
name|hasName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string name = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string name = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.OneofOptions options = 2;</code>      */
name|boolean
name|hasOptions
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.OneofOptions options = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|getOptions
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.OneofOptions options = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    *<pre>    * Describes a oneof.    *</pre>    *    * Protobuf type {@code google.protobuf.OneofDescriptorProto}    */
specifier|public
specifier|static
specifier|final
class|class
name|OneofDescriptorProto
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.OneofDescriptorProto)
name|OneofDescriptorProtoOrBuilder
block|{
comment|// Use OneofDescriptorProto.newBuilder() to construct.
specifier|private
name|OneofDescriptorProto
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|OneofDescriptorProto
parameter_list|()
block|{
name|name_
operator|=
literal|""
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|OneofDescriptorProto
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|options_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|options_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|options_
argument_list|)
expr_stmt|;
name|options_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_OneofDescriptorProto_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_OneofDescriptorProto_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|NAME_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
decl_stmt|;
comment|/**      *<code>optional string name = 1;</code>      */
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>optional string name = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|name_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string name = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|OPTIONS_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|options_
decl_stmt|;
comment|/**      *<code>optional .google.protobuf.OneofOptions options = 2;</code>      */
specifier|public
name|boolean
name|hasOptions
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>optional .google.protobuf.OneofOptions options = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|getOptions
parameter_list|()
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
comment|/**      *<code>optional .google.protobuf.OneofOptions options = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getOptions
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|1
argument_list|,
name|name_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|1
argument_list|,
name|name_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasName
argument_list|()
operator|==
name|other
operator|.
name|hasName
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasName
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasOptions
argument_list|()
operator|==
name|other
operator|.
name|hasOptions
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getOptions
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasName
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|NAME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getName
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|OPTIONS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getOptions
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      *<pre>      * Describes a oneof.      *</pre>      *      * Protobuf type {@code google.protobuf.OneofDescriptorProto}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.OneofDescriptorProto)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProtoOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_OneofDescriptorProto_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_OneofDescriptorProto_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.OneofDescriptorProto.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getOptionsFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|name_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_OneofDescriptorProto_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|name_
operator|=
name|name_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|options_
operator|=
name|options_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|options_
operator|=
name|optionsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|other
operator|.
name|name_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasOptions
argument_list|()
condition|)
block|{
name|mergeOptions
argument_list|(
name|other
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getOptions
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|name_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|setName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|clearName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|name_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|setNameBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|options_
init|=
literal|null
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptionsOrBuilder
argument_list|>
name|optionsBuilder_
decl_stmt|;
comment|/**        *<code>optional .google.protobuf.OneofOptions options = 2;</code>        */
specifier|public
name|boolean
name|hasOptions
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional .google.protobuf.OneofOptions options = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|getOptions
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
else|else
block|{
return|return
name|optionsBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .google.protobuf.OneofOptions options = 2;</code>        */
specifier|public
name|Builder
name|setOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|value
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|options_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.OneofOptions options = 2;</code>        */
specifier|public
name|Builder
name|setOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.OneofOptions options = 2;</code>        */
specifier|public
name|Builder
name|mergeOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|value
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
operator|&&
name|options_
operator|!=
literal|null
operator|&&
name|options_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|options_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|.
name|newBuilder
argument_list|(
name|options_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|options_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.OneofOptions options = 2;</code>        */
specifier|public
name|Builder
name|clearOptions
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.OneofOptions options = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|.
name|Builder
name|getOptionsBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getOptionsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .google.protobuf.OneofOptions options = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|optionsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
block|}
comment|/**        *<code>optional .google.protobuf.OneofOptions options = 2;</code>        */
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptionsOrBuilder
argument_list|>
name|getOptionsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|optionsBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptionsOrBuilder
argument_list|>
argument_list|(
name|getOptions
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|options_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|optionsBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.OneofDescriptorProto)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.OneofDescriptorProto)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|OneofDescriptorProto
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|OneofDescriptorProto
argument_list|>
argument_list|()
block|{
specifier|public
name|OneofDescriptorProto
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|OneofDescriptorProto
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|OneofDescriptorProto
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|OneofDescriptorProto
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofDescriptorProto
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|EnumDescriptorProtoOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.EnumDescriptorProto)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>optional string name = 1;</code>      */
name|boolean
name|hasName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string name = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string name = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
argument_list|>
name|getValueList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|getValue
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>      */
name|int
name|getValueCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProtoOrBuilder
argument_list|>
name|getValueOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProtoOrBuilder
name|getValueOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>optional .google.protobuf.EnumOptions options = 3;</code>      */
name|boolean
name|hasOptions
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.EnumOptions options = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|getOptions
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.EnumOptions options = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    *<pre>    * Describes an enum type.    *</pre>    *    * Protobuf type {@code google.protobuf.EnumDescriptorProto}    */
specifier|public
specifier|static
specifier|final
class|class
name|EnumDescriptorProto
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.EnumDescriptorProto)
name|EnumDescriptorProtoOrBuilder
block|{
comment|// Use EnumDescriptorProto.newBuilder() to construct.
specifier|private
name|EnumDescriptorProto
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|EnumDescriptorProto
parameter_list|()
block|{
name|name_
operator|=
literal|""
expr_stmt|;
name|value_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|EnumDescriptorProto
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|value_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|value_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|options_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|options_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|options_
argument_list|)
expr_stmt|;
name|options_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|value_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|value_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_EnumDescriptorProto_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_EnumDescriptorProto_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|NAME_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
decl_stmt|;
comment|/**      *<code>optional string name = 1;</code>      */
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>optional string name = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|name_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string name = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|VALUE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
argument_list|>
name|value_
decl_stmt|;
comment|/**      *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
argument_list|>
name|getValueList
parameter_list|()
block|{
return|return
name|value_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProtoOrBuilder
argument_list|>
name|getValueOrBuilderList
parameter_list|()
block|{
return|return
name|value_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>      */
specifier|public
name|int
name|getValueCount
parameter_list|()
block|{
return|return
name|value_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|getValue
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|value_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProtoOrBuilder
name|getValueOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|value_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|OPTIONS_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|options_
decl_stmt|;
comment|/**      *<code>optional .google.protobuf.EnumOptions options = 3;</code>      */
specifier|public
name|boolean
name|hasOptions
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>optional .google.protobuf.EnumOptions options = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|getOptions
parameter_list|()
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
comment|/**      *<code>optional .google.protobuf.EnumOptions options = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getValueCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getOptions
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|1
argument_list|,
name|name_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|value_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|value_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|3
argument_list|,
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|1
argument_list|,
name|name_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|value_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|value_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|3
argument_list|,
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasName
argument_list|()
operator|==
name|other
operator|.
name|hasName
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasName
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getValueList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getValueList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasOptions
argument_list|()
operator|==
name|other
operator|.
name|hasOptions
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getOptions
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasName
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|NAME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getName
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getValueCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|VALUE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getValueList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|OPTIONS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getOptions
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      *<pre>      * Describes an enum type.      *</pre>      *      * Protobuf type {@code google.protobuf.EnumDescriptorProto}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.EnumDescriptorProto)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProtoOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_EnumDescriptorProto_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_EnumDescriptorProto_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.EnumDescriptorProto.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getValueFieldBuilder
argument_list|()
expr_stmt|;
name|getOptionsFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|name_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
name|value_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|valueBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_EnumDescriptorProto_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|name_
operator|=
name|name_
expr_stmt|;
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|value_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|value_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|value_
operator|=
name|value_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|value_
operator|=
name|valueBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|options_
operator|=
name|options_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|options_
operator|=
name|optionsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|other
operator|.
name|name_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|value_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|value_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|value_
operator|=
name|other
operator|.
name|value_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureValueIsMutable
argument_list|()
expr_stmt|;
name|value_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|value_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|value_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|valueBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|valueBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|valueBuilder_
operator|=
literal|null
expr_stmt|;
name|value_
operator|=
name|other
operator|.
name|value_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|valueBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getValueFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|valueBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|value_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|other
operator|.
name|hasOptions
argument_list|()
condition|)
block|{
name|mergeOptions
argument_list|(
name|other
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getValueCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getValue
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getOptions
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|name_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|setName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|clearName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|name_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|setNameBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
argument_list|>
name|value_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureValueIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|value_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
argument_list|>
argument_list|(
name|value_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProtoOrBuilder
argument_list|>
name|valueBuilder_
decl_stmt|;
comment|/**        *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
argument_list|>
name|getValueList
parameter_list|()
block|{
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|value_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|valueBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>        */
specifier|public
name|int
name|getValueCount
parameter_list|()
block|{
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|value_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|valueBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|getValue
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|value_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|valueBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>        */
specifier|public
name|Builder
name|setValue
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureValueIsMutable
argument_list|()
expr_stmt|;
name|value_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|valueBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>        */
specifier|public
name|Builder
name|setValue
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureValueIsMutable
argument_list|()
expr_stmt|;
name|value_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|valueBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>        */
specifier|public
name|Builder
name|addValue
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureValueIsMutable
argument_list|()
expr_stmt|;
name|value_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|valueBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>        */
specifier|public
name|Builder
name|addValue
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureValueIsMutable
argument_list|()
expr_stmt|;
name|value_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|valueBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>        */
specifier|public
name|Builder
name|addValue
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureValueIsMutable
argument_list|()
expr_stmt|;
name|value_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|valueBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>        */
specifier|public
name|Builder
name|addValue
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureValueIsMutable
argument_list|()
expr_stmt|;
name|value_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|valueBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>        */
specifier|public
name|Builder
name|addAllValue
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureValueIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|value_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|valueBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>        */
specifier|public
name|Builder
name|clearValue
parameter_list|()
block|{
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
name|value_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|valueBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>        */
specifier|public
name|Builder
name|removeValue
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureValueIsMutable
argument_list|()
expr_stmt|;
name|value_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|valueBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|.
name|Builder
name|getValueBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getValueFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProtoOrBuilder
name|getValueOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|value_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|valueBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProtoOrBuilder
argument_list|>
name|getValueOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|valueBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|valueBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|value_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|.
name|Builder
name|addValueBuilder
parameter_list|()
block|{
return|return
name|getValueFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|.
name|Builder
name|addValueBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getValueFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.EnumValueDescriptorProto value = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|.
name|Builder
argument_list|>
name|getValueBuilderList
parameter_list|()
block|{
return|return
name|getValueFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProtoOrBuilder
argument_list|>
name|getValueFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|valueBuilder_
operator|==
literal|null
condition|)
block|{
name|valueBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProtoOrBuilder
argument_list|>
argument_list|(
name|value_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|value_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|valueBuilder_
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|options_
init|=
literal|null
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptionsOrBuilder
argument_list|>
name|optionsBuilder_
decl_stmt|;
comment|/**        *<code>optional .google.protobuf.EnumOptions options = 3;</code>        */
specifier|public
name|boolean
name|hasOptions
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>optional .google.protobuf.EnumOptions options = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|getOptions
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
else|else
block|{
return|return
name|optionsBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .google.protobuf.EnumOptions options = 3;</code>        */
specifier|public
name|Builder
name|setOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|value
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|options_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.EnumOptions options = 3;</code>        */
specifier|public
name|Builder
name|setOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.EnumOptions options = 3;</code>        */
specifier|public
name|Builder
name|mergeOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|value
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
operator|&&
name|options_
operator|!=
literal|null
operator|&&
name|options_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|options_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|.
name|newBuilder
argument_list|(
name|options_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|options_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.EnumOptions options = 3;</code>        */
specifier|public
name|Builder
name|clearOptions
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.EnumOptions options = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|.
name|Builder
name|getOptionsBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getOptionsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .google.protobuf.EnumOptions options = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|optionsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
block|}
comment|/**        *<code>optional .google.protobuf.EnumOptions options = 3;</code>        */
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptionsOrBuilder
argument_list|>
name|getOptionsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|optionsBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptionsOrBuilder
argument_list|>
argument_list|(
name|getOptions
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|options_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|optionsBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.EnumDescriptorProto)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.EnumDescriptorProto)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|EnumDescriptorProto
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|EnumDescriptorProto
argument_list|>
argument_list|()
block|{
specifier|public
name|EnumDescriptorProto
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|EnumDescriptorProto
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|EnumDescriptorProto
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|EnumDescriptorProto
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumDescriptorProto
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|EnumValueDescriptorProtoOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.EnumValueDescriptorProto)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>optional string name = 1;</code>      */
name|boolean
name|hasName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string name = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string name = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
function_decl|;
comment|/**      *<code>optional int32 number = 2;</code>      */
name|boolean
name|hasNumber
parameter_list|()
function_decl|;
comment|/**      *<code>optional int32 number = 2;</code>      */
name|int
name|getNumber
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.EnumValueOptions options = 3;</code>      */
name|boolean
name|hasOptions
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.EnumValueOptions options = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|getOptions
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.EnumValueOptions options = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    *<pre>    * Describes a value within an enum.    *</pre>    *    * Protobuf type {@code google.protobuf.EnumValueDescriptorProto}    */
specifier|public
specifier|static
specifier|final
class|class
name|EnumValueDescriptorProto
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.EnumValueDescriptorProto)
name|EnumValueDescriptorProtoOrBuilder
block|{
comment|// Use EnumValueDescriptorProto.newBuilder() to construct.
specifier|private
name|EnumValueDescriptorProto
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|EnumValueDescriptorProto
parameter_list|()
block|{
name|name_
operator|=
literal|""
expr_stmt|;
name|number_
operator|=
literal|0
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|EnumValueDescriptorProto
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|number_
operator|=
name|input
operator|.
name|readInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|options_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|options_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|options_
argument_list|)
expr_stmt|;
name|options_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_EnumValueDescriptorProto_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_EnumValueDescriptorProto_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|NAME_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
decl_stmt|;
comment|/**      *<code>optional string name = 1;</code>      */
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>optional string name = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|name_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string name = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|NUMBER_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|int
name|number_
decl_stmt|;
comment|/**      *<code>optional int32 number = 2;</code>      */
specifier|public
name|boolean
name|hasNumber
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>optional int32 number = 2;</code>      */
specifier|public
name|int
name|getNumber
parameter_list|()
block|{
return|return
name|number_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|OPTIONS_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|options_
decl_stmt|;
comment|/**      *<code>optional .google.protobuf.EnumValueOptions options = 3;</code>      */
specifier|public
name|boolean
name|hasOptions
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<code>optional .google.protobuf.EnumValueOptions options = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|getOptions
parameter_list|()
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
comment|/**      *<code>optional .google.protobuf.EnumValueOptions options = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getOptions
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|1
argument_list|,
name|name_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt32
argument_list|(
literal|2
argument_list|,
name|number_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|3
argument_list|,
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|1
argument_list|,
name|name_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32Size
argument_list|(
literal|2
argument_list|,
name|number_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|3
argument_list|,
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasName
argument_list|()
operator|==
name|other
operator|.
name|hasName
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasName
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasNumber
argument_list|()
operator|==
name|other
operator|.
name|hasNumber
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasNumber
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getNumber
argument_list|()
operator|==
name|other
operator|.
name|getNumber
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasOptions
argument_list|()
operator|==
name|other
operator|.
name|hasOptions
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getOptions
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasName
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|NAME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getName
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasNumber
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|NUMBER_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getNumber
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|OPTIONS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getOptions
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      *<pre>      * Describes a value within an enum.      *</pre>      *      * Protobuf type {@code google.protobuf.EnumValueDescriptorProto}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.EnumValueDescriptorProto)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProtoOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_EnumValueDescriptorProto_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_EnumValueDescriptorProto_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.EnumValueDescriptorProto.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getOptionsFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|name_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|number_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_EnumValueDescriptorProto_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|name_
operator|=
name|name_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|number_
operator|=
name|number_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|options_
operator|=
name|options_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|options_
operator|=
name|optionsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|other
operator|.
name|name_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasNumber
argument_list|()
condition|)
block|{
name|setNumber
argument_list|(
name|other
operator|.
name|getNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasOptions
argument_list|()
condition|)
block|{
name|mergeOptions
argument_list|(
name|other
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getOptions
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|name_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|setName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|clearName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|name_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|setNameBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|int
name|number_
decl_stmt|;
comment|/**        *<code>optional int32 number = 2;</code>        */
specifier|public
name|boolean
name|hasNumber
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional int32 number = 2;</code>        */
specifier|public
name|int
name|getNumber
parameter_list|()
block|{
return|return
name|number_
return|;
block|}
comment|/**        *<code>optional int32 number = 2;</code>        */
specifier|public
name|Builder
name|setNumber
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|number_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int32 number = 2;</code>        */
specifier|public
name|Builder
name|clearNumber
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|number_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|options_
init|=
literal|null
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptionsOrBuilder
argument_list|>
name|optionsBuilder_
decl_stmt|;
comment|/**        *<code>optional .google.protobuf.EnumValueOptions options = 3;</code>        */
specifier|public
name|boolean
name|hasOptions
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>optional .google.protobuf.EnumValueOptions options = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|getOptions
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
else|else
block|{
return|return
name|optionsBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .google.protobuf.EnumValueOptions options = 3;</code>        */
specifier|public
name|Builder
name|setOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|value
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|options_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.EnumValueOptions options = 3;</code>        */
specifier|public
name|Builder
name|setOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.EnumValueOptions options = 3;</code>        */
specifier|public
name|Builder
name|mergeOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|value
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
operator|&&
name|options_
operator|!=
literal|null
operator|&&
name|options_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|options_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|.
name|newBuilder
argument_list|(
name|options_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|options_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.EnumValueOptions options = 3;</code>        */
specifier|public
name|Builder
name|clearOptions
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.EnumValueOptions options = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|.
name|Builder
name|getOptionsBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getOptionsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .google.protobuf.EnumValueOptions options = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|optionsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
block|}
comment|/**        *<code>optional .google.protobuf.EnumValueOptions options = 3;</code>        */
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptionsOrBuilder
argument_list|>
name|getOptionsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|optionsBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptionsOrBuilder
argument_list|>
argument_list|(
name|getOptions
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|options_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|optionsBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.EnumValueDescriptorProto)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.EnumValueDescriptorProto)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|EnumValueDescriptorProto
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|EnumValueDescriptorProto
argument_list|>
argument_list|()
block|{
specifier|public
name|EnumValueDescriptorProto
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|EnumValueDescriptorProto
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|EnumValueDescriptorProto
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|EnumValueDescriptorProto
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueDescriptorProto
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|ServiceDescriptorProtoOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.ServiceDescriptorProto)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>optional string name = 1;</code>      */
name|boolean
name|hasName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string name = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string name = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
argument_list|>
name|getMethodList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|getMethod
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>      */
name|int
name|getMethodCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProtoOrBuilder
argument_list|>
name|getMethodOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProtoOrBuilder
name|getMethodOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>optional .google.protobuf.ServiceOptions options = 3;</code>      */
name|boolean
name|hasOptions
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.ServiceOptions options = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|getOptions
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.ServiceOptions options = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    *<pre>    * Describes a service.    *</pre>    *    * Protobuf type {@code google.protobuf.ServiceDescriptorProto}    */
specifier|public
specifier|static
specifier|final
class|class
name|ServiceDescriptorProto
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.ServiceDescriptorProto)
name|ServiceDescriptorProtoOrBuilder
block|{
comment|// Use ServiceDescriptorProto.newBuilder() to construct.
specifier|private
name|ServiceDescriptorProto
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ServiceDescriptorProto
parameter_list|()
block|{
name|name_
operator|=
literal|""
expr_stmt|;
name|method_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|ServiceDescriptorProto
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|method_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|method_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|options_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|options_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|options_
argument_list|)
expr_stmt|;
name|options_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|method_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|method_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_ServiceDescriptorProto_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_ServiceDescriptorProto_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|NAME_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
decl_stmt|;
comment|/**      *<code>optional string name = 1;</code>      */
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>optional string name = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|name_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string name = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|METHOD_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
argument_list|>
name|method_
decl_stmt|;
comment|/**      *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
argument_list|>
name|getMethodList
parameter_list|()
block|{
return|return
name|method_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProtoOrBuilder
argument_list|>
name|getMethodOrBuilderList
parameter_list|()
block|{
return|return
name|method_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>      */
specifier|public
name|int
name|getMethodCount
parameter_list|()
block|{
return|return
name|method_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|getMethod
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|method_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProtoOrBuilder
name|getMethodOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|method_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|OPTIONS_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|options_
decl_stmt|;
comment|/**      *<code>optional .google.protobuf.ServiceOptions options = 3;</code>      */
specifier|public
name|boolean
name|hasOptions
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>optional .google.protobuf.ServiceOptions options = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|getOptions
parameter_list|()
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
comment|/**      *<code>optional .google.protobuf.ServiceOptions options = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getMethodCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getMethod
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getOptions
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|1
argument_list|,
name|name_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|method_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|method_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|3
argument_list|,
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|1
argument_list|,
name|name_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|method_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|method_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|3
argument_list|,
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasName
argument_list|()
operator|==
name|other
operator|.
name|hasName
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasName
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getMethodList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getMethodList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasOptions
argument_list|()
operator|==
name|other
operator|.
name|hasOptions
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getOptions
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasName
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|NAME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getName
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getMethodCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|METHOD_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getMethodList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|OPTIONS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getOptions
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      *<pre>      * Describes a service.      *</pre>      *      * Protobuf type {@code google.protobuf.ServiceDescriptorProto}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.ServiceDescriptorProto)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProtoOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_ServiceDescriptorProto_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_ServiceDescriptorProto_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.ServiceDescriptorProto.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getMethodFieldBuilder
argument_list|()
expr_stmt|;
name|getOptionsFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|name_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
if|if
condition|(
name|methodBuilder_
operator|==
literal|null
condition|)
block|{
name|method_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|methodBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_ServiceDescriptorProto_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|name_
operator|=
name|name_
expr_stmt|;
if|if
condition|(
name|methodBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|method_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|method_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|method_
operator|=
name|method_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|method_
operator|=
name|methodBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|options_
operator|=
name|options_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|options_
operator|=
name|optionsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|other
operator|.
name|name_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|methodBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|method_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|method_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|method_
operator|=
name|other
operator|.
name|method_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureMethodIsMutable
argument_list|()
expr_stmt|;
name|method_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|method_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|method_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|methodBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|methodBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|methodBuilder_
operator|=
literal|null
expr_stmt|;
name|method_
operator|=
name|other
operator|.
name|method_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|methodBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getMethodFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|methodBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|method_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|other
operator|.
name|hasOptions
argument_list|()
condition|)
block|{
name|mergeOptions
argument_list|(
name|other
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getMethodCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getMethod
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getOptions
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|name_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|setName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|clearName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|name_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|setNameBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
argument_list|>
name|method_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureMethodIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|method_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
argument_list|>
argument_list|(
name|method_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProtoOrBuilder
argument_list|>
name|methodBuilder_
decl_stmt|;
comment|/**        *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
argument_list|>
name|getMethodList
parameter_list|()
block|{
if|if
condition|(
name|methodBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|method_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|methodBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>        */
specifier|public
name|int
name|getMethodCount
parameter_list|()
block|{
if|if
condition|(
name|methodBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|method_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|methodBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|getMethod
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|methodBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|method_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|methodBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>        */
specifier|public
name|Builder
name|setMethod
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|methodBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureMethodIsMutable
argument_list|()
expr_stmt|;
name|method_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|methodBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>        */
specifier|public
name|Builder
name|setMethod
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|methodBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMethodIsMutable
argument_list|()
expr_stmt|;
name|method_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|methodBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>        */
specifier|public
name|Builder
name|addMethod
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|methodBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureMethodIsMutable
argument_list|()
expr_stmt|;
name|method_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|methodBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>        */
specifier|public
name|Builder
name|addMethod
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|value
parameter_list|)
block|{
if|if
condition|(
name|methodBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureMethodIsMutable
argument_list|()
expr_stmt|;
name|method_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|methodBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>        */
specifier|public
name|Builder
name|addMethod
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|methodBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMethodIsMutable
argument_list|()
expr_stmt|;
name|method_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|methodBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>        */
specifier|public
name|Builder
name|addMethod
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|methodBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMethodIsMutable
argument_list|()
expr_stmt|;
name|method_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|methodBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>        */
specifier|public
name|Builder
name|addAllMethod
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|methodBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMethodIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|method_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|methodBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>        */
specifier|public
name|Builder
name|clearMethod
parameter_list|()
block|{
if|if
condition|(
name|methodBuilder_
operator|==
literal|null
condition|)
block|{
name|method_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|methodBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>        */
specifier|public
name|Builder
name|removeMethod
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|methodBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMethodIsMutable
argument_list|()
expr_stmt|;
name|method_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|methodBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|.
name|Builder
name|getMethodBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getMethodFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProtoOrBuilder
name|getMethodOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|methodBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|method_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|methodBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProtoOrBuilder
argument_list|>
name|getMethodOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|methodBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|methodBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|method_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|.
name|Builder
name|addMethodBuilder
parameter_list|()
block|{
return|return
name|getMethodFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|.
name|Builder
name|addMethodBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getMethodFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.MethodDescriptorProto method = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|.
name|Builder
argument_list|>
name|getMethodBuilderList
parameter_list|()
block|{
return|return
name|getMethodFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProtoOrBuilder
argument_list|>
name|getMethodFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|methodBuilder_
operator|==
literal|null
condition|)
block|{
name|methodBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProtoOrBuilder
argument_list|>
argument_list|(
name|method_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|method_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|methodBuilder_
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|options_
init|=
literal|null
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptionsOrBuilder
argument_list|>
name|optionsBuilder_
decl_stmt|;
comment|/**        *<code>optional .google.protobuf.ServiceOptions options = 3;</code>        */
specifier|public
name|boolean
name|hasOptions
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>optional .google.protobuf.ServiceOptions options = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|getOptions
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
else|else
block|{
return|return
name|optionsBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .google.protobuf.ServiceOptions options = 3;</code>        */
specifier|public
name|Builder
name|setOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|value
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|options_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.ServiceOptions options = 3;</code>        */
specifier|public
name|Builder
name|setOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.ServiceOptions options = 3;</code>        */
specifier|public
name|Builder
name|mergeOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|value
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
operator|&&
name|options_
operator|!=
literal|null
operator|&&
name|options_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|options_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|.
name|newBuilder
argument_list|(
name|options_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|options_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.ServiceOptions options = 3;</code>        */
specifier|public
name|Builder
name|clearOptions
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.ServiceOptions options = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|.
name|Builder
name|getOptionsBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getOptionsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .google.protobuf.ServiceOptions options = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|optionsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
block|}
comment|/**        *<code>optional .google.protobuf.ServiceOptions options = 3;</code>        */
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptionsOrBuilder
argument_list|>
name|getOptionsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|optionsBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptionsOrBuilder
argument_list|>
argument_list|(
name|getOptions
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|options_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|optionsBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.ServiceDescriptorProto)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.ServiceDescriptorProto)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ServiceDescriptorProto
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|ServiceDescriptorProto
argument_list|>
argument_list|()
block|{
specifier|public
name|ServiceDescriptorProto
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|ServiceDescriptorProto
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ServiceDescriptorProto
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ServiceDescriptorProto
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceDescriptorProto
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|MethodDescriptorProtoOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.MethodDescriptorProto)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>optional string name = 1;</code>      */
name|boolean
name|hasName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string name = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string name = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Input and output type names.  These are resolved in the same way as      * FieldDescriptorProto.type_name, but must refer to a message type.      *</pre>      *      *<code>optional string input_type = 2;</code>      */
name|boolean
name|hasInputType
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Input and output type names.  These are resolved in the same way as      * FieldDescriptorProto.type_name, but must refer to a message type.      *</pre>      *      *<code>optional string input_type = 2;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getInputType
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Input and output type names.  These are resolved in the same way as      * FieldDescriptorProto.type_name, but must refer to a message type.      *</pre>      *      *<code>optional string input_type = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getInputTypeBytes
parameter_list|()
function_decl|;
comment|/**      *<code>optional string output_type = 3;</code>      */
name|boolean
name|hasOutputType
parameter_list|()
function_decl|;
comment|/**      *<code>optional string output_type = 3;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getOutputType
parameter_list|()
function_decl|;
comment|/**      *<code>optional string output_type = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOutputTypeBytes
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.MethodOptions options = 4;</code>      */
name|boolean
name|hasOptions
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.MethodOptions options = 4;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|getOptions
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.MethodOptions options = 4;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Identifies if client streams multiple client messages      *</pre>      *      *<code>optional bool client_streaming = 5 [default = false];</code>      */
name|boolean
name|hasClientStreaming
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Identifies if client streams multiple client messages      *</pre>      *      *<code>optional bool client_streaming = 5 [default = false];</code>      */
name|boolean
name|getClientStreaming
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Identifies if server streams multiple server messages      *</pre>      *      *<code>optional bool server_streaming = 6 [default = false];</code>      */
name|boolean
name|hasServerStreaming
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Identifies if server streams multiple server messages      *</pre>      *      *<code>optional bool server_streaming = 6 [default = false];</code>      */
name|boolean
name|getServerStreaming
parameter_list|()
function_decl|;
block|}
comment|/**    *<pre>    * Describes a method of a service.    *</pre>    *    * Protobuf type {@code google.protobuf.MethodDescriptorProto}    */
specifier|public
specifier|static
specifier|final
class|class
name|MethodDescriptorProto
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.MethodDescriptorProto)
name|MethodDescriptorProtoOrBuilder
block|{
comment|// Use MethodDescriptorProto.newBuilder() to construct.
specifier|private
name|MethodDescriptorProto
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|MethodDescriptorProto
parameter_list|()
block|{
name|name_
operator|=
literal|""
expr_stmt|;
name|inputType_
operator|=
literal|""
expr_stmt|;
name|outputType_
operator|=
literal|""
expr_stmt|;
name|clientStreaming_
operator|=
literal|false
expr_stmt|;
name|serverStreaming_
operator|=
literal|false
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|MethodDescriptorProto
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|inputType_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|outputType_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|34
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|options_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|options_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|options_
argument_list|)
expr_stmt|;
name|options_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
break|break;
block|}
case|case
literal|40
case|:
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|clientStreaming_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|48
case|:
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|serverStreaming_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_MethodDescriptorProto_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_MethodDescriptorProto_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|NAME_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
decl_stmt|;
comment|/**      *<code>optional string name = 1;</code>      */
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>optional string name = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|name_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string name = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|INPUT_TYPE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|inputType_
decl_stmt|;
comment|/**      *<pre>      * Input and output type names.  These are resolved in the same way as      * FieldDescriptorProto.type_name, but must refer to a message type.      *</pre>      *      *<code>optional string input_type = 2;</code>      */
specifier|public
name|boolean
name|hasInputType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<pre>      * Input and output type names.  These are resolved in the same way as      * FieldDescriptorProto.type_name, but must refer to a message type.      *</pre>      *      *<code>optional string input_type = 2;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getInputType
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|inputType_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|inputType_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<pre>      * Input and output type names.  These are resolved in the same way as      * FieldDescriptorProto.type_name, but must refer to a message type.      *</pre>      *      *<code>optional string input_type = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getInputTypeBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|inputType_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|inputType_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|OUTPUT_TYPE_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|outputType_
decl_stmt|;
comment|/**      *<code>optional string output_type = 3;</code>      */
specifier|public
name|boolean
name|hasOutputType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<code>optional string output_type = 3;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getOutputType
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|outputType_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|outputType_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string output_type = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOutputTypeBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|outputType_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|outputType_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|OPTIONS_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|options_
decl_stmt|;
comment|/**      *<code>optional .google.protobuf.MethodOptions options = 4;</code>      */
specifier|public
name|boolean
name|hasOptions
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**      *<code>optional .google.protobuf.MethodOptions options = 4;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|getOptions
parameter_list|()
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
comment|/**      *<code>optional .google.protobuf.MethodOptions options = 4;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|CLIENT_STREAMING_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|boolean
name|clientStreaming_
decl_stmt|;
comment|/**      *<pre>      * Identifies if client streams multiple client messages      *</pre>      *      *<code>optional bool client_streaming = 5 [default = false];</code>      */
specifier|public
name|boolean
name|hasClientStreaming
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**      *<pre>      * Identifies if client streams multiple client messages      *</pre>      *      *<code>optional bool client_streaming = 5 [default = false];</code>      */
specifier|public
name|boolean
name|getClientStreaming
parameter_list|()
block|{
return|return
name|clientStreaming_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|SERVER_STREAMING_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|boolean
name|serverStreaming_
decl_stmt|;
comment|/**      *<pre>      * Identifies if server streams multiple server messages      *</pre>      *      *<code>optional bool server_streaming = 6 [default = false];</code>      */
specifier|public
name|boolean
name|hasServerStreaming
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**      *<pre>      * Identifies if server streams multiple server messages      *</pre>      *      *<code>optional bool server_streaming = 6 [default = false];</code>      */
specifier|public
name|boolean
name|getServerStreaming
parameter_list|()
block|{
return|return
name|serverStreaming_
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getOptions
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|1
argument_list|,
name|name_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|2
argument_list|,
name|inputType_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|3
argument_list|,
name|outputType_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|4
argument_list|,
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|5
argument_list|,
name|clientStreaming_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|6
argument_list|,
name|serverStreaming_
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|1
argument_list|,
name|name_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|2
argument_list|,
name|inputType_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|3
argument_list|,
name|outputType_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|4
argument_list|,
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|5
argument_list|,
name|clientStreaming_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|6
argument_list|,
name|serverStreaming_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasName
argument_list|()
operator|==
name|other
operator|.
name|hasName
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasName
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasInputType
argument_list|()
operator|==
name|other
operator|.
name|hasInputType
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasInputType
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getInputType
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getInputType
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasOutputType
argument_list|()
operator|==
name|other
operator|.
name|hasOutputType
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasOutputType
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getOutputType
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getOutputType
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasOptions
argument_list|()
operator|==
name|other
operator|.
name|hasOptions
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getOptions
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasClientStreaming
argument_list|()
operator|==
name|other
operator|.
name|hasClientStreaming
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasClientStreaming
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getClientStreaming
argument_list|()
operator|==
name|other
operator|.
name|getClientStreaming
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasServerStreaming
argument_list|()
operator|==
name|other
operator|.
name|hasServerStreaming
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasServerStreaming
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getServerStreaming
argument_list|()
operator|==
name|other
operator|.
name|getServerStreaming
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasName
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|NAME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getName
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasInputType
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|INPUT_TYPE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getInputType
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasOutputType
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|OUTPUT_TYPE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getOutputType
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|OPTIONS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getOptions
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasClientStreaming
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|CLIENT_STREAMING_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getClientStreaming
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasServerStreaming
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|SERVER_STREAMING_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getServerStreaming
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      *<pre>      * Describes a method of a service.      *</pre>      *      * Protobuf type {@code google.protobuf.MethodDescriptorProto}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.MethodDescriptorProto)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProtoOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_MethodDescriptorProto_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_MethodDescriptorProto_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.MethodDescriptorProto.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getOptionsFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|name_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|inputType_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|outputType_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
literal|null
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|clientStreaming_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|serverStreaming_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_MethodDescriptorProto_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|name_
operator|=
name|name_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|inputType_
operator|=
name|inputType_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|outputType_
operator|=
name|outputType_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|options_
operator|=
name|options_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|options_
operator|=
name|optionsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|result
operator|.
name|clientStreaming_
operator|=
name|clientStreaming_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
name|result
operator|.
name|serverStreaming_
operator|=
name|serverStreaming_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|other
operator|.
name|name_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasInputType
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|inputType_
operator|=
name|other
operator|.
name|inputType_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasOutputType
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|outputType_
operator|=
name|other
operator|.
name|outputType_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasOptions
argument_list|()
condition|)
block|{
name|mergeOptions
argument_list|(
name|other
operator|.
name|getOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasClientStreaming
argument_list|()
condition|)
block|{
name|setClientStreaming
argument_list|(
name|other
operator|.
name|getClientStreaming
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasServerStreaming
argument_list|()
condition|)
block|{
name|setServerStreaming
argument_list|(
name|other
operator|.
name|getServerStreaming
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
name|hasOptions
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getOptions
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|name_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|boolean
name|hasName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|name_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|name_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|name_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|setName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|clearName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|name_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string name = 1;</code>        */
specifier|public
name|Builder
name|setNameBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|name_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|inputType_
init|=
literal|""
decl_stmt|;
comment|/**        *<pre>        * Input and output type names.  These are resolved in the same way as        * FieldDescriptorProto.type_name, but must refer to a message type.        *</pre>        *        *<code>optional string input_type = 2;</code>        */
specifier|public
name|boolean
name|hasInputType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<pre>        * Input and output type names.  These are resolved in the same way as        * FieldDescriptorProto.type_name, but must refer to a message type.        *</pre>        *        *<code>optional string input_type = 2;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getInputType
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|inputType_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|inputType_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * Input and output type names.  These are resolved in the same way as        * FieldDescriptorProto.type_name, but must refer to a message type.        *</pre>        *        *<code>optional string input_type = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getInputTypeBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|inputType_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|inputType_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * Input and output type names.  These are resolved in the same way as        * FieldDescriptorProto.type_name, but must refer to a message type.        *</pre>        *        *<code>optional string input_type = 2;</code>        */
specifier|public
name|Builder
name|setInputType
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|inputType_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Input and output type names.  These are resolved in the same way as        * FieldDescriptorProto.type_name, but must refer to a message type.        *</pre>        *        *<code>optional string input_type = 2;</code>        */
specifier|public
name|Builder
name|clearInputType
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|inputType_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getInputType
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Input and output type names.  These are resolved in the same way as        * FieldDescriptorProto.type_name, but must refer to a message type.        *</pre>        *        *<code>optional string input_type = 2;</code>        */
specifier|public
name|Builder
name|setInputTypeBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|inputType_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|outputType_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string output_type = 3;</code>        */
specifier|public
name|boolean
name|hasOutputType
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>optional string output_type = 3;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getOutputType
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|outputType_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|outputType_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string output_type = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getOutputTypeBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|outputType_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|outputType_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string output_type = 3;</code>        */
specifier|public
name|Builder
name|setOutputType
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|outputType_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string output_type = 3;</code>        */
specifier|public
name|Builder
name|clearOutputType
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|outputType_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getOutputType
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string output_type = 3;</code>        */
specifier|public
name|Builder
name|setOutputTypeBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|outputType_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|options_
init|=
literal|null
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptionsOrBuilder
argument_list|>
name|optionsBuilder_
decl_stmt|;
comment|/**        *<code>optional .google.protobuf.MethodOptions options = 4;</code>        */
specifier|public
name|boolean
name|hasOptions
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**        *<code>optional .google.protobuf.MethodOptions options = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|getOptions
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
else|else
block|{
return|return
name|optionsBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .google.protobuf.MethodOptions options = 4;</code>        */
specifier|public
name|Builder
name|setOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|value
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|options_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.MethodOptions options = 4;</code>        */
specifier|public
name|Builder
name|setOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.MethodOptions options = 4;</code>        */
specifier|public
name|Builder
name|mergeOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|value
parameter_list|)
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
operator|&&
name|options_
operator|!=
literal|null
operator|&&
name|options_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|options_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|newBuilder
argument_list|(
name|options_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|options_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.MethodOptions options = 4;</code>        */
specifier|public
name|Builder
name|clearOptions
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|options_
operator|=
literal|null
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|optionsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.MethodOptions options = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|Builder
name|getOptionsBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getOptionsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .google.protobuf.MethodOptions options = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptionsOrBuilder
name|getOptionsOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|optionsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|options_
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|getDefaultInstance
argument_list|()
else|:
name|options_
return|;
block|}
block|}
comment|/**        *<code>optional .google.protobuf.MethodOptions options = 4;</code>        */
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptionsOrBuilder
argument_list|>
name|getOptionsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|optionsBuilder_
operator|==
literal|null
condition|)
block|{
name|optionsBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptionsOrBuilder
argument_list|>
argument_list|(
name|getOptions
argument_list|()
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|options_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|optionsBuilder_
return|;
block|}
specifier|private
name|boolean
name|clientStreaming_
decl_stmt|;
comment|/**        *<pre>        * Identifies if client streams multiple client messages        *</pre>        *        *<code>optional bool client_streaming = 5 [default = false];</code>        */
specifier|public
name|boolean
name|hasClientStreaming
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**        *<pre>        * Identifies if client streams multiple client messages        *</pre>        *        *<code>optional bool client_streaming = 5 [default = false];</code>        */
specifier|public
name|boolean
name|getClientStreaming
parameter_list|()
block|{
return|return
name|clientStreaming_
return|;
block|}
comment|/**        *<pre>        * Identifies if client streams multiple client messages        *</pre>        *        *<code>optional bool client_streaming = 5 [default = false];</code>        */
specifier|public
name|Builder
name|setClientStreaming
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|clientStreaming_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Identifies if client streams multiple client messages        *</pre>        *        *<code>optional bool client_streaming = 5 [default = false];</code>        */
specifier|public
name|Builder
name|clearClientStreaming
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|clientStreaming_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|serverStreaming_
decl_stmt|;
comment|/**        *<pre>        * Identifies if server streams multiple server messages        *</pre>        *        *<code>optional bool server_streaming = 6 [default = false];</code>        */
specifier|public
name|boolean
name|hasServerStreaming
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**        *<pre>        * Identifies if server streams multiple server messages        *</pre>        *        *<code>optional bool server_streaming = 6 [default = false];</code>        */
specifier|public
name|boolean
name|getServerStreaming
parameter_list|()
block|{
return|return
name|serverStreaming_
return|;
block|}
comment|/**        *<pre>        * Identifies if server streams multiple server messages        *</pre>        *        *<code>optional bool server_streaming = 6 [default = false];</code>        */
specifier|public
name|Builder
name|setServerStreaming
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|serverStreaming_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Identifies if server streams multiple server messages        *</pre>        *        *<code>optional bool server_streaming = 6 [default = false];</code>        */
specifier|public
name|Builder
name|clearServerStreaming
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|serverStreaming_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.MethodDescriptorProto)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.MethodDescriptorProto)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|MethodDescriptorProto
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|MethodDescriptorProto
argument_list|>
argument_list|()
block|{
specifier|public
name|MethodDescriptorProto
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|MethodDescriptorProto
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|MethodDescriptorProto
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|MethodDescriptorProto
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodDescriptorProto
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|FileOptionsOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.FileOptions)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessageOrBuilder
argument_list|<
name|FileOptions
argument_list|>
block|{
comment|/**      *<pre>      * Sets the Java package where classes generated from this .proto will be      * placed.  By default, the proto package is used, but this is often      * inappropriate because proto packages do not normally start with backwards      * domain names.      *</pre>      *      *<code>optional string java_package = 1;</code>      */
name|boolean
name|hasJavaPackage
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Sets the Java package where classes generated from this .proto will be      * placed.  By default, the proto package is used, but this is often      * inappropriate because proto packages do not normally start with backwards      * domain names.      *</pre>      *      *<code>optional string java_package = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getJavaPackage
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Sets the Java package where classes generated from this .proto will be      * placed.  By default, the proto package is used, but this is often      * inappropriate because proto packages do not normally start with backwards      * domain names.      *</pre>      *      *<code>optional string java_package = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getJavaPackageBytes
parameter_list|()
function_decl|;
comment|/**      *<pre>      * If set, all the classes from the .proto file are wrapped in a single      * outer class with the given name.  This applies to both Proto1      * (equivalent to the old "--one_java_file" option) and Proto2 (where      * a .proto always translates to a single class, but you may want to      * explicitly choose the class name).      *</pre>      *      *<code>optional string java_outer_classname = 8;</code>      */
name|boolean
name|hasJavaOuterClassname
parameter_list|()
function_decl|;
comment|/**      *<pre>      * If set, all the classes from the .proto file are wrapped in a single      * outer class with the given name.  This applies to both Proto1      * (equivalent to the old "--one_java_file" option) and Proto2 (where      * a .proto always translates to a single class, but you may want to      * explicitly choose the class name).      *</pre>      *      *<code>optional string java_outer_classname = 8;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getJavaOuterClassname
parameter_list|()
function_decl|;
comment|/**      *<pre>      * If set, all the classes from the .proto file are wrapped in a single      * outer class with the given name.  This applies to both Proto1      * (equivalent to the old "--one_java_file" option) and Proto2 (where      * a .proto always translates to a single class, but you may want to      * explicitly choose the class name).      *</pre>      *      *<code>optional string java_outer_classname = 8;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getJavaOuterClassnameBytes
parameter_list|()
function_decl|;
comment|/**      *<pre>      * If set true, then the Java code generator will generate a separate .java      * file for each top-level message, enum, and service defined in the .proto      * file.  Thus, these types will *not* be nested inside the outer class      * named by java_outer_classname.  However, the outer class will still be      * generated to contain the file's getDescriptor() method as well as any      * top-level extensions defined in the file.      *</pre>      *      *<code>optional bool java_multiple_files = 10 [default = false];</code>      */
name|boolean
name|hasJavaMultipleFiles
parameter_list|()
function_decl|;
comment|/**      *<pre>      * If set true, then the Java code generator will generate a separate .java      * file for each top-level message, enum, and service defined in the .proto      * file.  Thus, these types will *not* be nested inside the outer class      * named by java_outer_classname.  However, the outer class will still be      * generated to contain the file's getDescriptor() method as well as any      * top-level extensions defined in the file.      *</pre>      *      *<code>optional bool java_multiple_files = 10 [default = false];</code>      */
name|boolean
name|getJavaMultipleFiles
parameter_list|()
function_decl|;
comment|/**      *<pre>      * This option does nothing.      *</pre>      *      *<code>optional bool java_generate_equals_and_hash = 20 [deprecated = true];</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
name|boolean
name|hasJavaGenerateEqualsAndHash
parameter_list|()
function_decl|;
comment|/**      *<pre>      * This option does nothing.      *</pre>      *      *<code>optional bool java_generate_equals_and_hash = 20 [deprecated = true];</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
name|boolean
name|getJavaGenerateEqualsAndHash
parameter_list|()
function_decl|;
comment|/**      *<pre>      * If set true, then the Java2 code generator will generate code that      * throws an exception whenever an attempt is made to assign a non-UTF-8      * byte sequence to a string field.      * Message reflection will do the same.      * However, an extension field still accepts non-UTF-8 byte sequences.      * This option has no effect on when used with the lite runtime.      *</pre>      *      *<code>optional bool java_string_check_utf8 = 27 [default = false];</code>      */
name|boolean
name|hasJavaStringCheckUtf8
parameter_list|()
function_decl|;
comment|/**      *<pre>      * If set true, then the Java2 code generator will generate code that      * throws an exception whenever an attempt is made to assign a non-UTF-8      * byte sequence to a string field.      * Message reflection will do the same.      * However, an extension field still accepts non-UTF-8 byte sequences.      * This option has no effect on when used with the lite runtime.      *</pre>      *      *<code>optional bool java_string_check_utf8 = 27 [default = false];</code>      */
name|boolean
name|getJavaStringCheckUtf8
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.FileOptions.OptimizeMode optimize_for = 9 [default = SPEED];</code>      */
name|boolean
name|hasOptimizeFor
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.FileOptions.OptimizeMode optimize_for = 9 [default = SPEED];</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|OptimizeMode
name|getOptimizeFor
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Sets the Go package where structs generated from this .proto will be      * placed. If omitted, the Go package will be derived from the following:      *   - The basename of the package import path, if provided.      *   - Otherwise, the package statement in the .proto file, if present.      *   - Otherwise, the basename of the .proto file, without extension.      *</pre>      *      *<code>optional string go_package = 11;</code>      */
name|boolean
name|hasGoPackage
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Sets the Go package where structs generated from this .proto will be      * placed. If omitted, the Go package will be derived from the following:      *   - The basename of the package import path, if provided.      *   - Otherwise, the package statement in the .proto file, if present.      *   - Otherwise, the basename of the .proto file, without extension.      *</pre>      *      *<code>optional string go_package = 11;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getGoPackage
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Sets the Go package where structs generated from this .proto will be      * placed. If omitted, the Go package will be derived from the following:      *   - The basename of the package import path, if provided.      *   - Otherwise, the package statement in the .proto file, if present.      *   - Otherwise, the basename of the .proto file, without extension.      *</pre>      *      *<code>optional string go_package = 11;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getGoPackageBytes
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Should generic services be generated in each language?  "Generic" services      * are not specific to any particular RPC system.  They are generated by the      * main code generators in each language (without additional plugins).      * Generic services were the only kind of service generation supported by      * early versions of google.protobuf.      * Generic services are now considered deprecated in favor of using plugins      * that generate code specific to your particular RPC system.  Therefore,      * these default to false.  Old code which depends on generic services should      * explicitly set them to true.      *</pre>      *      *<code>optional bool cc_generic_services = 16 [default = false];</code>      */
name|boolean
name|hasCcGenericServices
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Should generic services be generated in each language?  "Generic" services      * are not specific to any particular RPC system.  They are generated by the      * main code generators in each language (without additional plugins).      * Generic services were the only kind of service generation supported by      * early versions of google.protobuf.      * Generic services are now considered deprecated in favor of using plugins      * that generate code specific to your particular RPC system.  Therefore,      * these default to false.  Old code which depends on generic services should      * explicitly set them to true.      *</pre>      *      *<code>optional bool cc_generic_services = 16 [default = false];</code>      */
name|boolean
name|getCcGenericServices
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool java_generic_services = 17 [default = false];</code>      */
name|boolean
name|hasJavaGenericServices
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool java_generic_services = 17 [default = false];</code>      */
name|boolean
name|getJavaGenericServices
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool py_generic_services = 18 [default = false];</code>      */
name|boolean
name|hasPyGenericServices
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool py_generic_services = 18 [default = false];</code>      */
name|boolean
name|getPyGenericServices
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Is this file deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for everything in the file, or it will be completely ignored; in the very      * least, this is a formalization for deprecating files.      *</pre>      *      *<code>optional bool deprecated = 23 [default = false];</code>      */
name|boolean
name|hasDeprecated
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Is this file deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for everything in the file, or it will be completely ignored; in the very      * least, this is a formalization for deprecating files.      *</pre>      *      *<code>optional bool deprecated = 23 [default = false];</code>      */
name|boolean
name|getDeprecated
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Enables the use of arenas for the proto messages in this file. This applies      * only to generated classes for C++.      *</pre>      *      *<code>optional bool cc_enable_arenas = 31 [default = false];</code>      */
name|boolean
name|hasCcEnableArenas
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Enables the use of arenas for the proto messages in this file. This applies      * only to generated classes for C++.      *</pre>      *      *<code>optional bool cc_enable_arenas = 31 [default = false];</code>      */
name|boolean
name|getCcEnableArenas
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Sets the objective c class prefix which is prepended to all objective c      * generated classes from this .proto. There is no default.      *</pre>      *      *<code>optional string objc_class_prefix = 36;</code>      */
name|boolean
name|hasObjcClassPrefix
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Sets the objective c class prefix which is prepended to all objective c      * generated classes from this .proto. There is no default.      *</pre>      *      *<code>optional string objc_class_prefix = 36;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getObjcClassPrefix
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Sets the objective c class prefix which is prepended to all objective c      * generated classes from this .proto. There is no default.      *</pre>      *      *<code>optional string objc_class_prefix = 36;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getObjcClassPrefixBytes
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Namespace for generated classes; defaults to the package.      *</pre>      *      *<code>optional string csharp_namespace = 37;</code>      */
name|boolean
name|hasCsharpNamespace
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Namespace for generated classes; defaults to the package.      *</pre>      *      *<code>optional string csharp_namespace = 37;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getCsharpNamespace
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Namespace for generated classes; defaults to the package.      *</pre>      *      *<code>optional string csharp_namespace = 37;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getCsharpNamespaceBytes
parameter_list|()
function_decl|;
comment|/**      *<pre>      * By default Swift generators will take the proto package and CamelCase it      * replacing '.' with underscore and use that to prefix the types/symbols      * defined. When this options is provided, they will use this value instead      * to prefix the types/symbols defined.      *</pre>      *      *<code>optional string swift_prefix = 39;</code>      */
name|boolean
name|hasSwiftPrefix
parameter_list|()
function_decl|;
comment|/**      *<pre>      * By default Swift generators will take the proto package and CamelCase it      * replacing '.' with underscore and use that to prefix the types/symbols      * defined. When this options is provided, they will use this value instead      * to prefix the types/symbols defined.      *</pre>      *      *<code>optional string swift_prefix = 39;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getSwiftPrefix
parameter_list|()
function_decl|;
comment|/**      *<pre>      * By default Swift generators will take the proto package and CamelCase it      * replacing '.' with underscore and use that to prefix the types/symbols      * defined. When this options is provided, they will use this value instead      * to prefix the types/symbols defined.      *</pre>      *      *<code>optional string swift_prefix = 39;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSwiftPrefixBytes
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|int
name|getUninterpretedOptionCount
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    * Protobuf type {@code google.protobuf.FileOptions}    */
specifier|public
specifier|static
specifier|final
class|class
name|FileOptions
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessage
argument_list|<
name|FileOptions
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.FileOptions)
name|FileOptionsOrBuilder
block|{
comment|// Use FileOptions.newBuilder() to construct.
specifier|private
name|FileOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
argument_list|,
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|FileOptions
parameter_list|()
block|{
name|javaPackage_
operator|=
literal|""
expr_stmt|;
name|javaOuterClassname_
operator|=
literal|""
expr_stmt|;
name|javaMultipleFiles_
operator|=
literal|false
expr_stmt|;
name|javaGenerateEqualsAndHash_
operator|=
literal|false
expr_stmt|;
name|javaStringCheckUtf8_
operator|=
literal|false
expr_stmt|;
name|optimizeFor_
operator|=
literal|1
expr_stmt|;
name|goPackage_
operator|=
literal|""
expr_stmt|;
name|ccGenericServices_
operator|=
literal|false
expr_stmt|;
name|javaGenericServices_
operator|=
literal|false
expr_stmt|;
name|pyGenericServices_
operator|=
literal|false
expr_stmt|;
name|deprecated_
operator|=
literal|false
expr_stmt|;
name|ccEnableArenas_
operator|=
literal|false
expr_stmt|;
name|objcClassPrefix_
operator|=
literal|""
expr_stmt|;
name|csharpNamespace_
operator|=
literal|""
expr_stmt|;
name|swiftPrefix_
operator|=
literal|""
expr_stmt|;
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|FileOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|javaPackage_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|66
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|javaOuterClassname_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|72
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|OptimizeMode
name|value
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|OptimizeMode
operator|.
name|valueOf
argument_list|(
name|rawValue
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unknownFields
operator|.
name|mergeVarintField
argument_list|(
literal|9
argument_list|,
name|rawValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|optimizeFor_
operator|=
name|rawValue
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|80
case|:
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|javaMultipleFiles_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|90
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|goPackage_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|128
case|:
block|{
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
name|ccGenericServices_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|136
case|:
block|{
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
name|javaGenericServices_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|144
case|:
block|{
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
name|pyGenericServices_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|160
case|:
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|javaGenerateEqualsAndHash_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|184
case|:
block|{
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|deprecated_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|216
case|:
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|javaStringCheckUtf8_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|248
case|:
block|{
name|bitField0_
operator||=
literal|0x00000800
expr_stmt|;
name|ccEnableArenas_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|290
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00001000
expr_stmt|;
name|objcClassPrefix_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|298
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00002000
expr_stmt|;
name|csharpNamespace_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|314
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00004000
expr_stmt|;
name|swiftPrefix_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|7994
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00008000
operator|)
operator|==
literal|0x00008000
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00008000
expr_stmt|;
block|}
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00008000
operator|)
operator|==
literal|0x00008000
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FileOptions_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FileOptions_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      *<pre>      * Generated classes can be optimized for speed or code size.      *</pre>      *      * Protobuf enum {@code google.protobuf.FileOptions.OptimizeMode}      */
specifier|public
enum|enum
name|OptimizeMode
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolMessageEnum
block|{
comment|/**        *<pre>        * Generate complete code for parsing, serialization,        *</pre>        *        *<code>SPEED = 1;</code>        */
name|SPEED
argument_list|(
literal|1
argument_list|)
block|,
comment|/**        *<pre>        * etc.        *</pre>        *        *<code>CODE_SIZE = 2;</code>        */
name|CODE_SIZE
argument_list|(
literal|2
argument_list|)
block|,
comment|/**        *<pre>        * Generate code using MessageLite and the lite runtime.        *</pre>        *        *<code>LITE_RUNTIME = 3;</code>        */
name|LITE_RUNTIME
argument_list|(
literal|3
argument_list|)
block|,       ;
comment|/**        *<pre>        * Generate complete code for parsing, serialization,        *</pre>        *        *<code>SPEED = 1;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|SPEED_VALUE
init|=
literal|1
decl_stmt|;
comment|/**        *<pre>        * etc.        *</pre>        *        *<code>CODE_SIZE = 2;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|CODE_SIZE_VALUE
init|=
literal|2
decl_stmt|;
comment|/**        *<pre>        * Generate code using MessageLite and the lite runtime.        *</pre>        *        *<code>LITE_RUNTIME = 3;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|LITE_RUNTIME_VALUE
init|=
literal|3
decl_stmt|;
specifier|public
specifier|final
name|int
name|getNumber
parameter_list|()
block|{
return|return
name|value
return|;
block|}
comment|/**        * @deprecated Use {@link #forNumber(int)} instead.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
name|OptimizeMode
name|valueOf
parameter_list|(
name|int
name|value
parameter_list|)
block|{
return|return
name|forNumber
argument_list|(
name|value
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|OptimizeMode
name|forNumber
parameter_list|(
name|int
name|value
parameter_list|)
block|{
switch|switch
condition|(
name|value
condition|)
block|{
case|case
literal|1
case|:
return|return
name|SPEED
return|;
case|case
literal|2
case|:
return|return
name|CODE_SIZE
return|;
case|case
literal|3
case|:
return|return
name|LITE_RUNTIME
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|OptimizeMode
argument_list|>
name|internalGetValueMap
parameter_list|()
block|{
return|return
name|internalValueMap
return|;
block|}
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|OptimizeMode
argument_list|>
name|internalValueMap
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|OptimizeMode
argument_list|>
argument_list|()
block|{
specifier|public
name|OptimizeMode
name|findValueByNumber
parameter_list|(
name|int
name|number
parameter_list|)
block|{
return|return
name|OptimizeMode
operator|.
name|forNumber
argument_list|(
name|number
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|getValueDescriptor
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
name|ordinal
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getEnumTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
specifier|private
specifier|static
specifier|final
name|OptimizeMode
index|[]
name|VALUES
init|=
name|values
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|OptimizeMode
name|valueOf
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|desc
parameter_list|)
block|{
if|if
condition|(
name|desc
operator|.
name|getType
argument_list|()
operator|!=
name|getDescriptor
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|IllegalArgumentException
argument_list|(
literal|"EnumValueDescriptor is not for this type."
argument_list|)
throw|;
block|}
return|return
name|VALUES
index|[
name|desc
operator|.
name|getIndex
argument_list|()
index|]
return|;
block|}
specifier|private
specifier|final
name|int
name|value
decl_stmt|;
specifier|private
name|OptimizeMode
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(enum_scope:google.protobuf.FileOptions.OptimizeMode)
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|JAVA_PACKAGE_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|javaPackage_
decl_stmt|;
comment|/**      *<pre>      * Sets the Java package where classes generated from this .proto will be      * placed.  By default, the proto package is used, but this is often      * inappropriate because proto packages do not normally start with backwards      * domain names.      *</pre>      *      *<code>optional string java_package = 1;</code>      */
specifier|public
name|boolean
name|hasJavaPackage
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<pre>      * Sets the Java package where classes generated from this .proto will be      * placed.  By default, the proto package is used, but this is often      * inappropriate because proto packages do not normally start with backwards      * domain names.      *</pre>      *      *<code>optional string java_package = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getJavaPackage
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|javaPackage_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|javaPackage_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<pre>      * Sets the Java package where classes generated from this .proto will be      * placed.  By default, the proto package is used, but this is often      * inappropriate because proto packages do not normally start with backwards      * domain names.      *</pre>      *      *<code>optional string java_package = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getJavaPackageBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|javaPackage_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|javaPackage_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|JAVA_OUTER_CLASSNAME_FIELD_NUMBER
init|=
literal|8
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|javaOuterClassname_
decl_stmt|;
comment|/**      *<pre>      * If set, all the classes from the .proto file are wrapped in a single      * outer class with the given name.  This applies to both Proto1      * (equivalent to the old "--one_java_file" option) and Proto2 (where      * a .proto always translates to a single class, but you may want to      * explicitly choose the class name).      *</pre>      *      *<code>optional string java_outer_classname = 8;</code>      */
specifier|public
name|boolean
name|hasJavaOuterClassname
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<pre>      * If set, all the classes from the .proto file are wrapped in a single      * outer class with the given name.  This applies to both Proto1      * (equivalent to the old "--one_java_file" option) and Proto2 (where      * a .proto always translates to a single class, but you may want to      * explicitly choose the class name).      *</pre>      *      *<code>optional string java_outer_classname = 8;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getJavaOuterClassname
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|javaOuterClassname_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|javaOuterClassname_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<pre>      * If set, all the classes from the .proto file are wrapped in a single      * outer class with the given name.  This applies to both Proto1      * (equivalent to the old "--one_java_file" option) and Proto2 (where      * a .proto always translates to a single class, but you may want to      * explicitly choose the class name).      *</pre>      *      *<code>optional string java_outer_classname = 8;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getJavaOuterClassnameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|javaOuterClassname_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|javaOuterClassname_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|JAVA_MULTIPLE_FILES_FIELD_NUMBER
init|=
literal|10
decl_stmt|;
specifier|private
name|boolean
name|javaMultipleFiles_
decl_stmt|;
comment|/**      *<pre>      * If set true, then the Java code generator will generate a separate .java      * file for each top-level message, enum, and service defined in the .proto      * file.  Thus, these types will *not* be nested inside the outer class      * named by java_outer_classname.  However, the outer class will still be      * generated to contain the file's getDescriptor() method as well as any      * top-level extensions defined in the file.      *</pre>      *      *<code>optional bool java_multiple_files = 10 [default = false];</code>      */
specifier|public
name|boolean
name|hasJavaMultipleFiles
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<pre>      * If set true, then the Java code generator will generate a separate .java      * file for each top-level message, enum, and service defined in the .proto      * file.  Thus, these types will *not* be nested inside the outer class      * named by java_outer_classname.  However, the outer class will still be      * generated to contain the file's getDescriptor() method as well as any      * top-level extensions defined in the file.      *</pre>      *      *<code>optional bool java_multiple_files = 10 [default = false];</code>      */
specifier|public
name|boolean
name|getJavaMultipleFiles
parameter_list|()
block|{
return|return
name|javaMultipleFiles_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|JAVA_GENERATE_EQUALS_AND_HASH_FIELD_NUMBER
init|=
literal|20
decl_stmt|;
specifier|private
name|boolean
name|javaGenerateEqualsAndHash_
decl_stmt|;
comment|/**      *<pre>      * This option does nothing.      *</pre>      *      *<code>optional bool java_generate_equals_and_hash = 20 [deprecated = true];</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
name|boolean
name|hasJavaGenerateEqualsAndHash
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**      *<pre>      * This option does nothing.      *</pre>      *      *<code>optional bool java_generate_equals_and_hash = 20 [deprecated = true];</code>      */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
name|boolean
name|getJavaGenerateEqualsAndHash
parameter_list|()
block|{
return|return
name|javaGenerateEqualsAndHash_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|JAVA_STRING_CHECK_UTF8_FIELD_NUMBER
init|=
literal|27
decl_stmt|;
specifier|private
name|boolean
name|javaStringCheckUtf8_
decl_stmt|;
comment|/**      *<pre>      * If set true, then the Java2 code generator will generate code that      * throws an exception whenever an attempt is made to assign a non-UTF-8      * byte sequence to a string field.      * Message reflection will do the same.      * However, an extension field still accepts non-UTF-8 byte sequences.      * This option has no effect on when used with the lite runtime.      *</pre>      *      *<code>optional bool java_string_check_utf8 = 27 [default = false];</code>      */
specifier|public
name|boolean
name|hasJavaStringCheckUtf8
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**      *<pre>      * If set true, then the Java2 code generator will generate code that      * throws an exception whenever an attempt is made to assign a non-UTF-8      * byte sequence to a string field.      * Message reflection will do the same.      * However, an extension field still accepts non-UTF-8 byte sequences.      * This option has no effect on when used with the lite runtime.      *</pre>      *      *<code>optional bool java_string_check_utf8 = 27 [default = false];</code>      */
specifier|public
name|boolean
name|getJavaStringCheckUtf8
parameter_list|()
block|{
return|return
name|javaStringCheckUtf8_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|OPTIMIZE_FOR_FIELD_NUMBER
init|=
literal|9
decl_stmt|;
specifier|private
name|int
name|optimizeFor_
decl_stmt|;
comment|/**      *<code>optional .google.protobuf.FileOptions.OptimizeMode optimize_for = 9 [default = SPEED];</code>      */
specifier|public
name|boolean
name|hasOptimizeFor
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**      *<code>optional .google.protobuf.FileOptions.OptimizeMode optimize_for = 9 [default = SPEED];</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|OptimizeMode
name|getOptimizeFor
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|OptimizeMode
name|result
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|OptimizeMode
operator|.
name|valueOf
argument_list|(
name|optimizeFor_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|OptimizeMode
operator|.
name|SPEED
else|:
name|result
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|GO_PACKAGE_FIELD_NUMBER
init|=
literal|11
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|goPackage_
decl_stmt|;
comment|/**      *<pre>      * Sets the Go package where structs generated from this .proto will be      * placed. If omitted, the Go package will be derived from the following:      *   - The basename of the package import path, if provided.      *   - Otherwise, the package statement in the .proto file, if present.      *   - Otherwise, the basename of the .proto file, without extension.      *</pre>      *      *<code>optional string go_package = 11;</code>      */
specifier|public
name|boolean
name|hasGoPackage
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
return|;
block|}
comment|/**      *<pre>      * Sets the Go package where structs generated from this .proto will be      * placed. If omitted, the Go package will be derived from the following:      *   - The basename of the package import path, if provided.      *   - Otherwise, the package statement in the .proto file, if present.      *   - Otherwise, the basename of the .proto file, without extension.      *</pre>      *      *<code>optional string go_package = 11;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getGoPackage
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|goPackage_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|goPackage_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<pre>      * Sets the Go package where structs generated from this .proto will be      * placed. If omitted, the Go package will be derived from the following:      *   - The basename of the package import path, if provided.      *   - Otherwise, the package statement in the .proto file, if present.      *   - Otherwise, the basename of the .proto file, without extension.      *</pre>      *      *<code>optional string go_package = 11;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getGoPackageBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|goPackage_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|goPackage_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|CC_GENERIC_SERVICES_FIELD_NUMBER
init|=
literal|16
decl_stmt|;
specifier|private
name|boolean
name|ccGenericServices_
decl_stmt|;
comment|/**      *<pre>      * Should generic services be generated in each language?  "Generic" services      * are not specific to any particular RPC system.  They are generated by the      * main code generators in each language (without additional plugins).      * Generic services were the only kind of service generation supported by      * early versions of google.protobuf.      * Generic services are now considered deprecated in favor of using plugins      * that generate code specific to your particular RPC system.  Therefore,      * these default to false.  Old code which depends on generic services should      * explicitly set them to true.      *</pre>      *      *<code>optional bool cc_generic_services = 16 [default = false];</code>      */
specifier|public
name|boolean
name|hasCcGenericServices
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
return|;
block|}
comment|/**      *<pre>      * Should generic services be generated in each language?  "Generic" services      * are not specific to any particular RPC system.  They are generated by the      * main code generators in each language (without additional plugins).      * Generic services were the only kind of service generation supported by      * early versions of google.protobuf.      * Generic services are now considered deprecated in favor of using plugins      * that generate code specific to your particular RPC system.  Therefore,      * these default to false.  Old code which depends on generic services should      * explicitly set them to true.      *</pre>      *      *<code>optional bool cc_generic_services = 16 [default = false];</code>      */
specifier|public
name|boolean
name|getCcGenericServices
parameter_list|()
block|{
return|return
name|ccGenericServices_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|JAVA_GENERIC_SERVICES_FIELD_NUMBER
init|=
literal|17
decl_stmt|;
specifier|private
name|boolean
name|javaGenericServices_
decl_stmt|;
comment|/**      *<code>optional bool java_generic_services = 17 [default = false];</code>      */
specifier|public
name|boolean
name|hasJavaGenericServices
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
return|;
block|}
comment|/**      *<code>optional bool java_generic_services = 17 [default = false];</code>      */
specifier|public
name|boolean
name|getJavaGenericServices
parameter_list|()
block|{
return|return
name|javaGenericServices_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|PY_GENERIC_SERVICES_FIELD_NUMBER
init|=
literal|18
decl_stmt|;
specifier|private
name|boolean
name|pyGenericServices_
decl_stmt|;
comment|/**      *<code>optional bool py_generic_services = 18 [default = false];</code>      */
specifier|public
name|boolean
name|hasPyGenericServices
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
return|;
block|}
comment|/**      *<code>optional bool py_generic_services = 18 [default = false];</code>      */
specifier|public
name|boolean
name|getPyGenericServices
parameter_list|()
block|{
return|return
name|pyGenericServices_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|DEPRECATED_FIELD_NUMBER
init|=
literal|23
decl_stmt|;
specifier|private
name|boolean
name|deprecated_
decl_stmt|;
comment|/**      *<pre>      * Is this file deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for everything in the file, or it will be completely ignored; in the very      * least, this is a formalization for deprecating files.      *</pre>      *      *<code>optional bool deprecated = 23 [default = false];</code>      */
specifier|public
name|boolean
name|hasDeprecated
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
return|;
block|}
comment|/**      *<pre>      * Is this file deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for everything in the file, or it will be completely ignored; in the very      * least, this is a formalization for deprecating files.      *</pre>      *      *<code>optional bool deprecated = 23 [default = false];</code>      */
specifier|public
name|boolean
name|getDeprecated
parameter_list|()
block|{
return|return
name|deprecated_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|CC_ENABLE_ARENAS_FIELD_NUMBER
init|=
literal|31
decl_stmt|;
specifier|private
name|boolean
name|ccEnableArenas_
decl_stmt|;
comment|/**      *<pre>      * Enables the use of arenas for the proto messages in this file. This applies      * only to generated classes for C++.      *</pre>      *      *<code>optional bool cc_enable_arenas = 31 [default = false];</code>      */
specifier|public
name|boolean
name|hasCcEnableArenas
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
return|;
block|}
comment|/**      *<pre>      * Enables the use of arenas for the proto messages in this file. This applies      * only to generated classes for C++.      *</pre>      *      *<code>optional bool cc_enable_arenas = 31 [default = false];</code>      */
specifier|public
name|boolean
name|getCcEnableArenas
parameter_list|()
block|{
return|return
name|ccEnableArenas_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|OBJC_CLASS_PREFIX_FIELD_NUMBER
init|=
literal|36
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|objcClassPrefix_
decl_stmt|;
comment|/**      *<pre>      * Sets the objective c class prefix which is prepended to all objective c      * generated classes from this .proto. There is no default.      *</pre>      *      *<code>optional string objc_class_prefix = 36;</code>      */
specifier|public
name|boolean
name|hasObjcClassPrefix
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00001000
operator|)
operator|==
literal|0x00001000
operator|)
return|;
block|}
comment|/**      *<pre>      * Sets the objective c class prefix which is prepended to all objective c      * generated classes from this .proto. There is no default.      *</pre>      *      *<code>optional string objc_class_prefix = 36;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getObjcClassPrefix
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|objcClassPrefix_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|objcClassPrefix_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<pre>      * Sets the objective c class prefix which is prepended to all objective c      * generated classes from this .proto. There is no default.      *</pre>      *      *<code>optional string objc_class_prefix = 36;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getObjcClassPrefixBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|objcClassPrefix_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|objcClassPrefix_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|CSHARP_NAMESPACE_FIELD_NUMBER
init|=
literal|37
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|csharpNamespace_
decl_stmt|;
comment|/**      *<pre>      * Namespace for generated classes; defaults to the package.      *</pre>      *      *<code>optional string csharp_namespace = 37;</code>      */
specifier|public
name|boolean
name|hasCsharpNamespace
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00002000
operator|)
operator|==
literal|0x00002000
operator|)
return|;
block|}
comment|/**      *<pre>      * Namespace for generated classes; defaults to the package.      *</pre>      *      *<code>optional string csharp_namespace = 37;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getCsharpNamespace
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|csharpNamespace_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|csharpNamespace_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<pre>      * Namespace for generated classes; defaults to the package.      *</pre>      *      *<code>optional string csharp_namespace = 37;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getCsharpNamespaceBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|csharpNamespace_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|csharpNamespace_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|SWIFT_PREFIX_FIELD_NUMBER
init|=
literal|39
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|swiftPrefix_
decl_stmt|;
comment|/**      *<pre>      * By default Swift generators will take the proto package and CamelCase it      * replacing '.' with underscore and use that to prefix the types/symbols      * defined. When this options is provided, they will use this value instead      * to prefix the types/symbols defined.      *</pre>      *      *<code>optional string swift_prefix = 39;</code>      */
specifier|public
name|boolean
name|hasSwiftPrefix
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00004000
operator|)
operator|==
literal|0x00004000
operator|)
return|;
block|}
comment|/**      *<pre>      * By default Swift generators will take the proto package and CamelCase it      * replacing '.' with underscore and use that to prefix the types/symbols      * defined. When this options is provided, they will use this value instead      * to prefix the types/symbols defined.      *</pre>      *      *<code>optional string swift_prefix = 39;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getSwiftPrefix
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|swiftPrefix_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|swiftPrefix_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<pre>      * By default Swift generators will take the proto package and CamelCase it      * replacing '.' with underscore and use that to prefix the types/symbols      * defined. When this options is provided, they will use this value instead      * to prefix the types/symbols defined.      *</pre>      *      *<code>optional string swift_prefix = 39;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSwiftPrefixBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|swiftPrefix_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|swiftPrefix_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|UNINTERPRETED_OPTION_FIELD_NUMBER
init|=
literal|999
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|uninterpretedOption_
decl_stmt|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
block|{
return|return
name|uninterpretedOption_
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
block|{
return|return
name|uninterpretedOption_
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|int
name|getUninterpretedOptionCount
parameter_list|()
block|{
return|return
name|uninterpretedOption_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getUninterpretedOptionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getUninterpretedOption
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
operator|!
name|extensionsAreInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessage
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
argument_list|>
operator|.
name|ExtensionWriter
name|extensionWriter
init|=
name|newExtensionWriter
argument_list|()
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|1
argument_list|,
name|javaPackage_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|8
argument_list|,
name|javaOuterClassname_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|9
argument_list|,
name|optimizeFor_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|10
argument_list|,
name|javaMultipleFiles_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|11
argument_list|,
name|goPackage_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|16
argument_list|,
name|ccGenericServices_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|17
argument_list|,
name|javaGenericServices_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|18
argument_list|,
name|pyGenericServices_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|20
argument_list|,
name|javaGenerateEqualsAndHash_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|23
argument_list|,
name|deprecated_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|27
argument_list|,
name|javaStringCheckUtf8_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|31
argument_list|,
name|ccEnableArenas_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00001000
operator|)
operator|==
literal|0x00001000
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|36
argument_list|,
name|objcClassPrefix_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00002000
operator|)
operator|==
literal|0x00002000
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|37
argument_list|,
name|csharpNamespace_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00004000
operator|)
operator|==
literal|0x00004000
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|39
argument_list|,
name|swiftPrefix_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|uninterpretedOption_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|999
argument_list|,
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|extensionWriter
operator|.
name|writeUntil
argument_list|(
literal|536870912
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|1
argument_list|,
name|javaPackage_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|8
argument_list|,
name|javaOuterClassname_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|9
argument_list|,
name|optimizeFor_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|10
argument_list|,
name|javaMultipleFiles_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|11
argument_list|,
name|goPackage_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|16
argument_list|,
name|ccGenericServices_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|17
argument_list|,
name|javaGenericServices_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|18
argument_list|,
name|pyGenericServices_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|20
argument_list|,
name|javaGenerateEqualsAndHash_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|23
argument_list|,
name|deprecated_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|27
argument_list|,
name|javaStringCheckUtf8_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|31
argument_list|,
name|ccEnableArenas_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00001000
operator|)
operator|==
literal|0x00001000
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|36
argument_list|,
name|objcClassPrefix_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00002000
operator|)
operator|==
literal|0x00002000
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|37
argument_list|,
name|csharpNamespace_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00004000
operator|)
operator|==
literal|0x00004000
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|39
argument_list|,
name|swiftPrefix_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|uninterpretedOption_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|999
argument_list|,
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|extensionsSerializedSize
argument_list|()
expr_stmt|;
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasJavaPackage
argument_list|()
operator|==
name|other
operator|.
name|hasJavaPackage
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasJavaPackage
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getJavaPackage
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getJavaPackage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasJavaOuterClassname
argument_list|()
operator|==
name|other
operator|.
name|hasJavaOuterClassname
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasJavaOuterClassname
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getJavaOuterClassname
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getJavaOuterClassname
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasJavaMultipleFiles
argument_list|()
operator|==
name|other
operator|.
name|hasJavaMultipleFiles
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasJavaMultipleFiles
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getJavaMultipleFiles
argument_list|()
operator|==
name|other
operator|.
name|getJavaMultipleFiles
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasJavaGenerateEqualsAndHash
argument_list|()
operator|==
name|other
operator|.
name|hasJavaGenerateEqualsAndHash
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasJavaGenerateEqualsAndHash
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getJavaGenerateEqualsAndHash
argument_list|()
operator|==
name|other
operator|.
name|getJavaGenerateEqualsAndHash
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasJavaStringCheckUtf8
argument_list|()
operator|==
name|other
operator|.
name|hasJavaStringCheckUtf8
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasJavaStringCheckUtf8
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getJavaStringCheckUtf8
argument_list|()
operator|==
name|other
operator|.
name|getJavaStringCheckUtf8
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasOptimizeFor
argument_list|()
operator|==
name|other
operator|.
name|hasOptimizeFor
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasOptimizeFor
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|optimizeFor_
operator|==
name|other
operator|.
name|optimizeFor_
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasGoPackage
argument_list|()
operator|==
name|other
operator|.
name|hasGoPackage
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasGoPackage
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getGoPackage
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getGoPackage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasCcGenericServices
argument_list|()
operator|==
name|other
operator|.
name|hasCcGenericServices
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasCcGenericServices
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getCcGenericServices
argument_list|()
operator|==
name|other
operator|.
name|getCcGenericServices
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasJavaGenericServices
argument_list|()
operator|==
name|other
operator|.
name|hasJavaGenericServices
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasJavaGenericServices
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getJavaGenericServices
argument_list|()
operator|==
name|other
operator|.
name|getJavaGenericServices
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasPyGenericServices
argument_list|()
operator|==
name|other
operator|.
name|hasPyGenericServices
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasPyGenericServices
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getPyGenericServices
argument_list|()
operator|==
name|other
operator|.
name|getPyGenericServices
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasDeprecated
argument_list|()
operator|==
name|other
operator|.
name|hasDeprecated
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasDeprecated
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getDeprecated
argument_list|()
operator|==
name|other
operator|.
name|getDeprecated
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasCcEnableArenas
argument_list|()
operator|==
name|other
operator|.
name|hasCcEnableArenas
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasCcEnableArenas
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getCcEnableArenas
argument_list|()
operator|==
name|other
operator|.
name|getCcEnableArenas
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasObjcClassPrefix
argument_list|()
operator|==
name|other
operator|.
name|hasObjcClassPrefix
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasObjcClassPrefix
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getObjcClassPrefix
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getObjcClassPrefix
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasCsharpNamespace
argument_list|()
operator|==
name|other
operator|.
name|hasCsharpNamespace
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasCsharpNamespace
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getCsharpNamespace
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getCsharpNamespace
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasSwiftPrefix
argument_list|()
operator|==
name|other
operator|.
name|hasSwiftPrefix
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasSwiftPrefix
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getSwiftPrefix
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getSwiftPrefix
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getUninterpretedOptionList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getUninterpretedOptionList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getExtensionFields
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getExtensionFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasJavaPackage
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|JAVA_PACKAGE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getJavaPackage
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasJavaOuterClassname
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|JAVA_OUTER_CLASSNAME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getJavaOuterClassname
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasJavaMultipleFiles
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|JAVA_MULTIPLE_FILES_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getJavaMultipleFiles
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasJavaGenerateEqualsAndHash
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|JAVA_GENERATE_EQUALS_AND_HASH_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getJavaGenerateEqualsAndHash
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasJavaStringCheckUtf8
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|JAVA_STRING_CHECK_UTF8_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getJavaStringCheckUtf8
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasOptimizeFor
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|OPTIMIZE_FOR_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|optimizeFor_
expr_stmt|;
block|}
if|if
condition|(
name|hasGoPackage
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|GO_PACKAGE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getGoPackage
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasCcGenericServices
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|CC_GENERIC_SERVICES_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getCcGenericServices
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasJavaGenericServices
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|JAVA_GENERIC_SERVICES_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getJavaGenericServices
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasPyGenericServices
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|PY_GENERIC_SERVICES_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getPyGenericServices
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasDeprecated
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|DEPRECATED_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getDeprecated
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasCcEnableArenas
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|CC_ENABLE_ARENAS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getCcEnableArenas
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasObjcClassPrefix
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|OBJC_CLASS_PREFIX_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getObjcClassPrefix
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasCsharpNamespace
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|CSHARP_NAMESPACE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getCsharpNamespace
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasSwiftPrefix
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|SWIFT_PREFIX_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getSwiftPrefix
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getUninterpretedOptionCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|UNINTERPRETED_OPTION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getUninterpretedOptionList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
name|hashFields
argument_list|(
name|hash
argument_list|,
name|getExtensionFields
argument_list|()
argument_list|)
expr_stmt|;
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code google.protobuf.FileOptions}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
argument_list|,
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.FileOptions)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptionsOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FileOptions_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FileOptions_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.FileOptions.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getUninterpretedOptionFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|javaPackage_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|javaOuterClassname_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|javaMultipleFiles_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|javaGenerateEqualsAndHash_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|javaStringCheckUtf8_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|optimizeFor_
operator|=
literal|1
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|goPackage_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|ccGenericServices_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|javaGenericServices_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
name|pyGenericServices_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
name|deprecated_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000400
operator|)
expr_stmt|;
name|ccEnableArenas_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000800
operator|)
expr_stmt|;
name|objcClassPrefix_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00001000
operator|)
expr_stmt|;
name|csharpNamespace_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00002000
operator|)
expr_stmt|;
name|swiftPrefix_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00004000
operator|)
expr_stmt|;
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00008000
operator|)
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FileOptions_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|javaPackage_
operator|=
name|javaPackage_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|javaOuterClassname_
operator|=
name|javaOuterClassname_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|javaMultipleFiles_
operator|=
name|javaMultipleFiles_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|result
operator|.
name|javaGenerateEqualsAndHash_
operator|=
name|javaGenerateEqualsAndHash_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|result
operator|.
name|javaStringCheckUtf8_
operator|=
name|javaStringCheckUtf8_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
name|result
operator|.
name|optimizeFor_
operator|=
name|optimizeFor_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000040
expr_stmt|;
block|}
name|result
operator|.
name|goPackage_
operator|=
name|goPackage_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000080
expr_stmt|;
block|}
name|result
operator|.
name|ccGenericServices_
operator|=
name|ccGenericServices_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000100
expr_stmt|;
block|}
name|result
operator|.
name|javaGenericServices_
operator|=
name|javaGenericServices_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000200
expr_stmt|;
block|}
name|result
operator|.
name|pyGenericServices_
operator|=
name|pyGenericServices_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000400
expr_stmt|;
block|}
name|result
operator|.
name|deprecated_
operator|=
name|deprecated_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000800
expr_stmt|;
block|}
name|result
operator|.
name|ccEnableArenas_
operator|=
name|ccEnableArenas_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00001000
operator|)
operator|==
literal|0x00001000
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00001000
expr_stmt|;
block|}
name|result
operator|.
name|objcClassPrefix_
operator|=
name|objcClassPrefix_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00002000
operator|)
operator|==
literal|0x00002000
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00002000
expr_stmt|;
block|}
name|result
operator|.
name|csharpNamespace_
operator|=
name|csharpNamespace_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00004000
operator|)
operator|==
literal|0x00004000
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00004000
expr_stmt|;
block|}
name|result
operator|.
name|swiftPrefix_
operator|=
name|swiftPrefix_
expr_stmt|;
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00008000
operator|)
operator|==
literal|0x00008000
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00008000
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|uninterpretedOption_
operator|=
name|uninterpretedOption_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|uninterpretedOption_
operator|=
name|uninterpretedOptionBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|setExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
argument_list|,
name|Type
argument_list|>
name|extension
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setExtension
argument_list|(
name|extension
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|setExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
argument_list|,
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|Type
argument_list|>
argument_list|>
name|extension
parameter_list|,
name|int
name|index
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setExtension
argument_list|(
name|extension
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|addExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
argument_list|,
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|Type
argument_list|>
argument_list|>
name|extension
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addExtension
argument_list|(
name|extension
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|clearExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
argument_list|,
name|?
argument_list|>
name|extension
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearExtension
argument_list|(
name|extension
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasJavaPackage
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|javaPackage_
operator|=
name|other
operator|.
name|javaPackage_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasJavaOuterClassname
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|javaOuterClassname_
operator|=
name|other
operator|.
name|javaOuterClassname_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasJavaMultipleFiles
argument_list|()
condition|)
block|{
name|setJavaMultipleFiles
argument_list|(
name|other
operator|.
name|getJavaMultipleFiles
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasJavaGenerateEqualsAndHash
argument_list|()
condition|)
block|{
name|setJavaGenerateEqualsAndHash
argument_list|(
name|other
operator|.
name|getJavaGenerateEqualsAndHash
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasJavaStringCheckUtf8
argument_list|()
condition|)
block|{
name|setJavaStringCheckUtf8
argument_list|(
name|other
operator|.
name|getJavaStringCheckUtf8
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasOptimizeFor
argument_list|()
condition|)
block|{
name|setOptimizeFor
argument_list|(
name|other
operator|.
name|getOptimizeFor
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasGoPackage
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|goPackage_
operator|=
name|other
operator|.
name|goPackage_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasCcGenericServices
argument_list|()
condition|)
block|{
name|setCcGenericServices
argument_list|(
name|other
operator|.
name|getCcGenericServices
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasJavaGenericServices
argument_list|()
condition|)
block|{
name|setJavaGenericServices
argument_list|(
name|other
operator|.
name|getJavaGenericServices
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasPyGenericServices
argument_list|()
condition|)
block|{
name|setPyGenericServices
argument_list|(
name|other
operator|.
name|getPyGenericServices
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasDeprecated
argument_list|()
condition|)
block|{
name|setDeprecated
argument_list|(
name|other
operator|.
name|getDeprecated
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasCcEnableArenas
argument_list|()
condition|)
block|{
name|setCcEnableArenas
argument_list|(
name|other
operator|.
name|getCcEnableArenas
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasObjcClassPrefix
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00001000
expr_stmt|;
name|objcClassPrefix_
operator|=
name|other
operator|.
name|objcClassPrefix_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasCsharpNamespace
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00002000
expr_stmt|;
name|csharpNamespace_
operator|=
name|other
operator|.
name|csharpNamespace_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasSwiftPrefix
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00004000
expr_stmt|;
name|swiftPrefix_
operator|=
name|other
operator|.
name|swiftPrefix_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|uninterpretedOption_
operator|=
name|other
operator|.
name|uninterpretedOption_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00008000
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|uninterpretedOptionBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|uninterpretedOptionBuilder_
operator|=
literal|null
expr_stmt|;
name|uninterpretedOption_
operator|=
name|other
operator|.
name|uninterpretedOption_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00008000
operator|)
expr_stmt|;
name|uninterpretedOptionBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getUninterpretedOptionFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeExtensionFields
argument_list|(
name|other
argument_list|)
expr_stmt|;
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getUninterpretedOptionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getUninterpretedOption
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
operator|!
name|extensionsAreInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|javaPackage_
init|=
literal|""
decl_stmt|;
comment|/**        *<pre>        * Sets the Java package where classes generated from this .proto will be        * placed.  By default, the proto package is used, but this is often        * inappropriate because proto packages do not normally start with backwards        * domain names.        *</pre>        *        *<code>optional string java_package = 1;</code>        */
specifier|public
name|boolean
name|hasJavaPackage
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<pre>        * Sets the Java package where classes generated from this .proto will be        * placed.  By default, the proto package is used, but this is often        * inappropriate because proto packages do not normally start with backwards        * domain names.        *</pre>        *        *<code>optional string java_package = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getJavaPackage
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|javaPackage_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|javaPackage_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * Sets the Java package where classes generated from this .proto will be        * placed.  By default, the proto package is used, but this is often        * inappropriate because proto packages do not normally start with backwards        * domain names.        *</pre>        *        *<code>optional string java_package = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getJavaPackageBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|javaPackage_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|javaPackage_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * Sets the Java package where classes generated from this .proto will be        * placed.  By default, the proto package is used, but this is often        * inappropriate because proto packages do not normally start with backwards        * domain names.        *</pre>        *        *<code>optional string java_package = 1;</code>        */
specifier|public
name|Builder
name|setJavaPackage
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|javaPackage_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Sets the Java package where classes generated from this .proto will be        * placed.  By default, the proto package is used, but this is often        * inappropriate because proto packages do not normally start with backwards        * domain names.        *</pre>        *        *<code>optional string java_package = 1;</code>        */
specifier|public
name|Builder
name|clearJavaPackage
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|javaPackage_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getJavaPackage
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Sets the Java package where classes generated from this .proto will be        * placed.  By default, the proto package is used, but this is often        * inappropriate because proto packages do not normally start with backwards        * domain names.        *</pre>        *        *<code>optional string java_package = 1;</code>        */
specifier|public
name|Builder
name|setJavaPackageBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|javaPackage_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|javaOuterClassname_
init|=
literal|""
decl_stmt|;
comment|/**        *<pre>        * If set, all the classes from the .proto file are wrapped in a single        * outer class with the given name.  This applies to both Proto1        * (equivalent to the old "--one_java_file" option) and Proto2 (where        * a .proto always translates to a single class, but you may want to        * explicitly choose the class name).        *</pre>        *        *<code>optional string java_outer_classname = 8;</code>        */
specifier|public
name|boolean
name|hasJavaOuterClassname
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<pre>        * If set, all the classes from the .proto file are wrapped in a single        * outer class with the given name.  This applies to both Proto1        * (equivalent to the old "--one_java_file" option) and Proto2 (where        * a .proto always translates to a single class, but you may want to        * explicitly choose the class name).        *</pre>        *        *<code>optional string java_outer_classname = 8;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getJavaOuterClassname
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|javaOuterClassname_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|javaOuterClassname_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * If set, all the classes from the .proto file are wrapped in a single        * outer class with the given name.  This applies to both Proto1        * (equivalent to the old "--one_java_file" option) and Proto2 (where        * a .proto always translates to a single class, but you may want to        * explicitly choose the class name).        *</pre>        *        *<code>optional string java_outer_classname = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getJavaOuterClassnameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|javaOuterClassname_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|javaOuterClassname_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * If set, all the classes from the .proto file are wrapped in a single        * outer class with the given name.  This applies to both Proto1        * (equivalent to the old "--one_java_file" option) and Proto2 (where        * a .proto always translates to a single class, but you may want to        * explicitly choose the class name).        *</pre>        *        *<code>optional string java_outer_classname = 8;</code>        */
specifier|public
name|Builder
name|setJavaOuterClassname
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|javaOuterClassname_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * If set, all the classes from the .proto file are wrapped in a single        * outer class with the given name.  This applies to both Proto1        * (equivalent to the old "--one_java_file" option) and Proto2 (where        * a .proto always translates to a single class, but you may want to        * explicitly choose the class name).        *</pre>        *        *<code>optional string java_outer_classname = 8;</code>        */
specifier|public
name|Builder
name|clearJavaOuterClassname
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|javaOuterClassname_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getJavaOuterClassname
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * If set, all the classes from the .proto file are wrapped in a single        * outer class with the given name.  This applies to both Proto1        * (equivalent to the old "--one_java_file" option) and Proto2 (where        * a .proto always translates to a single class, but you may want to        * explicitly choose the class name).        *</pre>        *        *<code>optional string java_outer_classname = 8;</code>        */
specifier|public
name|Builder
name|setJavaOuterClassnameBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|javaOuterClassname_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|javaMultipleFiles_
decl_stmt|;
comment|/**        *<pre>        * If set true, then the Java code generator will generate a separate .java        * file for each top-level message, enum, and service defined in the .proto        * file.  Thus, these types will *not* be nested inside the outer class        * named by java_outer_classname.  However, the outer class will still be        * generated to contain the file's getDescriptor() method as well as any        * top-level extensions defined in the file.        *</pre>        *        *<code>optional bool java_multiple_files = 10 [default = false];</code>        */
specifier|public
name|boolean
name|hasJavaMultipleFiles
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<pre>        * If set true, then the Java code generator will generate a separate .java        * file for each top-level message, enum, and service defined in the .proto        * file.  Thus, these types will *not* be nested inside the outer class        * named by java_outer_classname.  However, the outer class will still be        * generated to contain the file's getDescriptor() method as well as any        * top-level extensions defined in the file.        *</pre>        *        *<code>optional bool java_multiple_files = 10 [default = false];</code>        */
specifier|public
name|boolean
name|getJavaMultipleFiles
parameter_list|()
block|{
return|return
name|javaMultipleFiles_
return|;
block|}
comment|/**        *<pre>        * If set true, then the Java code generator will generate a separate .java        * file for each top-level message, enum, and service defined in the .proto        * file.  Thus, these types will *not* be nested inside the outer class        * named by java_outer_classname.  However, the outer class will still be        * generated to contain the file's getDescriptor() method as well as any        * top-level extensions defined in the file.        *</pre>        *        *<code>optional bool java_multiple_files = 10 [default = false];</code>        */
specifier|public
name|Builder
name|setJavaMultipleFiles
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|javaMultipleFiles_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * If set true, then the Java code generator will generate a separate .java        * file for each top-level message, enum, and service defined in the .proto        * file.  Thus, these types will *not* be nested inside the outer class        * named by java_outer_classname.  However, the outer class will still be        * generated to contain the file's getDescriptor() method as well as any        * top-level extensions defined in the file.        *</pre>        *        *<code>optional bool java_multiple_files = 10 [default = false];</code>        */
specifier|public
name|Builder
name|clearJavaMultipleFiles
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|javaMultipleFiles_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|javaGenerateEqualsAndHash_
decl_stmt|;
comment|/**        *<pre>        * This option does nothing.        *</pre>        *        *<code>optional bool java_generate_equals_and_hash = 20 [deprecated = true];</code>        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
name|boolean
name|hasJavaGenerateEqualsAndHash
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**        *<pre>        * This option does nothing.        *</pre>        *        *<code>optional bool java_generate_equals_and_hash = 20 [deprecated = true];</code>        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
name|boolean
name|getJavaGenerateEqualsAndHash
parameter_list|()
block|{
return|return
name|javaGenerateEqualsAndHash_
return|;
block|}
comment|/**        *<pre>        * This option does nothing.        *</pre>        *        *<code>optional bool java_generate_equals_and_hash = 20 [deprecated = true];</code>        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
name|Builder
name|setJavaGenerateEqualsAndHash
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|javaGenerateEqualsAndHash_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * This option does nothing.        *</pre>        *        *<code>optional bool java_generate_equals_and_hash = 20 [deprecated = true];</code>        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
name|Builder
name|clearJavaGenerateEqualsAndHash
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|javaGenerateEqualsAndHash_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|javaStringCheckUtf8_
decl_stmt|;
comment|/**        *<pre>        * If set true, then the Java2 code generator will generate code that        * throws an exception whenever an attempt is made to assign a non-UTF-8        * byte sequence to a string field.        * Message reflection will do the same.        * However, an extension field still accepts non-UTF-8 byte sequences.        * This option has no effect on when used with the lite runtime.        *</pre>        *        *<code>optional bool java_string_check_utf8 = 27 [default = false];</code>        */
specifier|public
name|boolean
name|hasJavaStringCheckUtf8
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**        *<pre>        * If set true, then the Java2 code generator will generate code that        * throws an exception whenever an attempt is made to assign a non-UTF-8        * byte sequence to a string field.        * Message reflection will do the same.        * However, an extension field still accepts non-UTF-8 byte sequences.        * This option has no effect on when used with the lite runtime.        *</pre>        *        *<code>optional bool java_string_check_utf8 = 27 [default = false];</code>        */
specifier|public
name|boolean
name|getJavaStringCheckUtf8
parameter_list|()
block|{
return|return
name|javaStringCheckUtf8_
return|;
block|}
comment|/**        *<pre>        * If set true, then the Java2 code generator will generate code that        * throws an exception whenever an attempt is made to assign a non-UTF-8        * byte sequence to a string field.        * Message reflection will do the same.        * However, an extension field still accepts non-UTF-8 byte sequences.        * This option has no effect on when used with the lite runtime.        *</pre>        *        *<code>optional bool java_string_check_utf8 = 27 [default = false];</code>        */
specifier|public
name|Builder
name|setJavaStringCheckUtf8
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|javaStringCheckUtf8_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * If set true, then the Java2 code generator will generate code that        * throws an exception whenever an attempt is made to assign a non-UTF-8        * byte sequence to a string field.        * Message reflection will do the same.        * However, an extension field still accepts non-UTF-8 byte sequences.        * This option has no effect on when used with the lite runtime.        *</pre>        *        *<code>optional bool java_string_check_utf8 = 27 [default = false];</code>        */
specifier|public
name|Builder
name|clearJavaStringCheckUtf8
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|javaStringCheckUtf8_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|int
name|optimizeFor_
init|=
literal|1
decl_stmt|;
comment|/**        *<code>optional .google.protobuf.FileOptions.OptimizeMode optimize_for = 9 [default = SPEED];</code>        */
specifier|public
name|boolean
name|hasOptimizeFor
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**        *<code>optional .google.protobuf.FileOptions.OptimizeMode optimize_for = 9 [default = SPEED];</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|OptimizeMode
name|getOptimizeFor
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|OptimizeMode
name|result
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|OptimizeMode
operator|.
name|valueOf
argument_list|(
name|optimizeFor_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|OptimizeMode
operator|.
name|SPEED
else|:
name|result
return|;
block|}
comment|/**        *<code>optional .google.protobuf.FileOptions.OptimizeMode optimize_for = 9 [default = SPEED];</code>        */
specifier|public
name|Builder
name|setOptimizeFor
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
operator|.
name|OptimizeMode
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|optimizeFor_
operator|=
name|value
operator|.
name|getNumber
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.FileOptions.OptimizeMode optimize_for = 9 [default = SPEED];</code>        */
specifier|public
name|Builder
name|clearOptimizeFor
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|optimizeFor_
operator|=
literal|1
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|goPackage_
init|=
literal|""
decl_stmt|;
comment|/**        *<pre>        * Sets the Go package where structs generated from this .proto will be        * placed. If omitted, the Go package will be derived from the following:        *   - The basename of the package import path, if provided.        *   - Otherwise, the package statement in the .proto file, if present.        *   - Otherwise, the basename of the .proto file, without extension.        *</pre>        *        *<code>optional string go_package = 11;</code>        */
specifier|public
name|boolean
name|hasGoPackage
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
return|;
block|}
comment|/**        *<pre>        * Sets the Go package where structs generated from this .proto will be        * placed. If omitted, the Go package will be derived from the following:        *   - The basename of the package import path, if provided.        *   - Otherwise, the package statement in the .proto file, if present.        *   - Otherwise, the basename of the .proto file, without extension.        *</pre>        *        *<code>optional string go_package = 11;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getGoPackage
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|goPackage_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|goPackage_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * Sets the Go package where structs generated from this .proto will be        * placed. If omitted, the Go package will be derived from the following:        *   - The basename of the package import path, if provided.        *   - Otherwise, the package statement in the .proto file, if present.        *   - Otherwise, the basename of the .proto file, without extension.        *</pre>        *        *<code>optional string go_package = 11;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getGoPackageBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|goPackage_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|goPackage_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * Sets the Go package where structs generated from this .proto will be        * placed. If omitted, the Go package will be derived from the following:        *   - The basename of the package import path, if provided.        *   - Otherwise, the package statement in the .proto file, if present.        *   - Otherwise, the basename of the .proto file, without extension.        *</pre>        *        *<code>optional string go_package = 11;</code>        */
specifier|public
name|Builder
name|setGoPackage
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|goPackage_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Sets the Go package where structs generated from this .proto will be        * placed. If omitted, the Go package will be derived from the following:        *   - The basename of the package import path, if provided.        *   - Otherwise, the package statement in the .proto file, if present.        *   - Otherwise, the basename of the .proto file, without extension.        *</pre>        *        *<code>optional string go_package = 11;</code>        */
specifier|public
name|Builder
name|clearGoPackage
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|goPackage_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getGoPackage
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Sets the Go package where structs generated from this .proto will be        * placed. If omitted, the Go package will be derived from the following:        *   - The basename of the package import path, if provided.        *   - Otherwise, the package statement in the .proto file, if present.        *   - Otherwise, the basename of the .proto file, without extension.        *</pre>        *        *<code>optional string go_package = 11;</code>        */
specifier|public
name|Builder
name|setGoPackageBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|goPackage_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|ccGenericServices_
decl_stmt|;
comment|/**        *<pre>        * Should generic services be generated in each language?  "Generic" services        * are not specific to any particular RPC system.  They are generated by the        * main code generators in each language (without additional plugins).        * Generic services were the only kind of service generation supported by        * early versions of google.protobuf.        * Generic services are now considered deprecated in favor of using plugins        * that generate code specific to your particular RPC system.  Therefore,        * these default to false.  Old code which depends on generic services should        * explicitly set them to true.        *</pre>        *        *<code>optional bool cc_generic_services = 16 [default = false];</code>        */
specifier|public
name|boolean
name|hasCcGenericServices
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
return|;
block|}
comment|/**        *<pre>        * Should generic services be generated in each language?  "Generic" services        * are not specific to any particular RPC system.  They are generated by the        * main code generators in each language (without additional plugins).        * Generic services were the only kind of service generation supported by        * early versions of google.protobuf.        * Generic services are now considered deprecated in favor of using plugins        * that generate code specific to your particular RPC system.  Therefore,        * these default to false.  Old code which depends on generic services should        * explicitly set them to true.        *</pre>        *        *<code>optional bool cc_generic_services = 16 [default = false];</code>        */
specifier|public
name|boolean
name|getCcGenericServices
parameter_list|()
block|{
return|return
name|ccGenericServices_
return|;
block|}
comment|/**        *<pre>        * Should generic services be generated in each language?  "Generic" services        * are not specific to any particular RPC system.  They are generated by the        * main code generators in each language (without additional plugins).        * Generic services were the only kind of service generation supported by        * early versions of google.protobuf.        * Generic services are now considered deprecated in favor of using plugins        * that generate code specific to your particular RPC system.  Therefore,        * these default to false.  Old code which depends on generic services should        * explicitly set them to true.        *</pre>        *        *<code>optional bool cc_generic_services = 16 [default = false];</code>        */
specifier|public
name|Builder
name|setCcGenericServices
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
name|ccGenericServices_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Should generic services be generated in each language?  "Generic" services        * are not specific to any particular RPC system.  They are generated by the        * main code generators in each language (without additional plugins).        * Generic services were the only kind of service generation supported by        * early versions of google.protobuf.        * Generic services are now considered deprecated in favor of using plugins        * that generate code specific to your particular RPC system.  Therefore,        * these default to false.  Old code which depends on generic services should        * explicitly set them to true.        *</pre>        *        *<code>optional bool cc_generic_services = 16 [default = false];</code>        */
specifier|public
name|Builder
name|clearCcGenericServices
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|ccGenericServices_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|javaGenericServices_
decl_stmt|;
comment|/**        *<code>optional bool java_generic_services = 17 [default = false];</code>        */
specifier|public
name|boolean
name|hasJavaGenericServices
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
return|;
block|}
comment|/**        *<code>optional bool java_generic_services = 17 [default = false];</code>        */
specifier|public
name|boolean
name|getJavaGenericServices
parameter_list|()
block|{
return|return
name|javaGenericServices_
return|;
block|}
comment|/**        *<code>optional bool java_generic_services = 17 [default = false];</code>        */
specifier|public
name|Builder
name|setJavaGenericServices
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
name|javaGenericServices_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bool java_generic_services = 17 [default = false];</code>        */
specifier|public
name|Builder
name|clearJavaGenericServices
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
name|javaGenericServices_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|pyGenericServices_
decl_stmt|;
comment|/**        *<code>optional bool py_generic_services = 18 [default = false];</code>        */
specifier|public
name|boolean
name|hasPyGenericServices
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
return|;
block|}
comment|/**        *<code>optional bool py_generic_services = 18 [default = false];</code>        */
specifier|public
name|boolean
name|getPyGenericServices
parameter_list|()
block|{
return|return
name|pyGenericServices_
return|;
block|}
comment|/**        *<code>optional bool py_generic_services = 18 [default = false];</code>        */
specifier|public
name|Builder
name|setPyGenericServices
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
name|pyGenericServices_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bool py_generic_services = 18 [default = false];</code>        */
specifier|public
name|Builder
name|clearPyGenericServices
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
name|pyGenericServices_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|deprecated_
decl_stmt|;
comment|/**        *<pre>        * Is this file deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for everything in the file, or it will be completely ignored; in the very        * least, this is a formalization for deprecating files.        *</pre>        *        *<code>optional bool deprecated = 23 [default = false];</code>        */
specifier|public
name|boolean
name|hasDeprecated
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
return|;
block|}
comment|/**        *<pre>        * Is this file deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for everything in the file, or it will be completely ignored; in the very        * least, this is a formalization for deprecating files.        *</pre>        *        *<code>optional bool deprecated = 23 [default = false];</code>        */
specifier|public
name|boolean
name|getDeprecated
parameter_list|()
block|{
return|return
name|deprecated_
return|;
block|}
comment|/**        *<pre>        * Is this file deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for everything in the file, or it will be completely ignored; in the very        * least, this is a formalization for deprecating files.        *</pre>        *        *<code>optional bool deprecated = 23 [default = false];</code>        */
specifier|public
name|Builder
name|setDeprecated
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|deprecated_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Is this file deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for everything in the file, or it will be completely ignored; in the very        * least, this is a formalization for deprecating files.        *</pre>        *        *<code>optional bool deprecated = 23 [default = false];</code>        */
specifier|public
name|Builder
name|clearDeprecated
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000400
operator|)
expr_stmt|;
name|deprecated_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|ccEnableArenas_
decl_stmt|;
comment|/**        *<pre>        * Enables the use of arenas for the proto messages in this file. This applies        * only to generated classes for C++.        *</pre>        *        *<code>optional bool cc_enable_arenas = 31 [default = false];</code>        */
specifier|public
name|boolean
name|hasCcEnableArenas
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
return|;
block|}
comment|/**        *<pre>        * Enables the use of arenas for the proto messages in this file. This applies        * only to generated classes for C++.        *</pre>        *        *<code>optional bool cc_enable_arenas = 31 [default = false];</code>        */
specifier|public
name|boolean
name|getCcEnableArenas
parameter_list|()
block|{
return|return
name|ccEnableArenas_
return|;
block|}
comment|/**        *<pre>        * Enables the use of arenas for the proto messages in this file. This applies        * only to generated classes for C++.        *</pre>        *        *<code>optional bool cc_enable_arenas = 31 [default = false];</code>        */
specifier|public
name|Builder
name|setCcEnableArenas
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000800
expr_stmt|;
name|ccEnableArenas_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Enables the use of arenas for the proto messages in this file. This applies        * only to generated classes for C++.        *</pre>        *        *<code>optional bool cc_enable_arenas = 31 [default = false];</code>        */
specifier|public
name|Builder
name|clearCcEnableArenas
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000800
operator|)
expr_stmt|;
name|ccEnableArenas_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|objcClassPrefix_
init|=
literal|""
decl_stmt|;
comment|/**        *<pre>        * Sets the objective c class prefix which is prepended to all objective c        * generated classes from this .proto. There is no default.        *</pre>        *        *<code>optional string objc_class_prefix = 36;</code>        */
specifier|public
name|boolean
name|hasObjcClassPrefix
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00001000
operator|)
operator|==
literal|0x00001000
operator|)
return|;
block|}
comment|/**        *<pre>        * Sets the objective c class prefix which is prepended to all objective c        * generated classes from this .proto. There is no default.        *</pre>        *        *<code>optional string objc_class_prefix = 36;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getObjcClassPrefix
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|objcClassPrefix_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|objcClassPrefix_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * Sets the objective c class prefix which is prepended to all objective c        * generated classes from this .proto. There is no default.        *</pre>        *        *<code>optional string objc_class_prefix = 36;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getObjcClassPrefixBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|objcClassPrefix_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|objcClassPrefix_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * Sets the objective c class prefix which is prepended to all objective c        * generated classes from this .proto. There is no default.        *</pre>        *        *<code>optional string objc_class_prefix = 36;</code>        */
specifier|public
name|Builder
name|setObjcClassPrefix
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00001000
expr_stmt|;
name|objcClassPrefix_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Sets the objective c class prefix which is prepended to all objective c        * generated classes from this .proto. There is no default.        *</pre>        *        *<code>optional string objc_class_prefix = 36;</code>        */
specifier|public
name|Builder
name|clearObjcClassPrefix
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00001000
operator|)
expr_stmt|;
name|objcClassPrefix_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getObjcClassPrefix
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Sets the objective c class prefix which is prepended to all objective c        * generated classes from this .proto. There is no default.        *</pre>        *        *<code>optional string objc_class_prefix = 36;</code>        */
specifier|public
name|Builder
name|setObjcClassPrefixBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00001000
expr_stmt|;
name|objcClassPrefix_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|csharpNamespace_
init|=
literal|""
decl_stmt|;
comment|/**        *<pre>        * Namespace for generated classes; defaults to the package.        *</pre>        *        *<code>optional string csharp_namespace = 37;</code>        */
specifier|public
name|boolean
name|hasCsharpNamespace
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00002000
operator|)
operator|==
literal|0x00002000
operator|)
return|;
block|}
comment|/**        *<pre>        * Namespace for generated classes; defaults to the package.        *</pre>        *        *<code>optional string csharp_namespace = 37;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getCsharpNamespace
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|csharpNamespace_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|csharpNamespace_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * Namespace for generated classes; defaults to the package.        *</pre>        *        *<code>optional string csharp_namespace = 37;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getCsharpNamespaceBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|csharpNamespace_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|csharpNamespace_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * Namespace for generated classes; defaults to the package.        *</pre>        *        *<code>optional string csharp_namespace = 37;</code>        */
specifier|public
name|Builder
name|setCsharpNamespace
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00002000
expr_stmt|;
name|csharpNamespace_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Namespace for generated classes; defaults to the package.        *</pre>        *        *<code>optional string csharp_namespace = 37;</code>        */
specifier|public
name|Builder
name|clearCsharpNamespace
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00002000
operator|)
expr_stmt|;
name|csharpNamespace_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getCsharpNamespace
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Namespace for generated classes; defaults to the package.        *</pre>        *        *<code>optional string csharp_namespace = 37;</code>        */
specifier|public
name|Builder
name|setCsharpNamespaceBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00002000
expr_stmt|;
name|csharpNamespace_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|swiftPrefix_
init|=
literal|""
decl_stmt|;
comment|/**        *<pre>        * By default Swift generators will take the proto package and CamelCase it        * replacing '.' with underscore and use that to prefix the types/symbols        * defined. When this options is provided, they will use this value instead        * to prefix the types/symbols defined.        *</pre>        *        *<code>optional string swift_prefix = 39;</code>        */
specifier|public
name|boolean
name|hasSwiftPrefix
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00004000
operator|)
operator|==
literal|0x00004000
operator|)
return|;
block|}
comment|/**        *<pre>        * By default Swift generators will take the proto package and CamelCase it        * replacing '.' with underscore and use that to prefix the types/symbols        * defined. When this options is provided, they will use this value instead        * to prefix the types/symbols defined.        *</pre>        *        *<code>optional string swift_prefix = 39;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getSwiftPrefix
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|swiftPrefix_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|swiftPrefix_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * By default Swift generators will take the proto package and CamelCase it        * replacing '.' with underscore and use that to prefix the types/symbols        * defined. When this options is provided, they will use this value instead        * to prefix the types/symbols defined.        *</pre>        *        *<code>optional string swift_prefix = 39;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSwiftPrefixBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|swiftPrefix_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|swiftPrefix_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * By default Swift generators will take the proto package and CamelCase it        * replacing '.' with underscore and use that to prefix the types/symbols        * defined. When this options is provided, they will use this value instead        * to prefix the types/symbols defined.        *</pre>        *        *<code>optional string swift_prefix = 39;</code>        */
specifier|public
name|Builder
name|setSwiftPrefix
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00004000
expr_stmt|;
name|swiftPrefix_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * By default Swift generators will take the proto package and CamelCase it        * replacing '.' with underscore and use that to prefix the types/symbols        * defined. When this options is provided, they will use this value instead        * to prefix the types/symbols defined.        *</pre>        *        *<code>optional string swift_prefix = 39;</code>        */
specifier|public
name|Builder
name|clearSwiftPrefix
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00004000
operator|)
expr_stmt|;
name|swiftPrefix_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getSwiftPrefix
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * By default Swift generators will take the proto package and CamelCase it        * replacing '.' with underscore and use that to prefix the types/symbols        * defined. When this options is provided, they will use this value instead        * to prefix the types/symbols defined.        *</pre>        *        *<code>optional string swift_prefix = 39;</code>        */
specifier|public
name|Builder
name|setSwiftPrefixBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00004000
expr_stmt|;
name|swiftPrefix_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|uninterpretedOption_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureUninterpretedOptionIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00008000
operator|)
operator|==
literal|0x00008000
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00008000
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|uninterpretedOptionBuilder_
decl_stmt|;
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|int
name|getUninterpretedOptionCount
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|setUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|setUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addAllUninterpretedOption
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|clearUninterpretedOption
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00008000
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|removeUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|getUninterpretedOptionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|addUninterpretedOptionBuilder
parameter_list|()
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|addUninterpretedOptionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|>
name|getUninterpretedOptionBuilderList
parameter_list|()
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOptionBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
argument_list|(
name|uninterpretedOption_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00008000
operator|)
operator|==
literal|0x00008000
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|uninterpretedOption_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|uninterpretedOptionBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.FileOptions)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.FileOptions)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FileOptions
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|FileOptions
argument_list|>
argument_list|()
block|{
specifier|public
name|FileOptions
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|FileOptions
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FileOptions
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FileOptions
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FileOptions
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|MessageOptionsOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.MessageOptions)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessageOrBuilder
argument_list|<
name|MessageOptions
argument_list|>
block|{
comment|/**      *<pre>      * Set true to use the old proto1 MessageSet wire format for extensions.      * This is provided for backwards-compatibility with the MessageSet wire      * format.  You should not use this for any other reason:  It's less      * efficient, has fewer features, and is more complicated.      * The message must be defined exactly as follows:      *   message Foo {      *     option message_set_wire_format = true;      *     extensions 4 to max;      *   }      * Note that the message cannot have any defined fields; MessageSets only      * have extensions.      * All extensions of your type must be singular messages; e.g. they cannot      * be int32s, enums, or repeated messages.      * Because this is an option, the above two restrictions are not enforced by      * the protocol compiler.      *</pre>      *      *<code>optional bool message_set_wire_format = 1 [default = false];</code>      */
name|boolean
name|hasMessageSetWireFormat
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Set true to use the old proto1 MessageSet wire format for extensions.      * This is provided for backwards-compatibility with the MessageSet wire      * format.  You should not use this for any other reason:  It's less      * efficient, has fewer features, and is more complicated.      * The message must be defined exactly as follows:      *   message Foo {      *     option message_set_wire_format = true;      *     extensions 4 to max;      *   }      * Note that the message cannot have any defined fields; MessageSets only      * have extensions.      * All extensions of your type must be singular messages; e.g. they cannot      * be int32s, enums, or repeated messages.      * Because this is an option, the above two restrictions are not enforced by      * the protocol compiler.      *</pre>      *      *<code>optional bool message_set_wire_format = 1 [default = false];</code>      */
name|boolean
name|getMessageSetWireFormat
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Disables the generation of the standard "descriptor()" accessor, which can      * conflict with a field of the same name.  This is meant to make migration      * from proto1 easier; new code should avoid fields named "descriptor".      *</pre>      *      *<code>optional bool no_standard_descriptor_accessor = 2 [default = false];</code>      */
name|boolean
name|hasNoStandardDescriptorAccessor
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Disables the generation of the standard "descriptor()" accessor, which can      * conflict with a field of the same name.  This is meant to make migration      * from proto1 easier; new code should avoid fields named "descriptor".      *</pre>      *      *<code>optional bool no_standard_descriptor_accessor = 2 [default = false];</code>      */
name|boolean
name|getNoStandardDescriptorAccessor
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Is this message deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for the message, or it will be completely ignored; in the very least,      * this is a formalization for deprecating messages.      *</pre>      *      *<code>optional bool deprecated = 3 [default = false];</code>      */
name|boolean
name|hasDeprecated
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Is this message deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for the message, or it will be completely ignored; in the very least,      * this is a formalization for deprecating messages.      *</pre>      *      *<code>optional bool deprecated = 3 [default = false];</code>      */
name|boolean
name|getDeprecated
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Whether the message is an automatically generated map entry type for the      * maps field.      * For maps fields:      *     map&lt;KeyType, ValueType&gt; map_field = 1;      * The parsed descriptor looks like:      *     message MapFieldEntry {      *         option map_entry = true;      *         optional KeyType key = 1;      *         optional ValueType value = 2;      *     }      *     repeated MapFieldEntry map_field = 1;      * Implementations may choose not to generate the map_entry=true message, but      * use a native map in the target language to hold the keys and values.      * The reflection APIs in such implementions still need to work as      * if the field is a repeated message field.      * NOTE: Do not set the option in .proto files. Always use the maps syntax      * instead. The option should only be implicitly set by the proto compiler      * parser.      *</pre>      *      *<code>optional bool map_entry = 7;</code>      */
name|boolean
name|hasMapEntry
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Whether the message is an automatically generated map entry type for the      * maps field.      * For maps fields:      *     map&lt;KeyType, ValueType&gt; map_field = 1;      * The parsed descriptor looks like:      *     message MapFieldEntry {      *         option map_entry = true;      *         optional KeyType key = 1;      *         optional ValueType value = 2;      *     }      *     repeated MapFieldEntry map_field = 1;      * Implementations may choose not to generate the map_entry=true message, but      * use a native map in the target language to hold the keys and values.      * The reflection APIs in such implementions still need to work as      * if the field is a repeated message field.      * NOTE: Do not set the option in .proto files. Always use the maps syntax      * instead. The option should only be implicitly set by the proto compiler      * parser.      *</pre>      *      *<code>optional bool map_entry = 7;</code>      */
name|boolean
name|getMapEntry
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|int
name|getUninterpretedOptionCount
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    * Protobuf type {@code google.protobuf.MessageOptions}    */
specifier|public
specifier|static
specifier|final
class|class
name|MessageOptions
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessage
argument_list|<
name|MessageOptions
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.MessageOptions)
name|MessageOptionsOrBuilder
block|{
comment|// Use MessageOptions.newBuilder() to construct.
specifier|private
name|MessageOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
argument_list|,
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|MessageOptions
parameter_list|()
block|{
name|messageSetWireFormat_
operator|=
literal|false
expr_stmt|;
name|noStandardDescriptorAccessor_
operator|=
literal|false
expr_stmt|;
name|deprecated_
operator|=
literal|false
expr_stmt|;
name|mapEntry_
operator|=
literal|false
expr_stmt|;
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|MessageOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|8
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|messageSetWireFormat_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|noStandardDescriptorAccessor_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|24
case|:
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|deprecated_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|56
case|:
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|mapEntry_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|7994
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_MessageOptions_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_MessageOptions_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|MESSAGE_SET_WIRE_FORMAT_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|boolean
name|messageSetWireFormat_
decl_stmt|;
comment|/**      *<pre>      * Set true to use the old proto1 MessageSet wire format for extensions.      * This is provided for backwards-compatibility with the MessageSet wire      * format.  You should not use this for any other reason:  It's less      * efficient, has fewer features, and is more complicated.      * The message must be defined exactly as follows:      *   message Foo {      *     option message_set_wire_format = true;      *     extensions 4 to max;      *   }      * Note that the message cannot have any defined fields; MessageSets only      * have extensions.      * All extensions of your type must be singular messages; e.g. they cannot      * be int32s, enums, or repeated messages.      * Because this is an option, the above two restrictions are not enforced by      * the protocol compiler.      *</pre>      *      *<code>optional bool message_set_wire_format = 1 [default = false];</code>      */
specifier|public
name|boolean
name|hasMessageSetWireFormat
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<pre>      * Set true to use the old proto1 MessageSet wire format for extensions.      * This is provided for backwards-compatibility with the MessageSet wire      * format.  You should not use this for any other reason:  It's less      * efficient, has fewer features, and is more complicated.      * The message must be defined exactly as follows:      *   message Foo {      *     option message_set_wire_format = true;      *     extensions 4 to max;      *   }      * Note that the message cannot have any defined fields; MessageSets only      * have extensions.      * All extensions of your type must be singular messages; e.g. they cannot      * be int32s, enums, or repeated messages.      * Because this is an option, the above two restrictions are not enforced by      * the protocol compiler.      *</pre>      *      *<code>optional bool message_set_wire_format = 1 [default = false];</code>      */
specifier|public
name|boolean
name|getMessageSetWireFormat
parameter_list|()
block|{
return|return
name|messageSetWireFormat_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|NO_STANDARD_DESCRIPTOR_ACCESSOR_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|boolean
name|noStandardDescriptorAccessor_
decl_stmt|;
comment|/**      *<pre>      * Disables the generation of the standard "descriptor()" accessor, which can      * conflict with a field of the same name.  This is meant to make migration      * from proto1 easier; new code should avoid fields named "descriptor".      *</pre>      *      *<code>optional bool no_standard_descriptor_accessor = 2 [default = false];</code>      */
specifier|public
name|boolean
name|hasNoStandardDescriptorAccessor
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<pre>      * Disables the generation of the standard "descriptor()" accessor, which can      * conflict with a field of the same name.  This is meant to make migration      * from proto1 easier; new code should avoid fields named "descriptor".      *</pre>      *      *<code>optional bool no_standard_descriptor_accessor = 2 [default = false];</code>      */
specifier|public
name|boolean
name|getNoStandardDescriptorAccessor
parameter_list|()
block|{
return|return
name|noStandardDescriptorAccessor_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|DEPRECATED_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|boolean
name|deprecated_
decl_stmt|;
comment|/**      *<pre>      * Is this message deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for the message, or it will be completely ignored; in the very least,      * this is a formalization for deprecating messages.      *</pre>      *      *<code>optional bool deprecated = 3 [default = false];</code>      */
specifier|public
name|boolean
name|hasDeprecated
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<pre>      * Is this message deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for the message, or it will be completely ignored; in the very least,      * this is a formalization for deprecating messages.      *</pre>      *      *<code>optional bool deprecated = 3 [default = false];</code>      */
specifier|public
name|boolean
name|getDeprecated
parameter_list|()
block|{
return|return
name|deprecated_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|MAP_ENTRY_FIELD_NUMBER
init|=
literal|7
decl_stmt|;
specifier|private
name|boolean
name|mapEntry_
decl_stmt|;
comment|/**      *<pre>      * Whether the message is an automatically generated map entry type for the      * maps field.      * For maps fields:      *     map&lt;KeyType, ValueType&gt; map_field = 1;      * The parsed descriptor looks like:      *     message MapFieldEntry {      *         option map_entry = true;      *         optional KeyType key = 1;      *         optional ValueType value = 2;      *     }      *     repeated MapFieldEntry map_field = 1;      * Implementations may choose not to generate the map_entry=true message, but      * use a native map in the target language to hold the keys and values.      * The reflection APIs in such implementions still need to work as      * if the field is a repeated message field.      * NOTE: Do not set the option in .proto files. Always use the maps syntax      * instead. The option should only be implicitly set by the proto compiler      * parser.      *</pre>      *      *<code>optional bool map_entry = 7;</code>      */
specifier|public
name|boolean
name|hasMapEntry
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**      *<pre>      * Whether the message is an automatically generated map entry type for the      * maps field.      * For maps fields:      *     map&lt;KeyType, ValueType&gt; map_field = 1;      * The parsed descriptor looks like:      *     message MapFieldEntry {      *         option map_entry = true;      *         optional KeyType key = 1;      *         optional ValueType value = 2;      *     }      *     repeated MapFieldEntry map_field = 1;      * Implementations may choose not to generate the map_entry=true message, but      * use a native map in the target language to hold the keys and values.      * The reflection APIs in such implementions still need to work as      * if the field is a repeated message field.      * NOTE: Do not set the option in .proto files. Always use the maps syntax      * instead. The option should only be implicitly set by the proto compiler      * parser.      *</pre>      *      *<code>optional bool map_entry = 7;</code>      */
specifier|public
name|boolean
name|getMapEntry
parameter_list|()
block|{
return|return
name|mapEntry_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|UNINTERPRETED_OPTION_FIELD_NUMBER
init|=
literal|999
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|uninterpretedOption_
decl_stmt|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
block|{
return|return
name|uninterpretedOption_
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
block|{
return|return
name|uninterpretedOption_
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|int
name|getUninterpretedOptionCount
parameter_list|()
block|{
return|return
name|uninterpretedOption_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getUninterpretedOptionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getUninterpretedOption
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
operator|!
name|extensionsAreInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessage
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
argument_list|>
operator|.
name|ExtensionWriter
name|extensionWriter
init|=
name|newExtensionWriter
argument_list|()
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|1
argument_list|,
name|messageSetWireFormat_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|2
argument_list|,
name|noStandardDescriptorAccessor_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|3
argument_list|,
name|deprecated_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|7
argument_list|,
name|mapEntry_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|uninterpretedOption_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|999
argument_list|,
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|extensionWriter
operator|.
name|writeUntil
argument_list|(
literal|536870912
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|1
argument_list|,
name|messageSetWireFormat_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|2
argument_list|,
name|noStandardDescriptorAccessor_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|3
argument_list|,
name|deprecated_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|7
argument_list|,
name|mapEntry_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|uninterpretedOption_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|999
argument_list|,
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|extensionsSerializedSize
argument_list|()
expr_stmt|;
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasMessageSetWireFormat
argument_list|()
operator|==
name|other
operator|.
name|hasMessageSetWireFormat
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasMessageSetWireFormat
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getMessageSetWireFormat
argument_list|()
operator|==
name|other
operator|.
name|getMessageSetWireFormat
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasNoStandardDescriptorAccessor
argument_list|()
operator|==
name|other
operator|.
name|hasNoStandardDescriptorAccessor
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasNoStandardDescriptorAccessor
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getNoStandardDescriptorAccessor
argument_list|()
operator|==
name|other
operator|.
name|getNoStandardDescriptorAccessor
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasDeprecated
argument_list|()
operator|==
name|other
operator|.
name|hasDeprecated
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasDeprecated
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getDeprecated
argument_list|()
operator|==
name|other
operator|.
name|getDeprecated
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasMapEntry
argument_list|()
operator|==
name|other
operator|.
name|hasMapEntry
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasMapEntry
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getMapEntry
argument_list|()
operator|==
name|other
operator|.
name|getMapEntry
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getUninterpretedOptionList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getUninterpretedOptionList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getExtensionFields
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getExtensionFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasMessageSetWireFormat
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|MESSAGE_SET_WIRE_FORMAT_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getMessageSetWireFormat
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasNoStandardDescriptorAccessor
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|NO_STANDARD_DESCRIPTOR_ACCESSOR_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getNoStandardDescriptorAccessor
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasDeprecated
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|DEPRECATED_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getDeprecated
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasMapEntry
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|MAP_ENTRY_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getMapEntry
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getUninterpretedOptionCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|UNINTERPRETED_OPTION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getUninterpretedOptionList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
name|hashFields
argument_list|(
name|hash
argument_list|,
name|getExtensionFields
argument_list|()
argument_list|)
expr_stmt|;
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code google.protobuf.MessageOptions}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
argument_list|,
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.MessageOptions)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptionsOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_MessageOptions_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_MessageOptions_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.MessageOptions.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getUninterpretedOptionFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|messageSetWireFormat_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|noStandardDescriptorAccessor_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|deprecated_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|mapEntry_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_MessageOptions_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|messageSetWireFormat_
operator|=
name|messageSetWireFormat_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|noStandardDescriptorAccessor_
operator|=
name|noStandardDescriptorAccessor_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|deprecated_
operator|=
name|deprecated_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|result
operator|.
name|mapEntry_
operator|=
name|mapEntry_
expr_stmt|;
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|uninterpretedOption_
operator|=
name|uninterpretedOption_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|uninterpretedOption_
operator|=
name|uninterpretedOptionBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|setExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
argument_list|,
name|Type
argument_list|>
name|extension
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setExtension
argument_list|(
name|extension
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|setExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
argument_list|,
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|Type
argument_list|>
argument_list|>
name|extension
parameter_list|,
name|int
name|index
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setExtension
argument_list|(
name|extension
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|addExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
argument_list|,
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|Type
argument_list|>
argument_list|>
name|extension
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addExtension
argument_list|(
name|extension
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|clearExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
argument_list|,
name|?
argument_list|>
name|extension
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearExtension
argument_list|(
name|extension
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasMessageSetWireFormat
argument_list|()
condition|)
block|{
name|setMessageSetWireFormat
argument_list|(
name|other
operator|.
name|getMessageSetWireFormat
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasNoStandardDescriptorAccessor
argument_list|()
condition|)
block|{
name|setNoStandardDescriptorAccessor
argument_list|(
name|other
operator|.
name|getNoStandardDescriptorAccessor
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasDeprecated
argument_list|()
condition|)
block|{
name|setDeprecated
argument_list|(
name|other
operator|.
name|getDeprecated
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasMapEntry
argument_list|()
condition|)
block|{
name|setMapEntry
argument_list|(
name|other
operator|.
name|getMapEntry
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|uninterpretedOption_
operator|=
name|other
operator|.
name|uninterpretedOption_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|uninterpretedOptionBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|uninterpretedOptionBuilder_
operator|=
literal|null
expr_stmt|;
name|uninterpretedOption_
operator|=
name|other
operator|.
name|uninterpretedOption_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|uninterpretedOptionBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getUninterpretedOptionFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeExtensionFields
argument_list|(
name|other
argument_list|)
expr_stmt|;
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getUninterpretedOptionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getUninterpretedOption
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
operator|!
name|extensionsAreInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|boolean
name|messageSetWireFormat_
decl_stmt|;
comment|/**        *<pre>        * Set true to use the old proto1 MessageSet wire format for extensions.        * This is provided for backwards-compatibility with the MessageSet wire        * format.  You should not use this for any other reason:  It's less        * efficient, has fewer features, and is more complicated.        * The message must be defined exactly as follows:        *   message Foo {        *     option message_set_wire_format = true;        *     extensions 4 to max;        *   }        * Note that the message cannot have any defined fields; MessageSets only        * have extensions.        * All extensions of your type must be singular messages; e.g. they cannot        * be int32s, enums, or repeated messages.        * Because this is an option, the above two restrictions are not enforced by        * the protocol compiler.        *</pre>        *        *<code>optional bool message_set_wire_format = 1 [default = false];</code>        */
specifier|public
name|boolean
name|hasMessageSetWireFormat
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<pre>        * Set true to use the old proto1 MessageSet wire format for extensions.        * This is provided for backwards-compatibility with the MessageSet wire        * format.  You should not use this for any other reason:  It's less        * efficient, has fewer features, and is more complicated.        * The message must be defined exactly as follows:        *   message Foo {        *     option message_set_wire_format = true;        *     extensions 4 to max;        *   }        * Note that the message cannot have any defined fields; MessageSets only        * have extensions.        * All extensions of your type must be singular messages; e.g. they cannot        * be int32s, enums, or repeated messages.        * Because this is an option, the above two restrictions are not enforced by        * the protocol compiler.        *</pre>        *        *<code>optional bool message_set_wire_format = 1 [default = false];</code>        */
specifier|public
name|boolean
name|getMessageSetWireFormat
parameter_list|()
block|{
return|return
name|messageSetWireFormat_
return|;
block|}
comment|/**        *<pre>        * Set true to use the old proto1 MessageSet wire format for extensions.        * This is provided for backwards-compatibility with the MessageSet wire        * format.  You should not use this for any other reason:  It's less        * efficient, has fewer features, and is more complicated.        * The message must be defined exactly as follows:        *   message Foo {        *     option message_set_wire_format = true;        *     extensions 4 to max;        *   }        * Note that the message cannot have any defined fields; MessageSets only        * have extensions.        * All extensions of your type must be singular messages; e.g. they cannot        * be int32s, enums, or repeated messages.        * Because this is an option, the above two restrictions are not enforced by        * the protocol compiler.        *</pre>        *        *<code>optional bool message_set_wire_format = 1 [default = false];</code>        */
specifier|public
name|Builder
name|setMessageSetWireFormat
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|messageSetWireFormat_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Set true to use the old proto1 MessageSet wire format for extensions.        * This is provided for backwards-compatibility with the MessageSet wire        * format.  You should not use this for any other reason:  It's less        * efficient, has fewer features, and is more complicated.        * The message must be defined exactly as follows:        *   message Foo {        *     option message_set_wire_format = true;        *     extensions 4 to max;        *   }        * Note that the message cannot have any defined fields; MessageSets only        * have extensions.        * All extensions of your type must be singular messages; e.g. they cannot        * be int32s, enums, or repeated messages.        * Because this is an option, the above two restrictions are not enforced by        * the protocol compiler.        *</pre>        *        *<code>optional bool message_set_wire_format = 1 [default = false];</code>        */
specifier|public
name|Builder
name|clearMessageSetWireFormat
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|messageSetWireFormat_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|noStandardDescriptorAccessor_
decl_stmt|;
comment|/**        *<pre>        * Disables the generation of the standard "descriptor()" accessor, which can        * conflict with a field of the same name.  This is meant to make migration        * from proto1 easier; new code should avoid fields named "descriptor".        *</pre>        *        *<code>optional bool no_standard_descriptor_accessor = 2 [default = false];</code>        */
specifier|public
name|boolean
name|hasNoStandardDescriptorAccessor
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<pre>        * Disables the generation of the standard "descriptor()" accessor, which can        * conflict with a field of the same name.  This is meant to make migration        * from proto1 easier; new code should avoid fields named "descriptor".        *</pre>        *        *<code>optional bool no_standard_descriptor_accessor = 2 [default = false];</code>        */
specifier|public
name|boolean
name|getNoStandardDescriptorAccessor
parameter_list|()
block|{
return|return
name|noStandardDescriptorAccessor_
return|;
block|}
comment|/**        *<pre>        * Disables the generation of the standard "descriptor()" accessor, which can        * conflict with a field of the same name.  This is meant to make migration        * from proto1 easier; new code should avoid fields named "descriptor".        *</pre>        *        *<code>optional bool no_standard_descriptor_accessor = 2 [default = false];</code>        */
specifier|public
name|Builder
name|setNoStandardDescriptorAccessor
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|noStandardDescriptorAccessor_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Disables the generation of the standard "descriptor()" accessor, which can        * conflict with a field of the same name.  This is meant to make migration        * from proto1 easier; new code should avoid fields named "descriptor".        *</pre>        *        *<code>optional bool no_standard_descriptor_accessor = 2 [default = false];</code>        */
specifier|public
name|Builder
name|clearNoStandardDescriptorAccessor
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|noStandardDescriptorAccessor_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|deprecated_
decl_stmt|;
comment|/**        *<pre>        * Is this message deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for the message, or it will be completely ignored; in the very least,        * this is a formalization for deprecating messages.        *</pre>        *        *<code>optional bool deprecated = 3 [default = false];</code>        */
specifier|public
name|boolean
name|hasDeprecated
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<pre>        * Is this message deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for the message, or it will be completely ignored; in the very least,        * this is a formalization for deprecating messages.        *</pre>        *        *<code>optional bool deprecated = 3 [default = false];</code>        */
specifier|public
name|boolean
name|getDeprecated
parameter_list|()
block|{
return|return
name|deprecated_
return|;
block|}
comment|/**        *<pre>        * Is this message deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for the message, or it will be completely ignored; in the very least,        * this is a formalization for deprecating messages.        *</pre>        *        *<code>optional bool deprecated = 3 [default = false];</code>        */
specifier|public
name|Builder
name|setDeprecated
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|deprecated_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Is this message deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for the message, or it will be completely ignored; in the very least,        * this is a formalization for deprecating messages.        *</pre>        *        *<code>optional bool deprecated = 3 [default = false];</code>        */
specifier|public
name|Builder
name|clearDeprecated
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|deprecated_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|mapEntry_
decl_stmt|;
comment|/**        *<pre>        * Whether the message is an automatically generated map entry type for the        * maps field.        * For maps fields:        *     map&lt;KeyType, ValueType&gt; map_field = 1;        * The parsed descriptor looks like:        *     message MapFieldEntry {        *         option map_entry = true;        *         optional KeyType key = 1;        *         optional ValueType value = 2;        *     }        *     repeated MapFieldEntry map_field = 1;        * Implementations may choose not to generate the map_entry=true message, but        * use a native map in the target language to hold the keys and values.        * The reflection APIs in such implementions still need to work as        * if the field is a repeated message field.        * NOTE: Do not set the option in .proto files. Always use the maps syntax        * instead. The option should only be implicitly set by the proto compiler        * parser.        *</pre>        *        *<code>optional bool map_entry = 7;</code>        */
specifier|public
name|boolean
name|hasMapEntry
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**        *<pre>        * Whether the message is an automatically generated map entry type for the        * maps field.        * For maps fields:        *     map&lt;KeyType, ValueType&gt; map_field = 1;        * The parsed descriptor looks like:        *     message MapFieldEntry {        *         option map_entry = true;        *         optional KeyType key = 1;        *         optional ValueType value = 2;        *     }        *     repeated MapFieldEntry map_field = 1;        * Implementations may choose not to generate the map_entry=true message, but        * use a native map in the target language to hold the keys and values.        * The reflection APIs in such implementions still need to work as        * if the field is a repeated message field.        * NOTE: Do not set the option in .proto files. Always use the maps syntax        * instead. The option should only be implicitly set by the proto compiler        * parser.        *</pre>        *        *<code>optional bool map_entry = 7;</code>        */
specifier|public
name|boolean
name|getMapEntry
parameter_list|()
block|{
return|return
name|mapEntry_
return|;
block|}
comment|/**        *<pre>        * Whether the message is an automatically generated map entry type for the        * maps field.        * For maps fields:        *     map&lt;KeyType, ValueType&gt; map_field = 1;        * The parsed descriptor looks like:        *     message MapFieldEntry {        *         option map_entry = true;        *         optional KeyType key = 1;        *         optional ValueType value = 2;        *     }        *     repeated MapFieldEntry map_field = 1;        * Implementations may choose not to generate the map_entry=true message, but        * use a native map in the target language to hold the keys and values.        * The reflection APIs in such implementions still need to work as        * if the field is a repeated message field.        * NOTE: Do not set the option in .proto files. Always use the maps syntax        * instead. The option should only be implicitly set by the proto compiler        * parser.        *</pre>        *        *<code>optional bool map_entry = 7;</code>        */
specifier|public
name|Builder
name|setMapEntry
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|mapEntry_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Whether the message is an automatically generated map entry type for the        * maps field.        * For maps fields:        *     map&lt;KeyType, ValueType&gt; map_field = 1;        * The parsed descriptor looks like:        *     message MapFieldEntry {        *         option map_entry = true;        *         optional KeyType key = 1;        *         optional ValueType value = 2;        *     }        *     repeated MapFieldEntry map_field = 1;        * Implementations may choose not to generate the map_entry=true message, but        * use a native map in the target language to hold the keys and values.        * The reflection APIs in such implementions still need to work as        * if the field is a repeated message field.        * NOTE: Do not set the option in .proto files. Always use the maps syntax        * instead. The option should only be implicitly set by the proto compiler        * parser.        *</pre>        *        *<code>optional bool map_entry = 7;</code>        */
specifier|public
name|Builder
name|clearMapEntry
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|mapEntry_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|uninterpretedOption_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureUninterpretedOptionIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|uninterpretedOptionBuilder_
decl_stmt|;
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|int
name|getUninterpretedOptionCount
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|setUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|setUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addAllUninterpretedOption
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|clearUninterpretedOption
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|removeUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|getUninterpretedOptionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|addUninterpretedOptionBuilder
parameter_list|()
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|addUninterpretedOptionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|>
name|getUninterpretedOptionBuilderList
parameter_list|()
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOptionBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
argument_list|(
name|uninterpretedOption_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|uninterpretedOption_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|uninterpretedOptionBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.MessageOptions)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.MessageOptions)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|MessageOptions
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|MessageOptions
argument_list|>
argument_list|()
block|{
specifier|public
name|MessageOptions
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|MessageOptions
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|MessageOptions
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|MessageOptions
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MessageOptions
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|FieldOptionsOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.FieldOptions)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessageOrBuilder
argument_list|<
name|FieldOptions
argument_list|>
block|{
comment|/**      *<pre>      * The ctype option instructs the C++ code generator to use a different      * representation of the field than it normally would.  See the specific      * options below.  This option is not yet implemented in the open source      * release -- sorry, we'll try to include it in a future version!      *</pre>      *      *<code>optional .google.protobuf.FieldOptions.CType ctype = 1 [default = STRING];</code>      */
name|boolean
name|hasCtype
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The ctype option instructs the C++ code generator to use a different      * representation of the field than it normally would.  See the specific      * options below.  This option is not yet implemented in the open source      * release -- sorry, we'll try to include it in a future version!      *</pre>      *      *<code>optional .google.protobuf.FieldOptions.CType ctype = 1 [default = STRING];</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|CType
name|getCtype
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The packed option can be enabled for repeated primitive fields to enable      * a more efficient representation on the wire. Rather than repeatedly      * writing the tag and type for each element, the entire array is encoded as      * a single length-delimited blob. In proto3, only explicit setting it to      * false will avoid using packed encoding.      *</pre>      *      *<code>optional bool packed = 2;</code>      */
name|boolean
name|hasPacked
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The packed option can be enabled for repeated primitive fields to enable      * a more efficient representation on the wire. Rather than repeatedly      * writing the tag and type for each element, the entire array is encoded as      * a single length-delimited blob. In proto3, only explicit setting it to      * false will avoid using packed encoding.      *</pre>      *      *<code>optional bool packed = 2;</code>      */
name|boolean
name|getPacked
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The jstype option determines the JavaScript type used for values of the      * field.  The option is permitted only for 64 bit integral and fixed types      * (int64, uint64, sint64, fixed64, sfixed64).  By default these types are      * represented as JavaScript strings.  This avoids loss of precision that can      * happen when a large value is converted to a floating point JavaScript      * numbers.  Specifying JS_NUMBER for the jstype causes the generated      * JavaScript code to use the JavaScript "number" type instead of strings.      * This option is an enum to permit additional types to be added,      * e.g. goog.math.Integer.      *</pre>      *      *<code>optional .google.protobuf.FieldOptions.JSType jstype = 6 [default = JS_NORMAL];</code>      */
name|boolean
name|hasJstype
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The jstype option determines the JavaScript type used for values of the      * field.  The option is permitted only for 64 bit integral and fixed types      * (int64, uint64, sint64, fixed64, sfixed64).  By default these types are      * represented as JavaScript strings.  This avoids loss of precision that can      * happen when a large value is converted to a floating point JavaScript      * numbers.  Specifying JS_NUMBER for the jstype causes the generated      * JavaScript code to use the JavaScript "number" type instead of strings.      * This option is an enum to permit additional types to be added,      * e.g. goog.math.Integer.      *</pre>      *      *<code>optional .google.protobuf.FieldOptions.JSType jstype = 6 [default = JS_NORMAL];</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|JSType
name|getJstype
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Should this field be parsed lazily?  Lazy applies only to message-type      * fields.  It means that when the outer message is initially parsed, the      * inner message's contents will not be parsed but instead stored in encoded      * form.  The inner message will actually be parsed when it is first accessed.      * This is only a hint.  Implementations are free to choose whether to use      * eager or lazy parsing regardless of the value of this option.  However,      * setting this option true suggests that the protocol author believes that      * using lazy parsing on this field is worth the additional bookkeeping      * overhead typically needed to implement it.      * This option does not affect the public interface of any generated code;      * all method signatures remain the same.  Furthermore, thread-safety of the      * interface is not affected by this option; const methods remain safe to      * call from multiple threads concurrently, while non-const methods continue      * to require exclusive access.      * Note that implementations may choose not to check required fields within      * a lazy sub-message.  That is, calling IsInitialized() on the outer message      * may return true even if the inner message has missing required fields.      * This is necessary because otherwise the inner message would have to be      * parsed in order to perform the check, defeating the purpose of lazy      * parsing.  An implementation which chooses not to check required fields      * must be consistent about it.  That is, for any particular sub-message, the      * implementation must either *always* check its required fields, or *never*      * check its required fields, regardless of whether or not the message has      * been parsed.      *</pre>      *      *<code>optional bool lazy = 5 [default = false];</code>      */
name|boolean
name|hasLazy
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Should this field be parsed lazily?  Lazy applies only to message-type      * fields.  It means that when the outer message is initially parsed, the      * inner message's contents will not be parsed but instead stored in encoded      * form.  The inner message will actually be parsed when it is first accessed.      * This is only a hint.  Implementations are free to choose whether to use      * eager or lazy parsing regardless of the value of this option.  However,      * setting this option true suggests that the protocol author believes that      * using lazy parsing on this field is worth the additional bookkeeping      * overhead typically needed to implement it.      * This option does not affect the public interface of any generated code;      * all method signatures remain the same.  Furthermore, thread-safety of the      * interface is not affected by this option; const methods remain safe to      * call from multiple threads concurrently, while non-const methods continue      * to require exclusive access.      * Note that implementations may choose not to check required fields within      * a lazy sub-message.  That is, calling IsInitialized() on the outer message      * may return true even if the inner message has missing required fields.      * This is necessary because otherwise the inner message would have to be      * parsed in order to perform the check, defeating the purpose of lazy      * parsing.  An implementation which chooses not to check required fields      * must be consistent about it.  That is, for any particular sub-message, the      * implementation must either *always* check its required fields, or *never*      * check its required fields, regardless of whether or not the message has      * been parsed.      *</pre>      *      *<code>optional bool lazy = 5 [default = false];</code>      */
name|boolean
name|getLazy
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Is this field deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for accessors, or it will be completely ignored; in the very least, this      * is a formalization for deprecating fields.      *</pre>      *      *<code>optional bool deprecated = 3 [default = false];</code>      */
name|boolean
name|hasDeprecated
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Is this field deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for accessors, or it will be completely ignored; in the very least, this      * is a formalization for deprecating fields.      *</pre>      *      *<code>optional bool deprecated = 3 [default = false];</code>      */
name|boolean
name|getDeprecated
parameter_list|()
function_decl|;
comment|/**      *<pre>      * For Google-internal migration only. Do not use.      *</pre>      *      *<code>optional bool weak = 10 [default = false];</code>      */
name|boolean
name|hasWeak
parameter_list|()
function_decl|;
comment|/**      *<pre>      * For Google-internal migration only. Do not use.      *</pre>      *      *<code>optional bool weak = 10 [default = false];</code>      */
name|boolean
name|getWeak
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|int
name|getUninterpretedOptionCount
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    * Protobuf type {@code google.protobuf.FieldOptions}    */
specifier|public
specifier|static
specifier|final
class|class
name|FieldOptions
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessage
argument_list|<
name|FieldOptions
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.FieldOptions)
name|FieldOptionsOrBuilder
block|{
comment|// Use FieldOptions.newBuilder() to construct.
specifier|private
name|FieldOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
argument_list|,
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|FieldOptions
parameter_list|()
block|{
name|ctype_
operator|=
literal|0
expr_stmt|;
name|packed_
operator|=
literal|false
expr_stmt|;
name|jstype_
operator|=
literal|0
expr_stmt|;
name|lazy_
operator|=
literal|false
expr_stmt|;
name|deprecated_
operator|=
literal|false
expr_stmt|;
name|weak_
operator|=
literal|false
expr_stmt|;
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|FieldOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|8
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|CType
name|value
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|CType
operator|.
name|valueOf
argument_list|(
name|rawValue
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unknownFields
operator|.
name|mergeVarintField
argument_list|(
literal|1
argument_list|,
name|rawValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|ctype_
operator|=
name|rawValue
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|packed_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|24
case|:
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|deprecated_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|40
case|:
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|lazy_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|48
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|JSType
name|value
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|JSType
operator|.
name|valueOf
argument_list|(
name|rawValue
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unknownFields
operator|.
name|mergeVarintField
argument_list|(
literal|6
argument_list|,
name|rawValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|jstype_
operator|=
name|rawValue
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|80
case|:
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|weak_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|7994
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000040
expr_stmt|;
block|}
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FieldOptions_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FieldOptions_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      * Protobuf enum {@code google.protobuf.FieldOptions.CType}      */
specifier|public
enum|enum
name|CType
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolMessageEnum
block|{
comment|/**        *<pre>        * Default mode.        *</pre>        *        *<code>STRING = 0;</code>        */
name|STRING
argument_list|(
literal|0
argument_list|)
block|,
comment|/**        *<code>CORD = 1;</code>        */
name|CORD
argument_list|(
literal|1
argument_list|)
block|,
comment|/**        *<code>STRING_PIECE = 2;</code>        */
name|STRING_PIECE
argument_list|(
literal|2
argument_list|)
block|,       ;
comment|/**        *<pre>        * Default mode.        *</pre>        *        *<code>STRING = 0;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|STRING_VALUE
init|=
literal|0
decl_stmt|;
comment|/**        *<code>CORD = 1;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|CORD_VALUE
init|=
literal|1
decl_stmt|;
comment|/**        *<code>STRING_PIECE = 2;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|STRING_PIECE_VALUE
init|=
literal|2
decl_stmt|;
specifier|public
specifier|final
name|int
name|getNumber
parameter_list|()
block|{
return|return
name|value
return|;
block|}
comment|/**        * @deprecated Use {@link #forNumber(int)} instead.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
name|CType
name|valueOf
parameter_list|(
name|int
name|value
parameter_list|)
block|{
return|return
name|forNumber
argument_list|(
name|value
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|CType
name|forNumber
parameter_list|(
name|int
name|value
parameter_list|)
block|{
switch|switch
condition|(
name|value
condition|)
block|{
case|case
literal|0
case|:
return|return
name|STRING
return|;
case|case
literal|1
case|:
return|return
name|CORD
return|;
case|case
literal|2
case|:
return|return
name|STRING_PIECE
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|CType
argument_list|>
name|internalGetValueMap
parameter_list|()
block|{
return|return
name|internalValueMap
return|;
block|}
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|CType
argument_list|>
name|internalValueMap
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|CType
argument_list|>
argument_list|()
block|{
specifier|public
name|CType
name|findValueByNumber
parameter_list|(
name|int
name|number
parameter_list|)
block|{
return|return
name|CType
operator|.
name|forNumber
argument_list|(
name|number
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|getValueDescriptor
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
name|ordinal
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getEnumTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
specifier|private
specifier|static
specifier|final
name|CType
index|[]
name|VALUES
init|=
name|values
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|CType
name|valueOf
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|desc
parameter_list|)
block|{
if|if
condition|(
name|desc
operator|.
name|getType
argument_list|()
operator|!=
name|getDescriptor
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|IllegalArgumentException
argument_list|(
literal|"EnumValueDescriptor is not for this type."
argument_list|)
throw|;
block|}
return|return
name|VALUES
index|[
name|desc
operator|.
name|getIndex
argument_list|()
index|]
return|;
block|}
specifier|private
specifier|final
name|int
name|value
decl_stmt|;
specifier|private
name|CType
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(enum_scope:google.protobuf.FieldOptions.CType)
block|}
comment|/**      * Protobuf enum {@code google.protobuf.FieldOptions.JSType}      */
specifier|public
enum|enum
name|JSType
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolMessageEnum
block|{
comment|/**        *<pre>        * Use the default type.        *</pre>        *        *<code>JS_NORMAL = 0;</code>        */
name|JS_NORMAL
argument_list|(
literal|0
argument_list|)
block|,
comment|/**        *<pre>        * Use JavaScript strings.        *</pre>        *        *<code>JS_STRING = 1;</code>        */
name|JS_STRING
argument_list|(
literal|1
argument_list|)
block|,
comment|/**        *<pre>        * Use JavaScript numbers.        *</pre>        *        *<code>JS_NUMBER = 2;</code>        */
name|JS_NUMBER
argument_list|(
literal|2
argument_list|)
block|,       ;
comment|/**        *<pre>        * Use the default type.        *</pre>        *        *<code>JS_NORMAL = 0;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|JS_NORMAL_VALUE
init|=
literal|0
decl_stmt|;
comment|/**        *<pre>        * Use JavaScript strings.        *</pre>        *        *<code>JS_STRING = 1;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|JS_STRING_VALUE
init|=
literal|1
decl_stmt|;
comment|/**        *<pre>        * Use JavaScript numbers.        *</pre>        *        *<code>JS_NUMBER = 2;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|JS_NUMBER_VALUE
init|=
literal|2
decl_stmt|;
specifier|public
specifier|final
name|int
name|getNumber
parameter_list|()
block|{
return|return
name|value
return|;
block|}
comment|/**        * @deprecated Use {@link #forNumber(int)} instead.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
name|JSType
name|valueOf
parameter_list|(
name|int
name|value
parameter_list|)
block|{
return|return
name|forNumber
argument_list|(
name|value
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|JSType
name|forNumber
parameter_list|(
name|int
name|value
parameter_list|)
block|{
switch|switch
condition|(
name|value
condition|)
block|{
case|case
literal|0
case|:
return|return
name|JS_NORMAL
return|;
case|case
literal|1
case|:
return|return
name|JS_STRING
return|;
case|case
literal|2
case|:
return|return
name|JS_NUMBER
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|JSType
argument_list|>
name|internalGetValueMap
parameter_list|()
block|{
return|return
name|internalValueMap
return|;
block|}
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|JSType
argument_list|>
name|internalValueMap
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|JSType
argument_list|>
argument_list|()
block|{
specifier|public
name|JSType
name|findValueByNumber
parameter_list|(
name|int
name|number
parameter_list|)
block|{
return|return
name|JSType
operator|.
name|forNumber
argument_list|(
name|number
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|getValueDescriptor
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
name|ordinal
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getEnumTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
return|;
block|}
specifier|private
specifier|static
specifier|final
name|JSType
index|[]
name|VALUES
init|=
name|values
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|JSType
name|valueOf
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|desc
parameter_list|)
block|{
if|if
condition|(
name|desc
operator|.
name|getType
argument_list|()
operator|!=
name|getDescriptor
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|IllegalArgumentException
argument_list|(
literal|"EnumValueDescriptor is not for this type."
argument_list|)
throw|;
block|}
return|return
name|VALUES
index|[
name|desc
operator|.
name|getIndex
argument_list|()
index|]
return|;
block|}
specifier|private
specifier|final
name|int
name|value
decl_stmt|;
specifier|private
name|JSType
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(enum_scope:google.protobuf.FieldOptions.JSType)
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|CTYPE_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|int
name|ctype_
decl_stmt|;
comment|/**      *<pre>      * The ctype option instructs the C++ code generator to use a different      * representation of the field than it normally would.  See the specific      * options below.  This option is not yet implemented in the open source      * release -- sorry, we'll try to include it in a future version!      *</pre>      *      *<code>optional .google.protobuf.FieldOptions.CType ctype = 1 [default = STRING];</code>      */
specifier|public
name|boolean
name|hasCtype
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<pre>      * The ctype option instructs the C++ code generator to use a different      * representation of the field than it normally would.  See the specific      * options below.  This option is not yet implemented in the open source      * release -- sorry, we'll try to include it in a future version!      *</pre>      *      *<code>optional .google.protobuf.FieldOptions.CType ctype = 1 [default = STRING];</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|CType
name|getCtype
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|CType
name|result
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|CType
operator|.
name|valueOf
argument_list|(
name|ctype_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|CType
operator|.
name|STRING
else|:
name|result
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|PACKED_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|boolean
name|packed_
decl_stmt|;
comment|/**      *<pre>      * The packed option can be enabled for repeated primitive fields to enable      * a more efficient representation on the wire. Rather than repeatedly      * writing the tag and type for each element, the entire array is encoded as      * a single length-delimited blob. In proto3, only explicit setting it to      * false will avoid using packed encoding.      *</pre>      *      *<code>optional bool packed = 2;</code>      */
specifier|public
name|boolean
name|hasPacked
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<pre>      * The packed option can be enabled for repeated primitive fields to enable      * a more efficient representation on the wire. Rather than repeatedly      * writing the tag and type for each element, the entire array is encoded as      * a single length-delimited blob. In proto3, only explicit setting it to      * false will avoid using packed encoding.      *</pre>      *      *<code>optional bool packed = 2;</code>      */
specifier|public
name|boolean
name|getPacked
parameter_list|()
block|{
return|return
name|packed_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|JSTYPE_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|int
name|jstype_
decl_stmt|;
comment|/**      *<pre>      * The jstype option determines the JavaScript type used for values of the      * field.  The option is permitted only for 64 bit integral and fixed types      * (int64, uint64, sint64, fixed64, sfixed64).  By default these types are      * represented as JavaScript strings.  This avoids loss of precision that can      * happen when a large value is converted to a floating point JavaScript      * numbers.  Specifying JS_NUMBER for the jstype causes the generated      * JavaScript code to use the JavaScript "number" type instead of strings.      * This option is an enum to permit additional types to be added,      * e.g. goog.math.Integer.      *</pre>      *      *<code>optional .google.protobuf.FieldOptions.JSType jstype = 6 [default = JS_NORMAL];</code>      */
specifier|public
name|boolean
name|hasJstype
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<pre>      * The jstype option determines the JavaScript type used for values of the      * field.  The option is permitted only for 64 bit integral and fixed types      * (int64, uint64, sint64, fixed64, sfixed64).  By default these types are      * represented as JavaScript strings.  This avoids loss of precision that can      * happen when a large value is converted to a floating point JavaScript      * numbers.  Specifying JS_NUMBER for the jstype causes the generated      * JavaScript code to use the JavaScript "number" type instead of strings.      * This option is an enum to permit additional types to be added,      * e.g. goog.math.Integer.      *</pre>      *      *<code>optional .google.protobuf.FieldOptions.JSType jstype = 6 [default = JS_NORMAL];</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|JSType
name|getJstype
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|JSType
name|result
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|JSType
operator|.
name|valueOf
argument_list|(
name|jstype_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|JSType
operator|.
name|JS_NORMAL
else|:
name|result
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|LAZY_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|boolean
name|lazy_
decl_stmt|;
comment|/**      *<pre>      * Should this field be parsed lazily?  Lazy applies only to message-type      * fields.  It means that when the outer message is initially parsed, the      * inner message's contents will not be parsed but instead stored in encoded      * form.  The inner message will actually be parsed when it is first accessed.      * This is only a hint.  Implementations are free to choose whether to use      * eager or lazy parsing regardless of the value of this option.  However,      * setting this option true suggests that the protocol author believes that      * using lazy parsing on this field is worth the additional bookkeeping      * overhead typically needed to implement it.      * This option does not affect the public interface of any generated code;      * all method signatures remain the same.  Furthermore, thread-safety of the      * interface is not affected by this option; const methods remain safe to      * call from multiple threads concurrently, while non-const methods continue      * to require exclusive access.      * Note that implementations may choose not to check required fields within      * a lazy sub-message.  That is, calling IsInitialized() on the outer message      * may return true even if the inner message has missing required fields.      * This is necessary because otherwise the inner message would have to be      * parsed in order to perform the check, defeating the purpose of lazy      * parsing.  An implementation which chooses not to check required fields      * must be consistent about it.  That is, for any particular sub-message, the      * implementation must either *always* check its required fields, or *never*      * check its required fields, regardless of whether or not the message has      * been parsed.      *</pre>      *      *<code>optional bool lazy = 5 [default = false];</code>      */
specifier|public
name|boolean
name|hasLazy
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**      *<pre>      * Should this field be parsed lazily?  Lazy applies only to message-type      * fields.  It means that when the outer message is initially parsed, the      * inner message's contents will not be parsed but instead stored in encoded      * form.  The inner message will actually be parsed when it is first accessed.      * This is only a hint.  Implementations are free to choose whether to use      * eager or lazy parsing regardless of the value of this option.  However,      * setting this option true suggests that the protocol author believes that      * using lazy parsing on this field is worth the additional bookkeeping      * overhead typically needed to implement it.      * This option does not affect the public interface of any generated code;      * all method signatures remain the same.  Furthermore, thread-safety of the      * interface is not affected by this option; const methods remain safe to      * call from multiple threads concurrently, while non-const methods continue      * to require exclusive access.      * Note that implementations may choose not to check required fields within      * a lazy sub-message.  That is, calling IsInitialized() on the outer message      * may return true even if the inner message has missing required fields.      * This is necessary because otherwise the inner message would have to be      * parsed in order to perform the check, defeating the purpose of lazy      * parsing.  An implementation which chooses not to check required fields      * must be consistent about it.  That is, for any particular sub-message, the      * implementation must either *always* check its required fields, or *never*      * check its required fields, regardless of whether or not the message has      * been parsed.      *</pre>      *      *<code>optional bool lazy = 5 [default = false];</code>      */
specifier|public
name|boolean
name|getLazy
parameter_list|()
block|{
return|return
name|lazy_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|DEPRECATED_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|boolean
name|deprecated_
decl_stmt|;
comment|/**      *<pre>      * Is this field deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for accessors, or it will be completely ignored; in the very least, this      * is a formalization for deprecating fields.      *</pre>      *      *<code>optional bool deprecated = 3 [default = false];</code>      */
specifier|public
name|boolean
name|hasDeprecated
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**      *<pre>      * Is this field deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for accessors, or it will be completely ignored; in the very least, this      * is a formalization for deprecating fields.      *</pre>      *      *<code>optional bool deprecated = 3 [default = false];</code>      */
specifier|public
name|boolean
name|getDeprecated
parameter_list|()
block|{
return|return
name|deprecated_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|WEAK_FIELD_NUMBER
init|=
literal|10
decl_stmt|;
specifier|private
name|boolean
name|weak_
decl_stmt|;
comment|/**      *<pre>      * For Google-internal migration only. Do not use.      *</pre>      *      *<code>optional bool weak = 10 [default = false];</code>      */
specifier|public
name|boolean
name|hasWeak
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**      *<pre>      * For Google-internal migration only. Do not use.      *</pre>      *      *<code>optional bool weak = 10 [default = false];</code>      */
specifier|public
name|boolean
name|getWeak
parameter_list|()
block|{
return|return
name|weak_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|UNINTERPRETED_OPTION_FIELD_NUMBER
init|=
literal|999
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|uninterpretedOption_
decl_stmt|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
block|{
return|return
name|uninterpretedOption_
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
block|{
return|return
name|uninterpretedOption_
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|int
name|getUninterpretedOptionCount
parameter_list|()
block|{
return|return
name|uninterpretedOption_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getUninterpretedOptionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getUninterpretedOption
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
operator|!
name|extensionsAreInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessage
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
argument_list|>
operator|.
name|ExtensionWriter
name|extensionWriter
init|=
name|newExtensionWriter
argument_list|()
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|1
argument_list|,
name|ctype_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|2
argument_list|,
name|packed_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|3
argument_list|,
name|deprecated_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|5
argument_list|,
name|lazy_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|6
argument_list|,
name|jstype_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|10
argument_list|,
name|weak_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|uninterpretedOption_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|999
argument_list|,
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|extensionWriter
operator|.
name|writeUntil
argument_list|(
literal|536870912
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|1
argument_list|,
name|ctype_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|2
argument_list|,
name|packed_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|3
argument_list|,
name|deprecated_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|5
argument_list|,
name|lazy_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|6
argument_list|,
name|jstype_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|10
argument_list|,
name|weak_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|uninterpretedOption_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|999
argument_list|,
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|extensionsSerializedSize
argument_list|()
expr_stmt|;
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasCtype
argument_list|()
operator|==
name|other
operator|.
name|hasCtype
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasCtype
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|ctype_
operator|==
name|other
operator|.
name|ctype_
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasPacked
argument_list|()
operator|==
name|other
operator|.
name|hasPacked
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasPacked
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getPacked
argument_list|()
operator|==
name|other
operator|.
name|getPacked
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasJstype
argument_list|()
operator|==
name|other
operator|.
name|hasJstype
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasJstype
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|jstype_
operator|==
name|other
operator|.
name|jstype_
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasLazy
argument_list|()
operator|==
name|other
operator|.
name|hasLazy
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasLazy
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getLazy
argument_list|()
operator|==
name|other
operator|.
name|getLazy
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasDeprecated
argument_list|()
operator|==
name|other
operator|.
name|hasDeprecated
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasDeprecated
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getDeprecated
argument_list|()
operator|==
name|other
operator|.
name|getDeprecated
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasWeak
argument_list|()
operator|==
name|other
operator|.
name|hasWeak
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasWeak
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getWeak
argument_list|()
operator|==
name|other
operator|.
name|getWeak
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getUninterpretedOptionList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getUninterpretedOptionList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getExtensionFields
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getExtensionFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasCtype
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|CTYPE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|ctype_
expr_stmt|;
block|}
if|if
condition|(
name|hasPacked
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|PACKED_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getPacked
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasJstype
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|JSTYPE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|jstype_
expr_stmt|;
block|}
if|if
condition|(
name|hasLazy
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|LAZY_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getLazy
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasDeprecated
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|DEPRECATED_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getDeprecated
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasWeak
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|WEAK_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getWeak
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getUninterpretedOptionCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|UNINTERPRETED_OPTION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getUninterpretedOptionList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
name|hashFields
argument_list|(
name|hash
argument_list|,
name|getExtensionFields
argument_list|()
argument_list|)
expr_stmt|;
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code google.protobuf.FieldOptions}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
argument_list|,
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.FieldOptions)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptionsOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FieldOptions_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FieldOptions_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.FieldOptions.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getUninterpretedOptionFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|ctype_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|packed_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|jstype_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|lazy_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|deprecated_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|weak_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_FieldOptions_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|ctype_
operator|=
name|ctype_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|packed_
operator|=
name|packed_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|jstype_
operator|=
name|jstype_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|result
operator|.
name|lazy_
operator|=
name|lazy_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|result
operator|.
name|deprecated_
operator|=
name|deprecated_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
name|result
operator|.
name|weak_
operator|=
name|weak_
expr_stmt|;
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|uninterpretedOption_
operator|=
name|uninterpretedOption_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|uninterpretedOption_
operator|=
name|uninterpretedOptionBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|setExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
argument_list|,
name|Type
argument_list|>
name|extension
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setExtension
argument_list|(
name|extension
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|setExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
argument_list|,
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|Type
argument_list|>
argument_list|>
name|extension
parameter_list|,
name|int
name|index
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setExtension
argument_list|(
name|extension
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|addExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
argument_list|,
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|Type
argument_list|>
argument_list|>
name|extension
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addExtension
argument_list|(
name|extension
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|clearExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
argument_list|,
name|?
argument_list|>
name|extension
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearExtension
argument_list|(
name|extension
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasCtype
argument_list|()
condition|)
block|{
name|setCtype
argument_list|(
name|other
operator|.
name|getCtype
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasPacked
argument_list|()
condition|)
block|{
name|setPacked
argument_list|(
name|other
operator|.
name|getPacked
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasJstype
argument_list|()
condition|)
block|{
name|setJstype
argument_list|(
name|other
operator|.
name|getJstype
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasLazy
argument_list|()
condition|)
block|{
name|setLazy
argument_list|(
name|other
operator|.
name|getLazy
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasDeprecated
argument_list|()
condition|)
block|{
name|setDeprecated
argument_list|(
name|other
operator|.
name|getDeprecated
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasWeak
argument_list|()
condition|)
block|{
name|setWeak
argument_list|(
name|other
operator|.
name|getWeak
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|uninterpretedOption_
operator|=
name|other
operator|.
name|uninterpretedOption_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|uninterpretedOptionBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|uninterpretedOptionBuilder_
operator|=
literal|null
expr_stmt|;
name|uninterpretedOption_
operator|=
name|other
operator|.
name|uninterpretedOption_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|uninterpretedOptionBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getUninterpretedOptionFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeExtensionFields
argument_list|(
name|other
argument_list|)
expr_stmt|;
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getUninterpretedOptionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getUninterpretedOption
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
operator|!
name|extensionsAreInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|int
name|ctype_
init|=
literal|0
decl_stmt|;
comment|/**        *<pre>        * The ctype option instructs the C++ code generator to use a different        * representation of the field than it normally would.  See the specific        * options below.  This option is not yet implemented in the open source        * release -- sorry, we'll try to include it in a future version!        *</pre>        *        *<code>optional .google.protobuf.FieldOptions.CType ctype = 1 [default = STRING];</code>        */
specifier|public
name|boolean
name|hasCtype
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<pre>        * The ctype option instructs the C++ code generator to use a different        * representation of the field than it normally would.  See the specific        * options below.  This option is not yet implemented in the open source        * release -- sorry, we'll try to include it in a future version!        *</pre>        *        *<code>optional .google.protobuf.FieldOptions.CType ctype = 1 [default = STRING];</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|CType
name|getCtype
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|CType
name|result
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|CType
operator|.
name|valueOf
argument_list|(
name|ctype_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|CType
operator|.
name|STRING
else|:
name|result
return|;
block|}
comment|/**        *<pre>        * The ctype option instructs the C++ code generator to use a different        * representation of the field than it normally would.  See the specific        * options below.  This option is not yet implemented in the open source        * release -- sorry, we'll try to include it in a future version!        *</pre>        *        *<code>optional .google.protobuf.FieldOptions.CType ctype = 1 [default = STRING];</code>        */
specifier|public
name|Builder
name|setCtype
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|CType
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|ctype_
operator|=
name|value
operator|.
name|getNumber
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The ctype option instructs the C++ code generator to use a different        * representation of the field than it normally would.  See the specific        * options below.  This option is not yet implemented in the open source        * release -- sorry, we'll try to include it in a future version!        *</pre>        *        *<code>optional .google.protobuf.FieldOptions.CType ctype = 1 [default = STRING];</code>        */
specifier|public
name|Builder
name|clearCtype
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|ctype_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|packed_
decl_stmt|;
comment|/**        *<pre>        * The packed option can be enabled for repeated primitive fields to enable        * a more efficient representation on the wire. Rather than repeatedly        * writing the tag and type for each element, the entire array is encoded as        * a single length-delimited blob. In proto3, only explicit setting it to        * false will avoid using packed encoding.        *</pre>        *        *<code>optional bool packed = 2;</code>        */
specifier|public
name|boolean
name|hasPacked
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<pre>        * The packed option can be enabled for repeated primitive fields to enable        * a more efficient representation on the wire. Rather than repeatedly        * writing the tag and type for each element, the entire array is encoded as        * a single length-delimited blob. In proto3, only explicit setting it to        * false will avoid using packed encoding.        *</pre>        *        *<code>optional bool packed = 2;</code>        */
specifier|public
name|boolean
name|getPacked
parameter_list|()
block|{
return|return
name|packed_
return|;
block|}
comment|/**        *<pre>        * The packed option can be enabled for repeated primitive fields to enable        * a more efficient representation on the wire. Rather than repeatedly        * writing the tag and type for each element, the entire array is encoded as        * a single length-delimited blob. In proto3, only explicit setting it to        * false will avoid using packed encoding.        *</pre>        *        *<code>optional bool packed = 2;</code>        */
specifier|public
name|Builder
name|setPacked
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|packed_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The packed option can be enabled for repeated primitive fields to enable        * a more efficient representation on the wire. Rather than repeatedly        * writing the tag and type for each element, the entire array is encoded as        * a single length-delimited blob. In proto3, only explicit setting it to        * false will avoid using packed encoding.        *</pre>        *        *<code>optional bool packed = 2;</code>        */
specifier|public
name|Builder
name|clearPacked
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|packed_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|int
name|jstype_
init|=
literal|0
decl_stmt|;
comment|/**        *<pre>        * The jstype option determines the JavaScript type used for values of the        * field.  The option is permitted only for 64 bit integral and fixed types        * (int64, uint64, sint64, fixed64, sfixed64).  By default these types are        * represented as JavaScript strings.  This avoids loss of precision that can        * happen when a large value is converted to a floating point JavaScript        * numbers.  Specifying JS_NUMBER for the jstype causes the generated        * JavaScript code to use the JavaScript "number" type instead of strings.        * This option is an enum to permit additional types to be added,        * e.g. goog.math.Integer.        *</pre>        *        *<code>optional .google.protobuf.FieldOptions.JSType jstype = 6 [default = JS_NORMAL];</code>        */
specifier|public
name|boolean
name|hasJstype
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<pre>        * The jstype option determines the JavaScript type used for values of the        * field.  The option is permitted only for 64 bit integral and fixed types        * (int64, uint64, sint64, fixed64, sfixed64).  By default these types are        * represented as JavaScript strings.  This avoids loss of precision that can        * happen when a large value is converted to a floating point JavaScript        * numbers.  Specifying JS_NUMBER for the jstype causes the generated        * JavaScript code to use the JavaScript "number" type instead of strings.        * This option is an enum to permit additional types to be added,        * e.g. goog.math.Integer.        *</pre>        *        *<code>optional .google.protobuf.FieldOptions.JSType jstype = 6 [default = JS_NORMAL];</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|JSType
name|getJstype
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|JSType
name|result
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|JSType
operator|.
name|valueOf
argument_list|(
name|jstype_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|JSType
operator|.
name|JS_NORMAL
else|:
name|result
return|;
block|}
comment|/**        *<pre>        * The jstype option determines the JavaScript type used for values of the        * field.  The option is permitted only for 64 bit integral and fixed types        * (int64, uint64, sint64, fixed64, sfixed64).  By default these types are        * represented as JavaScript strings.  This avoids loss of precision that can        * happen when a large value is converted to a floating point JavaScript        * numbers.  Specifying JS_NUMBER for the jstype causes the generated        * JavaScript code to use the JavaScript "number" type instead of strings.        * This option is an enum to permit additional types to be added,        * e.g. goog.math.Integer.        *</pre>        *        *<code>optional .google.protobuf.FieldOptions.JSType jstype = 6 [default = JS_NORMAL];</code>        */
specifier|public
name|Builder
name|setJstype
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
operator|.
name|JSType
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|jstype_
operator|=
name|value
operator|.
name|getNumber
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The jstype option determines the JavaScript type used for values of the        * field.  The option is permitted only for 64 bit integral and fixed types        * (int64, uint64, sint64, fixed64, sfixed64).  By default these types are        * represented as JavaScript strings.  This avoids loss of precision that can        * happen when a large value is converted to a floating point JavaScript        * numbers.  Specifying JS_NUMBER for the jstype causes the generated        * JavaScript code to use the JavaScript "number" type instead of strings.        * This option is an enum to permit additional types to be added,        * e.g. goog.math.Integer.        *</pre>        *        *<code>optional .google.protobuf.FieldOptions.JSType jstype = 6 [default = JS_NORMAL];</code>        */
specifier|public
name|Builder
name|clearJstype
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|jstype_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|lazy_
decl_stmt|;
comment|/**        *<pre>        * Should this field be parsed lazily?  Lazy applies only to message-type        * fields.  It means that when the outer message is initially parsed, the        * inner message's contents will not be parsed but instead stored in encoded        * form.  The inner message will actually be parsed when it is first accessed.        * This is only a hint.  Implementations are free to choose whether to use        * eager or lazy parsing regardless of the value of this option.  However,        * setting this option true suggests that the protocol author believes that        * using lazy parsing on this field is worth the additional bookkeeping        * overhead typically needed to implement it.        * This option does not affect the public interface of any generated code;        * all method signatures remain the same.  Furthermore, thread-safety of the        * interface is not affected by this option; const methods remain safe to        * call from multiple threads concurrently, while non-const methods continue        * to require exclusive access.        * Note that implementations may choose not to check required fields within        * a lazy sub-message.  That is, calling IsInitialized() on the outer message        * may return true even if the inner message has missing required fields.        * This is necessary because otherwise the inner message would have to be        * parsed in order to perform the check, defeating the purpose of lazy        * parsing.  An implementation which chooses not to check required fields        * must be consistent about it.  That is, for any particular sub-message, the        * implementation must either *always* check its required fields, or *never*        * check its required fields, regardless of whether or not the message has        * been parsed.        *</pre>        *        *<code>optional bool lazy = 5 [default = false];</code>        */
specifier|public
name|boolean
name|hasLazy
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**        *<pre>        * Should this field be parsed lazily?  Lazy applies only to message-type        * fields.  It means that when the outer message is initially parsed, the        * inner message's contents will not be parsed but instead stored in encoded        * form.  The inner message will actually be parsed when it is first accessed.        * This is only a hint.  Implementations are free to choose whether to use        * eager or lazy parsing regardless of the value of this option.  However,        * setting this option true suggests that the protocol author believes that        * using lazy parsing on this field is worth the additional bookkeeping        * overhead typically needed to implement it.        * This option does not affect the public interface of any generated code;        * all method signatures remain the same.  Furthermore, thread-safety of the        * interface is not affected by this option; const methods remain safe to        * call from multiple threads concurrently, while non-const methods continue        * to require exclusive access.        * Note that implementations may choose not to check required fields within        * a lazy sub-message.  That is, calling IsInitialized() on the outer message        * may return true even if the inner message has missing required fields.        * This is necessary because otherwise the inner message would have to be        * parsed in order to perform the check, defeating the purpose of lazy        * parsing.  An implementation which chooses not to check required fields        * must be consistent about it.  That is, for any particular sub-message, the        * implementation must either *always* check its required fields, or *never*        * check its required fields, regardless of whether or not the message has        * been parsed.        *</pre>        *        *<code>optional bool lazy = 5 [default = false];</code>        */
specifier|public
name|boolean
name|getLazy
parameter_list|()
block|{
return|return
name|lazy_
return|;
block|}
comment|/**        *<pre>        * Should this field be parsed lazily?  Lazy applies only to message-type        * fields.  It means that when the outer message is initially parsed, the        * inner message's contents will not be parsed but instead stored in encoded        * form.  The inner message will actually be parsed when it is first accessed.        * This is only a hint.  Implementations are free to choose whether to use        * eager or lazy parsing regardless of the value of this option.  However,        * setting this option true suggests that the protocol author believes that        * using lazy parsing on this field is worth the additional bookkeeping        * overhead typically needed to implement it.        * This option does not affect the public interface of any generated code;        * all method signatures remain the same.  Furthermore, thread-safety of the        * interface is not affected by this option; const methods remain safe to        * call from multiple threads concurrently, while non-const methods continue        * to require exclusive access.        * Note that implementations may choose not to check required fields within        * a lazy sub-message.  That is, calling IsInitialized() on the outer message        * may return true even if the inner message has missing required fields.        * This is necessary because otherwise the inner message would have to be        * parsed in order to perform the check, defeating the purpose of lazy        * parsing.  An implementation which chooses not to check required fields        * must be consistent about it.  That is, for any particular sub-message, the        * implementation must either *always* check its required fields, or *never*        * check its required fields, regardless of whether or not the message has        * been parsed.        *</pre>        *        *<code>optional bool lazy = 5 [default = false];</code>        */
specifier|public
name|Builder
name|setLazy
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|lazy_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Should this field be parsed lazily?  Lazy applies only to message-type        * fields.  It means that when the outer message is initially parsed, the        * inner message's contents will not be parsed but instead stored in encoded        * form.  The inner message will actually be parsed when it is first accessed.        * This is only a hint.  Implementations are free to choose whether to use        * eager or lazy parsing regardless of the value of this option.  However,        * setting this option true suggests that the protocol author believes that        * using lazy parsing on this field is worth the additional bookkeeping        * overhead typically needed to implement it.        * This option does not affect the public interface of any generated code;        * all method signatures remain the same.  Furthermore, thread-safety of the        * interface is not affected by this option; const methods remain safe to        * call from multiple threads concurrently, while non-const methods continue        * to require exclusive access.        * Note that implementations may choose not to check required fields within        * a lazy sub-message.  That is, calling IsInitialized() on the outer message        * may return true even if the inner message has missing required fields.        * This is necessary because otherwise the inner message would have to be        * parsed in order to perform the check, defeating the purpose of lazy        * parsing.  An implementation which chooses not to check required fields        * must be consistent about it.  That is, for any particular sub-message, the        * implementation must either *always* check its required fields, or *never*        * check its required fields, regardless of whether or not the message has        * been parsed.        *</pre>        *        *<code>optional bool lazy = 5 [default = false];</code>        */
specifier|public
name|Builder
name|clearLazy
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|lazy_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|deprecated_
decl_stmt|;
comment|/**        *<pre>        * Is this field deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for accessors, or it will be completely ignored; in the very least, this        * is a formalization for deprecating fields.        *</pre>        *        *<code>optional bool deprecated = 3 [default = false];</code>        */
specifier|public
name|boolean
name|hasDeprecated
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**        *<pre>        * Is this field deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for accessors, or it will be completely ignored; in the very least, this        * is a formalization for deprecating fields.        *</pre>        *        *<code>optional bool deprecated = 3 [default = false];</code>        */
specifier|public
name|boolean
name|getDeprecated
parameter_list|()
block|{
return|return
name|deprecated_
return|;
block|}
comment|/**        *<pre>        * Is this field deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for accessors, or it will be completely ignored; in the very least, this        * is a formalization for deprecating fields.        *</pre>        *        *<code>optional bool deprecated = 3 [default = false];</code>        */
specifier|public
name|Builder
name|setDeprecated
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|deprecated_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Is this field deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for accessors, or it will be completely ignored; in the very least, this        * is a formalization for deprecating fields.        *</pre>        *        *<code>optional bool deprecated = 3 [default = false];</code>        */
specifier|public
name|Builder
name|clearDeprecated
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|deprecated_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|weak_
decl_stmt|;
comment|/**        *<pre>        * For Google-internal migration only. Do not use.        *</pre>        *        *<code>optional bool weak = 10 [default = false];</code>        */
specifier|public
name|boolean
name|hasWeak
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**        *<pre>        * For Google-internal migration only. Do not use.        *</pre>        *        *<code>optional bool weak = 10 [default = false];</code>        */
specifier|public
name|boolean
name|getWeak
parameter_list|()
block|{
return|return
name|weak_
return|;
block|}
comment|/**        *<pre>        * For Google-internal migration only. Do not use.        *</pre>        *        *<code>optional bool weak = 10 [default = false];</code>        */
specifier|public
name|Builder
name|setWeak
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|weak_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * For Google-internal migration only. Do not use.        *</pre>        *        *<code>optional bool weak = 10 [default = false];</code>        */
specifier|public
name|Builder
name|clearWeak
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|weak_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|uninterpretedOption_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureUninterpretedOptionIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|uninterpretedOptionBuilder_
decl_stmt|;
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|int
name|getUninterpretedOptionCount
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|setUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|setUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addAllUninterpretedOption
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|clearUninterpretedOption
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|removeUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|getUninterpretedOptionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|addUninterpretedOptionBuilder
parameter_list|()
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|addUninterpretedOptionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|>
name|getUninterpretedOptionBuilderList
parameter_list|()
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOptionBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
argument_list|(
name|uninterpretedOption_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|uninterpretedOption_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|uninterpretedOptionBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.FieldOptions)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.FieldOptions)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FieldOptions
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|FieldOptions
argument_list|>
argument_list|()
block|{
specifier|public
name|FieldOptions
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|FieldOptions
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FieldOptions
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FieldOptions
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|FieldOptions
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|OneofOptionsOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.OneofOptions)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessageOrBuilder
argument_list|<
name|OneofOptions
argument_list|>
block|{
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|int
name|getUninterpretedOptionCount
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    * Protobuf type {@code google.protobuf.OneofOptions}    */
specifier|public
specifier|static
specifier|final
class|class
name|OneofOptions
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessage
argument_list|<
name|OneofOptions
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.OneofOptions)
name|OneofOptionsOrBuilder
block|{
comment|// Use OneofOptions.newBuilder() to construct.
specifier|private
name|OneofOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
argument_list|,
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|OneofOptions
parameter_list|()
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|OneofOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|7994
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_OneofOptions_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_OneofOptions_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|UNINTERPRETED_OPTION_FIELD_NUMBER
init|=
literal|999
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|uninterpretedOption_
decl_stmt|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
block|{
return|return
name|uninterpretedOption_
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
block|{
return|return
name|uninterpretedOption_
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|int
name|getUninterpretedOptionCount
parameter_list|()
block|{
return|return
name|uninterpretedOption_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getUninterpretedOptionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getUninterpretedOption
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
operator|!
name|extensionsAreInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessage
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
argument_list|>
operator|.
name|ExtensionWriter
name|extensionWriter
init|=
name|newExtensionWriter
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|uninterpretedOption_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|999
argument_list|,
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|extensionWriter
operator|.
name|writeUntil
argument_list|(
literal|536870912
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|uninterpretedOption_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|999
argument_list|,
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|extensionsSerializedSize
argument_list|()
expr_stmt|;
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
name|getUninterpretedOptionList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getUninterpretedOptionList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getExtensionFields
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getExtensionFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|getUninterpretedOptionCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|UNINTERPRETED_OPTION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getUninterpretedOptionList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
name|hashFields
argument_list|(
name|hash
argument_list|,
name|getExtensionFields
argument_list|()
argument_list|)
expr_stmt|;
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code google.protobuf.OneofOptions}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
argument_list|,
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.OneofOptions)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptionsOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_OneofOptions_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_OneofOptions_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.OneofOptions.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getUninterpretedOptionFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_OneofOptions_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|uninterpretedOption_
operator|=
name|uninterpretedOption_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|uninterpretedOption_
operator|=
name|uninterpretedOptionBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|setExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
argument_list|,
name|Type
argument_list|>
name|extension
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setExtension
argument_list|(
name|extension
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|setExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
argument_list|,
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|Type
argument_list|>
argument_list|>
name|extension
parameter_list|,
name|int
name|index
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setExtension
argument_list|(
name|extension
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|addExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
argument_list|,
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|Type
argument_list|>
argument_list|>
name|extension
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addExtension
argument_list|(
name|extension
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|clearExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
argument_list|,
name|?
argument_list|>
name|extension
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearExtension
argument_list|(
name|extension
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|uninterpretedOption_
operator|=
name|other
operator|.
name|uninterpretedOption_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|uninterpretedOptionBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|uninterpretedOptionBuilder_
operator|=
literal|null
expr_stmt|;
name|uninterpretedOption_
operator|=
name|other
operator|.
name|uninterpretedOption_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|uninterpretedOptionBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getUninterpretedOptionFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeExtensionFields
argument_list|(
name|other
argument_list|)
expr_stmt|;
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getUninterpretedOptionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getUninterpretedOption
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
operator|!
name|extensionsAreInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|uninterpretedOption_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureUninterpretedOptionIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|uninterpretedOptionBuilder_
decl_stmt|;
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|int
name|getUninterpretedOptionCount
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|setUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|setUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addAllUninterpretedOption
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|clearUninterpretedOption
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|removeUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|getUninterpretedOptionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|addUninterpretedOptionBuilder
parameter_list|()
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|addUninterpretedOptionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|>
name|getUninterpretedOptionBuilderList
parameter_list|()
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOptionBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
argument_list|(
name|uninterpretedOption_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|uninterpretedOption_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|uninterpretedOptionBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.OneofOptions)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.OneofOptions)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|OneofOptions
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|OneofOptions
argument_list|>
argument_list|()
block|{
specifier|public
name|OneofOptions
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|OneofOptions
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|OneofOptions
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|OneofOptions
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|OneofOptions
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|EnumOptionsOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.EnumOptions)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessageOrBuilder
argument_list|<
name|EnumOptions
argument_list|>
block|{
comment|/**      *<pre>      * Set this option to true to allow mapping different tag names to the same      * value.      *</pre>      *      *<code>optional bool allow_alias = 2;</code>      */
name|boolean
name|hasAllowAlias
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Set this option to true to allow mapping different tag names to the same      * value.      *</pre>      *      *<code>optional bool allow_alias = 2;</code>      */
name|boolean
name|getAllowAlias
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Is this enum deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for the enum, or it will be completely ignored; in the very least, this      * is a formalization for deprecating enums.      *</pre>      *      *<code>optional bool deprecated = 3 [default = false];</code>      */
name|boolean
name|hasDeprecated
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Is this enum deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for the enum, or it will be completely ignored; in the very least, this      * is a formalization for deprecating enums.      *</pre>      *      *<code>optional bool deprecated = 3 [default = false];</code>      */
name|boolean
name|getDeprecated
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|int
name|getUninterpretedOptionCount
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    * Protobuf type {@code google.protobuf.EnumOptions}    */
specifier|public
specifier|static
specifier|final
class|class
name|EnumOptions
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessage
argument_list|<
name|EnumOptions
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.EnumOptions)
name|EnumOptionsOrBuilder
block|{
comment|// Use EnumOptions.newBuilder() to construct.
specifier|private
name|EnumOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
argument_list|,
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|EnumOptions
parameter_list|()
block|{
name|allowAlias_
operator|=
literal|false
expr_stmt|;
name|deprecated_
operator|=
literal|false
expr_stmt|;
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|EnumOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|allowAlias_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|24
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|deprecated_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|7994
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_EnumOptions_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_EnumOptions_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|ALLOW_ALIAS_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|boolean
name|allowAlias_
decl_stmt|;
comment|/**      *<pre>      * Set this option to true to allow mapping different tag names to the same      * value.      *</pre>      *      *<code>optional bool allow_alias = 2;</code>      */
specifier|public
name|boolean
name|hasAllowAlias
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<pre>      * Set this option to true to allow mapping different tag names to the same      * value.      *</pre>      *      *<code>optional bool allow_alias = 2;</code>      */
specifier|public
name|boolean
name|getAllowAlias
parameter_list|()
block|{
return|return
name|allowAlias_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|DEPRECATED_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|boolean
name|deprecated_
decl_stmt|;
comment|/**      *<pre>      * Is this enum deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for the enum, or it will be completely ignored; in the very least, this      * is a formalization for deprecating enums.      *</pre>      *      *<code>optional bool deprecated = 3 [default = false];</code>      */
specifier|public
name|boolean
name|hasDeprecated
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<pre>      * Is this enum deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for the enum, or it will be completely ignored; in the very least, this      * is a formalization for deprecating enums.      *</pre>      *      *<code>optional bool deprecated = 3 [default = false];</code>      */
specifier|public
name|boolean
name|getDeprecated
parameter_list|()
block|{
return|return
name|deprecated_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|UNINTERPRETED_OPTION_FIELD_NUMBER
init|=
literal|999
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|uninterpretedOption_
decl_stmt|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
block|{
return|return
name|uninterpretedOption_
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
block|{
return|return
name|uninterpretedOption_
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|int
name|getUninterpretedOptionCount
parameter_list|()
block|{
return|return
name|uninterpretedOption_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getUninterpretedOptionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getUninterpretedOption
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
operator|!
name|extensionsAreInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessage
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
argument_list|>
operator|.
name|ExtensionWriter
name|extensionWriter
init|=
name|newExtensionWriter
argument_list|()
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|2
argument_list|,
name|allowAlias_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|3
argument_list|,
name|deprecated_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|uninterpretedOption_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|999
argument_list|,
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|extensionWriter
operator|.
name|writeUntil
argument_list|(
literal|536870912
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|2
argument_list|,
name|allowAlias_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|3
argument_list|,
name|deprecated_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|uninterpretedOption_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|999
argument_list|,
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|extensionsSerializedSize
argument_list|()
expr_stmt|;
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasAllowAlias
argument_list|()
operator|==
name|other
operator|.
name|hasAllowAlias
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasAllowAlias
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getAllowAlias
argument_list|()
operator|==
name|other
operator|.
name|getAllowAlias
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasDeprecated
argument_list|()
operator|==
name|other
operator|.
name|hasDeprecated
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasDeprecated
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getDeprecated
argument_list|()
operator|==
name|other
operator|.
name|getDeprecated
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getUninterpretedOptionList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getUninterpretedOptionList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getExtensionFields
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getExtensionFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasAllowAlias
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|ALLOW_ALIAS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getAllowAlias
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasDeprecated
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|DEPRECATED_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getDeprecated
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getUninterpretedOptionCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|UNINTERPRETED_OPTION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getUninterpretedOptionList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
name|hashFields
argument_list|(
name|hash
argument_list|,
name|getExtensionFields
argument_list|()
argument_list|)
expr_stmt|;
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code google.protobuf.EnumOptions}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
argument_list|,
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.EnumOptions)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptionsOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_EnumOptions_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_EnumOptions_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.EnumOptions.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getUninterpretedOptionFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|allowAlias_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|deprecated_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_EnumOptions_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|allowAlias_
operator|=
name|allowAlias_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|deprecated_
operator|=
name|deprecated_
expr_stmt|;
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|uninterpretedOption_
operator|=
name|uninterpretedOption_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|uninterpretedOption_
operator|=
name|uninterpretedOptionBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|setExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
argument_list|,
name|Type
argument_list|>
name|extension
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setExtension
argument_list|(
name|extension
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|setExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
argument_list|,
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|Type
argument_list|>
argument_list|>
name|extension
parameter_list|,
name|int
name|index
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setExtension
argument_list|(
name|extension
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|addExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
argument_list|,
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|Type
argument_list|>
argument_list|>
name|extension
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addExtension
argument_list|(
name|extension
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|clearExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
argument_list|,
name|?
argument_list|>
name|extension
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearExtension
argument_list|(
name|extension
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasAllowAlias
argument_list|()
condition|)
block|{
name|setAllowAlias
argument_list|(
name|other
operator|.
name|getAllowAlias
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasDeprecated
argument_list|()
condition|)
block|{
name|setDeprecated
argument_list|(
name|other
operator|.
name|getDeprecated
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|uninterpretedOption_
operator|=
name|other
operator|.
name|uninterpretedOption_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|uninterpretedOptionBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|uninterpretedOptionBuilder_
operator|=
literal|null
expr_stmt|;
name|uninterpretedOption_
operator|=
name|other
operator|.
name|uninterpretedOption_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|uninterpretedOptionBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getUninterpretedOptionFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeExtensionFields
argument_list|(
name|other
argument_list|)
expr_stmt|;
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getUninterpretedOptionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getUninterpretedOption
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
operator|!
name|extensionsAreInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|boolean
name|allowAlias_
decl_stmt|;
comment|/**        *<pre>        * Set this option to true to allow mapping different tag names to the same        * value.        *</pre>        *        *<code>optional bool allow_alias = 2;</code>        */
specifier|public
name|boolean
name|hasAllowAlias
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<pre>        * Set this option to true to allow mapping different tag names to the same        * value.        *</pre>        *        *<code>optional bool allow_alias = 2;</code>        */
specifier|public
name|boolean
name|getAllowAlias
parameter_list|()
block|{
return|return
name|allowAlias_
return|;
block|}
comment|/**        *<pre>        * Set this option to true to allow mapping different tag names to the same        * value.        *</pre>        *        *<code>optional bool allow_alias = 2;</code>        */
specifier|public
name|Builder
name|setAllowAlias
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|allowAlias_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Set this option to true to allow mapping different tag names to the same        * value.        *</pre>        *        *<code>optional bool allow_alias = 2;</code>        */
specifier|public
name|Builder
name|clearAllowAlias
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|allowAlias_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|deprecated_
decl_stmt|;
comment|/**        *<pre>        * Is this enum deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for the enum, or it will be completely ignored; in the very least, this        * is a formalization for deprecating enums.        *</pre>        *        *<code>optional bool deprecated = 3 [default = false];</code>        */
specifier|public
name|boolean
name|hasDeprecated
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<pre>        * Is this enum deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for the enum, or it will be completely ignored; in the very least, this        * is a formalization for deprecating enums.        *</pre>        *        *<code>optional bool deprecated = 3 [default = false];</code>        */
specifier|public
name|boolean
name|getDeprecated
parameter_list|()
block|{
return|return
name|deprecated_
return|;
block|}
comment|/**        *<pre>        * Is this enum deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for the enum, or it will be completely ignored; in the very least, this        * is a formalization for deprecating enums.        *</pre>        *        *<code>optional bool deprecated = 3 [default = false];</code>        */
specifier|public
name|Builder
name|setDeprecated
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|deprecated_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Is this enum deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for the enum, or it will be completely ignored; in the very least, this        * is a formalization for deprecating enums.        *</pre>        *        *<code>optional bool deprecated = 3 [default = false];</code>        */
specifier|public
name|Builder
name|clearDeprecated
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|deprecated_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|uninterpretedOption_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureUninterpretedOptionIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|uninterpretedOptionBuilder_
decl_stmt|;
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|int
name|getUninterpretedOptionCount
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|setUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|setUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addAllUninterpretedOption
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|clearUninterpretedOption
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|removeUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|getUninterpretedOptionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|addUninterpretedOptionBuilder
parameter_list|()
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|addUninterpretedOptionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|>
name|getUninterpretedOptionBuilderList
parameter_list|()
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOptionBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
argument_list|(
name|uninterpretedOption_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|uninterpretedOption_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|uninterpretedOptionBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.EnumOptions)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.EnumOptions)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|EnumOptions
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|EnumOptions
argument_list|>
argument_list|()
block|{
specifier|public
name|EnumOptions
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|EnumOptions
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|EnumOptions
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|EnumOptions
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumOptions
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|EnumValueOptionsOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.EnumValueOptions)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessageOrBuilder
argument_list|<
name|EnumValueOptions
argument_list|>
block|{
comment|/**      *<pre>      * Is this enum value deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for the enum value, or it will be completely ignored; in the very least,      * this is a formalization for deprecating enum values.      *</pre>      *      *<code>optional bool deprecated = 1 [default = false];</code>      */
name|boolean
name|hasDeprecated
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Is this enum value deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for the enum value, or it will be completely ignored; in the very least,      * this is a formalization for deprecating enum values.      *</pre>      *      *<code>optional bool deprecated = 1 [default = false];</code>      */
name|boolean
name|getDeprecated
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|int
name|getUninterpretedOptionCount
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    * Protobuf type {@code google.protobuf.EnumValueOptions}    */
specifier|public
specifier|static
specifier|final
class|class
name|EnumValueOptions
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessage
argument_list|<
name|EnumValueOptions
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.EnumValueOptions)
name|EnumValueOptionsOrBuilder
block|{
comment|// Use EnumValueOptions.newBuilder() to construct.
specifier|private
name|EnumValueOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
argument_list|,
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|EnumValueOptions
parameter_list|()
block|{
name|deprecated_
operator|=
literal|false
expr_stmt|;
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|EnumValueOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|8
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|deprecated_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|7994
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_EnumValueOptions_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_EnumValueOptions_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|DEPRECATED_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|boolean
name|deprecated_
decl_stmt|;
comment|/**      *<pre>      * Is this enum value deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for the enum value, or it will be completely ignored; in the very least,      * this is a formalization for deprecating enum values.      *</pre>      *      *<code>optional bool deprecated = 1 [default = false];</code>      */
specifier|public
name|boolean
name|hasDeprecated
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<pre>      * Is this enum value deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for the enum value, or it will be completely ignored; in the very least,      * this is a formalization for deprecating enum values.      *</pre>      *      *<code>optional bool deprecated = 1 [default = false];</code>      */
specifier|public
name|boolean
name|getDeprecated
parameter_list|()
block|{
return|return
name|deprecated_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|UNINTERPRETED_OPTION_FIELD_NUMBER
init|=
literal|999
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|uninterpretedOption_
decl_stmt|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
block|{
return|return
name|uninterpretedOption_
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
block|{
return|return
name|uninterpretedOption_
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|int
name|getUninterpretedOptionCount
parameter_list|()
block|{
return|return
name|uninterpretedOption_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getUninterpretedOptionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getUninterpretedOption
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
operator|!
name|extensionsAreInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessage
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
argument_list|>
operator|.
name|ExtensionWriter
name|extensionWriter
init|=
name|newExtensionWriter
argument_list|()
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|1
argument_list|,
name|deprecated_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|uninterpretedOption_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|999
argument_list|,
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|extensionWriter
operator|.
name|writeUntil
argument_list|(
literal|536870912
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|1
argument_list|,
name|deprecated_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|uninterpretedOption_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|999
argument_list|,
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|extensionsSerializedSize
argument_list|()
expr_stmt|;
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasDeprecated
argument_list|()
operator|==
name|other
operator|.
name|hasDeprecated
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasDeprecated
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getDeprecated
argument_list|()
operator|==
name|other
operator|.
name|getDeprecated
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getUninterpretedOptionList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getUninterpretedOptionList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getExtensionFields
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getExtensionFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasDeprecated
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|DEPRECATED_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getDeprecated
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getUninterpretedOptionCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|UNINTERPRETED_OPTION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getUninterpretedOptionList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
name|hashFields
argument_list|(
name|hash
argument_list|,
name|getExtensionFields
argument_list|()
argument_list|)
expr_stmt|;
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code google.protobuf.EnumValueOptions}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
argument_list|,
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.EnumValueOptions)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptionsOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_EnumValueOptions_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_EnumValueOptions_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.EnumValueOptions.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getUninterpretedOptionFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deprecated_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_EnumValueOptions_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|deprecated_
operator|=
name|deprecated_
expr_stmt|;
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|uninterpretedOption_
operator|=
name|uninterpretedOption_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|uninterpretedOption_
operator|=
name|uninterpretedOptionBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|setExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
argument_list|,
name|Type
argument_list|>
name|extension
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setExtension
argument_list|(
name|extension
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|setExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
argument_list|,
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|Type
argument_list|>
argument_list|>
name|extension
parameter_list|,
name|int
name|index
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setExtension
argument_list|(
name|extension
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|addExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
argument_list|,
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|Type
argument_list|>
argument_list|>
name|extension
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addExtension
argument_list|(
name|extension
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|clearExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
argument_list|,
name|?
argument_list|>
name|extension
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearExtension
argument_list|(
name|extension
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasDeprecated
argument_list|()
condition|)
block|{
name|setDeprecated
argument_list|(
name|other
operator|.
name|getDeprecated
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|uninterpretedOption_
operator|=
name|other
operator|.
name|uninterpretedOption_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|uninterpretedOptionBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|uninterpretedOptionBuilder_
operator|=
literal|null
expr_stmt|;
name|uninterpretedOption_
operator|=
name|other
operator|.
name|uninterpretedOption_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|uninterpretedOptionBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getUninterpretedOptionFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeExtensionFields
argument_list|(
name|other
argument_list|)
expr_stmt|;
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getUninterpretedOptionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getUninterpretedOption
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
operator|!
name|extensionsAreInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|boolean
name|deprecated_
decl_stmt|;
comment|/**        *<pre>        * Is this enum value deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for the enum value, or it will be completely ignored; in the very least,        * this is a formalization for deprecating enum values.        *</pre>        *        *<code>optional bool deprecated = 1 [default = false];</code>        */
specifier|public
name|boolean
name|hasDeprecated
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<pre>        * Is this enum value deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for the enum value, or it will be completely ignored; in the very least,        * this is a formalization for deprecating enum values.        *</pre>        *        *<code>optional bool deprecated = 1 [default = false];</code>        */
specifier|public
name|boolean
name|getDeprecated
parameter_list|()
block|{
return|return
name|deprecated_
return|;
block|}
comment|/**        *<pre>        * Is this enum value deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for the enum value, or it will be completely ignored; in the very least,        * this is a formalization for deprecating enum values.        *</pre>        *        *<code>optional bool deprecated = 1 [default = false];</code>        */
specifier|public
name|Builder
name|setDeprecated
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|deprecated_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Is this enum value deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for the enum value, or it will be completely ignored; in the very least,        * this is a formalization for deprecating enum values.        *</pre>        *        *<code>optional bool deprecated = 1 [default = false];</code>        */
specifier|public
name|Builder
name|clearDeprecated
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|deprecated_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|uninterpretedOption_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureUninterpretedOptionIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|uninterpretedOptionBuilder_
decl_stmt|;
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|int
name|getUninterpretedOptionCount
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|setUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|setUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addAllUninterpretedOption
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|clearUninterpretedOption
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|removeUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|getUninterpretedOptionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|addUninterpretedOptionBuilder
parameter_list|()
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|addUninterpretedOptionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|>
name|getUninterpretedOptionBuilderList
parameter_list|()
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOptionBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
argument_list|(
name|uninterpretedOption_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|uninterpretedOption_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|uninterpretedOptionBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.EnumValueOptions)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.EnumValueOptions)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|EnumValueOptions
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|EnumValueOptions
argument_list|>
argument_list|()
block|{
specifier|public
name|EnumValueOptions
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|EnumValueOptions
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|EnumValueOptions
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|EnumValueOptions
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|EnumValueOptions
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|ServiceOptionsOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.ServiceOptions)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessageOrBuilder
argument_list|<
name|ServiceOptions
argument_list|>
block|{
comment|/**      *<pre>      * Is this service deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for the service, or it will be completely ignored; in the very least,      * this is a formalization for deprecating services.      *</pre>      *      *<code>optional bool deprecated = 33 [default = false];</code>      */
name|boolean
name|hasDeprecated
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Is this service deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for the service, or it will be completely ignored; in the very least,      * this is a formalization for deprecating services.      *</pre>      *      *<code>optional bool deprecated = 33 [default = false];</code>      */
name|boolean
name|getDeprecated
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|int
name|getUninterpretedOptionCount
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    * Protobuf type {@code google.protobuf.ServiceOptions}    */
specifier|public
specifier|static
specifier|final
class|class
name|ServiceOptions
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessage
argument_list|<
name|ServiceOptions
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.ServiceOptions)
name|ServiceOptionsOrBuilder
block|{
comment|// Use ServiceOptions.newBuilder() to construct.
specifier|private
name|ServiceOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
argument_list|,
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ServiceOptions
parameter_list|()
block|{
name|deprecated_
operator|=
literal|false
expr_stmt|;
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|ServiceOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|264
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|deprecated_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|7994
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_ServiceOptions_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_ServiceOptions_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|DEPRECATED_FIELD_NUMBER
init|=
literal|33
decl_stmt|;
specifier|private
name|boolean
name|deprecated_
decl_stmt|;
comment|/**      *<pre>      * Is this service deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for the service, or it will be completely ignored; in the very least,      * this is a formalization for deprecating services.      *</pre>      *      *<code>optional bool deprecated = 33 [default = false];</code>      */
specifier|public
name|boolean
name|hasDeprecated
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<pre>      * Is this service deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for the service, or it will be completely ignored; in the very least,      * this is a formalization for deprecating services.      *</pre>      *      *<code>optional bool deprecated = 33 [default = false];</code>      */
specifier|public
name|boolean
name|getDeprecated
parameter_list|()
block|{
return|return
name|deprecated_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|UNINTERPRETED_OPTION_FIELD_NUMBER
init|=
literal|999
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|uninterpretedOption_
decl_stmt|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
block|{
return|return
name|uninterpretedOption_
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
block|{
return|return
name|uninterpretedOption_
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|int
name|getUninterpretedOptionCount
parameter_list|()
block|{
return|return
name|uninterpretedOption_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getUninterpretedOptionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getUninterpretedOption
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
operator|!
name|extensionsAreInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessage
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
argument_list|>
operator|.
name|ExtensionWriter
name|extensionWriter
init|=
name|newExtensionWriter
argument_list|()
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|33
argument_list|,
name|deprecated_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|uninterpretedOption_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|999
argument_list|,
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|extensionWriter
operator|.
name|writeUntil
argument_list|(
literal|536870912
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|33
argument_list|,
name|deprecated_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|uninterpretedOption_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|999
argument_list|,
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|extensionsSerializedSize
argument_list|()
expr_stmt|;
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasDeprecated
argument_list|()
operator|==
name|other
operator|.
name|hasDeprecated
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasDeprecated
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getDeprecated
argument_list|()
operator|==
name|other
operator|.
name|getDeprecated
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getUninterpretedOptionList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getUninterpretedOptionList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getExtensionFields
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getExtensionFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasDeprecated
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|DEPRECATED_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getDeprecated
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getUninterpretedOptionCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|UNINTERPRETED_OPTION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getUninterpretedOptionList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
name|hashFields
argument_list|(
name|hash
argument_list|,
name|getExtensionFields
argument_list|()
argument_list|)
expr_stmt|;
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code google.protobuf.ServiceOptions}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
argument_list|,
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.ServiceOptions)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptionsOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_ServiceOptions_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_ServiceOptions_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.ServiceOptions.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getUninterpretedOptionFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deprecated_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_ServiceOptions_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|deprecated_
operator|=
name|deprecated_
expr_stmt|;
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|uninterpretedOption_
operator|=
name|uninterpretedOption_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|uninterpretedOption_
operator|=
name|uninterpretedOptionBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|setExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
argument_list|,
name|Type
argument_list|>
name|extension
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setExtension
argument_list|(
name|extension
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|setExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
argument_list|,
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|Type
argument_list|>
argument_list|>
name|extension
parameter_list|,
name|int
name|index
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setExtension
argument_list|(
name|extension
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|addExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
argument_list|,
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|Type
argument_list|>
argument_list|>
name|extension
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addExtension
argument_list|(
name|extension
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|clearExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
argument_list|,
name|?
argument_list|>
name|extension
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearExtension
argument_list|(
name|extension
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasDeprecated
argument_list|()
condition|)
block|{
name|setDeprecated
argument_list|(
name|other
operator|.
name|getDeprecated
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|uninterpretedOption_
operator|=
name|other
operator|.
name|uninterpretedOption_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|uninterpretedOptionBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|uninterpretedOptionBuilder_
operator|=
literal|null
expr_stmt|;
name|uninterpretedOption_
operator|=
name|other
operator|.
name|uninterpretedOption_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|uninterpretedOptionBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getUninterpretedOptionFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeExtensionFields
argument_list|(
name|other
argument_list|)
expr_stmt|;
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getUninterpretedOptionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getUninterpretedOption
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
operator|!
name|extensionsAreInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|boolean
name|deprecated_
decl_stmt|;
comment|/**        *<pre>        * Is this service deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for the service, or it will be completely ignored; in the very least,        * this is a formalization for deprecating services.        *</pre>        *        *<code>optional bool deprecated = 33 [default = false];</code>        */
specifier|public
name|boolean
name|hasDeprecated
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<pre>        * Is this service deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for the service, or it will be completely ignored; in the very least,        * this is a formalization for deprecating services.        *</pre>        *        *<code>optional bool deprecated = 33 [default = false];</code>        */
specifier|public
name|boolean
name|getDeprecated
parameter_list|()
block|{
return|return
name|deprecated_
return|;
block|}
comment|/**        *<pre>        * Is this service deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for the service, or it will be completely ignored; in the very least,        * this is a formalization for deprecating services.        *</pre>        *        *<code>optional bool deprecated = 33 [default = false];</code>        */
specifier|public
name|Builder
name|setDeprecated
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|deprecated_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Is this service deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for the service, or it will be completely ignored; in the very least,        * this is a formalization for deprecating services.        *</pre>        *        *<code>optional bool deprecated = 33 [default = false];</code>        */
specifier|public
name|Builder
name|clearDeprecated
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|deprecated_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|uninterpretedOption_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureUninterpretedOptionIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|uninterpretedOptionBuilder_
decl_stmt|;
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|int
name|getUninterpretedOptionCount
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|setUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|setUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addAllUninterpretedOption
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|clearUninterpretedOption
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|removeUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|getUninterpretedOptionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|addUninterpretedOptionBuilder
parameter_list|()
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|addUninterpretedOptionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|>
name|getUninterpretedOptionBuilderList
parameter_list|()
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOptionBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
argument_list|(
name|uninterpretedOption_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|uninterpretedOption_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|uninterpretedOptionBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.ServiceOptions)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.ServiceOptions)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ServiceOptions
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|ServiceOptions
argument_list|>
argument_list|()
block|{
specifier|public
name|ServiceOptions
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|ServiceOptions
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ServiceOptions
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ServiceOptions
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|ServiceOptions
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|MethodOptionsOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.MethodOptions)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessageOrBuilder
argument_list|<
name|MethodOptions
argument_list|>
block|{
comment|/**      *<pre>      * Is this method deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for the method, or it will be completely ignored; in the very least,      * this is a formalization for deprecating methods.      *</pre>      *      *<code>optional bool deprecated = 33 [default = false];</code>      */
name|boolean
name|hasDeprecated
parameter_list|()
function_decl|;
comment|/**      *<pre>      * Is this method deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for the method, or it will be completely ignored; in the very least,      * this is a formalization for deprecating methods.      *</pre>      *      *<code>optional bool deprecated = 33 [default = false];</code>      */
name|boolean
name|getDeprecated
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.MethodOptions.IdempotencyLevel idempotency_level = 34 [default = IDEMPOTENCY_UNKNOWN];</code>      */
name|boolean
name|hasIdempotencyLevel
parameter_list|()
function_decl|;
comment|/**      *<code>optional .google.protobuf.MethodOptions.IdempotencyLevel idempotency_level = 34 [default = IDEMPOTENCY_UNKNOWN];</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|IdempotencyLevel
name|getIdempotencyLevel
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|int
name|getUninterpretedOptionCount
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    * Protobuf type {@code google.protobuf.MethodOptions}    */
specifier|public
specifier|static
specifier|final
class|class
name|MethodOptions
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessage
argument_list|<
name|MethodOptions
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.MethodOptions)
name|MethodOptionsOrBuilder
block|{
comment|// Use MethodOptions.newBuilder() to construct.
specifier|private
name|MethodOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
argument_list|,
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|MethodOptions
parameter_list|()
block|{
name|deprecated_
operator|=
literal|false
expr_stmt|;
name|idempotencyLevel_
operator|=
literal|0
expr_stmt|;
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|MethodOptions
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|264
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|deprecated_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|272
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|IdempotencyLevel
name|value
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|IdempotencyLevel
operator|.
name|valueOf
argument_list|(
name|rawValue
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unknownFields
operator|.
name|mergeVarintField
argument_list|(
literal|34
argument_list|,
name|rawValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|idempotencyLevel_
operator|=
name|rawValue
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|7994
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_MethodOptions_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_MethodOptions_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      *<pre>      * Is this method side-effect-free (or safe in HTTP parlance), or idempotent,      * or neither? HTTP based RPC implementation may choose GET verb for safe      * methods, and PUT verb for idempotent methods instead of the default POST.      *</pre>      *      * Protobuf enum {@code google.protobuf.MethodOptions.IdempotencyLevel}      */
specifier|public
enum|enum
name|IdempotencyLevel
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolMessageEnum
block|{
comment|/**        *<code>IDEMPOTENCY_UNKNOWN = 0;</code>        */
name|IDEMPOTENCY_UNKNOWN
argument_list|(
literal|0
argument_list|)
block|,
comment|/**        *<pre>        * implies idempotent        *</pre>        *        *<code>NO_SIDE_EFFECTS = 1;</code>        */
name|NO_SIDE_EFFECTS
argument_list|(
literal|1
argument_list|)
block|,
comment|/**        *<pre>        * idempotent, but may have side effects        *</pre>        *        *<code>IDEMPOTENT = 2;</code>        */
name|IDEMPOTENT
argument_list|(
literal|2
argument_list|)
block|,       ;
comment|/**        *<code>IDEMPOTENCY_UNKNOWN = 0;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|IDEMPOTENCY_UNKNOWN_VALUE
init|=
literal|0
decl_stmt|;
comment|/**        *<pre>        * implies idempotent        *</pre>        *        *<code>NO_SIDE_EFFECTS = 1;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|NO_SIDE_EFFECTS_VALUE
init|=
literal|1
decl_stmt|;
comment|/**        *<pre>        * idempotent, but may have side effects        *</pre>        *        *<code>IDEMPOTENT = 2;</code>        */
specifier|public
specifier|static
specifier|final
name|int
name|IDEMPOTENT_VALUE
init|=
literal|2
decl_stmt|;
specifier|public
specifier|final
name|int
name|getNumber
parameter_list|()
block|{
return|return
name|value
return|;
block|}
comment|/**        * @deprecated Use {@link #forNumber(int)} instead.        */
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
name|IdempotencyLevel
name|valueOf
parameter_list|(
name|int
name|value
parameter_list|)
block|{
return|return
name|forNumber
argument_list|(
name|value
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|IdempotencyLevel
name|forNumber
parameter_list|(
name|int
name|value
parameter_list|)
block|{
switch|switch
condition|(
name|value
condition|)
block|{
case|case
literal|0
case|:
return|return
name|IDEMPOTENCY_UNKNOWN
return|;
case|case
literal|1
case|:
return|return
name|NO_SIDE_EFFECTS
return|;
case|case
literal|2
case|:
return|return
name|IDEMPOTENT
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|IdempotencyLevel
argument_list|>
name|internalGetValueMap
parameter_list|()
block|{
return|return
name|internalValueMap
return|;
block|}
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|IdempotencyLevel
argument_list|>
name|internalValueMap
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|IdempotencyLevel
argument_list|>
argument_list|()
block|{
specifier|public
name|IdempotencyLevel
name|findValueByNumber
parameter_list|(
name|int
name|number
parameter_list|)
block|{
return|return
name|IdempotencyLevel
operator|.
name|forNumber
argument_list|(
name|number
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|getValueDescriptor
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
name|ordinal
argument_list|()
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getEnumTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
specifier|private
specifier|static
specifier|final
name|IdempotencyLevel
index|[]
name|VALUES
init|=
name|values
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|IdempotencyLevel
name|valueOf
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|desc
parameter_list|)
block|{
if|if
condition|(
name|desc
operator|.
name|getType
argument_list|()
operator|!=
name|getDescriptor
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|IllegalArgumentException
argument_list|(
literal|"EnumValueDescriptor is not for this type."
argument_list|)
throw|;
block|}
return|return
name|VALUES
index|[
name|desc
operator|.
name|getIndex
argument_list|()
index|]
return|;
block|}
specifier|private
specifier|final
name|int
name|value
decl_stmt|;
specifier|private
name|IdempotencyLevel
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(enum_scope:google.protobuf.MethodOptions.IdempotencyLevel)
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|DEPRECATED_FIELD_NUMBER
init|=
literal|33
decl_stmt|;
specifier|private
name|boolean
name|deprecated_
decl_stmt|;
comment|/**      *<pre>      * Is this method deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for the method, or it will be completely ignored; in the very least,      * this is a formalization for deprecating methods.      *</pre>      *      *<code>optional bool deprecated = 33 [default = false];</code>      */
specifier|public
name|boolean
name|hasDeprecated
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<pre>      * Is this method deprecated?      * Depending on the target platform, this can emit Deprecated annotations      * for the method, or it will be completely ignored; in the very least,      * this is a formalization for deprecating methods.      *</pre>      *      *<code>optional bool deprecated = 33 [default = false];</code>      */
specifier|public
name|boolean
name|getDeprecated
parameter_list|()
block|{
return|return
name|deprecated_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|IDEMPOTENCY_LEVEL_FIELD_NUMBER
init|=
literal|34
decl_stmt|;
specifier|private
name|int
name|idempotencyLevel_
decl_stmt|;
comment|/**      *<code>optional .google.protobuf.MethodOptions.IdempotencyLevel idempotency_level = 34 [default = IDEMPOTENCY_UNKNOWN];</code>      */
specifier|public
name|boolean
name|hasIdempotencyLevel
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>optional .google.protobuf.MethodOptions.IdempotencyLevel idempotency_level = 34 [default = IDEMPOTENCY_UNKNOWN];</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|IdempotencyLevel
name|getIdempotencyLevel
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|IdempotencyLevel
name|result
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|IdempotencyLevel
operator|.
name|valueOf
argument_list|(
name|idempotencyLevel_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|IdempotencyLevel
operator|.
name|IDEMPOTENCY_UNKNOWN
else|:
name|result
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|UNINTERPRETED_OPTION_FIELD_NUMBER
init|=
literal|999
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|uninterpretedOption_
decl_stmt|;
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
block|{
return|return
name|uninterpretedOption_
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
block|{
return|return
name|uninterpretedOption_
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|int
name|getUninterpretedOptionCount
parameter_list|()
block|{
return|return
name|uninterpretedOption_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<pre>      * The parser stores options it doesn't recognize here. See above.      *</pre>      *      *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getUninterpretedOptionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getUninterpretedOption
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
operator|!
name|extensionsAreInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableMessage
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
argument_list|>
operator|.
name|ExtensionWriter
name|extensionWriter
init|=
name|newExtensionWriter
argument_list|()
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|33
argument_list|,
name|deprecated_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|34
argument_list|,
name|idempotencyLevel_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|uninterpretedOption_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|999
argument_list|,
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|extensionWriter
operator|.
name|writeUntil
argument_list|(
literal|536870912
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|33
argument_list|,
name|deprecated_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|34
argument_list|,
name|idempotencyLevel_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|uninterpretedOption_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|999
argument_list|,
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|extensionsSerializedSize
argument_list|()
expr_stmt|;
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasDeprecated
argument_list|()
operator|==
name|other
operator|.
name|hasDeprecated
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasDeprecated
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getDeprecated
argument_list|()
operator|==
name|other
operator|.
name|getDeprecated
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasIdempotencyLevel
argument_list|()
operator|==
name|other
operator|.
name|hasIdempotencyLevel
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasIdempotencyLevel
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|idempotencyLevel_
operator|==
name|other
operator|.
name|idempotencyLevel_
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getUninterpretedOptionList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getUninterpretedOptionList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getExtensionFields
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getExtensionFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasDeprecated
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|DEPRECATED_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getDeprecated
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasIdempotencyLevel
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|IDEMPOTENCY_LEVEL_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|idempotencyLevel_
expr_stmt|;
block|}
if|if
condition|(
name|getUninterpretedOptionCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|UNINTERPRETED_OPTION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getUninterpretedOptionList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
name|hashFields
argument_list|(
name|hash
argument_list|,
name|getExtensionFields
argument_list|()
argument_list|)
expr_stmt|;
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code google.protobuf.MethodOptions}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|ExtendableBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
argument_list|,
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.MethodOptions)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptionsOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_MethodOptions_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_MethodOptions_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.MethodOptions.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getUninterpretedOptionFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|deprecated_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|idempotencyLevel_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_MethodOptions_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|deprecated_
operator|=
name|deprecated_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|idempotencyLevel_
operator|=
name|idempotencyLevel_
expr_stmt|;
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|uninterpretedOption_
operator|=
name|uninterpretedOption_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|uninterpretedOption_
operator|=
name|uninterpretedOptionBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|setExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
argument_list|,
name|Type
argument_list|>
name|extension
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setExtension
argument_list|(
name|extension
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|setExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
argument_list|,
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|Type
argument_list|>
argument_list|>
name|extension
parameter_list|,
name|int
name|index
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setExtension
argument_list|(
name|extension
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|addExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
argument_list|,
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|Type
argument_list|>
argument_list|>
name|extension
parameter_list|,
name|Type
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addExtension
argument_list|(
name|extension
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
parameter_list|<
name|Type
parameter_list|>
name|Builder
name|clearExtension
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|GeneratedExtension
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
argument_list|,
name|?
argument_list|>
name|extension
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearExtension
argument_list|(
name|extension
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasDeprecated
argument_list|()
condition|)
block|{
name|setDeprecated
argument_list|(
name|other
operator|.
name|getDeprecated
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasIdempotencyLevel
argument_list|()
condition|)
block|{
name|setIdempotencyLevel
argument_list|(
name|other
operator|.
name|getIdempotencyLevel
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|uninterpretedOption_
operator|=
name|other
operator|.
name|uninterpretedOption_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|uninterpretedOption_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|uninterpretedOptionBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|uninterpretedOptionBuilder_
operator|=
literal|null
expr_stmt|;
name|uninterpretedOption_
operator|=
name|other
operator|.
name|uninterpretedOption_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|uninterpretedOptionBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getUninterpretedOptionFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|uninterpretedOption_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeExtensionFields
argument_list|(
name|other
argument_list|)
expr_stmt|;
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getUninterpretedOptionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getUninterpretedOption
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
operator|!
name|extensionsAreInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|boolean
name|deprecated_
decl_stmt|;
comment|/**        *<pre>        * Is this method deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for the method, or it will be completely ignored; in the very least,        * this is a formalization for deprecating methods.        *</pre>        *        *<code>optional bool deprecated = 33 [default = false];</code>        */
specifier|public
name|boolean
name|hasDeprecated
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<pre>        * Is this method deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for the method, or it will be completely ignored; in the very least,        * this is a formalization for deprecating methods.        *</pre>        *        *<code>optional bool deprecated = 33 [default = false];</code>        */
specifier|public
name|boolean
name|getDeprecated
parameter_list|()
block|{
return|return
name|deprecated_
return|;
block|}
comment|/**        *<pre>        * Is this method deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for the method, or it will be completely ignored; in the very least,        * this is a formalization for deprecating methods.        *</pre>        *        *<code>optional bool deprecated = 33 [default = false];</code>        */
specifier|public
name|Builder
name|setDeprecated
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|deprecated_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * Is this method deprecated?        * Depending on the target platform, this can emit Deprecated annotations        * for the method, or it will be completely ignored; in the very least,        * this is a formalization for deprecating methods.        *</pre>        *        *<code>optional bool deprecated = 33 [default = false];</code>        */
specifier|public
name|Builder
name|clearDeprecated
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|deprecated_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|int
name|idempotencyLevel_
init|=
literal|0
decl_stmt|;
comment|/**        *<code>optional .google.protobuf.MethodOptions.IdempotencyLevel idempotency_level = 34 [default = IDEMPOTENCY_UNKNOWN];</code>        */
specifier|public
name|boolean
name|hasIdempotencyLevel
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional .google.protobuf.MethodOptions.IdempotencyLevel idempotency_level = 34 [default = IDEMPOTENCY_UNKNOWN];</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|IdempotencyLevel
name|getIdempotencyLevel
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|IdempotencyLevel
name|result
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|IdempotencyLevel
operator|.
name|valueOf
argument_list|(
name|idempotencyLevel_
argument_list|)
decl_stmt|;
return|return
name|result
operator|==
literal|null
condition|?
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|IdempotencyLevel
operator|.
name|IDEMPOTENCY_UNKNOWN
else|:
name|result
return|;
block|}
comment|/**        *<code>optional .google.protobuf.MethodOptions.IdempotencyLevel idempotency_level = 34 [default = IDEMPOTENCY_UNKNOWN];</code>        */
specifier|public
name|Builder
name|setIdempotencyLevel
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
operator|.
name|IdempotencyLevel
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|idempotencyLevel_
operator|=
name|value
operator|.
name|getNumber
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .google.protobuf.MethodOptions.IdempotencyLevel idempotency_level = 34 [default = IDEMPOTENCY_UNKNOWN];</code>        */
specifier|public
name|Builder
name|clearIdempotencyLevel
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|idempotencyLevel_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|uninterpretedOption_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureUninterpretedOptionIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|uninterpretedOption_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
argument_list|(
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|uninterpretedOptionBuilder_
decl_stmt|;
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|getUninterpretedOptionList
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|int
name|getUninterpretedOptionCount
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|setUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|setUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|value
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|addAllUninterpretedOption
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|uninterpretedOption_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|clearUninterpretedOption
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOption_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|Builder
name|removeUninterpretedOption
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureUninterpretedOptionIsMutable
argument_list|()
expr_stmt|;
name|uninterpretedOption_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|uninterpretedOptionBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|getUninterpretedOptionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
name|getUninterpretedOptionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|uninterpretedOption_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|uninterpretedOptionBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|uninterpretedOption_
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|addUninterpretedOptionBuilder
parameter_list|()
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
name|addUninterpretedOptionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<pre>        * The parser stores options it doesn't recognize here. See above.        *</pre>        *        *<code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|>
name|getUninterpretedOptionBuilderList
parameter_list|()
block|{
return|return
name|getUninterpretedOptionFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
name|getUninterpretedOptionFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|uninterpretedOptionBuilder_
operator|==
literal|null
condition|)
block|{
name|uninterpretedOptionBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
argument_list|>
argument_list|(
name|uninterpretedOption_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|uninterpretedOption_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|uninterpretedOptionBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.MethodOptions)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.MethodOptions)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|MethodOptions
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|MethodOptions
argument_list|>
argument_list|()
block|{
specifier|public
name|MethodOptions
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|MethodOptions
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|MethodOptions
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|MethodOptions
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|MethodOptions
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|UninterpretedOptionOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.UninterpretedOption)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
argument_list|>
name|getNameList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|getName
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>      */
name|int
name|getNameCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePartOrBuilder
argument_list|>
name|getNameOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePartOrBuilder
name|getNameOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<pre>      * The value of the uninterpreted option, in whatever type the tokenizer      * identified it as during parsing. Exactly one of these should be set.      *</pre>      *      *<code>optional string identifier_value = 3;</code>      */
name|boolean
name|hasIdentifierValue
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The value of the uninterpreted option, in whatever type the tokenizer      * identified it as during parsing. Exactly one of these should be set.      *</pre>      *      *<code>optional string identifier_value = 3;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getIdentifierValue
parameter_list|()
function_decl|;
comment|/**      *<pre>      * The value of the uninterpreted option, in whatever type the tokenizer      * identified it as during parsing. Exactly one of these should be set.      *</pre>      *      *<code>optional string identifier_value = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getIdentifierValueBytes
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint64 positive_int_value = 4;</code>      */
name|boolean
name|hasPositiveIntValue
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint64 positive_int_value = 4;</code>      */
name|long
name|getPositiveIntValue
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 negative_int_value = 5;</code>      */
name|boolean
name|hasNegativeIntValue
parameter_list|()
function_decl|;
comment|/**      *<code>optional int64 negative_int_value = 5;</code>      */
name|long
name|getNegativeIntValue
parameter_list|()
function_decl|;
comment|/**      *<code>optional double double_value = 6;</code>      */
name|boolean
name|hasDoubleValue
parameter_list|()
function_decl|;
comment|/**      *<code>optional double double_value = 6;</code>      */
name|double
name|getDoubleValue
parameter_list|()
function_decl|;
comment|/**      *<code>optional bytes string_value = 7;</code>      */
name|boolean
name|hasStringValue
parameter_list|()
function_decl|;
comment|/**      *<code>optional bytes string_value = 7;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getStringValue
parameter_list|()
function_decl|;
comment|/**      *<code>optional string aggregate_value = 8;</code>      */
name|boolean
name|hasAggregateValue
parameter_list|()
function_decl|;
comment|/**      *<code>optional string aggregate_value = 8;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getAggregateValue
parameter_list|()
function_decl|;
comment|/**      *<code>optional string aggregate_value = 8;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getAggregateValueBytes
parameter_list|()
function_decl|;
block|}
comment|/**    *<pre>    * A message representing a option the parser does not recognize. This only    * appears in options protos created by the compiler::Parser class.    * DescriptorPool resolves these when building Descriptor objects. Therefore,    * options protos in descriptor objects (e.g. returned by Descriptor::options(),    * or produced by Descriptor::CopyTo()) will never have UninterpretedOptions    * in them.    *</pre>    *    * Protobuf type {@code google.protobuf.UninterpretedOption}    */
specifier|public
specifier|static
specifier|final
class|class
name|UninterpretedOption
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.UninterpretedOption)
name|UninterpretedOptionOrBuilder
block|{
comment|// Use UninterpretedOption.newBuilder() to construct.
specifier|private
name|UninterpretedOption
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|UninterpretedOption
parameter_list|()
block|{
name|name_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|identifierValue_
operator|=
literal|""
expr_stmt|;
name|positiveIntValue_
operator|=
literal|0L
expr_stmt|;
name|negativeIntValue_
operator|=
literal|0L
expr_stmt|;
name|doubleValue_
operator|=
literal|0D
expr_stmt|;
name|stringValue_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
expr_stmt|;
name|aggregateValue_
operator|=
literal|""
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|UninterpretedOption
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|18
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|name_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|name_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|identifierValue_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|32
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|positiveIntValue_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|40
case|:
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|negativeIntValue_
operator|=
name|input
operator|.
name|readInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|49
case|:
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|doubleValue_
operator|=
name|input
operator|.
name|readDouble
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|58
case|:
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|stringValue_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|66
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|aggregateValue_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|name_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|name_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_UninterpretedOption_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_UninterpretedOption_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
interface|interface
name|NamePartOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.UninterpretedOption.NamePart)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**        *<code>required string name_part = 1;</code>        */
name|boolean
name|hasNamePart
parameter_list|()
function_decl|;
comment|/**        *<code>required string name_part = 1;</code>        */
name|java
operator|.
name|lang
operator|.
name|String
name|getNamePart
parameter_list|()
function_decl|;
comment|/**        *<code>required string name_part = 1;</code>        */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNamePartBytes
parameter_list|()
function_decl|;
comment|/**        *<code>required bool is_extension = 2;</code>        */
name|boolean
name|hasIsExtension
parameter_list|()
function_decl|;
comment|/**        *<code>required bool is_extension = 2;</code>        */
name|boolean
name|getIsExtension
parameter_list|()
function_decl|;
block|}
comment|/**      *<pre>      * The name of the uninterpreted option.  Each string represents a segment in      * a dot-separated name.  is_extension is true iff a segment represents an      * extension (denoted with parentheses in options specs in .proto files).      * E.g.,{ ["foo", false], ["bar.baz", true], ["qux", false] } represents      * "foo.(bar.baz).qux".      *</pre>      *      * Protobuf type {@code google.protobuf.UninterpretedOption.NamePart}      */
specifier|public
specifier|static
specifier|final
class|class
name|NamePart
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.UninterpretedOption.NamePart)
name|NamePartOrBuilder
block|{
comment|// Use NamePart.newBuilder() to construct.
specifier|private
name|NamePart
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|NamePart
parameter_list|()
block|{
name|namePart_
operator|=
literal|""
expr_stmt|;
name|isExtension_
operator|=
literal|false
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|NamePart
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|namePart_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|isExtension_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_UninterpretedOption_NamePart_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|NAME_PART_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|namePart_
decl_stmt|;
comment|/**        *<code>required string name_part = 1;</code>        */
specifier|public
name|boolean
name|hasNamePart
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required string name_part = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getNamePart
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|namePart_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|namePart_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**        *<code>required string name_part = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNamePartBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|namePart_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|namePart_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|IS_EXTENSION_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|boolean
name|isExtension_
decl_stmt|;
comment|/**        *<code>required bool is_extension = 2;</code>        */
specifier|public
name|boolean
name|hasIsExtension
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>required bool is_extension = 2;</code>        */
specifier|public
name|boolean
name|getIsExtension
parameter_list|()
block|{
return|return
name|isExtension_
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
if|if
condition|(
operator|!
name|hasNamePart
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasIsExtension
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|1
argument_list|,
name|namePart_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|2
argument_list|,
name|isExtension_
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|1
argument_list|,
name|namePart_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|2
argument_list|,
name|isExtension_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasNamePart
argument_list|()
operator|==
name|other
operator|.
name|hasNamePart
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasNamePart
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getNamePart
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getNamePart
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasIsExtension
argument_list|()
operator|==
name|other
operator|.
name|hasIsExtension
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasIsExtension
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getIsExtension
argument_list|()
operator|==
name|other
operator|.
name|getIsExtension
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasNamePart
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|NAME_PART_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getNamePart
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasIsExtension
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|IS_EXTENSION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashBoolean
argument_list|(
name|getIsExtension
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**        *<pre>        * The name of the uninterpreted option.  Each string represents a segment in        * a dot-separated name.  is_extension is true iff a segment represents an        * extension (denoted with parentheses in options specs in .proto files).        * E.g.,{ ["foo", false], ["bar.baz", true], ["qux", false] } represents        * "foo.(bar.baz).qux".        *</pre>        *        * Protobuf type {@code google.protobuf.UninterpretedOption.NamePart}        */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.UninterpretedOption.NamePart)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePartOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_UninterpretedOption_NamePart_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.UninterpretedOption.NamePart.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{           }
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|namePart_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|isExtension_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|namePart_
operator|=
name|namePart_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|isExtension_
operator|=
name|isExtension_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasNamePart
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|namePart_
operator|=
name|other
operator|.
name|namePart_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasIsExtension
argument_list|()
condition|)
block|{
name|setIsExtension
argument_list|(
name|other
operator|.
name|getIsExtension
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasNamePart
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasIsExtension
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|namePart_
init|=
literal|""
decl_stmt|;
comment|/**          *<code>required string name_part = 1;</code>          */
specifier|public
name|boolean
name|hasNamePart
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**          *<code>required string name_part = 1;</code>          */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getNamePart
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|namePart_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|namePart_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<code>required string name_part = 1;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getNamePartBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|namePart_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|namePart_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<code>required string name_part = 1;</code>          */
specifier|public
name|Builder
name|setNamePart
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|namePart_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required string name_part = 1;</code>          */
specifier|public
name|Builder
name|clearNamePart
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|namePart_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getNamePart
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required string name_part = 1;</code>          */
specifier|public
name|Builder
name|setNamePartBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|namePart_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|boolean
name|isExtension_
decl_stmt|;
comment|/**          *<code>required bool is_extension = 2;</code>          */
specifier|public
name|boolean
name|hasIsExtension
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**          *<code>required bool is_extension = 2;</code>          */
specifier|public
name|boolean
name|getIsExtension
parameter_list|()
block|{
return|return
name|isExtension_
return|;
block|}
comment|/**          *<code>required bool is_extension = 2;</code>          */
specifier|public
name|Builder
name|setIsExtension
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|isExtension_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>required bool is_extension = 2;</code>          */
specifier|public
name|Builder
name|clearIsExtension
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|isExtension_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.UninterpretedOption.NamePart)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.UninterpretedOption.NamePart)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|NamePart
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|NamePart
argument_list|>
argument_list|()
block|{
specifier|public
name|NamePart
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|NamePart
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|NamePart
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|NamePart
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|NAME_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
argument_list|>
name|name_
decl_stmt|;
comment|/**      *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
argument_list|>
name|getNameList
parameter_list|()
block|{
return|return
name|name_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePartOrBuilder
argument_list|>
name|getNameOrBuilderList
parameter_list|()
block|{
return|return
name|name_
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>      */
specifier|public
name|int
name|getNameCount
parameter_list|()
block|{
return|return
name|name_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|getName
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|name_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePartOrBuilder
name|getNameOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|name_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|IDENTIFIER_VALUE_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|identifierValue_
decl_stmt|;
comment|/**      *<pre>      * The value of the uninterpreted option, in whatever type the tokenizer      * identified it as during parsing. Exactly one of these should be set.      *</pre>      *      *<code>optional string identifier_value = 3;</code>      */
specifier|public
name|boolean
name|hasIdentifierValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<pre>      * The value of the uninterpreted option, in whatever type the tokenizer      * identified it as during parsing. Exactly one of these should be set.      *</pre>      *      *<code>optional string identifier_value = 3;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getIdentifierValue
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|identifierValue_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|identifierValue_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<pre>      * The value of the uninterpreted option, in whatever type the tokenizer      * identified it as during parsing. Exactly one of these should be set.      *</pre>      *      *<code>optional string identifier_value = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getIdentifierValueBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|identifierValue_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|identifierValue_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|POSITIVE_INT_VALUE_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|long
name|positiveIntValue_
decl_stmt|;
comment|/**      *<code>optional uint64 positive_int_value = 4;</code>      */
specifier|public
name|boolean
name|hasPositiveIntValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>optional uint64 positive_int_value = 4;</code>      */
specifier|public
name|long
name|getPositiveIntValue
parameter_list|()
block|{
return|return
name|positiveIntValue_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|NEGATIVE_INT_VALUE_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|long
name|negativeIntValue_
decl_stmt|;
comment|/**      *<code>optional int64 negative_int_value = 5;</code>      */
specifier|public
name|boolean
name|hasNegativeIntValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<code>optional int64 negative_int_value = 5;</code>      */
specifier|public
name|long
name|getNegativeIntValue
parameter_list|()
block|{
return|return
name|negativeIntValue_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|DOUBLE_VALUE_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|double
name|doubleValue_
decl_stmt|;
comment|/**      *<code>optional double double_value = 6;</code>      */
specifier|public
name|boolean
name|hasDoubleValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**      *<code>optional double double_value = 6;</code>      */
specifier|public
name|double
name|getDoubleValue
parameter_list|()
block|{
return|return
name|doubleValue_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|STRING_VALUE_FIELD_NUMBER
init|=
literal|7
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|stringValue_
decl_stmt|;
comment|/**      *<code>optional bytes string_value = 7;</code>      */
specifier|public
name|boolean
name|hasStringValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**      *<code>optional bytes string_value = 7;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getStringValue
parameter_list|()
block|{
return|return
name|stringValue_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|AGGREGATE_VALUE_FIELD_NUMBER
init|=
literal|8
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|aggregateValue_
decl_stmt|;
comment|/**      *<code>optional string aggregate_value = 8;</code>      */
specifier|public
name|boolean
name|hasAggregateValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**      *<code>optional string aggregate_value = 8;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getAggregateValue
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|aggregateValue_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|aggregateValue_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string aggregate_value = 8;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getAggregateValueBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|aggregateValue_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|aggregateValue_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getNameCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getName
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|name_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|name_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|3
argument_list|,
name|identifierValue_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|4
argument_list|,
name|positiveIntValue_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt64
argument_list|(
literal|5
argument_list|,
name|negativeIntValue_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|output
operator|.
name|writeDouble
argument_list|(
literal|6
argument_list|,
name|doubleValue_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|7
argument_list|,
name|stringValue_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|8
argument_list|,
name|aggregateValue_
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|name_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|name_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|3
argument_list|,
name|identifierValue_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|4
argument_list|,
name|positiveIntValue_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt64Size
argument_list|(
literal|5
argument_list|,
name|negativeIntValue_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeDoubleSize
argument_list|(
literal|6
argument_list|,
name|doubleValue_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|7
argument_list|,
name|stringValue_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|8
argument_list|,
name|aggregateValue_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
name|getNameList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getNameList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasIdentifierValue
argument_list|()
operator|==
name|other
operator|.
name|hasIdentifierValue
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasIdentifierValue
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getIdentifierValue
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getIdentifierValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasPositiveIntValue
argument_list|()
operator|==
name|other
operator|.
name|hasPositiveIntValue
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasPositiveIntValue
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getPositiveIntValue
argument_list|()
operator|==
name|other
operator|.
name|getPositiveIntValue
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasNegativeIntValue
argument_list|()
operator|==
name|other
operator|.
name|hasNegativeIntValue
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasNegativeIntValue
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getNegativeIntValue
argument_list|()
operator|==
name|other
operator|.
name|getNegativeIntValue
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasDoubleValue
argument_list|()
operator|==
name|other
operator|.
name|hasDoubleValue
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasDoubleValue
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|java
operator|.
name|lang
operator|.
name|Double
operator|.
name|doubleToLongBits
argument_list|(
name|getDoubleValue
argument_list|()
argument_list|)
operator|==
name|java
operator|.
name|lang
operator|.
name|Double
operator|.
name|doubleToLongBits
argument_list|(
name|other
operator|.
name|getDoubleValue
argument_list|()
argument_list|)
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasStringValue
argument_list|()
operator|==
name|other
operator|.
name|hasStringValue
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasStringValue
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getStringValue
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getStringValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasAggregateValue
argument_list|()
operator|==
name|other
operator|.
name|hasAggregateValue
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasAggregateValue
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getAggregateValue
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getAggregateValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|getNameCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|NAME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getNameList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasIdentifierValue
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|IDENTIFIER_VALUE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getIdentifierValue
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasPositiveIntValue
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|POSITIVE_INT_VALUE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashLong
argument_list|(
name|getPositiveIntValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasNegativeIntValue
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|NEGATIVE_INT_VALUE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashLong
argument_list|(
name|getNegativeIntValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasDoubleValue
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|DOUBLE_VALUE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|hashLong
argument_list|(
name|java
operator|.
name|lang
operator|.
name|Double
operator|.
name|doubleToLongBits
argument_list|(
name|getDoubleValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasStringValue
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|STRING_VALUE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getStringValue
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasAggregateValue
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|AGGREGATE_VALUE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getAggregateValue
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      *<pre>      * A message representing a option the parser does not recognize. This only      * appears in options protos created by the compiler::Parser class.      * DescriptorPool resolves these when building Descriptor objects. Therefore,      * options protos in descriptor objects (e.g. returned by Descriptor::options(),      * or produced by Descriptor::CopyTo()) will never have UninterpretedOptions      * in them.      *</pre>      *      * Protobuf type {@code google.protobuf.UninterpretedOption}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.UninterpretedOption)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOptionOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_UninterpretedOption_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_UninterpretedOption_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.UninterpretedOption.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getNameFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|nameBuilder_
operator|==
literal|null
condition|)
block|{
name|name_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|nameBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|identifierValue_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|positiveIntValue_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|negativeIntValue_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|doubleValue_
operator|=
literal|0D
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|stringValue_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|aggregateValue_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_UninterpretedOption_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|nameBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|name_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|name_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|name_
operator|=
name|name_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|name_
operator|=
name|nameBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|identifierValue_
operator|=
name|identifierValue_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|positiveIntValue_
operator|=
name|positiveIntValue_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|negativeIntValue_
operator|=
name|negativeIntValue_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|result
operator|.
name|doubleValue_
operator|=
name|doubleValue_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|result
operator|.
name|stringValue_
operator|=
name|stringValue_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
name|result
operator|.
name|aggregateValue_
operator|=
name|aggregateValue_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|nameBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|name_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|name_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|name_
operator|=
name|other
operator|.
name|name_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureNameIsMutable
argument_list|()
expr_stmt|;
name|name_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|name_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|name_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|nameBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|nameBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|nameBuilder_
operator|=
literal|null
expr_stmt|;
name|name_
operator|=
name|other
operator|.
name|name_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|nameBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getNameFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|nameBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|name_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|other
operator|.
name|hasIdentifierValue
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|identifierValue_
operator|=
name|other
operator|.
name|identifierValue_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasPositiveIntValue
argument_list|()
condition|)
block|{
name|setPositiveIntValue
argument_list|(
name|other
operator|.
name|getPositiveIntValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasNegativeIntValue
argument_list|()
condition|)
block|{
name|setNegativeIntValue
argument_list|(
name|other
operator|.
name|getNegativeIntValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasDoubleValue
argument_list|()
condition|)
block|{
name|setDoubleValue
argument_list|(
name|other
operator|.
name|getDoubleValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasStringValue
argument_list|()
condition|)
block|{
name|setStringValue
argument_list|(
name|other
operator|.
name|getStringValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasAggregateValue
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|aggregateValue_
operator|=
name|other
operator|.
name|aggregateValue_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getNameCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getName
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
argument_list|>
name|name_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureNameIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|name_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
argument_list|>
argument_list|(
name|name_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePartOrBuilder
argument_list|>
name|nameBuilder_
decl_stmt|;
comment|/**        *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
argument_list|>
name|getNameList
parameter_list|()
block|{
if|if
condition|(
name|nameBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|name_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|nameBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>        */
specifier|public
name|int
name|getNameCount
parameter_list|()
block|{
if|if
condition|(
name|nameBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|name_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|nameBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|getName
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|nameBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|name_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|nameBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>        */
specifier|public
name|Builder
name|setName
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|value
parameter_list|)
block|{
if|if
condition|(
name|nameBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureNameIsMutable
argument_list|()
expr_stmt|;
name|name_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|nameBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>        */
specifier|public
name|Builder
name|setName
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|nameBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureNameIsMutable
argument_list|()
expr_stmt|;
name|name_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|nameBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>        */
specifier|public
name|Builder
name|addName
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|value
parameter_list|)
block|{
if|if
condition|(
name|nameBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureNameIsMutable
argument_list|()
expr_stmt|;
name|name_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|nameBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>        */
specifier|public
name|Builder
name|addName
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
name|value
parameter_list|)
block|{
if|if
condition|(
name|nameBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureNameIsMutable
argument_list|()
expr_stmt|;
name|name_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|nameBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>        */
specifier|public
name|Builder
name|addName
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|nameBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureNameIsMutable
argument_list|()
expr_stmt|;
name|name_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|nameBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>        */
specifier|public
name|Builder
name|addName
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|nameBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureNameIsMutable
argument_list|()
expr_stmt|;
name|name_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|nameBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>        */
specifier|public
name|Builder
name|addAllName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|nameBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureNameIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|name_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|nameBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>        */
specifier|public
name|Builder
name|clearName
parameter_list|()
block|{
if|if
condition|(
name|nameBuilder_
operator|==
literal|null
condition|)
block|{
name|name_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|nameBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>        */
specifier|public
name|Builder
name|removeName
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|nameBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureNameIsMutable
argument_list|()
expr_stmt|;
name|name_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|nameBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|.
name|Builder
name|getNameBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getNameFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePartOrBuilder
name|getNameOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|nameBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|name_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|nameBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePartOrBuilder
argument_list|>
name|getNameOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|nameBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|nameBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|name_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|.
name|Builder
name|addNameBuilder
parameter_list|()
block|{
return|return
name|getNameFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|.
name|Builder
name|addNameBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getNameFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .google.protobuf.UninterpretedOption.NamePart name = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|.
name|Builder
argument_list|>
name|getNameBuilderList
parameter_list|()
block|{
return|return
name|getNameFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePartOrBuilder
argument_list|>
name|getNameFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|nameBuilder_
operator|==
literal|null
condition|)
block|{
name|nameBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePart
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
operator|.
name|NamePartOrBuilder
argument_list|>
argument_list|(
name|name_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|name_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|nameBuilder_
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|identifierValue_
init|=
literal|""
decl_stmt|;
comment|/**        *<pre>        * The value of the uninterpreted option, in whatever type the tokenizer        * identified it as during parsing. Exactly one of these should be set.        *</pre>        *        *<code>optional string identifier_value = 3;</code>        */
specifier|public
name|boolean
name|hasIdentifierValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<pre>        * The value of the uninterpreted option, in whatever type the tokenizer        * identified it as during parsing. Exactly one of these should be set.        *</pre>        *        *<code>optional string identifier_value = 3;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getIdentifierValue
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|identifierValue_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|identifierValue_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * The value of the uninterpreted option, in whatever type the tokenizer        * identified it as during parsing. Exactly one of these should be set.        *</pre>        *        *<code>optional string identifier_value = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getIdentifierValueBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|identifierValue_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|identifierValue_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<pre>        * The value of the uninterpreted option, in whatever type the tokenizer        * identified it as during parsing. Exactly one of these should be set.        *</pre>        *        *<code>optional string identifier_value = 3;</code>        */
specifier|public
name|Builder
name|setIdentifierValue
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|identifierValue_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The value of the uninterpreted option, in whatever type the tokenizer        * identified it as during parsing. Exactly one of these should be set.        *</pre>        *        *<code>optional string identifier_value = 3;</code>        */
specifier|public
name|Builder
name|clearIdentifierValue
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|identifierValue_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getIdentifierValue
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * The value of the uninterpreted option, in whatever type the tokenizer        * identified it as during parsing. Exactly one of these should be set.        *</pre>        *        *<code>optional string identifier_value = 3;</code>        */
specifier|public
name|Builder
name|setIdentifierValueBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|identifierValue_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|long
name|positiveIntValue_
decl_stmt|;
comment|/**        *<code>optional uint64 positive_int_value = 4;</code>        */
specifier|public
name|boolean
name|hasPositiveIntValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>optional uint64 positive_int_value = 4;</code>        */
specifier|public
name|long
name|getPositiveIntValue
parameter_list|()
block|{
return|return
name|positiveIntValue_
return|;
block|}
comment|/**        *<code>optional uint64 positive_int_value = 4;</code>        */
specifier|public
name|Builder
name|setPositiveIntValue
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|positiveIntValue_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint64 positive_int_value = 4;</code>        */
specifier|public
name|Builder
name|clearPositiveIntValue
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|positiveIntValue_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|long
name|negativeIntValue_
decl_stmt|;
comment|/**        *<code>optional int64 negative_int_value = 5;</code>        */
specifier|public
name|boolean
name|hasNegativeIntValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**        *<code>optional int64 negative_int_value = 5;</code>        */
specifier|public
name|long
name|getNegativeIntValue
parameter_list|()
block|{
return|return
name|negativeIntValue_
return|;
block|}
comment|/**        *<code>optional int64 negative_int_value = 5;</code>        */
specifier|public
name|Builder
name|setNegativeIntValue
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|negativeIntValue_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional int64 negative_int_value = 5;</code>        */
specifier|public
name|Builder
name|clearNegativeIntValue
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|negativeIntValue_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|double
name|doubleValue_
decl_stmt|;
comment|/**        *<code>optional double double_value = 6;</code>        */
specifier|public
name|boolean
name|hasDoubleValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**        *<code>optional double double_value = 6;</code>        */
specifier|public
name|double
name|getDoubleValue
parameter_list|()
block|{
return|return
name|doubleValue_
return|;
block|}
comment|/**        *<code>optional double double_value = 6;</code>        */
specifier|public
name|Builder
name|setDoubleValue
parameter_list|(
name|double
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|doubleValue_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional double double_value = 6;</code>        */
specifier|public
name|Builder
name|clearDoubleValue
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|doubleValue_
operator|=
literal|0D
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|stringValue_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
decl_stmt|;
comment|/**        *<code>optional bytes string_value = 7;</code>        */
specifier|public
name|boolean
name|hasStringValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**        *<code>optional bytes string_value = 7;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getStringValue
parameter_list|()
block|{
return|return
name|stringValue_
return|;
block|}
comment|/**        *<code>optional bytes string_value = 7;</code>        */
specifier|public
name|Builder
name|setStringValue
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|stringValue_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bytes string_value = 7;</code>        */
specifier|public
name|Builder
name|clearStringValue
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|stringValue_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getStringValue
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|aggregateValue_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string aggregate_value = 8;</code>        */
specifier|public
name|boolean
name|hasAggregateValue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
return|;
block|}
comment|/**        *<code>optional string aggregate_value = 8;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getAggregateValue
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|aggregateValue_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|aggregateValue_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string aggregate_value = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getAggregateValueBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|aggregateValue_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|aggregateValue_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string aggregate_value = 8;</code>        */
specifier|public
name|Builder
name|setAggregateValue
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|aggregateValue_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string aggregate_value = 8;</code>        */
specifier|public
name|Builder
name|clearAggregateValue
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|aggregateValue_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getAggregateValue
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string aggregate_value = 8;</code>        */
specifier|public
name|Builder
name|setAggregateValueBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|aggregateValue_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.UninterpretedOption)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.UninterpretedOption)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|UninterpretedOption
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|UninterpretedOption
argument_list|>
argument_list|()
block|{
specifier|public
name|UninterpretedOption
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|UninterpretedOption
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|UninterpretedOption
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|UninterpretedOption
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|UninterpretedOption
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|SourceCodeInfoOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.SourceCodeInfo)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<pre>      * A Location identifies a piece of source code in a .proto file which      * corresponds to a particular definition.  This information is intended      * to be useful to IDEs, code indexers, documentation generators, and similar      * tools.      * For example, say we have a file like:      *   message Foo {      *     optional string foo = 1;      *   }      * Let's look at just the field definition:      *   optional string foo = 1;      *   ^       ^^     ^^  ^  ^^^      *   a       bc     de  f  ghi      * We have the following locations:      *   span   path               represents      *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.      *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).      *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).      *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).      *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).      * Notes:      * - A location may refer to a repeated field itself (i.e. not to any      *   particular index within it).  This is used whenever a set of elements are      *   logically enclosed in a single code segment.  For example, an entire      *   extend block (possibly containing multiple extension definitions) will      *   have an outer location whose path refers to the "extensions" repeated      *   field without an index.      * - Multiple locations may have the same path.  This happens when a single      *   logical declaration is spread out across multiple places.  The most      *   obvious example is the "extend" block again -- there may be multiple      *   extend blocks in the same scope, each of which will have the same path.      * - A location's span is not always a subset of its parent's span.  For      *   example, the "extendee" of an extension declaration appears at the      *   beginning of the "extend" block and is shared by all extensions within      *   the block.      * - Just because a location's span is a subset of some other location's span      *   does not mean that it is a descendent.  For example, a "group" defines      *   both a type and a field in a single declaration.  Thus, the locations      *   corresponding to the type and field and their components will overlap.      * - Code which tries to interpret locations should probably be designed to      *   ignore those that it doesn't understand, as more types of locations could      *   be recorded in the future.      *</pre>      *      *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
argument_list|>
name|getLocationList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * A Location identifies a piece of source code in a .proto file which      * corresponds to a particular definition.  This information is intended      * to be useful to IDEs, code indexers, documentation generators, and similar      * tools.      * For example, say we have a file like:      *   message Foo {      *     optional string foo = 1;      *   }      * Let's look at just the field definition:      *   optional string foo = 1;      *   ^       ^^     ^^  ^  ^^^      *   a       bc     de  f  ghi      * We have the following locations:      *   span   path               represents      *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.      *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).      *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).      *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).      *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).      * Notes:      * - A location may refer to a repeated field itself (i.e. not to any      *   particular index within it).  This is used whenever a set of elements are      *   logically enclosed in a single code segment.  For example, an entire      *   extend block (possibly containing multiple extension definitions) will      *   have an outer location whose path refers to the "extensions" repeated      *   field without an index.      * - Multiple locations may have the same path.  This happens when a single      *   logical declaration is spread out across multiple places.  The most      *   obvious example is the "extend" block again -- there may be multiple      *   extend blocks in the same scope, each of which will have the same path.      * - A location's span is not always a subset of its parent's span.  For      *   example, the "extendee" of an extension declaration appears at the      *   beginning of the "extend" block and is shared by all extensions within      *   the block.      * - Just because a location's span is a subset of some other location's span      *   does not mean that it is a descendent.  For example, a "group" defines      *   both a type and a field in a single declaration.  Thus, the locations      *   corresponding to the type and field and their components will overlap.      * - Code which tries to interpret locations should probably be designed to      *   ignore those that it doesn't understand, as more types of locations could      *   be recorded in the future.      *</pre>      *      *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|getLocation
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<pre>      * A Location identifies a piece of source code in a .proto file which      * corresponds to a particular definition.  This information is intended      * to be useful to IDEs, code indexers, documentation generators, and similar      * tools.      * For example, say we have a file like:      *   message Foo {      *     optional string foo = 1;      *   }      * Let's look at just the field definition:      *   optional string foo = 1;      *   ^       ^^     ^^  ^  ^^^      *   a       bc     de  f  ghi      * We have the following locations:      *   span   path               represents      *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.      *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).      *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).      *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).      *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).      * Notes:      * - A location may refer to a repeated field itself (i.e. not to any      *   particular index within it).  This is used whenever a set of elements are      *   logically enclosed in a single code segment.  For example, an entire      *   extend block (possibly containing multiple extension definitions) will      *   have an outer location whose path refers to the "extensions" repeated      *   field without an index.      * - Multiple locations may have the same path.  This happens when a single      *   logical declaration is spread out across multiple places.  The most      *   obvious example is the "extend" block again -- there may be multiple      *   extend blocks in the same scope, each of which will have the same path.      * - A location's span is not always a subset of its parent's span.  For      *   example, the "extendee" of an extension declaration appears at the      *   beginning of the "extend" block and is shared by all extensions within      *   the block.      * - Just because a location's span is a subset of some other location's span      *   does not mean that it is a descendent.  For example, a "group" defines      *   both a type and a field in a single declaration.  Thus, the locations      *   corresponding to the type and field and their components will overlap.      * - Code which tries to interpret locations should probably be designed to      *   ignore those that it doesn't understand, as more types of locations could      *   be recorded in the future.      *</pre>      *      *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>      */
name|int
name|getLocationCount
parameter_list|()
function_decl|;
comment|/**      *<pre>      * A Location identifies a piece of source code in a .proto file which      * corresponds to a particular definition.  This information is intended      * to be useful to IDEs, code indexers, documentation generators, and similar      * tools.      * For example, say we have a file like:      *   message Foo {      *     optional string foo = 1;      *   }      * Let's look at just the field definition:      *   optional string foo = 1;      *   ^       ^^     ^^  ^  ^^^      *   a       bc     de  f  ghi      * We have the following locations:      *   span   path               represents      *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.      *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).      *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).      *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).      *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).      * Notes:      * - A location may refer to a repeated field itself (i.e. not to any      *   particular index within it).  This is used whenever a set of elements are      *   logically enclosed in a single code segment.  For example, an entire      *   extend block (possibly containing multiple extension definitions) will      *   have an outer location whose path refers to the "extensions" repeated      *   field without an index.      * - Multiple locations may have the same path.  This happens when a single      *   logical declaration is spread out across multiple places.  The most      *   obvious example is the "extend" block again -- there may be multiple      *   extend blocks in the same scope, each of which will have the same path.      * - A location's span is not always a subset of its parent's span.  For      *   example, the "extendee" of an extension declaration appears at the      *   beginning of the "extend" block and is shared by all extensions within      *   the block.      * - Just because a location's span is a subset of some other location's span      *   does not mean that it is a descendent.  For example, a "group" defines      *   both a type and a field in a single declaration.  Thus, the locations      *   corresponding to the type and field and their components will overlap.      * - Code which tries to interpret locations should probably be designed to      *   ignore those that it doesn't understand, as more types of locations could      *   be recorded in the future.      *</pre>      *      *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|LocationOrBuilder
argument_list|>
name|getLocationOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * A Location identifies a piece of source code in a .proto file which      * corresponds to a particular definition.  This information is intended      * to be useful to IDEs, code indexers, documentation generators, and similar      * tools.      * For example, say we have a file like:      *   message Foo {      *     optional string foo = 1;      *   }      * Let's look at just the field definition:      *   optional string foo = 1;      *   ^       ^^     ^^  ^  ^^^      *   a       bc     de  f  ghi      * We have the following locations:      *   span   path               represents      *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.      *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).      *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).      *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).      *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).      * Notes:      * - A location may refer to a repeated field itself (i.e. not to any      *   particular index within it).  This is used whenever a set of elements are      *   logically enclosed in a single code segment.  For example, an entire      *   extend block (possibly containing multiple extension definitions) will      *   have an outer location whose path refers to the "extensions" repeated      *   field without an index.      * - Multiple locations may have the same path.  This happens when a single      *   logical declaration is spread out across multiple places.  The most      *   obvious example is the "extend" block again -- there may be multiple      *   extend blocks in the same scope, each of which will have the same path.      * - A location's span is not always a subset of its parent's span.  For      *   example, the "extendee" of an extension declaration appears at the      *   beginning of the "extend" block and is shared by all extensions within      *   the block.      * - Just because a location's span is a subset of some other location's span      *   does not mean that it is a descendent.  For example, a "group" defines      *   both a type and a field in a single declaration.  Thus, the locations      *   corresponding to the type and field and their components will overlap.      * - Code which tries to interpret locations should probably be designed to      *   ignore those that it doesn't understand, as more types of locations could      *   be recorded in the future.      *</pre>      *      *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|LocationOrBuilder
name|getLocationOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    *<pre>    * Encapsulates information about the original source file from which a    * FileDescriptorProto was generated.    *</pre>    *    * Protobuf type {@code google.protobuf.SourceCodeInfo}    */
specifier|public
specifier|static
specifier|final
class|class
name|SourceCodeInfo
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.SourceCodeInfo)
name|SourceCodeInfoOrBuilder
block|{
comment|// Use SourceCodeInfo.newBuilder() to construct.
specifier|private
name|SourceCodeInfo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|SourceCodeInfo
parameter_list|()
block|{
name|location_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|SourceCodeInfo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|location_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|location_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|location_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|location_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_SourceCodeInfo_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_SourceCodeInfo_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
interface|interface
name|LocationOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.SourceCodeInfo.Location)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**        *<pre>        * Identifies which part of the FileDescriptorProto was defined at this        * location.        * Each element is a field number or an index.  They form a path from        * the root FileDescriptorProto to the place where the definition.  For        * example, this path:        *   [ 4, 3, 2, 7, 1 ]        * refers to:        *   file.message_type(3)  // 4, 3        *       .field(7)         // 2, 7        *       .name()           // 1        * This is because FileDescriptorProto.message_type has field number 4:        *   repeated DescriptorProto message_type = 4;        * and DescriptorProto.field has field number 2:        *   repeated FieldDescriptorProto field = 2;        * and FieldDescriptorProto.name has field number 1:        *   optional string name = 1;        * Thus, the above path gives the location of a field name.  If we removed        * the last element:        *   [ 4, 3, 2, 7 ]        * this path refers to the whole field declaration (from the beginning        * of the label to the terminating semicolon).        *</pre>        *        *<code>repeated int32 path = 1 [packed = true];</code>        */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|getPathList
parameter_list|()
function_decl|;
comment|/**        *<pre>        * Identifies which part of the FileDescriptorProto was defined at this        * location.        * Each element is a field number or an index.  They form a path from        * the root FileDescriptorProto to the place where the definition.  For        * example, this path:        *   [ 4, 3, 2, 7, 1 ]        * refers to:        *   file.message_type(3)  // 4, 3        *       .field(7)         // 2, 7        *       .name()           // 1        * This is because FileDescriptorProto.message_type has field number 4:        *   repeated DescriptorProto message_type = 4;        * and DescriptorProto.field has field number 2:        *   repeated FieldDescriptorProto field = 2;        * and FieldDescriptorProto.name has field number 1:        *   optional string name = 1;        * Thus, the above path gives the location of a field name.  If we removed        * the last element:        *   [ 4, 3, 2, 7 ]        * this path refers to the whole field declaration (from the beginning        * of the label to the terminating semicolon).        *</pre>        *        *<code>repeated int32 path = 1 [packed = true];</code>        */
name|int
name|getPathCount
parameter_list|()
function_decl|;
comment|/**        *<pre>        * Identifies which part of the FileDescriptorProto was defined at this        * location.        * Each element is a field number or an index.  They form a path from        * the root FileDescriptorProto to the place where the definition.  For        * example, this path:        *   [ 4, 3, 2, 7, 1 ]        * refers to:        *   file.message_type(3)  // 4, 3        *       .field(7)         // 2, 7        *       .name()           // 1        * This is because FileDescriptorProto.message_type has field number 4:        *   repeated DescriptorProto message_type = 4;        * and DescriptorProto.field has field number 2:        *   repeated FieldDescriptorProto field = 2;        * and FieldDescriptorProto.name has field number 1:        *   optional string name = 1;        * Thus, the above path gives the location of a field name.  If we removed        * the last element:        *   [ 4, 3, 2, 7 ]        * this path refers to the whole field declaration (from the beginning        * of the label to the terminating semicolon).        *</pre>        *        *<code>repeated int32 path = 1 [packed = true];</code>        */
name|int
name|getPath
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**        *<pre>        * Always has exactly three or four elements: start line, start column,        * end line (optional, otherwise assumed same as start line), end column.        * These are packed into a single field for efficiency.  Note that line        * and column numbers are zero-based -- typically you will want to add        * 1 to each before displaying to a user.        *</pre>        *        *<code>repeated int32 span = 2 [packed = true];</code>        */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|getSpanList
parameter_list|()
function_decl|;
comment|/**        *<pre>        * Always has exactly three or four elements: start line, start column,        * end line (optional, otherwise assumed same as start line), end column.        * These are packed into a single field for efficiency.  Note that line        * and column numbers are zero-based -- typically you will want to add        * 1 to each before displaying to a user.        *</pre>        *        *<code>repeated int32 span = 2 [packed = true];</code>        */
name|int
name|getSpanCount
parameter_list|()
function_decl|;
comment|/**        *<pre>        * Always has exactly three or four elements: start line, start column,        * end line (optional, otherwise assumed same as start line), end column.        * These are packed into a single field for efficiency.  Note that line        * and column numbers are zero-based -- typically you will want to add        * 1 to each before displaying to a user.        *</pre>        *        *<code>repeated int32 span = 2 [packed = true];</code>        */
name|int
name|getSpan
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**        *<pre>        * If this SourceCodeInfo represents a complete declaration, these are any        * comments appearing before and after the declaration which appear to be        * attached to the declaration.        * A series of line comments appearing on consecutive lines, with no other        * tokens appearing on those lines, will be treated as a single comment.        * leading_detached_comments will keep paragraphs of comments that appear        * before (but not connected to) the current element. Each paragraph,        * separated by empty lines, will be one comment element in the repeated        * field.        * Only the comment content is provided; comment markers (e.g. //) are        * stripped out.  For block comments, leading whitespace and an asterisk        * will be stripped from the beginning of each line other than the first.        * Newlines are included in the output.        * Examples:        *   optional int32 foo = 1;  // Comment attached to foo.        *   // Comment attached to bar.        *   optional int32 bar = 2;        *   optional string baz = 3;        *   // Comment attached to baz.        *   // Another line attached to baz.        *   // Comment attached to qux.        *   //        *   // Another line attached to qux.        *   optional double qux = 4;        *   // Detached comment for corge. This is not leading or trailing comments        *   // to qux or corge because there are blank lines separating it from        *   // both.        *   // Detached comment for corge paragraph 2.        *   optional string corge = 5;        *   /&#42; Block comment attached        *    * to corge.  Leading asterisks        *    * will be removed. *&#47;        *   /&#42; Block comment attached to        *    * grault. *&#47;        *   optional int32 grault = 6;        *   // ignored detached comments.        *</pre>        *        *<code>optional string leading_comments = 3;</code>        */
name|boolean
name|hasLeadingComments
parameter_list|()
function_decl|;
comment|/**        *<pre>        * If this SourceCodeInfo represents a complete declaration, these are any        * comments appearing before and after the declaration which appear to be        * attached to the declaration.        * A series of line comments appearing on consecutive lines, with no other        * tokens appearing on those lines, will be treated as a single comment.        * leading_detached_comments will keep paragraphs of comments that appear        * before (but not connected to) the current element. Each paragraph,        * separated by empty lines, will be one comment element in the repeated        * field.        * Only the comment content is provided; comment markers (e.g. //) are        * stripped out.  For block comments, leading whitespace and an asterisk        * will be stripped from the beginning of each line other than the first.        * Newlines are included in the output.        * Examples:        *   optional int32 foo = 1;  // Comment attached to foo.        *   // Comment attached to bar.        *   optional int32 bar = 2;        *   optional string baz = 3;        *   // Comment attached to baz.        *   // Another line attached to baz.        *   // Comment attached to qux.        *   //        *   // Another line attached to qux.        *   optional double qux = 4;        *   // Detached comment for corge. This is not leading or trailing comments        *   // to qux or corge because there are blank lines separating it from        *   // both.        *   // Detached comment for corge paragraph 2.        *   optional string corge = 5;        *   /&#42; Block comment attached        *    * to corge.  Leading asterisks        *    * will be removed. *&#47;        *   /&#42; Block comment attached to        *    * grault. *&#47;        *   optional int32 grault = 6;        *   // ignored detached comments.        *</pre>        *        *<code>optional string leading_comments = 3;</code>        */
name|java
operator|.
name|lang
operator|.
name|String
name|getLeadingComments
parameter_list|()
function_decl|;
comment|/**        *<pre>        * If this SourceCodeInfo represents a complete declaration, these are any        * comments appearing before and after the declaration which appear to be        * attached to the declaration.        * A series of line comments appearing on consecutive lines, with no other        * tokens appearing on those lines, will be treated as a single comment.        * leading_detached_comments will keep paragraphs of comments that appear        * before (but not connected to) the current element. Each paragraph,        * separated by empty lines, will be one comment element in the repeated        * field.        * Only the comment content is provided; comment markers (e.g. //) are        * stripped out.  For block comments, leading whitespace and an asterisk        * will be stripped from the beginning of each line other than the first.        * Newlines are included in the output.        * Examples:        *   optional int32 foo = 1;  // Comment attached to foo.        *   // Comment attached to bar.        *   optional int32 bar = 2;        *   optional string baz = 3;        *   // Comment attached to baz.        *   // Another line attached to baz.        *   // Comment attached to qux.        *   //        *   // Another line attached to qux.        *   optional double qux = 4;        *   // Detached comment for corge. This is not leading or trailing comments        *   // to qux or corge because there are blank lines separating it from        *   // both.        *   // Detached comment for corge paragraph 2.        *   optional string corge = 5;        *   /&#42; Block comment attached        *    * to corge.  Leading asterisks        *    * will be removed. *&#47;        *   /&#42; Block comment attached to        *    * grault. *&#47;        *   optional int32 grault = 6;        *   // ignored detached comments.        *</pre>        *        *<code>optional string leading_comments = 3;</code>        */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getLeadingCommentsBytes
parameter_list|()
function_decl|;
comment|/**        *<code>optional string trailing_comments = 4;</code>        */
name|boolean
name|hasTrailingComments
parameter_list|()
function_decl|;
comment|/**        *<code>optional string trailing_comments = 4;</code>        */
name|java
operator|.
name|lang
operator|.
name|String
name|getTrailingComments
parameter_list|()
function_decl|;
comment|/**        *<code>optional string trailing_comments = 4;</code>        */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTrailingCommentsBytes
parameter_list|()
function_decl|;
comment|/**        *<code>repeated string leading_detached_comments = 6;</code>        */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|getLeadingDetachedCommentsList
parameter_list|()
function_decl|;
comment|/**        *<code>repeated string leading_detached_comments = 6;</code>        */
name|int
name|getLeadingDetachedCommentsCount
parameter_list|()
function_decl|;
comment|/**        *<code>repeated string leading_detached_comments = 6;</code>        */
name|java
operator|.
name|lang
operator|.
name|String
name|getLeadingDetachedComments
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**        *<code>repeated string leading_detached_comments = 6;</code>        */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getLeadingDetachedCommentsBytes
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**      * Protobuf type {@code google.protobuf.SourceCodeInfo.Location}      */
specifier|public
specifier|static
specifier|final
class|class
name|Location
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.SourceCodeInfo.Location)
name|LocationOrBuilder
block|{
comment|// Use Location.newBuilder() to construct.
specifier|private
name|Location
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Location
parameter_list|()
block|{
name|path_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|span_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|leadingComments_
operator|=
literal|""
expr_stmt|;
name|trailingComments_
operator|=
literal|""
expr_stmt|;
name|leadingDetachedComments_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Location
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|8
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|path_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|path_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readInt32
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|10
case|:
block|{
name|int
name|length
init|=
name|input
operator|.
name|readRawVarint32
argument_list|()
decl_stmt|;
name|int
name|limit
init|=
name|input
operator|.
name|pushLimit
argument_list|(
name|length
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
operator|&&
name|input
operator|.
name|getBytesUntilLimit
argument_list|()
operator|>
literal|0
condition|)
block|{
name|path_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
while|while
condition|(
name|input
operator|.
name|getBytesUntilLimit
argument_list|()
operator|>
literal|0
condition|)
block|{
name|path_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readInt32
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|input
operator|.
name|popLimit
argument_list|(
name|limit
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|span_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|span_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readInt32
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|int
name|length
init|=
name|input
operator|.
name|readRawVarint32
argument_list|()
decl_stmt|;
name|int
name|limit
init|=
name|input
operator|.
name|pushLimit
argument_list|(
name|length
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
operator|&&
name|input
operator|.
name|getBytesUntilLimit
argument_list|()
operator|>
literal|0
condition|)
block|{
name|span_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
while|while
condition|(
name|input
operator|.
name|getBytesUntilLimit
argument_list|()
operator|>
literal|0
condition|)
block|{
name|span_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readInt32
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|input
operator|.
name|popLimit
argument_list|(
name|limit
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|leadingComments_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|34
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|trailingComments_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|50
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|leadingDetachedComments_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|leadingDetachedComments_
operator|.
name|add
argument_list|(
name|bs
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|path_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|path_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|span_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|span_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|leadingDetachedComments_
operator|=
name|leadingDetachedComments_
operator|.
name|getUnmodifiableView
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_SourceCodeInfo_Location_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_SourceCodeInfo_Location_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|PATH_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|path_
decl_stmt|;
comment|/**        *<pre>        * Identifies which part of the FileDescriptorProto was defined at this        * location.        * Each element is a field number or an index.  They form a path from        * the root FileDescriptorProto to the place where the definition.  For        * example, this path:        *   [ 4, 3, 2, 7, 1 ]        * refers to:        *   file.message_type(3)  // 4, 3        *       .field(7)         // 2, 7        *       .name()           // 1        * This is because FileDescriptorProto.message_type has field number 4:        *   repeated DescriptorProto message_type = 4;        * and DescriptorProto.field has field number 2:        *   repeated FieldDescriptorProto field = 2;        * and FieldDescriptorProto.name has field number 1:        *   optional string name = 1;        * Thus, the above path gives the location of a field name.  If we removed        * the last element:        *   [ 4, 3, 2, 7 ]        * this path refers to the whole field declaration (from the beginning        * of the label to the terminating semicolon).        *</pre>        *        *<code>repeated int32 path = 1 [packed = true];</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|getPathList
parameter_list|()
block|{
return|return
name|path_
return|;
block|}
comment|/**        *<pre>        * Identifies which part of the FileDescriptorProto was defined at this        * location.        * Each element is a field number or an index.  They form a path from        * the root FileDescriptorProto to the place where the definition.  For        * example, this path:        *   [ 4, 3, 2, 7, 1 ]        * refers to:        *   file.message_type(3)  // 4, 3        *       .field(7)         // 2, 7        *       .name()           // 1        * This is because FileDescriptorProto.message_type has field number 4:        *   repeated DescriptorProto message_type = 4;        * and DescriptorProto.field has field number 2:        *   repeated FieldDescriptorProto field = 2;        * and FieldDescriptorProto.name has field number 1:        *   optional string name = 1;        * Thus, the above path gives the location of a field name.  If we removed        * the last element:        *   [ 4, 3, 2, 7 ]        * this path refers to the whole field declaration (from the beginning        * of the label to the terminating semicolon).        *</pre>        *        *<code>repeated int32 path = 1 [packed = true];</code>        */
specifier|public
name|int
name|getPathCount
parameter_list|()
block|{
return|return
name|path_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**        *<pre>        * Identifies which part of the FileDescriptorProto was defined at this        * location.        * Each element is a field number or an index.  They form a path from        * the root FileDescriptorProto to the place where the definition.  For        * example, this path:        *   [ 4, 3, 2, 7, 1 ]        * refers to:        *   file.message_type(3)  // 4, 3        *       .field(7)         // 2, 7        *       .name()           // 1        * This is because FileDescriptorProto.message_type has field number 4:        *   repeated DescriptorProto message_type = 4;        * and DescriptorProto.field has field number 2:        *   repeated FieldDescriptorProto field = 2;        * and FieldDescriptorProto.name has field number 1:        *   optional string name = 1;        * Thus, the above path gives the location of a field name.  If we removed        * the last element:        *   [ 4, 3, 2, 7 ]        * this path refers to the whole field declaration (from the beginning        * of the label to the terminating semicolon).        *</pre>        *        *<code>repeated int32 path = 1 [packed = true];</code>        */
specifier|public
name|int
name|getPath
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|path_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|int
name|pathMemoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|SPAN_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|span_
decl_stmt|;
comment|/**        *<pre>        * Always has exactly three or four elements: start line, start column,        * end line (optional, otherwise assumed same as start line), end column.        * These are packed into a single field for efficiency.  Note that line        * and column numbers are zero-based -- typically you will want to add        * 1 to each before displaying to a user.        *</pre>        *        *<code>repeated int32 span = 2 [packed = true];</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|getSpanList
parameter_list|()
block|{
return|return
name|span_
return|;
block|}
comment|/**        *<pre>        * Always has exactly three or four elements: start line, start column,        * end line (optional, otherwise assumed same as start line), end column.        * These are packed into a single field for efficiency.  Note that line        * and column numbers are zero-based -- typically you will want to add        * 1 to each before displaying to a user.        *</pre>        *        *<code>repeated int32 span = 2 [packed = true];</code>        */
specifier|public
name|int
name|getSpanCount
parameter_list|()
block|{
return|return
name|span_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**        *<pre>        * Always has exactly three or four elements: start line, start column,        * end line (optional, otherwise assumed same as start line), end column.        * These are packed into a single field for efficiency.  Note that line        * and column numbers are zero-based -- typically you will want to add        * 1 to each before displaying to a user.        *</pre>        *        *<code>repeated int32 span = 2 [packed = true];</code>        */
specifier|public
name|int
name|getSpan
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|span_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|int
name|spanMemoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|LEADING_COMMENTS_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|leadingComments_
decl_stmt|;
comment|/**        *<pre>        * If this SourceCodeInfo represents a complete declaration, these are any        * comments appearing before and after the declaration which appear to be        * attached to the declaration.        * A series of line comments appearing on consecutive lines, with no other        * tokens appearing on those lines, will be treated as a single comment.        * leading_detached_comments will keep paragraphs of comments that appear        * before (but not connected to) the current element. Each paragraph,        * separated by empty lines, will be one comment element in the repeated        * field.        * Only the comment content is provided; comment markers (e.g. //) are        * stripped out.  For block comments, leading whitespace and an asterisk        * will be stripped from the beginning of each line other than the first.        * Newlines are included in the output.        * Examples:        *   optional int32 foo = 1;  // Comment attached to foo.        *   // Comment attached to bar.        *   optional int32 bar = 2;        *   optional string baz = 3;        *   // Comment attached to baz.        *   // Another line attached to baz.        *   // Comment attached to qux.        *   //        *   // Another line attached to qux.        *   optional double qux = 4;        *   // Detached comment for corge. This is not leading or trailing comments        *   // to qux or corge because there are blank lines separating it from        *   // both.        *   // Detached comment for corge paragraph 2.        *   optional string corge = 5;        *   /&#42; Block comment attached        *    * to corge.  Leading asterisks        *    * will be removed. *&#47;        *   /&#42; Block comment attached to        *    * grault. *&#47;        *   optional int32 grault = 6;        *   // ignored detached comments.        *</pre>        *        *<code>optional string leading_comments = 3;</code>        */
specifier|public
name|boolean
name|hasLeadingComments
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<pre>        * If this SourceCodeInfo represents a complete declaration, these are any        * comments appearing before and after the declaration which appear to be        * attached to the declaration.        * A series of line comments appearing on consecutive lines, with no other        * tokens appearing on those lines, will be treated as a single comment.        * leading_detached_comments will keep paragraphs of comments that appear        * before (but not connected to) the current element. Each paragraph,        * separated by empty lines, will be one comment element in the repeated        * field.        * Only the comment content is provided; comment markers (e.g. //) are        * stripped out.  For block comments, leading whitespace and an asterisk        * will be stripped from the beginning of each line other than the first.        * Newlines are included in the output.        * Examples:        *   optional int32 foo = 1;  // Comment attached to foo.        *   // Comment attached to bar.        *   optional int32 bar = 2;        *   optional string baz = 3;        *   // Comment attached to baz.        *   // Another line attached to baz.        *   // Comment attached to qux.        *   //        *   // Another line attached to qux.        *   optional double qux = 4;        *   // Detached comment for corge. This is not leading or trailing comments        *   // to qux or corge because there are blank lines separating it from        *   // both.        *   // Detached comment for corge paragraph 2.        *   optional string corge = 5;        *   /&#42; Block comment attached        *    * to corge.  Leading asterisks        *    * will be removed. *&#47;        *   /&#42; Block comment attached to        *    * grault. *&#47;        *   optional int32 grault = 6;        *   // ignored detached comments.        *</pre>        *        *<code>optional string leading_comments = 3;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getLeadingComments
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|leadingComments_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|leadingComments_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**        *<pre>        * If this SourceCodeInfo represents a complete declaration, these are any        * comments appearing before and after the declaration which appear to be        * attached to the declaration.        * A series of line comments appearing on consecutive lines, with no other        * tokens appearing on those lines, will be treated as a single comment.        * leading_detached_comments will keep paragraphs of comments that appear        * before (but not connected to) the current element. Each paragraph,        * separated by empty lines, will be one comment element in the repeated        * field.        * Only the comment content is provided; comment markers (e.g. //) are        * stripped out.  For block comments, leading whitespace and an asterisk        * will be stripped from the beginning of each line other than the first.        * Newlines are included in the output.        * Examples:        *   optional int32 foo = 1;  // Comment attached to foo.        *   // Comment attached to bar.        *   optional int32 bar = 2;        *   optional string baz = 3;        *   // Comment attached to baz.        *   // Another line attached to baz.        *   // Comment attached to qux.        *   //        *   // Another line attached to qux.        *   optional double qux = 4;        *   // Detached comment for corge. This is not leading or trailing comments        *   // to qux or corge because there are blank lines separating it from        *   // both.        *   // Detached comment for corge paragraph 2.        *   optional string corge = 5;        *   /&#42; Block comment attached        *    * to corge.  Leading asterisks        *    * will be removed. *&#47;        *   /&#42; Block comment attached to        *    * grault. *&#47;        *   optional int32 grault = 6;        *   // ignored detached comments.        *</pre>        *        *<code>optional string leading_comments = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getLeadingCommentsBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|leadingComments_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|leadingComments_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|TRAILING_COMMENTS_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|trailingComments_
decl_stmt|;
comment|/**        *<code>optional string trailing_comments = 4;</code>        */
specifier|public
name|boolean
name|hasTrailingComments
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional string trailing_comments = 4;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getTrailingComments
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|trailingComments_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|trailingComments_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**        *<code>optional string trailing_comments = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTrailingCommentsBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|trailingComments_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|trailingComments_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|LEADING_DETACHED_COMMENTS_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringList
name|leadingDetachedComments_
decl_stmt|;
comment|/**        *<code>repeated string leading_detached_comments = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolStringList
name|getLeadingDetachedCommentsList
parameter_list|()
block|{
return|return
name|leadingDetachedComments_
return|;
block|}
comment|/**        *<code>repeated string leading_detached_comments = 6;</code>        */
specifier|public
name|int
name|getLeadingDetachedCommentsCount
parameter_list|()
block|{
return|return
name|leadingDetachedComments_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**        *<code>repeated string leading_detached_comments = 6;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getLeadingDetachedComments
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|leadingDetachedComments_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated string leading_detached_comments = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getLeadingDetachedCommentsBytes
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|leadingDetachedComments_
operator|.
name|getByteString
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
name|getPathList
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|output
operator|.
name|writeUInt32NoTag
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|output
operator|.
name|writeUInt32NoTag
argument_list|(
name|pathMemoizedSerializedSize
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|path_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeInt32NoTag
argument_list|(
name|path_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getSpanList
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|output
operator|.
name|writeUInt32NoTag
argument_list|(
literal|18
argument_list|)
expr_stmt|;
name|output
operator|.
name|writeUInt32NoTag
argument_list|(
name|spanMemoizedSerializedSize
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|span_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeInt32NoTag
argument_list|(
name|span_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|3
argument_list|,
name|leadingComments_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|4
argument_list|,
name|trailingComments_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|leadingDetachedComments_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|6
argument_list|,
name|leadingDetachedComments_
operator|.
name|getRaw
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
block|{
name|int
name|dataSize
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|path_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|dataSize
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32SizeNoTag
argument_list|(
name|path_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|dataSize
expr_stmt|;
if|if
condition|(
operator|!
name|getPathList
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|size
operator|+=
literal|1
expr_stmt|;
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32SizeNoTag
argument_list|(
name|dataSize
argument_list|)
expr_stmt|;
block|}
name|pathMemoizedSerializedSize
operator|=
name|dataSize
expr_stmt|;
block|}
block|{
name|int
name|dataSize
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|span_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|dataSize
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32SizeNoTag
argument_list|(
name|span_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|dataSize
expr_stmt|;
if|if
condition|(
operator|!
name|getSpanList
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|size
operator|+=
literal|1
expr_stmt|;
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32SizeNoTag
argument_list|(
name|dataSize
argument_list|)
expr_stmt|;
block|}
name|spanMemoizedSerializedSize
operator|=
name|dataSize
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|3
argument_list|,
name|leadingComments_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|4
argument_list|,
name|trailingComments_
argument_list|)
expr_stmt|;
block|}
block|{
name|int
name|dataSize
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|leadingDetachedComments_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|dataSize
operator|+=
name|computeStringSizeNoTag
argument_list|(
name|leadingDetachedComments_
operator|.
name|getRaw
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|dataSize
expr_stmt|;
name|size
operator|+=
literal|1
operator|*
name|getLeadingDetachedCommentsList
argument_list|()
operator|.
name|size
argument_list|()
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
name|getPathList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getPathList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getSpanList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getSpanList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasLeadingComments
argument_list|()
operator|==
name|other
operator|.
name|hasLeadingComments
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasLeadingComments
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getLeadingComments
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getLeadingComments
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasTrailingComments
argument_list|()
operator|==
name|other
operator|.
name|hasTrailingComments
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasTrailingComments
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getTrailingComments
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getTrailingComments
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getLeadingDetachedCommentsList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getLeadingDetachedCommentsList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|getPathCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|PATH_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getPathList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getSpanCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|SPAN_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getSpanList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasLeadingComments
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|LEADING_COMMENTS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getLeadingComments
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasTrailingComments
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|TRAILING_COMMENTS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getTrailingComments
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getLeadingDetachedCommentsCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|LEADING_DETACHED_COMMENTS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getLeadingDetachedCommentsList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**        * Protobuf type {@code google.protobuf.SourceCodeInfo.Location}        */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.SourceCodeInfo.Location)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|LocationOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_SourceCodeInfo_Location_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_SourceCodeInfo_Location_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.SourceCodeInfo.Location.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{           }
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|path_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|span_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|leadingComments_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|trailingComments_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|leadingDetachedComments_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_SourceCodeInfo_Location_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|path_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|path_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|path_
operator|=
name|path_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|span_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|span_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|span_
operator|=
name|span_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|leadingComments_
operator|=
name|leadingComments_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|trailingComments_
operator|=
name|trailingComments_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|leadingDetachedComments_
operator|=
name|leadingDetachedComments_
operator|.
name|getUnmodifiableView
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|leadingDetachedComments_
operator|=
name|leadingDetachedComments_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
operator|!
name|other
operator|.
name|path_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|path_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|path_
operator|=
name|other
operator|.
name|path_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensurePathIsMutable
argument_list|()
expr_stmt|;
name|path_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|path_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|other
operator|.
name|span_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|span_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|span_
operator|=
name|other
operator|.
name|span_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureSpanIsMutable
argument_list|()
expr_stmt|;
name|span_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|span_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasLeadingComments
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|leadingComments_
operator|=
name|other
operator|.
name|leadingComments_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasTrailingComments
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|trailingComments_
operator|=
name|other
operator|.
name|trailingComments_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|other
operator|.
name|leadingDetachedComments_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|leadingDetachedComments_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|leadingDetachedComments_
operator|=
name|other
operator|.
name|leadingDetachedComments_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureLeadingDetachedCommentsIsMutable
argument_list|()
expr_stmt|;
name|leadingDetachedComments_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|leadingDetachedComments_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|path_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensurePathIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|path_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
argument_list|(
name|path_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
block|}
comment|/**          *<pre>          * Identifies which part of the FileDescriptorProto was defined at this          * location.          * Each element is a field number or an index.  They form a path from          * the root FileDescriptorProto to the place where the definition.  For          * example, this path:          *   [ 4, 3, 2, 7, 1 ]          * refers to:          *   file.message_type(3)  // 4, 3          *       .field(7)         // 2, 7          *       .name()           // 1          * This is because FileDescriptorProto.message_type has field number 4:          *   repeated DescriptorProto message_type = 4;          * and DescriptorProto.field has field number 2:          *   repeated FieldDescriptorProto field = 2;          * and FieldDescriptorProto.name has field number 1:          *   optional string name = 1;          * Thus, the above path gives the location of a field name.  If we removed          * the last element:          *   [ 4, 3, 2, 7 ]          * this path refers to the whole field declaration (from the beginning          * of the label to the terminating semicolon).          *</pre>          *          *<code>repeated int32 path = 1 [packed = true];</code>          */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|getPathList
parameter_list|()
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|path_
argument_list|)
return|;
block|}
comment|/**          *<pre>          * Identifies which part of the FileDescriptorProto was defined at this          * location.          * Each element is a field number or an index.  They form a path from          * the root FileDescriptorProto to the place where the definition.  For          * example, this path:          *   [ 4, 3, 2, 7, 1 ]          * refers to:          *   file.message_type(3)  // 4, 3          *       .field(7)         // 2, 7          *       .name()           // 1          * This is because FileDescriptorProto.message_type has field number 4:          *   repeated DescriptorProto message_type = 4;          * and DescriptorProto.field has field number 2:          *   repeated FieldDescriptorProto field = 2;          * and FieldDescriptorProto.name has field number 1:          *   optional string name = 1;          * Thus, the above path gives the location of a field name.  If we removed          * the last element:          *   [ 4, 3, 2, 7 ]          * this path refers to the whole field declaration (from the beginning          * of the label to the terminating semicolon).          *</pre>          *          *<code>repeated int32 path = 1 [packed = true];</code>          */
specifier|public
name|int
name|getPathCount
parameter_list|()
block|{
return|return
name|path_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**          *<pre>          * Identifies which part of the FileDescriptorProto was defined at this          * location.          * Each element is a field number or an index.  They form a path from          * the root FileDescriptorProto to the place where the definition.  For          * example, this path:          *   [ 4, 3, 2, 7, 1 ]          * refers to:          *   file.message_type(3)  // 4, 3          *       .field(7)         // 2, 7          *       .name()           // 1          * This is because FileDescriptorProto.message_type has field number 4:          *   repeated DescriptorProto message_type = 4;          * and DescriptorProto.field has field number 2:          *   repeated FieldDescriptorProto field = 2;          * and FieldDescriptorProto.name has field number 1:          *   optional string name = 1;          * Thus, the above path gives the location of a field name.  If we removed          * the last element:          *   [ 4, 3, 2, 7 ]          * this path refers to the whole field declaration (from the beginning          * of the label to the terminating semicolon).          *</pre>          *          *<code>repeated int32 path = 1 [packed = true];</code>          */
specifier|public
name|int
name|getPath
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|path_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**          *<pre>          * Identifies which part of the FileDescriptorProto was defined at this          * location.          * Each element is a field number or an index.  They form a path from          * the root FileDescriptorProto to the place where the definition.  For          * example, this path:          *   [ 4, 3, 2, 7, 1 ]          * refers to:          *   file.message_type(3)  // 4, 3          *       .field(7)         // 2, 7          *       .name()           // 1          * This is because FileDescriptorProto.message_type has field number 4:          *   repeated DescriptorProto message_type = 4;          * and DescriptorProto.field has field number 2:          *   repeated FieldDescriptorProto field = 2;          * and FieldDescriptorProto.name has field number 1:          *   optional string name = 1;          * Thus, the above path gives the location of a field name.  If we removed          * the last element:          *   [ 4, 3, 2, 7 ]          * this path refers to the whole field declaration (from the beginning          * of the label to the terminating semicolon).          *</pre>          *          *<code>repeated int32 path = 1 [packed = true];</code>          */
specifier|public
name|Builder
name|setPath
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|value
parameter_list|)
block|{
name|ensurePathIsMutable
argument_list|()
expr_stmt|;
name|path_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<pre>          * Identifies which part of the FileDescriptorProto was defined at this          * location.          * Each element is a field number or an index.  They form a path from          * the root FileDescriptorProto to the place where the definition.  For          * example, this path:          *   [ 4, 3, 2, 7, 1 ]          * refers to:          *   file.message_type(3)  // 4, 3          *       .field(7)         // 2, 7          *       .name()           // 1          * This is because FileDescriptorProto.message_type has field number 4:          *   repeated DescriptorProto message_type = 4;          * and DescriptorProto.field has field number 2:          *   repeated FieldDescriptorProto field = 2;          * and FieldDescriptorProto.name has field number 1:          *   optional string name = 1;          * Thus, the above path gives the location of a field name.  If we removed          * the last element:          *   [ 4, 3, 2, 7 ]          * this path refers to the whole field declaration (from the beginning          * of the label to the terminating semicolon).          *</pre>          *          *<code>repeated int32 path = 1 [packed = true];</code>          */
specifier|public
name|Builder
name|addPath
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|ensurePathIsMutable
argument_list|()
expr_stmt|;
name|path_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<pre>          * Identifies which part of the FileDescriptorProto was defined at this          * location.          * Each element is a field number or an index.  They form a path from          * the root FileDescriptorProto to the place where the definition.  For          * example, this path:          *   [ 4, 3, 2, 7, 1 ]          * refers to:          *   file.message_type(3)  // 4, 3          *       .field(7)         // 2, 7          *       .name()           // 1          * This is because FileDescriptorProto.message_type has field number 4:          *   repeated DescriptorProto message_type = 4;          * and DescriptorProto.field has field number 2:          *   repeated FieldDescriptorProto field = 2;          * and FieldDescriptorProto.name has field number 1:          *   optional string name = 1;          * Thus, the above path gives the location of a field name.  If we removed          * the last element:          *   [ 4, 3, 2, 7 ]          * this path refers to the whole field declaration (from the beginning          * of the label to the terminating semicolon).          *</pre>          *          *<code>repeated int32 path = 1 [packed = true];</code>          */
specifier|public
name|Builder
name|addAllPath
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|values
parameter_list|)
block|{
name|ensurePathIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|path_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<pre>          * Identifies which part of the FileDescriptorProto was defined at this          * location.          * Each element is a field number or an index.  They form a path from          * the root FileDescriptorProto to the place where the definition.  For          * example, this path:          *   [ 4, 3, 2, 7, 1 ]          * refers to:          *   file.message_type(3)  // 4, 3          *       .field(7)         // 2, 7          *       .name()           // 1          * This is because FileDescriptorProto.message_type has field number 4:          *   repeated DescriptorProto message_type = 4;          * and DescriptorProto.field has field number 2:          *   repeated FieldDescriptorProto field = 2;          * and FieldDescriptorProto.name has field number 1:          *   optional string name = 1;          * Thus, the above path gives the location of a field name.  If we removed          * the last element:          *   [ 4, 3, 2, 7 ]          * this path refers to the whole field declaration (from the beginning          * of the label to the terminating semicolon).          *</pre>          *          *<code>repeated int32 path = 1 [packed = true];</code>          */
specifier|public
name|Builder
name|clearPath
parameter_list|()
block|{
name|path_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|span_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureSpanIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|span_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
argument_list|(
name|span_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
block|}
comment|/**          *<pre>          * Always has exactly three or four elements: start line, start column,          * end line (optional, otherwise assumed same as start line), end column.          * These are packed into a single field for efficiency.  Note that line          * and column numbers are zero-based -- typically you will want to add          * 1 to each before displaying to a user.          *</pre>          *          *<code>repeated int32 span = 2 [packed = true];</code>          */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|getSpanList
parameter_list|()
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|span_
argument_list|)
return|;
block|}
comment|/**          *<pre>          * Always has exactly three or four elements: start line, start column,          * end line (optional, otherwise assumed same as start line), end column.          * These are packed into a single field for efficiency.  Note that line          * and column numbers are zero-based -- typically you will want to add          * 1 to each before displaying to a user.          *</pre>          *          *<code>repeated int32 span = 2 [packed = true];</code>          */
specifier|public
name|int
name|getSpanCount
parameter_list|()
block|{
return|return
name|span_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**          *<pre>          * Always has exactly three or four elements: start line, start column,          * end line (optional, otherwise assumed same as start line), end column.          * These are packed into a single field for efficiency.  Note that line          * and column numbers are zero-based -- typically you will want to add          * 1 to each before displaying to a user.          *</pre>          *          *<code>repeated int32 span = 2 [packed = true];</code>          */
specifier|public
name|int
name|getSpan
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|span_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**          *<pre>          * Always has exactly three or four elements: start line, start column,          * end line (optional, otherwise assumed same as start line), end column.          * These are packed into a single field for efficiency.  Note that line          * and column numbers are zero-based -- typically you will want to add          * 1 to each before displaying to a user.          *</pre>          *          *<code>repeated int32 span = 2 [packed = true];</code>          */
specifier|public
name|Builder
name|setSpan
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|value
parameter_list|)
block|{
name|ensureSpanIsMutable
argument_list|()
expr_stmt|;
name|span_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<pre>          * Always has exactly three or four elements: start line, start column,          * end line (optional, otherwise assumed same as start line), end column.          * These are packed into a single field for efficiency.  Note that line          * and column numbers are zero-based -- typically you will want to add          * 1 to each before displaying to a user.          *</pre>          *          *<code>repeated int32 span = 2 [packed = true];</code>          */
specifier|public
name|Builder
name|addSpan
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|ensureSpanIsMutable
argument_list|()
expr_stmt|;
name|span_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<pre>          * Always has exactly three or four elements: start line, start column,          * end line (optional, otherwise assumed same as start line), end column.          * These are packed into a single field for efficiency.  Note that line          * and column numbers are zero-based -- typically you will want to add          * 1 to each before displaying to a user.          *</pre>          *          *<code>repeated int32 span = 2 [packed = true];</code>          */
specifier|public
name|Builder
name|addAllSpan
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|values
parameter_list|)
block|{
name|ensureSpanIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|span_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<pre>          * Always has exactly three or four elements: start line, start column,          * end line (optional, otherwise assumed same as start line), end column.          * These are packed into a single field for efficiency.  Note that line          * and column numbers are zero-based -- typically you will want to add          * 1 to each before displaying to a user.          *</pre>          *          *<code>repeated int32 span = 2 [packed = true];</code>          */
specifier|public
name|Builder
name|clearSpan
parameter_list|()
block|{
name|span_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|leadingComments_
init|=
literal|""
decl_stmt|;
comment|/**          *<pre>          * If this SourceCodeInfo represents a complete declaration, these are any          * comments appearing before and after the declaration which appear to be          * attached to the declaration.          * A series of line comments appearing on consecutive lines, with no other          * tokens appearing on those lines, will be treated as a single comment.          * leading_detached_comments will keep paragraphs of comments that appear          * before (but not connected to) the current element. Each paragraph,          * separated by empty lines, will be one comment element in the repeated          * field.          * Only the comment content is provided; comment markers (e.g. //) are          * stripped out.  For block comments, leading whitespace and an asterisk          * will be stripped from the beginning of each line other than the first.          * Newlines are included in the output.          * Examples:          *   optional int32 foo = 1;  // Comment attached to foo.          *   // Comment attached to bar.          *   optional int32 bar = 2;          *   optional string baz = 3;          *   // Comment attached to baz.          *   // Another line attached to baz.          *   // Comment attached to qux.          *   //          *   // Another line attached to qux.          *   optional double qux = 4;          *   // Detached comment for corge. This is not leading or trailing comments          *   // to qux or corge because there are blank lines separating it from          *   // both.          *   // Detached comment for corge paragraph 2.          *   optional string corge = 5;          *   /&#42; Block comment attached          *    * to corge.  Leading asterisks          *    * will be removed. *&#47;          *   /&#42; Block comment attached to          *    * grault. *&#47;          *   optional int32 grault = 6;          *   // ignored detached comments.          *</pre>          *          *<code>optional string leading_comments = 3;</code>          */
specifier|public
name|boolean
name|hasLeadingComments
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**          *<pre>          * If this SourceCodeInfo represents a complete declaration, these are any          * comments appearing before and after the declaration which appear to be          * attached to the declaration.          * A series of line comments appearing on consecutive lines, with no other          * tokens appearing on those lines, will be treated as a single comment.          * leading_detached_comments will keep paragraphs of comments that appear          * before (but not connected to) the current element. Each paragraph,          * separated by empty lines, will be one comment element in the repeated          * field.          * Only the comment content is provided; comment markers (e.g. //) are          * stripped out.  For block comments, leading whitespace and an asterisk          * will be stripped from the beginning of each line other than the first.          * Newlines are included in the output.          * Examples:          *   optional int32 foo = 1;  // Comment attached to foo.          *   // Comment attached to bar.          *   optional int32 bar = 2;          *   optional string baz = 3;          *   // Comment attached to baz.          *   // Another line attached to baz.          *   // Comment attached to qux.          *   //          *   // Another line attached to qux.          *   optional double qux = 4;          *   // Detached comment for corge. This is not leading or trailing comments          *   // to qux or corge because there are blank lines separating it from          *   // both.          *   // Detached comment for corge paragraph 2.          *   optional string corge = 5;          *   /&#42; Block comment attached          *    * to corge.  Leading asterisks          *    * will be removed. *&#47;          *   /&#42; Block comment attached to          *    * grault. *&#47;          *   optional int32 grault = 6;          *   // ignored detached comments.          *</pre>          *          *<code>optional string leading_comments = 3;</code>          */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getLeadingComments
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|leadingComments_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|leadingComments_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<pre>          * If this SourceCodeInfo represents a complete declaration, these are any          * comments appearing before and after the declaration which appear to be          * attached to the declaration.          * A series of line comments appearing on consecutive lines, with no other          * tokens appearing on those lines, will be treated as a single comment.          * leading_detached_comments will keep paragraphs of comments that appear          * before (but not connected to) the current element. Each paragraph,          * separated by empty lines, will be one comment element in the repeated          * field.          * Only the comment content is provided; comment markers (e.g. //) are          * stripped out.  For block comments, leading whitespace and an asterisk          * will be stripped from the beginning of each line other than the first.          * Newlines are included in the output.          * Examples:          *   optional int32 foo = 1;  // Comment attached to foo.          *   // Comment attached to bar.          *   optional int32 bar = 2;          *   optional string baz = 3;          *   // Comment attached to baz.          *   // Another line attached to baz.          *   // Comment attached to qux.          *   //          *   // Another line attached to qux.          *   optional double qux = 4;          *   // Detached comment for corge. This is not leading or trailing comments          *   // to qux or corge because there are blank lines separating it from          *   // both.          *   // Detached comment for corge paragraph 2.          *   optional string corge = 5;          *   /&#42; Block comment attached          *    * to corge.  Leading asterisks          *    * will be removed. *&#47;          *   /&#42; Block comment attached to          *    * grault. *&#47;          *   optional int32 grault = 6;          *   // ignored detached comments.          *</pre>          *          *<code>optional string leading_comments = 3;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getLeadingCommentsBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|leadingComments_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|leadingComments_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<pre>          * If this SourceCodeInfo represents a complete declaration, these are any          * comments appearing before and after the declaration which appear to be          * attached to the declaration.          * A series of line comments appearing on consecutive lines, with no other          * tokens appearing on those lines, will be treated as a single comment.          * leading_detached_comments will keep paragraphs of comments that appear          * before (but not connected to) the current element. Each paragraph,          * separated by empty lines, will be one comment element in the repeated          * field.          * Only the comment content is provided; comment markers (e.g. //) are          * stripped out.  For block comments, leading whitespace and an asterisk          * will be stripped from the beginning of each line other than the first.          * Newlines are included in the output.          * Examples:          *   optional int32 foo = 1;  // Comment attached to foo.          *   // Comment attached to bar.          *   optional int32 bar = 2;          *   optional string baz = 3;          *   // Comment attached to baz.          *   // Another line attached to baz.          *   // Comment attached to qux.          *   //          *   // Another line attached to qux.          *   optional double qux = 4;          *   // Detached comment for corge. This is not leading or trailing comments          *   // to qux or corge because there are blank lines separating it from          *   // both.          *   // Detached comment for corge paragraph 2.          *   optional string corge = 5;          *   /&#42; Block comment attached          *    * to corge.  Leading asterisks          *    * will be removed. *&#47;          *   /&#42; Block comment attached to          *    * grault. *&#47;          *   optional int32 grault = 6;          *   // ignored detached comments.          *</pre>          *          *<code>optional string leading_comments = 3;</code>          */
specifier|public
name|Builder
name|setLeadingComments
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|leadingComments_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<pre>          * If this SourceCodeInfo represents a complete declaration, these are any          * comments appearing before and after the declaration which appear to be          * attached to the declaration.          * A series of line comments appearing on consecutive lines, with no other          * tokens appearing on those lines, will be treated as a single comment.          * leading_detached_comments will keep paragraphs of comments that appear          * before (but not connected to) the current element. Each paragraph,          * separated by empty lines, will be one comment element in the repeated          * field.          * Only the comment content is provided; comment markers (e.g. //) are          * stripped out.  For block comments, leading whitespace and an asterisk          * will be stripped from the beginning of each line other than the first.          * Newlines are included in the output.          * Examples:          *   optional int32 foo = 1;  // Comment attached to foo.          *   // Comment attached to bar.          *   optional int32 bar = 2;          *   optional string baz = 3;          *   // Comment attached to baz.          *   // Another line attached to baz.          *   // Comment attached to qux.          *   //          *   // Another line attached to qux.          *   optional double qux = 4;          *   // Detached comment for corge. This is not leading or trailing comments          *   // to qux or corge because there are blank lines separating it from          *   // both.          *   // Detached comment for corge paragraph 2.          *   optional string corge = 5;          *   /&#42; Block comment attached          *    * to corge.  Leading asterisks          *    * will be removed. *&#47;          *   /&#42; Block comment attached to          *    * grault. *&#47;          *   optional int32 grault = 6;          *   // ignored detached comments.          *</pre>          *          *<code>optional string leading_comments = 3;</code>          */
specifier|public
name|Builder
name|clearLeadingComments
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|leadingComments_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getLeadingComments
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<pre>          * If this SourceCodeInfo represents a complete declaration, these are any          * comments appearing before and after the declaration which appear to be          * attached to the declaration.          * A series of line comments appearing on consecutive lines, with no other          * tokens appearing on those lines, will be treated as a single comment.          * leading_detached_comments will keep paragraphs of comments that appear          * before (but not connected to) the current element. Each paragraph,          * separated by empty lines, will be one comment element in the repeated          * field.          * Only the comment content is provided; comment markers (e.g. //) are          * stripped out.  For block comments, leading whitespace and an asterisk          * will be stripped from the beginning of each line other than the first.          * Newlines are included in the output.          * Examples:          *   optional int32 foo = 1;  // Comment attached to foo.          *   // Comment attached to bar.          *   optional int32 bar = 2;          *   optional string baz = 3;          *   // Comment attached to baz.          *   // Another line attached to baz.          *   // Comment attached to qux.          *   //          *   // Another line attached to qux.          *   optional double qux = 4;          *   // Detached comment for corge. This is not leading or trailing comments          *   // to qux or corge because there are blank lines separating it from          *   // both.          *   // Detached comment for corge paragraph 2.          *   optional string corge = 5;          *   /&#42; Block comment attached          *    * to corge.  Leading asterisks          *    * will be removed. *&#47;          *   /&#42; Block comment attached to          *    * grault. *&#47;          *   optional int32 grault = 6;          *   // ignored detached comments.          *</pre>          *          *<code>optional string leading_comments = 3;</code>          */
specifier|public
name|Builder
name|setLeadingCommentsBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|leadingComments_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|trailingComments_
init|=
literal|""
decl_stmt|;
comment|/**          *<code>optional string trailing_comments = 4;</code>          */
specifier|public
name|boolean
name|hasTrailingComments
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**          *<code>optional string trailing_comments = 4;</code>          */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getTrailingComments
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|trailingComments_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|trailingComments_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<code>optional string trailing_comments = 4;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getTrailingCommentsBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|trailingComments_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|trailingComments_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<code>optional string trailing_comments = 4;</code>          */
specifier|public
name|Builder
name|setTrailingComments
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|trailingComments_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional string trailing_comments = 4;</code>          */
specifier|public
name|Builder
name|clearTrailingComments
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|trailingComments_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getTrailingComments
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>optional string trailing_comments = 4;</code>          */
specifier|public
name|Builder
name|setTrailingCommentsBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|trailingComments_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringList
name|leadingDetachedComments_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
decl_stmt|;
specifier|private
name|void
name|ensureLeadingDetachedCommentsIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|leadingDetachedComments_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
argument_list|(
name|leadingDetachedComments_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
block|}
comment|/**          *<code>repeated string leading_detached_comments = 6;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolStringList
name|getLeadingDetachedCommentsList
parameter_list|()
block|{
return|return
name|leadingDetachedComments_
operator|.
name|getUnmodifiableView
argument_list|()
return|;
block|}
comment|/**          *<code>repeated string leading_detached_comments = 6;</code>          */
specifier|public
name|int
name|getLeadingDetachedCommentsCount
parameter_list|()
block|{
return|return
name|leadingDetachedComments_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**          *<code>repeated string leading_detached_comments = 6;</code>          */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getLeadingDetachedComments
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|leadingDetachedComments_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**          *<code>repeated string leading_detached_comments = 6;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getLeadingDetachedCommentsBytes
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|leadingDetachedComments_
operator|.
name|getByteString
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**          *<code>repeated string leading_detached_comments = 6;</code>          */
specifier|public
name|Builder
name|setLeadingDetachedComments
parameter_list|(
name|int
name|index
parameter_list|,
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureLeadingDetachedCommentsIsMutable
argument_list|()
expr_stmt|;
name|leadingDetachedComments_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated string leading_detached_comments = 6;</code>          */
specifier|public
name|Builder
name|addLeadingDetachedComments
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureLeadingDetachedCommentsIsMutable
argument_list|()
expr_stmt|;
name|leadingDetachedComments_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated string leading_detached_comments = 6;</code>          */
specifier|public
name|Builder
name|addAllLeadingDetachedComments
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|java
operator|.
name|lang
operator|.
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|ensureLeadingDetachedCommentsIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|leadingDetachedComments_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated string leading_detached_comments = 6;</code>          */
specifier|public
name|Builder
name|clearLeadingDetachedComments
parameter_list|()
block|{
name|leadingDetachedComments_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|LazyStringArrayList
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<code>repeated string leading_detached_comments = 6;</code>          */
specifier|public
name|Builder
name|addLeadingDetachedCommentsBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureLeadingDetachedCommentsIsMutable
argument_list|()
expr_stmt|;
name|leadingDetachedComments_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.SourceCodeInfo.Location)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.SourceCodeInfo.Location)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Location
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Location
argument_list|>
argument_list|()
block|{
specifier|public
name|Location
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Location
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Location
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Location
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|LOCATION_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
argument_list|>
name|location_
decl_stmt|;
comment|/**      *<pre>      * A Location identifies a piece of source code in a .proto file which      * corresponds to a particular definition.  This information is intended      * to be useful to IDEs, code indexers, documentation generators, and similar      * tools.      * For example, say we have a file like:      *   message Foo {      *     optional string foo = 1;      *   }      * Let's look at just the field definition:      *   optional string foo = 1;      *   ^       ^^     ^^  ^  ^^^      *   a       bc     de  f  ghi      * We have the following locations:      *   span   path               represents      *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.      *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).      *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).      *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).      *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).      * Notes:      * - A location may refer to a repeated field itself (i.e. not to any      *   particular index within it).  This is used whenever a set of elements are      *   logically enclosed in a single code segment.  For example, an entire      *   extend block (possibly containing multiple extension definitions) will      *   have an outer location whose path refers to the "extensions" repeated      *   field without an index.      * - Multiple locations may have the same path.  This happens when a single      *   logical declaration is spread out across multiple places.  The most      *   obvious example is the "extend" block again -- there may be multiple      *   extend blocks in the same scope, each of which will have the same path.      * - A location's span is not always a subset of its parent's span.  For      *   example, the "extendee" of an extension declaration appears at the      *   beginning of the "extend" block and is shared by all extensions within      *   the block.      * - Just because a location's span is a subset of some other location's span      *   does not mean that it is a descendent.  For example, a "group" defines      *   both a type and a field in a single declaration.  Thus, the locations      *   corresponding to the type and field and their components will overlap.      * - Code which tries to interpret locations should probably be designed to      *   ignore those that it doesn't understand, as more types of locations could      *   be recorded in the future.      *</pre>      *      *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
argument_list|>
name|getLocationList
parameter_list|()
block|{
return|return
name|location_
return|;
block|}
comment|/**      *<pre>      * A Location identifies a piece of source code in a .proto file which      * corresponds to a particular definition.  This information is intended      * to be useful to IDEs, code indexers, documentation generators, and similar      * tools.      * For example, say we have a file like:      *   message Foo {      *     optional string foo = 1;      *   }      * Let's look at just the field definition:      *   optional string foo = 1;      *   ^       ^^     ^^  ^  ^^^      *   a       bc     de  f  ghi      * We have the following locations:      *   span   path               represents      *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.      *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).      *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).      *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).      *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).      * Notes:      * - A location may refer to a repeated field itself (i.e. not to any      *   particular index within it).  This is used whenever a set of elements are      *   logically enclosed in a single code segment.  For example, an entire      *   extend block (possibly containing multiple extension definitions) will      *   have an outer location whose path refers to the "extensions" repeated      *   field without an index.      * - Multiple locations may have the same path.  This happens when a single      *   logical declaration is spread out across multiple places.  The most      *   obvious example is the "extend" block again -- there may be multiple      *   extend blocks in the same scope, each of which will have the same path.      * - A location's span is not always a subset of its parent's span.  For      *   example, the "extendee" of an extension declaration appears at the      *   beginning of the "extend" block and is shared by all extensions within      *   the block.      * - Just because a location's span is a subset of some other location's span      *   does not mean that it is a descendent.  For example, a "group" defines      *   both a type and a field in a single declaration.  Thus, the locations      *   corresponding to the type and field and their components will overlap.      * - Code which tries to interpret locations should probably be designed to      *   ignore those that it doesn't understand, as more types of locations could      *   be recorded in the future.      *</pre>      *      *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|LocationOrBuilder
argument_list|>
name|getLocationOrBuilderList
parameter_list|()
block|{
return|return
name|location_
return|;
block|}
comment|/**      *<pre>      * A Location identifies a piece of source code in a .proto file which      * corresponds to a particular definition.  This information is intended      * to be useful to IDEs, code indexers, documentation generators, and similar      * tools.      * For example, say we have a file like:      *   message Foo {      *     optional string foo = 1;      *   }      * Let's look at just the field definition:      *   optional string foo = 1;      *   ^       ^^     ^^  ^  ^^^      *   a       bc     de  f  ghi      * We have the following locations:      *   span   path               represents      *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.      *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).      *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).      *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).      *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).      * Notes:      * - A location may refer to a repeated field itself (i.e. not to any      *   particular index within it).  This is used whenever a set of elements are      *   logically enclosed in a single code segment.  For example, an entire      *   extend block (possibly containing multiple extension definitions) will      *   have an outer location whose path refers to the "extensions" repeated      *   field without an index.      * - Multiple locations may have the same path.  This happens when a single      *   logical declaration is spread out across multiple places.  The most      *   obvious example is the "extend" block again -- there may be multiple      *   extend blocks in the same scope, each of which will have the same path.      * - A location's span is not always a subset of its parent's span.  For      *   example, the "extendee" of an extension declaration appears at the      *   beginning of the "extend" block and is shared by all extensions within      *   the block.      * - Just because a location's span is a subset of some other location's span      *   does not mean that it is a descendent.  For example, a "group" defines      *   both a type and a field in a single declaration.  Thus, the locations      *   corresponding to the type and field and their components will overlap.      * - Code which tries to interpret locations should probably be designed to      *   ignore those that it doesn't understand, as more types of locations could      *   be recorded in the future.      *</pre>      *      *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>      */
specifier|public
name|int
name|getLocationCount
parameter_list|()
block|{
return|return
name|location_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<pre>      * A Location identifies a piece of source code in a .proto file which      * corresponds to a particular definition.  This information is intended      * to be useful to IDEs, code indexers, documentation generators, and similar      * tools.      * For example, say we have a file like:      *   message Foo {      *     optional string foo = 1;      *   }      * Let's look at just the field definition:      *   optional string foo = 1;      *   ^       ^^     ^^  ^  ^^^      *   a       bc     de  f  ghi      * We have the following locations:      *   span   path               represents      *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.      *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).      *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).      *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).      *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).      * Notes:      * - A location may refer to a repeated field itself (i.e. not to any      *   particular index within it).  This is used whenever a set of elements are      *   logically enclosed in a single code segment.  For example, an entire      *   extend block (possibly containing multiple extension definitions) will      *   have an outer location whose path refers to the "extensions" repeated      *   field without an index.      * - Multiple locations may have the same path.  This happens when a single      *   logical declaration is spread out across multiple places.  The most      *   obvious example is the "extend" block again -- there may be multiple      *   extend blocks in the same scope, each of which will have the same path.      * - A location's span is not always a subset of its parent's span.  For      *   example, the "extendee" of an extension declaration appears at the      *   beginning of the "extend" block and is shared by all extensions within      *   the block.      * - Just because a location's span is a subset of some other location's span      *   does not mean that it is a descendent.  For example, a "group" defines      *   both a type and a field in a single declaration.  Thus, the locations      *   corresponding to the type and field and their components will overlap.      * - Code which tries to interpret locations should probably be designed to      *   ignore those that it doesn't understand, as more types of locations could      *   be recorded in the future.      *</pre>      *      *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|getLocation
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|location_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<pre>      * A Location identifies a piece of source code in a .proto file which      * corresponds to a particular definition.  This information is intended      * to be useful to IDEs, code indexers, documentation generators, and similar      * tools.      * For example, say we have a file like:      *   message Foo {      *     optional string foo = 1;      *   }      * Let's look at just the field definition:      *   optional string foo = 1;      *   ^       ^^     ^^  ^  ^^^      *   a       bc     de  f  ghi      * We have the following locations:      *   span   path               represents      *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.      *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).      *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).      *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).      *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).      * Notes:      * - A location may refer to a repeated field itself (i.e. not to any      *   particular index within it).  This is used whenever a set of elements are      *   logically enclosed in a single code segment.  For example, an entire      *   extend block (possibly containing multiple extension definitions) will      *   have an outer location whose path refers to the "extensions" repeated      *   field without an index.      * - Multiple locations may have the same path.  This happens when a single      *   logical declaration is spread out across multiple places.  The most      *   obvious example is the "extend" block again -- there may be multiple      *   extend blocks in the same scope, each of which will have the same path.      * - A location's span is not always a subset of its parent's span.  For      *   example, the "extendee" of an extension declaration appears at the      *   beginning of the "extend" block and is shared by all extensions within      *   the block.      * - Just because a location's span is a subset of some other location's span      *   does not mean that it is a descendent.  For example, a "group" defines      *   both a type and a field in a single declaration.  Thus, the locations      *   corresponding to the type and field and their components will overlap.      * - Code which tries to interpret locations should probably be designed to      *   ignore those that it doesn't understand, as more types of locations could      *   be recorded in the future.      *</pre>      *      *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|LocationOrBuilder
name|getLocationOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|location_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|location_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|location_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|location_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|location_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
name|getLocationList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getLocationList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|getLocationCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|LOCATION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getLocationList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      *<pre>      * Encapsulates information about the original source file from which a      * FileDescriptorProto was generated.      *</pre>      *      * Protobuf type {@code google.protobuf.SourceCodeInfo}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.SourceCodeInfo)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfoOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_SourceCodeInfo_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_SourceCodeInfo_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.SourceCodeInfo.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getLocationFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
name|location_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|locationBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_SourceCodeInfo_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|location_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|location_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|location_
operator|=
name|location_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|location_
operator|=
name|locationBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|location_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|location_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|location_
operator|=
name|other
operator|.
name|location_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureLocationIsMutable
argument_list|()
expr_stmt|;
name|location_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|location_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|location_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|locationBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|locationBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|locationBuilder_
operator|=
literal|null
expr_stmt|;
name|location_
operator|=
name|other
operator|.
name|location_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|locationBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getLocationFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|locationBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|location_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
argument_list|>
name|location_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureLocationIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|location_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
argument_list|>
argument_list|(
name|location_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|LocationOrBuilder
argument_list|>
name|locationBuilder_
decl_stmt|;
comment|/**        *<pre>        * A Location identifies a piece of source code in a .proto file which        * corresponds to a particular definition.  This information is intended        * to be useful to IDEs, code indexers, documentation generators, and similar        * tools.        * For example, say we have a file like:        *   message Foo {        *     optional string foo = 1;        *   }        * Let's look at just the field definition:        *   optional string foo = 1;        *   ^       ^^     ^^  ^  ^^^        *   a       bc     de  f  ghi        * We have the following locations:        *   span   path               represents        *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.        *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).        *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).        *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).        *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).        * Notes:        * - A location may refer to a repeated field itself (i.e. not to any        *   particular index within it).  This is used whenever a set of elements are        *   logically enclosed in a single code segment.  For example, an entire        *   extend block (possibly containing multiple extension definitions) will        *   have an outer location whose path refers to the "extensions" repeated        *   field without an index.        * - Multiple locations may have the same path.  This happens when a single        *   logical declaration is spread out across multiple places.  The most        *   obvious example is the "extend" block again -- there may be multiple        *   extend blocks in the same scope, each of which will have the same path.        * - A location's span is not always a subset of its parent's span.  For        *   example, the "extendee" of an extension declaration appears at the        *   beginning of the "extend" block and is shared by all extensions within        *   the block.        * - Just because a location's span is a subset of some other location's span        *   does not mean that it is a descendent.  For example, a "group" defines        *   both a type and a field in a single declaration.  Thus, the locations        *   corresponding to the type and field and their components will overlap.        * - Code which tries to interpret locations should probably be designed to        *   ignore those that it doesn't understand, as more types of locations could        *   be recorded in the future.        *</pre>        *        *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
argument_list|>
name|getLocationList
parameter_list|()
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|location_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|locationBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * A Location identifies a piece of source code in a .proto file which        * corresponds to a particular definition.  This information is intended        * to be useful to IDEs, code indexers, documentation generators, and similar        * tools.        * For example, say we have a file like:        *   message Foo {        *     optional string foo = 1;        *   }        * Let's look at just the field definition:        *   optional string foo = 1;        *   ^       ^^     ^^  ^  ^^^        *   a       bc     de  f  ghi        * We have the following locations:        *   span   path               represents        *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.        *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).        *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).        *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).        *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).        * Notes:        * - A location may refer to a repeated field itself (i.e. not to any        *   particular index within it).  This is used whenever a set of elements are        *   logically enclosed in a single code segment.  For example, an entire        *   extend block (possibly containing multiple extension definitions) will        *   have an outer location whose path refers to the "extensions" repeated        *   field without an index.        * - Multiple locations may have the same path.  This happens when a single        *   logical declaration is spread out across multiple places.  The most        *   obvious example is the "extend" block again -- there may be multiple        *   extend blocks in the same scope, each of which will have the same path.        * - A location's span is not always a subset of its parent's span.  For        *   example, the "extendee" of an extension declaration appears at the        *   beginning of the "extend" block and is shared by all extensions within        *   the block.        * - Just because a location's span is a subset of some other location's span        *   does not mean that it is a descendent.  For example, a "group" defines        *   both a type and a field in a single declaration.  Thus, the locations        *   corresponding to the type and field and their components will overlap.        * - Code which tries to interpret locations should probably be designed to        *   ignore those that it doesn't understand, as more types of locations could        *   be recorded in the future.        *</pre>        *        *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>        */
specifier|public
name|int
name|getLocationCount
parameter_list|()
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|location_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|locationBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * A Location identifies a piece of source code in a .proto file which        * corresponds to a particular definition.  This information is intended        * to be useful to IDEs, code indexers, documentation generators, and similar        * tools.        * For example, say we have a file like:        *   message Foo {        *     optional string foo = 1;        *   }        * Let's look at just the field definition:        *   optional string foo = 1;        *   ^       ^^     ^^  ^  ^^^        *   a       bc     de  f  ghi        * We have the following locations:        *   span   path               represents        *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.        *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).        *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).        *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).        *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).        * Notes:        * - A location may refer to a repeated field itself (i.e. not to any        *   particular index within it).  This is used whenever a set of elements are        *   logically enclosed in a single code segment.  For example, an entire        *   extend block (possibly containing multiple extension definitions) will        *   have an outer location whose path refers to the "extensions" repeated        *   field without an index.        * - Multiple locations may have the same path.  This happens when a single        *   logical declaration is spread out across multiple places.  The most        *   obvious example is the "extend" block again -- there may be multiple        *   extend blocks in the same scope, each of which will have the same path.        * - A location's span is not always a subset of its parent's span.  For        *   example, the "extendee" of an extension declaration appears at the        *   beginning of the "extend" block and is shared by all extensions within        *   the block.        * - Just because a location's span is a subset of some other location's span        *   does not mean that it is a descendent.  For example, a "group" defines        *   both a type and a field in a single declaration.  Thus, the locations        *   corresponding to the type and field and their components will overlap.        * - Code which tries to interpret locations should probably be designed to        *   ignore those that it doesn't understand, as more types of locations could        *   be recorded in the future.        *</pre>        *        *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|getLocation
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|location_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|locationBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * A Location identifies a piece of source code in a .proto file which        * corresponds to a particular definition.  This information is intended        * to be useful to IDEs, code indexers, documentation generators, and similar        * tools.        * For example, say we have a file like:        *   message Foo {        *     optional string foo = 1;        *   }        * Let's look at just the field definition:        *   optional string foo = 1;        *   ^       ^^     ^^  ^  ^^^        *   a       bc     de  f  ghi        * We have the following locations:        *   span   path               represents        *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.        *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).        *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).        *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).        *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).        * Notes:        * - A location may refer to a repeated field itself (i.e. not to any        *   particular index within it).  This is used whenever a set of elements are        *   logically enclosed in a single code segment.  For example, an entire        *   extend block (possibly containing multiple extension definitions) will        *   have an outer location whose path refers to the "extensions" repeated        *   field without an index.        * - Multiple locations may have the same path.  This happens when a single        *   logical declaration is spread out across multiple places.  The most        *   obvious example is the "extend" block again -- there may be multiple        *   extend blocks in the same scope, each of which will have the same path.        * - A location's span is not always a subset of its parent's span.  For        *   example, the "extendee" of an extension declaration appears at the        *   beginning of the "extend" block and is shared by all extensions within        *   the block.        * - Just because a location's span is a subset of some other location's span        *   does not mean that it is a descendent.  For example, a "group" defines        *   both a type and a field in a single declaration.  Thus, the locations        *   corresponding to the type and field and their components will overlap.        * - Code which tries to interpret locations should probably be designed to        *   ignore those that it doesn't understand, as more types of locations could        *   be recorded in the future.        *</pre>        *        *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>        */
specifier|public
name|Builder
name|setLocation
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|value
parameter_list|)
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureLocationIsMutable
argument_list|()
expr_stmt|;
name|location_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|locationBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * A Location identifies a piece of source code in a .proto file which        * corresponds to a particular definition.  This information is intended        * to be useful to IDEs, code indexers, documentation generators, and similar        * tools.        * For example, say we have a file like:        *   message Foo {        *     optional string foo = 1;        *   }        * Let's look at just the field definition:        *   optional string foo = 1;        *   ^       ^^     ^^  ^  ^^^        *   a       bc     de  f  ghi        * We have the following locations:        *   span   path               represents        *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.        *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).        *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).        *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).        *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).        * Notes:        * - A location may refer to a repeated field itself (i.e. not to any        *   particular index within it).  This is used whenever a set of elements are        *   logically enclosed in a single code segment.  For example, an entire        *   extend block (possibly containing multiple extension definitions) will        *   have an outer location whose path refers to the "extensions" repeated        *   field without an index.        * - Multiple locations may have the same path.  This happens when a single        *   logical declaration is spread out across multiple places.  The most        *   obvious example is the "extend" block again -- there may be multiple        *   extend blocks in the same scope, each of which will have the same path.        * - A location's span is not always a subset of its parent's span.  For        *   example, the "extendee" of an extension declaration appears at the        *   beginning of the "extend" block and is shared by all extensions within        *   the block.        * - Just because a location's span is a subset of some other location's span        *   does not mean that it is a descendent.  For example, a "group" defines        *   both a type and a field in a single declaration.  Thus, the locations        *   corresponding to the type and field and their components will overlap.        * - Code which tries to interpret locations should probably be designed to        *   ignore those that it doesn't understand, as more types of locations could        *   be recorded in the future.        *</pre>        *        *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>        */
specifier|public
name|Builder
name|setLocation
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureLocationIsMutable
argument_list|()
expr_stmt|;
name|location_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|locationBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * A Location identifies a piece of source code in a .proto file which        * corresponds to a particular definition.  This information is intended        * to be useful to IDEs, code indexers, documentation generators, and similar        * tools.        * For example, say we have a file like:        *   message Foo {        *     optional string foo = 1;        *   }        * Let's look at just the field definition:        *   optional string foo = 1;        *   ^       ^^     ^^  ^  ^^^        *   a       bc     de  f  ghi        * We have the following locations:        *   span   path               represents        *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.        *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).        *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).        *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).        *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).        * Notes:        * - A location may refer to a repeated field itself (i.e. not to any        *   particular index within it).  This is used whenever a set of elements are        *   logically enclosed in a single code segment.  For example, an entire        *   extend block (possibly containing multiple extension definitions) will        *   have an outer location whose path refers to the "extensions" repeated        *   field without an index.        * - Multiple locations may have the same path.  This happens when a single        *   logical declaration is spread out across multiple places.  The most        *   obvious example is the "extend" block again -- there may be multiple        *   extend blocks in the same scope, each of which will have the same path.        * - A location's span is not always a subset of its parent's span.  For        *   example, the "extendee" of an extension declaration appears at the        *   beginning of the "extend" block and is shared by all extensions within        *   the block.        * - Just because a location's span is a subset of some other location's span        *   does not mean that it is a descendent.  For example, a "group" defines        *   both a type and a field in a single declaration.  Thus, the locations        *   corresponding to the type and field and their components will overlap.        * - Code which tries to interpret locations should probably be designed to        *   ignore those that it doesn't understand, as more types of locations could        *   be recorded in the future.        *</pre>        *        *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>        */
specifier|public
name|Builder
name|addLocation
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|value
parameter_list|)
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureLocationIsMutable
argument_list|()
expr_stmt|;
name|location_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|locationBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * A Location identifies a piece of source code in a .proto file which        * corresponds to a particular definition.  This information is intended        * to be useful to IDEs, code indexers, documentation generators, and similar        * tools.        * For example, say we have a file like:        *   message Foo {        *     optional string foo = 1;        *   }        * Let's look at just the field definition:        *   optional string foo = 1;        *   ^       ^^     ^^  ^  ^^^        *   a       bc     de  f  ghi        * We have the following locations:        *   span   path               represents        *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.        *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).        *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).        *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).        *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).        * Notes:        * - A location may refer to a repeated field itself (i.e. not to any        *   particular index within it).  This is used whenever a set of elements are        *   logically enclosed in a single code segment.  For example, an entire        *   extend block (possibly containing multiple extension definitions) will        *   have an outer location whose path refers to the "extensions" repeated        *   field without an index.        * - Multiple locations may have the same path.  This happens when a single        *   logical declaration is spread out across multiple places.  The most        *   obvious example is the "extend" block again -- there may be multiple        *   extend blocks in the same scope, each of which will have the same path.        * - A location's span is not always a subset of its parent's span.  For        *   example, the "extendee" of an extension declaration appears at the        *   beginning of the "extend" block and is shared by all extensions within        *   the block.        * - Just because a location's span is a subset of some other location's span        *   does not mean that it is a descendent.  For example, a "group" defines        *   both a type and a field in a single declaration.  Thus, the locations        *   corresponding to the type and field and their components will overlap.        * - Code which tries to interpret locations should probably be designed to        *   ignore those that it doesn't understand, as more types of locations could        *   be recorded in the future.        *</pre>        *        *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>        */
specifier|public
name|Builder
name|addLocation
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
name|value
parameter_list|)
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureLocationIsMutable
argument_list|()
expr_stmt|;
name|location_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|locationBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * A Location identifies a piece of source code in a .proto file which        * corresponds to a particular definition.  This information is intended        * to be useful to IDEs, code indexers, documentation generators, and similar        * tools.        * For example, say we have a file like:        *   message Foo {        *     optional string foo = 1;        *   }        * Let's look at just the field definition:        *   optional string foo = 1;        *   ^       ^^     ^^  ^  ^^^        *   a       bc     de  f  ghi        * We have the following locations:        *   span   path               represents        *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.        *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).        *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).        *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).        *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).        * Notes:        * - A location may refer to a repeated field itself (i.e. not to any        *   particular index within it).  This is used whenever a set of elements are        *   logically enclosed in a single code segment.  For example, an entire        *   extend block (possibly containing multiple extension definitions) will        *   have an outer location whose path refers to the "extensions" repeated        *   field without an index.        * - Multiple locations may have the same path.  This happens when a single        *   logical declaration is spread out across multiple places.  The most        *   obvious example is the "extend" block again -- there may be multiple        *   extend blocks in the same scope, each of which will have the same path.        * - A location's span is not always a subset of its parent's span.  For        *   example, the "extendee" of an extension declaration appears at the        *   beginning of the "extend" block and is shared by all extensions within        *   the block.        * - Just because a location's span is a subset of some other location's span        *   does not mean that it is a descendent.  For example, a "group" defines        *   both a type and a field in a single declaration.  Thus, the locations        *   corresponding to the type and field and their components will overlap.        * - Code which tries to interpret locations should probably be designed to        *   ignore those that it doesn't understand, as more types of locations could        *   be recorded in the future.        *</pre>        *        *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>        */
specifier|public
name|Builder
name|addLocation
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureLocationIsMutable
argument_list|()
expr_stmt|;
name|location_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|locationBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * A Location identifies a piece of source code in a .proto file which        * corresponds to a particular definition.  This information is intended        * to be useful to IDEs, code indexers, documentation generators, and similar        * tools.        * For example, say we have a file like:        *   message Foo {        *     optional string foo = 1;        *   }        * Let's look at just the field definition:        *   optional string foo = 1;        *   ^       ^^     ^^  ^  ^^^        *   a       bc     de  f  ghi        * We have the following locations:        *   span   path               represents        *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.        *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).        *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).        *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).        *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).        * Notes:        * - A location may refer to a repeated field itself (i.e. not to any        *   particular index within it).  This is used whenever a set of elements are        *   logically enclosed in a single code segment.  For example, an entire        *   extend block (possibly containing multiple extension definitions) will        *   have an outer location whose path refers to the "extensions" repeated        *   field without an index.        * - Multiple locations may have the same path.  This happens when a single        *   logical declaration is spread out across multiple places.  The most        *   obvious example is the "extend" block again -- there may be multiple        *   extend blocks in the same scope, each of which will have the same path.        * - A location's span is not always a subset of its parent's span.  For        *   example, the "extendee" of an extension declaration appears at the        *   beginning of the "extend" block and is shared by all extensions within        *   the block.        * - Just because a location's span is a subset of some other location's span        *   does not mean that it is a descendent.  For example, a "group" defines        *   both a type and a field in a single declaration.  Thus, the locations        *   corresponding to the type and field and their components will overlap.        * - Code which tries to interpret locations should probably be designed to        *   ignore those that it doesn't understand, as more types of locations could        *   be recorded in the future.        *</pre>        *        *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>        */
specifier|public
name|Builder
name|addLocation
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureLocationIsMutable
argument_list|()
expr_stmt|;
name|location_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|locationBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * A Location identifies a piece of source code in a .proto file which        * corresponds to a particular definition.  This information is intended        * to be useful to IDEs, code indexers, documentation generators, and similar        * tools.        * For example, say we have a file like:        *   message Foo {        *     optional string foo = 1;        *   }        * Let's look at just the field definition:        *   optional string foo = 1;        *   ^       ^^     ^^  ^  ^^^        *   a       bc     de  f  ghi        * We have the following locations:        *   span   path               represents        *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.        *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).        *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).        *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).        *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).        * Notes:        * - A location may refer to a repeated field itself (i.e. not to any        *   particular index within it).  This is used whenever a set of elements are        *   logically enclosed in a single code segment.  For example, an entire        *   extend block (possibly containing multiple extension definitions) will        *   have an outer location whose path refers to the "extensions" repeated        *   field without an index.        * - Multiple locations may have the same path.  This happens when a single        *   logical declaration is spread out across multiple places.  The most        *   obvious example is the "extend" block again -- there may be multiple        *   extend blocks in the same scope, each of which will have the same path.        * - A location's span is not always a subset of its parent's span.  For        *   example, the "extendee" of an extension declaration appears at the        *   beginning of the "extend" block and is shared by all extensions within        *   the block.        * - Just because a location's span is a subset of some other location's span        *   does not mean that it is a descendent.  For example, a "group" defines        *   both a type and a field in a single declaration.  Thus, the locations        *   corresponding to the type and field and their components will overlap.        * - Code which tries to interpret locations should probably be designed to        *   ignore those that it doesn't understand, as more types of locations could        *   be recorded in the future.        *</pre>        *        *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>        */
specifier|public
name|Builder
name|addAllLocation
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureLocationIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|location_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|locationBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * A Location identifies a piece of source code in a .proto file which        * corresponds to a particular definition.  This information is intended        * to be useful to IDEs, code indexers, documentation generators, and similar        * tools.        * For example, say we have a file like:        *   message Foo {        *     optional string foo = 1;        *   }        * Let's look at just the field definition:        *   optional string foo = 1;        *   ^       ^^     ^^  ^  ^^^        *   a       bc     de  f  ghi        * We have the following locations:        *   span   path               represents        *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.        *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).        *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).        *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).        *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).        * Notes:        * - A location may refer to a repeated field itself (i.e. not to any        *   particular index within it).  This is used whenever a set of elements are        *   logically enclosed in a single code segment.  For example, an entire        *   extend block (possibly containing multiple extension definitions) will        *   have an outer location whose path refers to the "extensions" repeated        *   field without an index.        * - Multiple locations may have the same path.  This happens when a single        *   logical declaration is spread out across multiple places.  The most        *   obvious example is the "extend" block again -- there may be multiple        *   extend blocks in the same scope, each of which will have the same path.        * - A location's span is not always a subset of its parent's span.  For        *   example, the "extendee" of an extension declaration appears at the        *   beginning of the "extend" block and is shared by all extensions within        *   the block.        * - Just because a location's span is a subset of some other location's span        *   does not mean that it is a descendent.  For example, a "group" defines        *   both a type and a field in a single declaration.  Thus, the locations        *   corresponding to the type and field and their components will overlap.        * - Code which tries to interpret locations should probably be designed to        *   ignore those that it doesn't understand, as more types of locations could        *   be recorded in the future.        *</pre>        *        *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>        */
specifier|public
name|Builder
name|clearLocation
parameter_list|()
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
name|location_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|locationBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * A Location identifies a piece of source code in a .proto file which        * corresponds to a particular definition.  This information is intended        * to be useful to IDEs, code indexers, documentation generators, and similar        * tools.        * For example, say we have a file like:        *   message Foo {        *     optional string foo = 1;        *   }        * Let's look at just the field definition:        *   optional string foo = 1;        *   ^       ^^     ^^  ^  ^^^        *   a       bc     de  f  ghi        * We have the following locations:        *   span   path               represents        *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.        *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).        *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).        *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).        *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).        * Notes:        * - A location may refer to a repeated field itself (i.e. not to any        *   particular index within it).  This is used whenever a set of elements are        *   logically enclosed in a single code segment.  For example, an entire        *   extend block (possibly containing multiple extension definitions) will        *   have an outer location whose path refers to the "extensions" repeated        *   field without an index.        * - Multiple locations may have the same path.  This happens when a single        *   logical declaration is spread out across multiple places.  The most        *   obvious example is the "extend" block again -- there may be multiple        *   extend blocks in the same scope, each of which will have the same path.        * - A location's span is not always a subset of its parent's span.  For        *   example, the "extendee" of an extension declaration appears at the        *   beginning of the "extend" block and is shared by all extensions within        *   the block.        * - Just because a location's span is a subset of some other location's span        *   does not mean that it is a descendent.  For example, a "group" defines        *   both a type and a field in a single declaration.  Thus, the locations        *   corresponding to the type and field and their components will overlap.        * - Code which tries to interpret locations should probably be designed to        *   ignore those that it doesn't understand, as more types of locations could        *   be recorded in the future.        *</pre>        *        *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>        */
specifier|public
name|Builder
name|removeLocation
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureLocationIsMutable
argument_list|()
expr_stmt|;
name|location_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|locationBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * A Location identifies a piece of source code in a .proto file which        * corresponds to a particular definition.  This information is intended        * to be useful to IDEs, code indexers, documentation generators, and similar        * tools.        * For example, say we have a file like:        *   message Foo {        *     optional string foo = 1;        *   }        * Let's look at just the field definition:        *   optional string foo = 1;        *   ^       ^^     ^^  ^  ^^^        *   a       bc     de  f  ghi        * We have the following locations:        *   span   path               represents        *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.        *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).        *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).        *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).        *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).        * Notes:        * - A location may refer to a repeated field itself (i.e. not to any        *   particular index within it).  This is used whenever a set of elements are        *   logically enclosed in a single code segment.  For example, an entire        *   extend block (possibly containing multiple extension definitions) will        *   have an outer location whose path refers to the "extensions" repeated        *   field without an index.        * - Multiple locations may have the same path.  This happens when a single        *   logical declaration is spread out across multiple places.  The most        *   obvious example is the "extend" block again -- there may be multiple        *   extend blocks in the same scope, each of which will have the same path.        * - A location's span is not always a subset of its parent's span.  For        *   example, the "extendee" of an extension declaration appears at the        *   beginning of the "extend" block and is shared by all extensions within        *   the block.        * - Just because a location's span is a subset of some other location's span        *   does not mean that it is a descendent.  For example, a "group" defines        *   both a type and a field in a single declaration.  Thus, the locations        *   corresponding to the type and field and their components will overlap.        * - Code which tries to interpret locations should probably be designed to        *   ignore those that it doesn't understand, as more types of locations could        *   be recorded in the future.        *</pre>        *        *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|.
name|Builder
name|getLocationBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getLocationFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<pre>        * A Location identifies a piece of source code in a .proto file which        * corresponds to a particular definition.  This information is intended        * to be useful to IDEs, code indexers, documentation generators, and similar        * tools.        * For example, say we have a file like:        *   message Foo {        *     optional string foo = 1;        *   }        * Let's look at just the field definition:        *   optional string foo = 1;        *   ^       ^^     ^^  ^  ^^^        *   a       bc     de  f  ghi        * We have the following locations:        *   span   path               represents        *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.        *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).        *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).        *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).        *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).        * Notes:        * - A location may refer to a repeated field itself (i.e. not to any        *   particular index within it).  This is used whenever a set of elements are        *   logically enclosed in a single code segment.  For example, an entire        *   extend block (possibly containing multiple extension definitions) will        *   have an outer location whose path refers to the "extensions" repeated        *   field without an index.        * - Multiple locations may have the same path.  This happens when a single        *   logical declaration is spread out across multiple places.  The most        *   obvious example is the "extend" block again -- there may be multiple        *   extend blocks in the same scope, each of which will have the same path.        * - A location's span is not always a subset of its parent's span.  For        *   example, the "extendee" of an extension declaration appears at the        *   beginning of the "extend" block and is shared by all extensions within        *   the block.        * - Just because a location's span is a subset of some other location's span        *   does not mean that it is a descendent.  For example, a "group" defines        *   both a type and a field in a single declaration.  Thus, the locations        *   corresponding to the type and field and their components will overlap.        * - Code which tries to interpret locations should probably be designed to        *   ignore those that it doesn't understand, as more types of locations could        *   be recorded in the future.        *</pre>        *        *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|LocationOrBuilder
name|getLocationOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|location_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|locationBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * A Location identifies a piece of source code in a .proto file which        * corresponds to a particular definition.  This information is intended        * to be useful to IDEs, code indexers, documentation generators, and similar        * tools.        * For example, say we have a file like:        *   message Foo {        *     optional string foo = 1;        *   }        * Let's look at just the field definition:        *   optional string foo = 1;        *   ^       ^^     ^^  ^  ^^^        *   a       bc     de  f  ghi        * We have the following locations:        *   span   path               represents        *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.        *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).        *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).        *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).        *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).        * Notes:        * - A location may refer to a repeated field itself (i.e. not to any        *   particular index within it).  This is used whenever a set of elements are        *   logically enclosed in a single code segment.  For example, an entire        *   extend block (possibly containing multiple extension definitions) will        *   have an outer location whose path refers to the "extensions" repeated        *   field without an index.        * - Multiple locations may have the same path.  This happens when a single        *   logical declaration is spread out across multiple places.  The most        *   obvious example is the "extend" block again -- there may be multiple        *   extend blocks in the same scope, each of which will have the same path.        * - A location's span is not always a subset of its parent's span.  For        *   example, the "extendee" of an extension declaration appears at the        *   beginning of the "extend" block and is shared by all extensions within        *   the block.        * - Just because a location's span is a subset of some other location's span        *   does not mean that it is a descendent.  For example, a "group" defines        *   both a type and a field in a single declaration.  Thus, the locations        *   corresponding to the type and field and their components will overlap.        * - Code which tries to interpret locations should probably be designed to        *   ignore those that it doesn't understand, as more types of locations could        *   be recorded in the future.        *</pre>        *        *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|LocationOrBuilder
argument_list|>
name|getLocationOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|locationBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|locationBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|location_
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * A Location identifies a piece of source code in a .proto file which        * corresponds to a particular definition.  This information is intended        * to be useful to IDEs, code indexers, documentation generators, and similar        * tools.        * For example, say we have a file like:        *   message Foo {        *     optional string foo = 1;        *   }        * Let's look at just the field definition:        *   optional string foo = 1;        *   ^       ^^     ^^  ^  ^^^        *   a       bc     de  f  ghi        * We have the following locations:        *   span   path               represents        *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.        *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).        *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).        *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).        *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).        * Notes:        * - A location may refer to a repeated field itself (i.e. not to any        *   particular index within it).  This is used whenever a set of elements are        *   logically enclosed in a single code segment.  For example, an entire        *   extend block (possibly containing multiple extension definitions) will        *   have an outer location whose path refers to the "extensions" repeated        *   field without an index.        * - Multiple locations may have the same path.  This happens when a single        *   logical declaration is spread out across multiple places.  The most        *   obvious example is the "extend" block again -- there may be multiple        *   extend blocks in the same scope, each of which will have the same path.        * - A location's span is not always a subset of its parent's span.  For        *   example, the "extendee" of an extension declaration appears at the        *   beginning of the "extend" block and is shared by all extensions within        *   the block.        * - Just because a location's span is a subset of some other location's span        *   does not mean that it is a descendent.  For example, a "group" defines        *   both a type and a field in a single declaration.  Thus, the locations        *   corresponding to the type and field and their components will overlap.        * - Code which tries to interpret locations should probably be designed to        *   ignore those that it doesn't understand, as more types of locations could        *   be recorded in the future.        *</pre>        *        *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|.
name|Builder
name|addLocationBuilder
parameter_list|()
block|{
return|return
name|getLocationFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<pre>        * A Location identifies a piece of source code in a .proto file which        * corresponds to a particular definition.  This information is intended        * to be useful to IDEs, code indexers, documentation generators, and similar        * tools.        * For example, say we have a file like:        *   message Foo {        *     optional string foo = 1;        *   }        * Let's look at just the field definition:        *   optional string foo = 1;        *   ^       ^^     ^^  ^  ^^^        *   a       bc     de  f  ghi        * We have the following locations:        *   span   path               represents        *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.        *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).        *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).        *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).        *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).        * Notes:        * - A location may refer to a repeated field itself (i.e. not to any        *   particular index within it).  This is used whenever a set of elements are        *   logically enclosed in a single code segment.  For example, an entire        *   extend block (possibly containing multiple extension definitions) will        *   have an outer location whose path refers to the "extensions" repeated        *   field without an index.        * - Multiple locations may have the same path.  This happens when a single        *   logical declaration is spread out across multiple places.  The most        *   obvious example is the "extend" block again -- there may be multiple        *   extend blocks in the same scope, each of which will have the same path.        * - A location's span is not always a subset of its parent's span.  For        *   example, the "extendee" of an extension declaration appears at the        *   beginning of the "extend" block and is shared by all extensions within        *   the block.        * - Just because a location's span is a subset of some other location's span        *   does not mean that it is a descendent.  For example, a "group" defines        *   both a type and a field in a single declaration.  Thus, the locations        *   corresponding to the type and field and their components will overlap.        * - Code which tries to interpret locations should probably be designed to        *   ignore those that it doesn't understand, as more types of locations could        *   be recorded in the future.        *</pre>        *        *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|.
name|Builder
name|addLocationBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getLocationFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<pre>        * A Location identifies a piece of source code in a .proto file which        * corresponds to a particular definition.  This information is intended        * to be useful to IDEs, code indexers, documentation generators, and similar        * tools.        * For example, say we have a file like:        *   message Foo {        *     optional string foo = 1;        *   }        * Let's look at just the field definition:        *   optional string foo = 1;        *   ^       ^^     ^^  ^  ^^^        *   a       bc     de  f  ghi        * We have the following locations:        *   span   path               represents        *   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.        *   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).        *   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).        *   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).        *   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).        * Notes:        * - A location may refer to a repeated field itself (i.e. not to any        *   particular index within it).  This is used whenever a set of elements are        *   logically enclosed in a single code segment.  For example, an entire        *   extend block (possibly containing multiple extension definitions) will        *   have an outer location whose path refers to the "extensions" repeated        *   field without an index.        * - Multiple locations may have the same path.  This happens when a single        *   logical declaration is spread out across multiple places.  The most        *   obvious example is the "extend" block again -- there may be multiple        *   extend blocks in the same scope, each of which will have the same path.        * - A location's span is not always a subset of its parent's span.  For        *   example, the "extendee" of an extension declaration appears at the        *   beginning of the "extend" block and is shared by all extensions within        *   the block.        * - Just because a location's span is a subset of some other location's span        *   does not mean that it is a descendent.  For example, a "group" defines        *   both a type and a field in a single declaration.  Thus, the locations        *   corresponding to the type and field and their components will overlap.        * - Code which tries to interpret locations should probably be designed to        *   ignore those that it doesn't understand, as more types of locations could        *   be recorded in the future.        *</pre>        *        *<code>repeated .google.protobuf.SourceCodeInfo.Location location = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|.
name|Builder
argument_list|>
name|getLocationBuilderList
parameter_list|()
block|{
return|return
name|getLocationFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|LocationOrBuilder
argument_list|>
name|getLocationFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|locationBuilder_
operator|==
literal|null
condition|)
block|{
name|locationBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|Location
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
operator|.
name|LocationOrBuilder
argument_list|>
argument_list|(
name|location_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|location_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|locationBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.SourceCodeInfo)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.SourceCodeInfo)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|SourceCodeInfo
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|SourceCodeInfo
argument_list|>
argument_list|()
block|{
specifier|public
name|SourceCodeInfo
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|SourceCodeInfo
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|SourceCodeInfo
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|SourceCodeInfo
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|SourceCodeInfo
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
interface|interface
name|GeneratedCodeInfoOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.GeneratedCodeInfo)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**      *<pre>      * An Annotation connects some span of text in generated code to an element      * of its generating .proto file.      *</pre>      *      *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
argument_list|>
name|getAnnotationList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * An Annotation connects some span of text in generated code to an element      * of its generating .proto file.      *</pre>      *      *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|getAnnotation
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<pre>      * An Annotation connects some span of text in generated code to an element      * of its generating .proto file.      *</pre>      *      *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>      */
name|int
name|getAnnotationCount
parameter_list|()
function_decl|;
comment|/**      *<pre>      * An Annotation connects some span of text in generated code to an element      * of its generating .proto file.      *</pre>      *      *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|AnnotationOrBuilder
argument_list|>
name|getAnnotationOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<pre>      * An Annotation connects some span of text in generated code to an element      * of its generating .proto file.      *</pre>      *      *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|AnnotationOrBuilder
name|getAnnotationOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    *<pre>    * Describes the relationship between generated code and its original source    * file. A GeneratedCodeInfo message is associated with only one generated    * source file, but may contain references to different source .proto files.    *</pre>    *    * Protobuf type {@code google.protobuf.GeneratedCodeInfo}    */
specifier|public
specifier|static
specifier|final
class|class
name|GeneratedCodeInfo
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.GeneratedCodeInfo)
name|GeneratedCodeInfoOrBuilder
block|{
comment|// Use GeneratedCodeInfo.newBuilder() to construct.
specifier|private
name|GeneratedCodeInfo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|GeneratedCodeInfo
parameter_list|()
block|{
name|annotation_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|GeneratedCodeInfo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|annotation_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|annotation_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|annotation_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|annotation_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_GeneratedCodeInfo_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_GeneratedCodeInfo_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
interface|interface
name|AnnotationOrBuilder
extends|extends
comment|// @@protoc_insertion_point(interface_extends:google.protobuf.GeneratedCodeInfo.Annotation)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|/**        *<pre>        * Identifies the element in the original source .proto file. This field        * is formatted the same as SourceCodeInfo.Location.path.        *</pre>        *        *<code>repeated int32 path = 1 [packed = true];</code>        */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|getPathList
parameter_list|()
function_decl|;
comment|/**        *<pre>        * Identifies the element in the original source .proto file. This field        * is formatted the same as SourceCodeInfo.Location.path.        *</pre>        *        *<code>repeated int32 path = 1 [packed = true];</code>        */
name|int
name|getPathCount
parameter_list|()
function_decl|;
comment|/**        *<pre>        * Identifies the element in the original source .proto file. This field        * is formatted the same as SourceCodeInfo.Location.path.        *</pre>        *        *<code>repeated int32 path = 1 [packed = true];</code>        */
name|int
name|getPath
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**        *<pre>        * Identifies the filesystem path to the original source .proto.        *</pre>        *        *<code>optional string source_file = 2;</code>        */
name|boolean
name|hasSourceFile
parameter_list|()
function_decl|;
comment|/**        *<pre>        * Identifies the filesystem path to the original source .proto.        *</pre>        *        *<code>optional string source_file = 2;</code>        */
name|java
operator|.
name|lang
operator|.
name|String
name|getSourceFile
parameter_list|()
function_decl|;
comment|/**        *<pre>        * Identifies the filesystem path to the original source .proto.        *</pre>        *        *<code>optional string source_file = 2;</code>        */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSourceFileBytes
parameter_list|()
function_decl|;
comment|/**        *<pre>        * Identifies the starting offset in bytes in the generated code        * that relates to the identified object.        *</pre>        *        *<code>optional int32 begin = 3;</code>        */
name|boolean
name|hasBegin
parameter_list|()
function_decl|;
comment|/**        *<pre>        * Identifies the starting offset in bytes in the generated code        * that relates to the identified object.        *</pre>        *        *<code>optional int32 begin = 3;</code>        */
name|int
name|getBegin
parameter_list|()
function_decl|;
comment|/**        *<pre>        * Identifies the ending offset in bytes in the generated code that        * relates to the identified offset. The end offset should be one past        * the last relevant byte (so the length of the text = end - begin).        *</pre>        *        *<code>optional int32 end = 4;</code>        */
name|boolean
name|hasEnd
parameter_list|()
function_decl|;
comment|/**        *<pre>        * Identifies the ending offset in bytes in the generated code that        * relates to the identified offset. The end offset should be one past        * the last relevant byte (so the length of the text = end - begin).        *</pre>        *        *<code>optional int32 end = 4;</code>        */
name|int
name|getEnd
parameter_list|()
function_decl|;
block|}
comment|/**      * Protobuf type {@code google.protobuf.GeneratedCodeInfo.Annotation}      */
specifier|public
specifier|static
specifier|final
class|class
name|Annotation
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
implements|implements
comment|// @@protoc_insertion_point(message_implements:google.protobuf.GeneratedCodeInfo.Annotation)
name|AnnotationOrBuilder
block|{
comment|// Use Annotation.newBuilder() to construct.
specifier|private
name|Annotation
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Annotation
parameter_list|()
block|{
name|path_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|sourceFile_
operator|=
literal|""
expr_stmt|;
name|begin_
operator|=
literal|0
expr_stmt|;
name|end_
operator|=
literal|0
expr_stmt|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|Annotation
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|this
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|8
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|path_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|path_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readInt32
argument_list|()
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|10
case|:
block|{
name|int
name|length
init|=
name|input
operator|.
name|readRawVarint32
argument_list|()
decl_stmt|;
name|int
name|limit
init|=
name|input
operator|.
name|pushLimit
argument_list|(
name|length
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
operator|&&
name|input
operator|.
name|getBytesUntilLimit
argument_list|()
operator|>
literal|0
condition|)
block|{
name|path_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
while|while
condition|(
name|input
operator|.
name|getBytesUntilLimit
argument_list|()
operator|>
literal|0
condition|)
block|{
name|path_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readInt32
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|input
operator|.
name|popLimit
argument_list|(
name|limit
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
name|input
operator|.
name|readBytes
argument_list|()
decl_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|sourceFile_
operator|=
name|bs
expr_stmt|;
break|break;
block|}
case|case
literal|24
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|begin_
operator|=
name|input
operator|.
name|readInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|32
case|:
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|end_
operator|=
name|input
operator|.
name|readInt32
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|path_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|path_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_GeneratedCodeInfo_Annotation_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|PATH_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|path_
decl_stmt|;
comment|/**        *<pre>        * Identifies the element in the original source .proto file. This field        * is formatted the same as SourceCodeInfo.Location.path.        *</pre>        *        *<code>repeated int32 path = 1 [packed = true];</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|getPathList
parameter_list|()
block|{
return|return
name|path_
return|;
block|}
comment|/**        *<pre>        * Identifies the element in the original source .proto file. This field        * is formatted the same as SourceCodeInfo.Location.path.        *</pre>        *        *<code>repeated int32 path = 1 [packed = true];</code>        */
specifier|public
name|int
name|getPathCount
parameter_list|()
block|{
return|return
name|path_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**        *<pre>        * Identifies the element in the original source .proto file. This field        * is formatted the same as SourceCodeInfo.Location.path.        *</pre>        *        *<code>repeated int32 path = 1 [packed = true];</code>        */
specifier|public
name|int
name|getPath
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|path_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|int
name|pathMemoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|SOURCE_FILE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
specifier|volatile
name|java
operator|.
name|lang
operator|.
name|Object
name|sourceFile_
decl_stmt|;
comment|/**        *<pre>        * Identifies the filesystem path to the original source .proto.        *</pre>        *        *<code>optional string source_file = 2;</code>        */
specifier|public
name|boolean
name|hasSourceFile
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<pre>        * Identifies the filesystem path to the original source .proto.        *</pre>        *        *<code>optional string source_file = 2;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getSourceFile
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|sourceFile_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|sourceFile_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**        *<pre>        * Identifies the filesystem path to the original source .proto.        *</pre>        *        *<code>optional string source_file = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSourceFileBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|sourceFile_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|sourceFile_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|BEGIN_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|int
name|begin_
decl_stmt|;
comment|/**        *<pre>        * Identifies the starting offset in bytes in the generated code        * that relates to the identified object.        *</pre>        *        *<code>optional int32 begin = 3;</code>        */
specifier|public
name|boolean
name|hasBegin
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<pre>        * Identifies the starting offset in bytes in the generated code        * that relates to the identified object.        *</pre>        *        *<code>optional int32 begin = 3;</code>        */
specifier|public
name|int
name|getBegin
parameter_list|()
block|{
return|return
name|begin_
return|;
block|}
specifier|public
specifier|static
specifier|final
name|int
name|END_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|int
name|end_
decl_stmt|;
comment|/**        *<pre>        * Identifies the ending offset in bytes in the generated code that        * relates to the identified offset. The end offset should be one past        * the last relevant byte (so the length of the text = end - begin).        *</pre>        *        *<code>optional int32 end = 4;</code>        */
specifier|public
name|boolean
name|hasEnd
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<pre>        * Identifies the ending offset in bytes in the generated code that        * relates to the identified offset. The end offset should be one past        * the last relevant byte (so the length of the text = end - begin).        *</pre>        *        *<code>optional int32 end = 4;</code>        */
specifier|public
name|int
name|getEnd
parameter_list|()
block|{
return|return
name|end_
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
name|getPathList
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|output
operator|.
name|writeUInt32NoTag
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|output
operator|.
name|writeUInt32NoTag
argument_list|(
name|pathMemoizedSerializedSize
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|path_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeInt32NoTag
argument_list|(
name|path_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|writeString
argument_list|(
name|output
argument_list|,
literal|2
argument_list|,
name|sourceFile_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt32
argument_list|(
literal|3
argument_list|,
name|begin_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeInt32
argument_list|(
literal|4
argument_list|,
name|end_
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
block|{
name|int
name|dataSize
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|path_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|dataSize
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32SizeNoTag
argument_list|(
name|path_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|dataSize
expr_stmt|;
if|if
condition|(
operator|!
name|getPathList
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|size
operator|+=
literal|1
expr_stmt|;
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32SizeNoTag
argument_list|(
name|dataSize
argument_list|)
expr_stmt|;
block|}
name|pathMemoizedSerializedSize
operator|=
name|dataSize
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|computeStringSize
argument_list|(
literal|2
argument_list|,
name|sourceFile_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32Size
argument_list|(
literal|3
argument_list|,
name|begin_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeInt32Size
argument_list|(
literal|4
argument_list|,
name|end_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
name|getPathList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getPathList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasSourceFile
argument_list|()
operator|==
name|other
operator|.
name|hasSourceFile
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasSourceFile
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getSourceFile
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getSourceFile
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasBegin
argument_list|()
operator|==
name|other
operator|.
name|hasBegin
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasBegin
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getBegin
argument_list|()
operator|==
name|other
operator|.
name|getBegin
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasEnd
argument_list|()
operator|==
name|other
operator|.
name|hasEnd
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasEnd
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getEnd
argument_list|()
operator|==
name|other
operator|.
name|getEnd
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|getPathCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|PATH_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getPathList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasSourceFile
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|SOURCE_FILE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getSourceFile
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasBegin
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|BEGIN_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getBegin
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasEnd
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|END_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getEnd
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**        * Protobuf type {@code google.protobuf.GeneratedCodeInfo.Annotation}        */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.GeneratedCodeInfo.Annotation)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|AnnotationOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_GeneratedCodeInfo_Annotation_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.Annotation.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{           }
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|path_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|sourceFile_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|begin_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|end_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|path_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|path_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|path_
operator|=
name|path_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|sourceFile_
operator|=
name|sourceFile_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|begin_
operator|=
name|begin_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|end_
operator|=
name|end_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
operator|!
name|other
operator|.
name|path_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|path_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|path_
operator|=
name|other
operator|.
name|path_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensurePathIsMutable
argument_list|()
expr_stmt|;
name|path_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|path_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasSourceFile
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|sourceFile_
operator|=
name|other
operator|.
name|sourceFile_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasBegin
argument_list|()
condition|)
block|{
name|setBegin
argument_list|(
name|other
operator|.
name|getBegin
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasEnd
argument_list|()
condition|)
block|{
name|setEnd
argument_list|(
name|other
operator|.
name|getEnd
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|path_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensurePathIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|path_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
argument_list|(
name|path_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
block|}
comment|/**          *<pre>          * Identifies the element in the original source .proto file. This field          * is formatted the same as SourceCodeInfo.Location.path.          *</pre>          *          *<code>repeated int32 path = 1 [packed = true];</code>          */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|getPathList
parameter_list|()
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|path_
argument_list|)
return|;
block|}
comment|/**          *<pre>          * Identifies the element in the original source .proto file. This field          * is formatted the same as SourceCodeInfo.Location.path.          *</pre>          *          *<code>repeated int32 path = 1 [packed = true];</code>          */
specifier|public
name|int
name|getPathCount
parameter_list|()
block|{
return|return
name|path_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**          *<pre>          * Identifies the element in the original source .proto file. This field          * is formatted the same as SourceCodeInfo.Location.path.          *</pre>          *          *<code>repeated int32 path = 1 [packed = true];</code>          */
specifier|public
name|int
name|getPath
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|path_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**          *<pre>          * Identifies the element in the original source .proto file. This field          * is formatted the same as SourceCodeInfo.Location.path.          *</pre>          *          *<code>repeated int32 path = 1 [packed = true];</code>          */
specifier|public
name|Builder
name|setPath
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|value
parameter_list|)
block|{
name|ensurePathIsMutable
argument_list|()
expr_stmt|;
name|path_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<pre>          * Identifies the element in the original source .proto file. This field          * is formatted the same as SourceCodeInfo.Location.path.          *</pre>          *          *<code>repeated int32 path = 1 [packed = true];</code>          */
specifier|public
name|Builder
name|addPath
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|ensurePathIsMutable
argument_list|()
expr_stmt|;
name|path_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<pre>          * Identifies the element in the original source .proto file. This field          * is formatted the same as SourceCodeInfo.Location.path.          *</pre>          *          *<code>repeated int32 path = 1 [packed = true];</code>          */
specifier|public
name|Builder
name|addAllPath
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|java
operator|.
name|lang
operator|.
name|Integer
argument_list|>
name|values
parameter_list|)
block|{
name|ensurePathIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|path_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<pre>          * Identifies the element in the original source .proto file. This field          * is formatted the same as SourceCodeInfo.Location.path.          *</pre>          *          *<code>repeated int32 path = 1 [packed = true];</code>          */
specifier|public
name|Builder
name|clearPath
parameter_list|()
block|{
name|path_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|sourceFile_
init|=
literal|""
decl_stmt|;
comment|/**          *<pre>          * Identifies the filesystem path to the original source .proto.          *</pre>          *          *<code>optional string source_file = 2;</code>          */
specifier|public
name|boolean
name|hasSourceFile
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**          *<pre>          * Identifies the filesystem path to the original source .proto.          *</pre>          *          *<code>optional string source_file = 2;</code>          */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getSourceFile
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|sourceFile_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|sourceFile_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<pre>          * Identifies the filesystem path to the original source .proto.          *</pre>          *          *<code>optional string source_file = 2;</code>          */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getSourceFileBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|sourceFile_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|sourceFile_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**          *<pre>          * Identifies the filesystem path to the original source .proto.          *</pre>          *          *<code>optional string source_file = 2;</code>          */
specifier|public
name|Builder
name|setSourceFile
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|sourceFile_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<pre>          * Identifies the filesystem path to the original source .proto.          *</pre>          *          *<code>optional string source_file = 2;</code>          */
specifier|public
name|Builder
name|clearSourceFile
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|sourceFile_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getSourceFile
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<pre>          * Identifies the filesystem path to the original source .proto.          *</pre>          *          *<code>optional string source_file = 2;</code>          */
specifier|public
name|Builder
name|setSourceFileBytes
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|sourceFile_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|int
name|begin_
decl_stmt|;
comment|/**          *<pre>          * Identifies the starting offset in bytes in the generated code          * that relates to the identified object.          *</pre>          *          *<code>optional int32 begin = 3;</code>          */
specifier|public
name|boolean
name|hasBegin
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**          *<pre>          * Identifies the starting offset in bytes in the generated code          * that relates to the identified object.          *</pre>          *          *<code>optional int32 begin = 3;</code>          */
specifier|public
name|int
name|getBegin
parameter_list|()
block|{
return|return
name|begin_
return|;
block|}
comment|/**          *<pre>          * Identifies the starting offset in bytes in the generated code          * that relates to the identified object.          *</pre>          *          *<code>optional int32 begin = 3;</code>          */
specifier|public
name|Builder
name|setBegin
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|begin_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<pre>          * Identifies the starting offset in bytes in the generated code          * that relates to the identified object.          *</pre>          *          *<code>optional int32 begin = 3;</code>          */
specifier|public
name|Builder
name|clearBegin
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|begin_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|int
name|end_
decl_stmt|;
comment|/**          *<pre>          * Identifies the ending offset in bytes in the generated code that          * relates to the identified offset. The end offset should be one past          * the last relevant byte (so the length of the text = end - begin).          *</pre>          *          *<code>optional int32 end = 4;</code>          */
specifier|public
name|boolean
name|hasEnd
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**          *<pre>          * Identifies the ending offset in bytes in the generated code that          * relates to the identified offset. The end offset should be one past          * the last relevant byte (so the length of the text = end - begin).          *</pre>          *          *<code>optional int32 end = 4;</code>          */
specifier|public
name|int
name|getEnd
parameter_list|()
block|{
return|return
name|end_
return|;
block|}
comment|/**          *<pre>          * Identifies the ending offset in bytes in the generated code that          * relates to the identified offset. The end offset should be one past          * the last relevant byte (so the length of the text = end - begin).          *</pre>          *          *<code>optional int32 end = 4;</code>          */
specifier|public
name|Builder
name|setEnd
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|end_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**          *<pre>          * Identifies the ending offset in bytes in the generated code that          * relates to the identified offset. The end offset should be one past          * the last relevant byte (so the length of the text = end - begin).          *</pre>          *          *<code>optional int32 end = 4;</code>          */
specifier|public
name|Builder
name|clearEnd
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|end_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.GeneratedCodeInfo.Annotation)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.GeneratedCodeInfo.Annotation)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Annotation
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|Annotation
argument_list|>
argument_list|()
block|{
specifier|public
name|Annotation
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|Annotation
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Annotation
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|Annotation
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|int
name|ANNOTATION_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
argument_list|>
name|annotation_
decl_stmt|;
comment|/**      *<pre>      * An Annotation connects some span of text in generated code to an element      * of its generating .proto file.      *</pre>      *      *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
argument_list|>
name|getAnnotationList
parameter_list|()
block|{
return|return
name|annotation_
return|;
block|}
comment|/**      *<pre>      * An Annotation connects some span of text in generated code to an element      * of its generating .proto file.      *</pre>      *      *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|AnnotationOrBuilder
argument_list|>
name|getAnnotationOrBuilderList
parameter_list|()
block|{
return|return
name|annotation_
return|;
block|}
comment|/**      *<pre>      * An Annotation connects some span of text in generated code to an element      * of its generating .proto file.      *</pre>      *      *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>      */
specifier|public
name|int
name|getAnnotationCount
parameter_list|()
block|{
return|return
name|annotation_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<pre>      * An Annotation connects some span of text in generated code to an element      * of its generating .proto file.      *</pre>      *      *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|getAnnotation
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|annotation_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<pre>      * An Annotation connects some span of text in generated code to an element      * of its generating .proto file.      *</pre>      *      *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|AnnotationOrBuilder
name|getAnnotationOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|annotation_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|==
literal|1
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|isInitialized
operator|==
literal|0
condition|)
return|return
literal|false
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|annotation_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|annotation_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|unknownFields
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|annotation_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|annotation_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|unknownFields
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
name|getAnnotationList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getAnnotationList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|unknownFields
operator|.
name|equals
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptor
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|getAnnotationCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|ANNOTATION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getAnnotationList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|unknownFields
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseDelimitedWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
name|parseFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|parseWithIOException
argument_list|(
name|PARSER
argument_list|,
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
name|prototype
parameter_list|)
block|{
return|return
name|DEFAULT_INSTANCE
operator|.
name|toBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|this
operator|==
name|DEFAULT_INSTANCE
condition|?
operator|new
name|Builder
argument_list|()
else|:
operator|new
name|Builder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      *<pre>      * Describes the relationship between generated code and its original source      * file. A GeneratedCodeInfo message is associated with only one generated      * source file, but may contain references to different source .proto files.      *</pre>      *      * Protobuf type {@code google.protobuf.GeneratedCodeInfo}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
comment|// @@protoc_insertion_point(builder_implements:google.protobuf.GeneratedCodeInfo)
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfoOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_GeneratedCodeInfo_descriptor
return|;
block|}
specifier|protected
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_GeneratedCodeInfo_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.shaded.com.google.protobuf.DescriptorProtos.GeneratedCodeInfo.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getAnnotationFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|annotationBuilder_
operator|==
literal|null
condition|)
block|{
name|annotation_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|annotationBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|internal_static_google_protobuf_GeneratedCodeInfo_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
if|if
condition|(
name|annotationBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|annotation_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|annotation_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|annotation_
operator|=
name|annotation_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|annotation_
operator|=
name|annotationBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|setField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|clearOneof
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|OneofDescriptor
name|oneof
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|clearOneof
argument_list|(
name|oneof
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|setRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|int
name|index
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|setRepeatedField
argument_list|(
name|field
argument_list|,
name|index
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|addRepeatedField
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FieldDescriptor
name|field
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
return|return
operator|(
name|Builder
operator|)
name|super
operator|.
name|addRepeatedField
argument_list|(
name|field
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|annotationBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|annotation_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|annotation_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|annotation_
operator|=
name|other
operator|.
name|annotation_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureAnnotationIsMutable
argument_list|()
expr_stmt|;
name|annotation_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|annotation_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|annotation_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|annotationBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|annotationBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|annotationBuilder_
operator|=
literal|null
expr_stmt|;
name|annotation_
operator|=
name|other
operator|.
name|annotation_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|annotationBuilder_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getAnnotationFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|annotationBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|annotation_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|unknownFields
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
operator|.
name|unwrapIOException
argument_list|()
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
argument_list|>
name|annotation_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureAnnotationIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|annotation_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
argument_list|>
argument_list|(
name|annotation_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|AnnotationOrBuilder
argument_list|>
name|annotationBuilder_
decl_stmt|;
comment|/**        *<pre>        * An Annotation connects some span of text in generated code to an element        * of its generating .proto file.        *</pre>        *        *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
argument_list|>
name|getAnnotationList
parameter_list|()
block|{
if|if
condition|(
name|annotationBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|annotation_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|annotationBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * An Annotation connects some span of text in generated code to an element        * of its generating .proto file.        *</pre>        *        *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>        */
specifier|public
name|int
name|getAnnotationCount
parameter_list|()
block|{
if|if
condition|(
name|annotationBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|annotation_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|annotationBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<pre>        * An Annotation connects some span of text in generated code to an element        * of its generating .proto file.        *</pre>        *        *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|getAnnotation
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|annotationBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|annotation_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|annotationBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * An Annotation connects some span of text in generated code to an element        * of its generating .proto file.        *</pre>        *        *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>        */
specifier|public
name|Builder
name|setAnnotation
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|value
parameter_list|)
block|{
if|if
condition|(
name|annotationBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureAnnotationIsMutable
argument_list|()
expr_stmt|;
name|annotation_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|annotationBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * An Annotation connects some span of text in generated code to an element        * of its generating .proto file.        *</pre>        *        *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>        */
specifier|public
name|Builder
name|setAnnotation
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|annotationBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureAnnotationIsMutable
argument_list|()
expr_stmt|;
name|annotation_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|annotationBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * An Annotation connects some span of text in generated code to an element        * of its generating .proto file.        *</pre>        *        *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>        */
specifier|public
name|Builder
name|addAnnotation
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|value
parameter_list|)
block|{
if|if
condition|(
name|annotationBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureAnnotationIsMutable
argument_list|()
expr_stmt|;
name|annotation_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|annotationBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * An Annotation connects some span of text in generated code to an element        * of its generating .proto file.        *</pre>        *        *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>        */
specifier|public
name|Builder
name|addAnnotation
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
name|value
parameter_list|)
block|{
if|if
condition|(
name|annotationBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureAnnotationIsMutable
argument_list|()
expr_stmt|;
name|annotation_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|annotationBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * An Annotation connects some span of text in generated code to an element        * of its generating .proto file.        *</pre>        *        *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>        */
specifier|public
name|Builder
name|addAnnotation
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|annotationBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureAnnotationIsMutable
argument_list|()
expr_stmt|;
name|annotation_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|annotationBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * An Annotation connects some span of text in generated code to an element        * of its generating .proto file.        *</pre>        *        *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>        */
specifier|public
name|Builder
name|addAnnotation
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|annotationBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureAnnotationIsMutable
argument_list|()
expr_stmt|;
name|annotation_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|annotationBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * An Annotation connects some span of text in generated code to an element        * of its generating .proto file.        *</pre>        *        *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>        */
specifier|public
name|Builder
name|addAllAnnotation
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|annotationBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureAnnotationIsMutable
argument_list|()
expr_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractMessageLite
operator|.
name|Builder
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|annotation_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|annotationBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * An Annotation connects some span of text in generated code to an element        * of its generating .proto file.        *</pre>        *        *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>        */
specifier|public
name|Builder
name|clearAnnotation
parameter_list|()
block|{
if|if
condition|(
name|annotationBuilder_
operator|==
literal|null
condition|)
block|{
name|annotation_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|annotationBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * An Annotation connects some span of text in generated code to an element        * of its generating .proto file.        *</pre>        *        *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>        */
specifier|public
name|Builder
name|removeAnnotation
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|annotationBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureAnnotationIsMutable
argument_list|()
expr_stmt|;
name|annotation_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|annotationBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<pre>        * An Annotation connects some span of text in generated code to an element        * of its generating .proto file.        *</pre>        *        *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|.
name|Builder
name|getAnnotationBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getAnnotationFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<pre>        * An Annotation connects some span of text in generated code to an element        * of its generating .proto file.        *</pre>        *        *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|AnnotationOrBuilder
name|getAnnotationOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|annotationBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|annotation_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|annotationBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * An Annotation connects some span of text in generated code to an element        * of its generating .proto file.        *</pre>        *        *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|AnnotationOrBuilder
argument_list|>
name|getAnnotationOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|annotationBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|annotationBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|annotation_
argument_list|)
return|;
block|}
block|}
comment|/**        *<pre>        * An Annotation connects some span of text in generated code to an element        * of its generating .proto file.        *</pre>        *        *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|.
name|Builder
name|addAnnotationBuilder
parameter_list|()
block|{
return|return
name|getAnnotationFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<pre>        * An Annotation connects some span of text in generated code to an element        * of its generating .proto file.        *</pre>        *        *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|.
name|Builder
name|addAnnotationBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getAnnotationFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<pre>        * An Annotation connects some span of text in generated code to an element        * of its generating .proto file.        *</pre>        *        *<code>repeated .google.protobuf.GeneratedCodeInfo.Annotation annotation = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|.
name|Builder
argument_list|>
name|getAnnotationBuilderList
parameter_list|()
block|{
return|return
name|getAnnotationFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|AnnotationOrBuilder
argument_list|>
name|getAnnotationFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|annotationBuilder_
operator|==
literal|null
condition|)
block|{
name|annotationBuilder_
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilderV3
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|Annotation
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
operator|.
name|AnnotationOrBuilder
argument_list|>
argument_list|(
name|annotation_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|annotation_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|annotationBuilder_
return|;
block|}
specifier|public
specifier|final
name|Builder
name|setUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|setUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|Builder
name|mergeUnknownFields
parameter_list|(
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
parameter_list|)
block|{
return|return
name|super
operator|.
name|mergeUnknownFields
argument_list|(
name|unknownFields
argument_list|)
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:google.protobuf.GeneratedCodeInfo)
block|}
comment|// @@protoc_insertion_point(class_scope:google.protobuf.GeneratedCodeInfo)
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
name|DEFAULT_INSTANCE
decl_stmt|;
static|static
block|{
name|DEFAULT_INSTANCE
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Deprecated
specifier|public
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|GeneratedCodeInfo
argument_list|>
name|PARSER
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|GeneratedCodeInfo
argument_list|>
argument_list|()
block|{
specifier|public
name|GeneratedCodeInfo
name|parsePartialFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|GeneratedCodeInfo
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|GeneratedCodeInfo
argument_list|>
name|parser
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|GeneratedCodeInfo
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|DescriptorProtos
operator|.
name|GeneratedCodeInfo
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|DEFAULT_INSTANCE
return|;
block|}
block|}
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_FileDescriptorSet_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_FileDescriptorSet_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_FileDescriptorProto_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_FileDescriptorProto_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_DescriptorProto_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_DescriptorProto_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_DescriptorProto_ExtensionRange_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_DescriptorProto_ReservedRange_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_FieldDescriptorProto_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_FieldDescriptorProto_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_OneofDescriptorProto_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_OneofDescriptorProto_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_EnumDescriptorProto_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_EnumDescriptorProto_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_EnumValueDescriptorProto_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_EnumValueDescriptorProto_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_ServiceDescriptorProto_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_ServiceDescriptorProto_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_MethodDescriptorProto_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_MethodDescriptorProto_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_FileOptions_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_FileOptions_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_MessageOptions_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_MessageOptions_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_FieldOptions_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_FieldOptions_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_OneofOptions_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_OneofOptions_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_EnumOptions_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_EnumOptions_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_EnumValueOptions_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_EnumValueOptions_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_ServiceOptions_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_ServiceOptions_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_MethodOptions_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_MethodOptions_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_UninterpretedOption_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_UninterpretedOption_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_UninterpretedOption_NamePart_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_SourceCodeInfo_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_SourceCodeInfo_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_SourceCodeInfo_Location_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_SourceCodeInfo_Location_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_GeneratedCodeInfo_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_GeneratedCodeInfo_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
name|internal_static_google_protobuf_GeneratedCodeInfo_Annotation_fieldAccessorTable
decl_stmt|;
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|descriptor
return|;
block|}
specifier|private
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
name|descriptor
decl_stmt|;
static|static
block|{
name|java
operator|.
name|lang
operator|.
name|String
index|[]
name|descriptorData
init|=
block|{
literal|"\n google/protobuf/descriptor.proto\022\017goog"
operator|+
literal|"le.protobuf\"G\n\021FileDescriptorSet\0222\n\004file"
operator|+
literal|"\030\001 \003(\0132$.google.protobuf.FileDescriptorP"
operator|+
literal|"roto\"\333\003\n\023FileDescriptorProto\022\014\n\004name\030\001 \001"
operator|+
literal|"(\t\022\017\n\007package\030\002 \001(\t\022\022\n\ndependency\030\003 \003(\t\022"
operator|+
literal|"\031\n\021public_dependency\030\n \003(\005\022\027\n\017weak_depen"
operator|+
literal|"dency\030\013 \003(\005\0226\n\014message_type\030\004 \003(\0132 .goog"
operator|+
literal|"le.protobuf.DescriptorProto\0227\n\tenum_type"
operator|+
literal|"\030\005 \003(\0132$.google.protobuf.EnumDescriptorP"
operator|+
literal|"roto\0228\n\007service\030\006 \003(\0132\'.google.protobuf."
block|,
literal|"ServiceDescriptorProto\0228\n\textension\030\007 \003("
operator|+
literal|"\0132%.google.protobuf.FieldDescriptorProto"
operator|+
literal|"\022-\n\007options\030\010 \001(\0132\034.google.protobuf.File"
operator|+
literal|"Options\0229\n\020source_code_info\030\t \001(\0132\037.goog"
operator|+
literal|"le.protobuf.SourceCodeInfo\022\016\n\006syntax\030\014 \001"
operator|+
literal|"(\t\"\360\004\n\017DescriptorProto\022\014\n\004name\030\001 \001(\t\0224\n\005"
operator|+
literal|"field\030\002 \003(\0132%.google.protobuf.FieldDescr"
operator|+
literal|"iptorProto\0228\n\textension\030\006 \003(\0132%.google.p"
operator|+
literal|"rotobuf.FieldDescriptorProto\0225\n\013nested_t"
operator|+
literal|"ype\030\003 \003(\0132 .google.protobuf.DescriptorPr"
block|,
literal|"oto\0227\n\tenum_type\030\004 \003(\0132$.google.protobuf"
operator|+
literal|".EnumDescriptorProto\022H\n\017extension_range\030"
operator|+
literal|"\005 \003(\0132/.google.protobuf.DescriptorProto."
operator|+
literal|"ExtensionRange\0229\n\noneof_decl\030\010 \003(\0132%.goo"
operator|+
literal|"gle.protobuf.OneofDescriptorProto\0220\n\007opt"
operator|+
literal|"ions\030\007 \001(\0132\037.google.protobuf.MessageOpti"
operator|+
literal|"ons\022F\n\016reserved_range\030\t \003(\0132..google.pro"
operator|+
literal|"tobuf.DescriptorProto.ReservedRange\022\025\n\rr"
operator|+
literal|"eserved_name\030\n \003(\t\032,\n\016ExtensionRange\022\r\n\005"
operator|+
literal|"start\030\001 \001(\005\022\013\n\003end\030\002 \001(\005\032+\n\rReservedRang"
block|,
literal|"e\022\r\n\005start\030\001 \001(\005\022\013\n\003end\030\002 \001(\005\"\274\005\n\024FieldD"
operator|+
literal|"escriptorProto\022\014\n\004name\030\001 \001(\t\022\016\n\006number\030\003"
operator|+
literal|" \001(\005\022:\n\005label\030\004 \001(\0162+.google.protobuf.Fi"
operator|+
literal|"eldDescriptorProto.Label\0228\n\004type\030\005 \001(\0162*"
operator|+
literal|".google.protobuf.FieldDescriptorProto.Ty"
operator|+
literal|"pe\022\021\n\ttype_name\030\006 \001(\t\022\020\n\010extendee\030\002 \001(\t\022"
operator|+
literal|"\025\n\rdefault_value\030\007 \001(\t\022\023\n\013oneof_index\030\t "
operator|+
literal|"\001(\005\022\021\n\tjson_name\030\n \001(\t\022.\n\007options\030\010 \001(\0132"
operator|+
literal|"\035.google.protobuf.FieldOptions\"\266\002\n\004Type\022"
operator|+
literal|"\017\n\013TYPE_DOUBLE\020\001\022\016\n\nTYPE_FLOAT\020\002\022\016\n\nTYPE"
block|,
literal|"_INT64\020\003\022\017\n\013TYPE_UINT64\020\004\022\016\n\nTYPE_INT32\020"
operator|+
literal|"\005\022\020\n\014TYPE_FIXED64\020\006\022\020\n\014TYPE_FIXED32\020\007\022\r\n"
operator|+
literal|"\tTYPE_BOOL\020\010\022\017\n\013TYPE_STRING\020\t\022\016\n\nTYPE_GR"
operator|+
literal|"OUP\020\n\022\020\n\014TYPE_MESSAGE\020\013\022\016\n\nTYPE_BYTES\020\014\022"
operator|+
literal|"\017\n\013TYPE_UINT32\020\r\022\r\n\tTYPE_ENUM\020\016\022\021\n\rTYPE_"
operator|+
literal|"SFIXED32\020\017\022\021\n\rTYPE_SFIXED64\020\020\022\017\n\013TYPE_SI"
operator|+
literal|"NT32\020\021\022\017\n\013TYPE_SINT64\020\022\"C\n\005Label\022\022\n\016LABE"
operator|+
literal|"L_OPTIONAL\020\001\022\022\n\016LABEL_REQUIRED\020\002\022\022\n\016LABE"
operator|+
literal|"L_REPEATED\020\003\"T\n\024OneofDescriptorProto\022\014\n\004"
operator|+
literal|"name\030\001 \001(\t\022.\n\007options\030\002 \001(\0132\035.google.pro"
block|,
literal|"tobuf.OneofOptions\"\214\001\n\023EnumDescriptorPro"
operator|+
literal|"to\022\014\n\004name\030\001 \001(\t\0228\n\005value\030\002 \003(\0132).google"
operator|+
literal|".protobuf.EnumValueDescriptorProto\022-\n\007op"
operator|+
literal|"tions\030\003 \001(\0132\034.google.protobuf.EnumOption"
operator|+
literal|"s\"l\n\030EnumValueDescriptorProto\022\014\n\004name\030\001 "
operator|+
literal|"\001(\t\022\016\n\006number\030\002 \001(\005\0222\n\007options\030\003 \001(\0132!.g"
operator|+
literal|"oogle.protobuf.EnumValueOptions\"\220\001\n\026Serv"
operator|+
literal|"iceDescriptorProto\022\014\n\004name\030\001 \001(\t\0226\n\006meth"
operator|+
literal|"od\030\002 \003(\0132&.google.protobuf.MethodDescrip"
operator|+
literal|"torProto\0220\n\007options\030\003 \001(\0132\037.google.proto"
block|,
literal|"buf.ServiceOptions\"\301\001\n\025MethodDescriptorP"
operator|+
literal|"roto\022\014\n\004name\030\001 \001(\t\022\022\n\ninput_type\030\002 \001(\t\022\023"
operator|+
literal|"\n\013output_type\030\003 \001(\t\022/\n\007options\030\004 \001(\0132\036.g"
operator|+
literal|"oogle.protobuf.MethodOptions\022\037\n\020client_s"
operator|+
literal|"treaming\030\005 \001(\010:\005false\022\037\n\020server_streamin"
operator|+
literal|"g\030\006 \001(\010:\005false\"\232\005\n\013FileOptions\022\024\n\014java_p"
operator|+
literal|"ackage\030\001 \001(\t\022\034\n\024java_outer_classname\030\010 \001"
operator|+
literal|"(\t\022\"\n\023java_multiple_files\030\n \001(\010:\005false\022)"
operator|+
literal|"\n\035java_generate_equals_and_hash\030\024 \001(\010B\002\030"
operator|+
literal|"\001\022%\n\026java_string_check_utf8\030\033 \001(\010:\005false"
block|,
literal|"\022F\n\014optimize_for\030\t \001(\0162).google.protobuf"
operator|+
literal|".FileOptions.OptimizeMode:\005SPEED\022\022\n\ngo_p"
operator|+
literal|"ackage\030\013 \001(\t\022\"\n\023cc_generic_services\030\020 \001("
operator|+
literal|"\010:\005false\022$\n\025java_generic_services\030\021 \001(\010:"
operator|+
literal|"\005false\022\"\n\023py_generic_services\030\022 \001(\010:\005fal"
operator|+
literal|"se\022\031\n\ndeprecated\030\027 \001(\010:\005false\022\037\n\020cc_enab"
operator|+
literal|"le_arenas\030\037 \001(\010:\005false\022\031\n\021objc_class_pre"
operator|+
literal|"fix\030$ \001(\t\022\030\n\020csharp_namespace\030% \001(\t\022\024\n\014s"
operator|+
literal|"wift_prefix\030\' \001(\t\022C\n\024uninterpreted_optio"
operator|+
literal|"n\030\347\007 \003(\0132$.google.protobuf.Uninterpreted"
block|,
literal|"Option\":\n\014OptimizeMode\022\t\n\005SPEED\020\001\022\r\n\tCOD"
operator|+
literal|"E_SIZE\020\002\022\020\n\014LITE_RUNTIME\020\003*\t\010\350\007\020\200\200\200\200\002J\004\010"
operator|+
literal|"&\020\'\"\354\001\n\016MessageOptions\022&\n\027message_set_wi"
operator|+
literal|"re_format\030\001 \001(\010:\005false\022.\n\037no_standard_de"
operator|+
literal|"scriptor_accessor\030\002 \001(\010:\005false\022\031\n\ndeprec"
operator|+
literal|"ated\030\003 \001(\010:\005false\022\021\n\tmap_entry\030\007 \001(\010\022C\n\024"
operator|+
literal|"uninterpreted_option\030\347\007 \003(\0132$.google.pro"
operator|+
literal|"tobuf.UninterpretedOption*\t\010\350\007\020\200\200\200\200\002J\004\010\010"
operator|+
literal|"\020\t\"\236\003\n\014FieldOptions\022:\n\005ctype\030\001 \001(\0162#.goo"
operator|+
literal|"gle.protobuf.FieldOptions.CType:\006STRING\022"
block|,
literal|"\016\n\006packed\030\002 \001(\010\022?\n\006jstype\030\006 \001(\0162$.google"
operator|+
literal|".protobuf.FieldOptions.JSType:\tJS_NORMAL"
operator|+
literal|"\022\023\n\004lazy\030\005 \001(\010:\005false\022\031\n\ndeprecated\030\003 \001("
operator|+
literal|"\010:\005false\022\023\n\004weak\030\n \001(\010:\005false\022C\n\024uninter"
operator|+
literal|"preted_option\030\347\007 \003(\0132$.google.protobuf.U"
operator|+
literal|"ninterpretedOption\"/\n\005CType\022\n\n\006STRING\020\000\022"
operator|+
literal|"\010\n\004CORD\020\001\022\020\n\014STRING_PIECE\020\002\"5\n\006JSType\022\r\n"
operator|+
literal|"\tJS_NORMAL\020\000\022\r\n\tJS_STRING\020\001\022\r\n\tJS_NUMBER"
operator|+
literal|"\020\002*\t\010\350\007\020\200\200\200\200\002J\004\010\004\020\005\"^\n\014OneofOptions\022C\n\024u"
operator|+
literal|"ninterpreted_option\030\347\007 \003(\0132$.google.prot"
block|,
literal|"obuf.UninterpretedOption*\t\010\350\007\020\200\200\200\200\002\"\215\001\n\013"
operator|+
literal|"EnumOptions\022\023\n\013allow_alias\030\002 \001(\010\022\031\n\ndepr"
operator|+
literal|"ecated\030\003 \001(\010:\005false\022C\n\024uninterpreted_opt"
operator|+
literal|"ion\030\347\007 \003(\0132$.google.protobuf.Uninterpret"
operator|+
literal|"edOption*\t\010\350\007\020\200\200\200\200\002\"}\n\020EnumValueOptions\022"
operator|+
literal|"\031\n\ndeprecated\030\001 \001(\010:\005false\022C\n\024uninterpre"
operator|+
literal|"ted_option\030\347\007 \003(\0132$.google.protobuf.Unin"
operator|+
literal|"terpretedOption*\t\010\350\007\020\200\200\200\200\002\"{\n\016ServiceOpt"
operator|+
literal|"ions\022\031\n\ndeprecated\030! \001(\010:\005false\022C\n\024unint"
operator|+
literal|"erpreted_option\030\347\007 \003(\0132$.google.protobuf"
block|,
literal|".UninterpretedOption*\t\010\350\007\020\200\200\200\200\002\"\255\002\n\rMeth"
operator|+
literal|"odOptions\022\031\n\ndeprecated\030! \001(\010:\005false\022_\n\021"
operator|+
literal|"idempotency_level\030\" \001(\0162/.google.protobu"
operator|+
literal|"f.MethodOptions.IdempotencyLevel:\023IDEMPO"
operator|+
literal|"TENCY_UNKNOWN\022C\n\024uninterpreted_option\030\347\007"
operator|+
literal|" \003(\0132$.google.protobuf.UninterpretedOpti"
operator|+
literal|"on\"P\n\020IdempotencyLevel\022\027\n\023IDEMPOTENCY_UN"
operator|+
literal|"KNOWN\020\000\022\023\n\017NO_SIDE_EFFECTS\020\001\022\016\n\nIDEMPOTE"
operator|+
literal|"NT\020\002*\t\010\350\007\020\200\200\200\200\002\"\236\002\n\023UninterpretedOption\022"
operator|+
literal|";\n\004name\030\002 \003(\0132-.google.protobuf.Uninterp"
block|,
literal|"retedOption.NamePart\022\030\n\020identifier_value"
operator|+
literal|"\030\003 \001(\t\022\032\n\022positive_int_value\030\004 \001(\004\022\032\n\022ne"
operator|+
literal|"gative_int_value\030\005 \001(\003\022\024\n\014double_value\030\006"
operator|+
literal|" \001(\001\022\024\n\014string_value\030\007 \001(\014\022\027\n\017aggregate_"
operator|+
literal|"value\030\010 \001(\t\0323\n\010NamePart\022\021\n\tname_part\030\001 \002"
operator|+
literal|"(\t\022\024\n\014is_extension\030\002 \002(\010\"\325\001\n\016SourceCodeI"
operator|+
literal|"nfo\022:\n\010location\030\001 \003(\0132(.google.protobuf."
operator|+
literal|"SourceCodeInfo.Location\032\206\001\n\010Location\022\020\n\004"
operator|+
literal|"path\030\001 \003(\005B\002\020\001\022\020\n\004span\030\002 \003(\005B\002\020\001\022\030\n\020lead"
operator|+
literal|"ing_comments\030\003 \001(\t\022\031\n\021trailing_comments\030"
block|,
literal|"\004 \001(\t\022!\n\031leading_detached_comments\030\006 \003(\t"
operator|+
literal|"\"\247\001\n\021GeneratedCodeInfo\022A\n\nannotation\030\001 \003"
operator|+
literal|"(\0132-.google.protobuf.GeneratedCodeInfo.A"
operator|+
literal|"nnotation\032O\n\nAnnotation\022\020\n\004path\030\001 \003(\005B\002\020"
operator|+
literal|"\001\022\023\n\013source_file\030\002 \001(\t\022\r\n\005begin\030\003 \001(\005\022\013\n"
operator|+
literal|"\003end\030\004 \001(\005B\214\001\n\023com.google.protobufB\020Desc"
operator|+
literal|"riptorProtosH\001Z>github.com/golang/protob"
operator|+
literal|"uf/protoc-gen-go/descriptor;descriptor\242\002"
operator|+
literal|"\003GPB\252\002\032Google.Protobuf.Reflection"
block|}
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
operator|.
name|InternalDescriptorAssigner
name|assigner
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
operator|.
name|InternalDescriptorAssigner
argument_list|()
block|{
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistry
name|assignDescriptors
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
name|root
parameter_list|)
block|{
name|descriptor
operator|=
name|root
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
operator|.
name|internalBuildGeneratedFileFrom
argument_list|(
name|descriptorData
argument_list|,
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
index|[]
block|{         }
argument_list|,
name|assigner
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_FileDescriptorSet_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_FileDescriptorSet_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_FileDescriptorSet_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"File"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_FileDescriptorProto_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_FileDescriptorProto_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_FileDescriptorProto_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Name"
block|,
literal|"Package"
block|,
literal|"Dependency"
block|,
literal|"PublicDependency"
block|,
literal|"WeakDependency"
block|,
literal|"MessageType"
block|,
literal|"EnumType"
block|,
literal|"Service"
block|,
literal|"Extension"
block|,
literal|"Options"
block|,
literal|"SourceCodeInfo"
block|,
literal|"Syntax"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_DescriptorProto_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_DescriptorProto_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_DescriptorProto_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Name"
block|,
literal|"Field"
block|,
literal|"Extension"
block|,
literal|"NestedType"
block|,
literal|"EnumType"
block|,
literal|"ExtensionRange"
block|,
literal|"OneofDecl"
block|,
literal|"Options"
block|,
literal|"ReservedRange"
block|,
literal|"ReservedName"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor
operator|=
name|internal_static_google_protobuf_DescriptorProto_descriptor
operator|.
name|getNestedTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_DescriptorProto_ExtensionRange_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Start"
block|,
literal|"End"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor
operator|=
name|internal_static_google_protobuf_DescriptorProto_descriptor
operator|.
name|getNestedTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_DescriptorProto_ReservedRange_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Start"
block|,
literal|"End"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_FieldDescriptorProto_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_FieldDescriptorProto_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_FieldDescriptorProto_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Name"
block|,
literal|"Number"
block|,
literal|"Label"
block|,
literal|"Type"
block|,
literal|"TypeName"
block|,
literal|"Extendee"
block|,
literal|"DefaultValue"
block|,
literal|"OneofIndex"
block|,
literal|"JsonName"
block|,
literal|"Options"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_OneofDescriptorProto_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_OneofDescriptorProto_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_OneofDescriptorProto_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Name"
block|,
literal|"Options"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_EnumDescriptorProto_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_EnumDescriptorProto_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_EnumDescriptorProto_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Name"
block|,
literal|"Value"
block|,
literal|"Options"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_EnumValueDescriptorProto_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_EnumValueDescriptorProto_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_EnumValueDescriptorProto_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Name"
block|,
literal|"Number"
block|,
literal|"Options"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_ServiceDescriptorProto_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|7
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_ServiceDescriptorProto_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_ServiceDescriptorProto_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Name"
block|,
literal|"Method"
block|,
literal|"Options"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_MethodDescriptorProto_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|8
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_MethodDescriptorProto_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_MethodDescriptorProto_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Name"
block|,
literal|"InputType"
block|,
literal|"OutputType"
block|,
literal|"Options"
block|,
literal|"ClientStreaming"
block|,
literal|"ServerStreaming"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_FileOptions_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|9
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_FileOptions_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_FileOptions_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"JavaPackage"
block|,
literal|"JavaOuterClassname"
block|,
literal|"JavaMultipleFiles"
block|,
literal|"JavaGenerateEqualsAndHash"
block|,
literal|"JavaStringCheckUtf8"
block|,
literal|"OptimizeFor"
block|,
literal|"GoPackage"
block|,
literal|"CcGenericServices"
block|,
literal|"JavaGenericServices"
block|,
literal|"PyGenericServices"
block|,
literal|"Deprecated"
block|,
literal|"CcEnableArenas"
block|,
literal|"ObjcClassPrefix"
block|,
literal|"CsharpNamespace"
block|,
literal|"SwiftPrefix"
block|,
literal|"UninterpretedOption"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_MessageOptions_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_MessageOptions_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_MessageOptions_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"MessageSetWireFormat"
block|,
literal|"NoStandardDescriptorAccessor"
block|,
literal|"Deprecated"
block|,
literal|"MapEntry"
block|,
literal|"UninterpretedOption"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_FieldOptions_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|11
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_FieldOptions_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_FieldOptions_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Ctype"
block|,
literal|"Packed"
block|,
literal|"Jstype"
block|,
literal|"Lazy"
block|,
literal|"Deprecated"
block|,
literal|"Weak"
block|,
literal|"UninterpretedOption"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_OneofOptions_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|12
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_OneofOptions_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_OneofOptions_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"UninterpretedOption"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_EnumOptions_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|13
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_EnumOptions_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_EnumOptions_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"AllowAlias"
block|,
literal|"Deprecated"
block|,
literal|"UninterpretedOption"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_EnumValueOptions_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|14
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_EnumValueOptions_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_EnumValueOptions_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Deprecated"
block|,
literal|"UninterpretedOption"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_ServiceOptions_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|15
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_ServiceOptions_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_ServiceOptions_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Deprecated"
block|,
literal|"UninterpretedOption"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_MethodOptions_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|16
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_MethodOptions_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_MethodOptions_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Deprecated"
block|,
literal|"IdempotencyLevel"
block|,
literal|"UninterpretedOption"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_UninterpretedOption_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|17
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_UninterpretedOption_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_UninterpretedOption_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Name"
block|,
literal|"IdentifierValue"
block|,
literal|"PositiveIntValue"
block|,
literal|"NegativeIntValue"
block|,
literal|"DoubleValue"
block|,
literal|"StringValue"
block|,
literal|"AggregateValue"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor
operator|=
name|internal_static_google_protobuf_UninterpretedOption_descriptor
operator|.
name|getNestedTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_UninterpretedOption_NamePart_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"NamePart"
block|,
literal|"IsExtension"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_SourceCodeInfo_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|18
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_SourceCodeInfo_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_SourceCodeInfo_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Location"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_SourceCodeInfo_Location_descriptor
operator|=
name|internal_static_google_protobuf_SourceCodeInfo_descriptor
operator|.
name|getNestedTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_SourceCodeInfo_Location_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_SourceCodeInfo_Location_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Path"
block|,
literal|"Span"
block|,
literal|"LeadingComments"
block|,
literal|"TrailingComments"
block|,
literal|"LeadingDetachedComments"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_GeneratedCodeInfo_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|19
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_GeneratedCodeInfo_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_GeneratedCodeInfo_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Annotation"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor
operator|=
name|internal_static_google_protobuf_GeneratedCodeInfo_descriptor
operator|.
name|getNestedTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|internal_static_google_protobuf_GeneratedCodeInfo_Annotation_fieldAccessorTable
operator|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessageV3
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Path"
block|,
literal|"SourceFile"
block|,
literal|"Begin"
block|,
literal|"End"
block|, }
argument_list|)
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(outer_class_scope)
block|}
end_class

end_unit

