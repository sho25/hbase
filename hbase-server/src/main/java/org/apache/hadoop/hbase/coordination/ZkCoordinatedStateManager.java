begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coordination
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|CoordinatedStateException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableStateManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|HMaster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|zookeeper
operator|.
name|ZKTableStateManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|zookeeper
operator|.
name|ZooKeeperWatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|zookeeper
operator|.
name|KeeperException
import|;
end_import

begin_comment
comment|/**  * ZooKeeper-based implementation of {@link org.apache.hadoop.hbase.CoordinatedStateManager}.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|ZkCoordinatedStateManager
extends|extends
name|BaseCoordinatedStateManager
block|{
specifier|protected
name|Server
name|server
decl_stmt|;
specifier|protected
name|ZooKeeperWatcher
name|watcher
decl_stmt|;
specifier|protected
name|SplitLogWorkerCoordination
name|splitLogWorkerCoordination
decl_stmt|;
specifier|protected
name|SplitLogManagerCoordination
name|splitLogManagerCoordination
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|initialize
parameter_list|(
name|Server
name|server
parameter_list|)
block|{
name|this
operator|.
name|server
operator|=
name|server
expr_stmt|;
name|this
operator|.
name|watcher
operator|=
name|server
operator|.
name|getZooKeeper
argument_list|()
expr_stmt|;
name|splitLogWorkerCoordination
operator|=
operator|new
name|ZkSplitLogWorkerCoordination
argument_list|(
name|this
argument_list|,
name|watcher
argument_list|)
expr_stmt|;
name|splitLogManagerCoordination
operator|=
operator|new
name|ZKSplitLogManagerCoordination
argument_list|(
name|this
argument_list|,
name|watcher
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Server
name|getServer
parameter_list|()
block|{
return|return
name|server
return|;
block|}
annotation|@
name|Override
specifier|public
name|TableStateManager
name|getTableStateManager
parameter_list|()
throws|throws
name|InterruptedException
throws|,
name|CoordinatedStateException
block|{
try|try
block|{
return|return
operator|new
name|ZKTableStateManager
argument_list|(
name|server
operator|.
name|getZooKeeper
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|KeeperException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|CoordinatedStateException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|SplitLogWorkerCoordination
name|getSplitLogWorkerCoordination
parameter_list|()
block|{
return|return
name|splitLogWorkerCoordination
return|;
block|}
annotation|@
name|Override
specifier|public
name|SplitLogManagerCoordination
name|getSplitLogManagerCoordination
parameter_list|()
block|{
return|return
name|splitLogManagerCoordination
return|;
block|}
block|}
end_class

end_unit

