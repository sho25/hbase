begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|backup
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|Cell
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|CellUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Delete
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Get
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Put
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Scan
import|;
end_import

begin_comment
comment|/**  * A collection for methods used by BackupSystemTable.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Evolving
specifier|public
specifier|final
class|class
name|BackupSystemTableHelper
block|{
comment|/**    * hbase:backup schema:     * 1. Backup sessions rowkey= "session." + backupId; value = serialized    * BackupContext     * 2. Backup start code rowkey = "startcode"; value = startcode     * 3. Incremental backup set rowkey="incrbackupset"; value=[list of tables]     * 4. Table-RS-timestamp map rowkey="trslm"+ table_name; value = map[RS-> last WAL timestamp]     * 5. RS - WAL ts map rowkey="rslogts."+server; value = last WAL timestamp     * 6. WALs recorded rowkey="wals."+WAL unique file name; value = NULL (value is not used)    */
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|BackupSystemTableHelper
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|BACKUP_CONTEXT_PREFIX
init|=
literal|"session."
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|START_CODE_ROW
init|=
literal|"startcode"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|INCR_BACKUP_SET
init|=
literal|"incrbackupset"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|TABLE_RS_LOG_MAP_PREFIX
init|=
literal|"trslm."
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RS_LOG_TS_PREFIX
init|=
literal|"rslogts."
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|WALS_PREFIX
init|=
literal|"wals."
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|byte
index|[]
name|q0
init|=
literal|"0"
operator|.
name|getBytes
argument_list|()
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|byte
index|[]
name|EMPTY_VALUE
init|=
operator|new
name|byte
index|[]
block|{}
decl_stmt|;
specifier|private
name|BackupSystemTableHelper
parameter_list|()
block|{
throw|throw
operator|new
name|AssertionError
argument_list|(
literal|"Instantiating utility class..."
argument_list|)
throw|;
block|}
comment|/**    * Creates Put operation for a given backup context object    * @param context backup context    * @return put operation    * @throws IOException exception    */
specifier|static
name|Put
name|createPutForBackupContext
parameter_list|(
name|BackupContext
name|context
parameter_list|)
throws|throws
name|IOException
block|{
name|Put
name|put
init|=
operator|new
name|Put
argument_list|(
operator|(
name|BACKUP_CONTEXT_PREFIX
operator|+
name|context
operator|.
name|getBackupId
argument_list|()
operator|)
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|put
operator|.
name|addColumn
argument_list|(
name|BackupSystemTable
operator|.
name|familyName
argument_list|,
name|q0
argument_list|,
name|context
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|put
return|;
block|}
comment|/**    * Creates Get operation for a given backup id    * @param backupId - backup's ID    * @return get operation    * @throws IOException exception    */
specifier|static
name|Get
name|createGetForBackupContext
parameter_list|(
name|String
name|backupId
parameter_list|)
throws|throws
name|IOException
block|{
name|Get
name|get
init|=
operator|new
name|Get
argument_list|(
operator|(
name|BACKUP_CONTEXT_PREFIX
operator|+
name|backupId
operator|)
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|get
operator|.
name|addFamily
argument_list|(
name|BackupSystemTable
operator|.
name|familyName
argument_list|)
expr_stmt|;
name|get
operator|.
name|setMaxVersions
argument_list|(
literal|1
argument_list|)
expr_stmt|;
return|return
name|get
return|;
block|}
comment|/**    * Creates Delete operation for a given backup id    * @param backupId - backup's ID    * @return delete operation    * @throws IOException exception    */
specifier|public
specifier|static
name|Delete
name|createDeletForBackupContext
parameter_list|(
name|String
name|backupId
parameter_list|)
block|{
name|Delete
name|del
init|=
operator|new
name|Delete
argument_list|(
operator|(
name|BACKUP_CONTEXT_PREFIX
operator|+
name|backupId
operator|)
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|del
operator|.
name|addFamily
argument_list|(
name|BackupSystemTable
operator|.
name|familyName
argument_list|)
expr_stmt|;
return|return
name|del
return|;
block|}
comment|/**    * Converts Result to BackupContext    * @param res - HBase result    * @return backup context instance    * @throws IOException exception    */
specifier|static
name|BackupContext
name|resultToBackupContext
parameter_list|(
name|Result
name|res
parameter_list|)
throws|throws
name|IOException
block|{
name|res
operator|.
name|advance
argument_list|()
expr_stmt|;
name|Cell
name|cell
init|=
name|res
operator|.
name|current
argument_list|()
decl_stmt|;
return|return
name|cellToBackupContext
argument_list|(
name|cell
argument_list|)
return|;
block|}
comment|/**    * Creates Get operation to retrieve start code from hbase:backup    * @return get operation    * @throws IOException exception    */
specifier|static
name|Get
name|createGetForStartCode
parameter_list|()
throws|throws
name|IOException
block|{
name|Get
name|get
init|=
operator|new
name|Get
argument_list|(
name|START_CODE_ROW
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|get
operator|.
name|addFamily
argument_list|(
name|BackupSystemTable
operator|.
name|familyName
argument_list|)
expr_stmt|;
name|get
operator|.
name|setMaxVersions
argument_list|(
literal|1
argument_list|)
expr_stmt|;
return|return
name|get
return|;
block|}
comment|/**    * Creates Put operation to store start code to hbase:backup    * @return put operation    * @throws IOException exception    */
specifier|static
name|Put
name|createPutForStartCode
parameter_list|(
name|String
name|startCode
parameter_list|)
block|{
name|Put
name|put
init|=
operator|new
name|Put
argument_list|(
name|START_CODE_ROW
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|put
operator|.
name|addColumn
argument_list|(
name|BackupSystemTable
operator|.
name|familyName
argument_list|,
name|q0
argument_list|,
name|startCode
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|put
return|;
block|}
comment|/**    * Creates Get to retrieve incremental backup table set from hbase:backup    * @return get operation    * @throws IOException exception    */
specifier|static
name|Get
name|createGetForIncrBackupTableSet
parameter_list|()
throws|throws
name|IOException
block|{
name|Get
name|get
init|=
operator|new
name|Get
argument_list|(
name|INCR_BACKUP_SET
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|get
operator|.
name|addFamily
argument_list|(
name|BackupSystemTable
operator|.
name|familyName
argument_list|)
expr_stmt|;
name|get
operator|.
name|setMaxVersions
argument_list|(
literal|1
argument_list|)
expr_stmt|;
return|return
name|get
return|;
block|}
comment|/**    * Creates Put to store incremental backup table set    * @param tables tables    * @return put operation    */
specifier|static
name|Put
name|createPutForIncrBackupTableSet
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|tables
parameter_list|)
block|{
name|Put
name|put
init|=
operator|new
name|Put
argument_list|(
name|INCR_BACKUP_SET
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|table
range|:
name|tables
control|)
block|{
name|put
operator|.
name|addColumn
argument_list|(
name|BackupSystemTable
operator|.
name|familyName
argument_list|,
name|table
operator|.
name|getBytes
argument_list|()
argument_list|,
name|EMPTY_VALUE
argument_list|)
expr_stmt|;
block|}
return|return
name|put
return|;
block|}
comment|/**    * Creates Scan operation to load backup history    * @return scan operation    */
specifier|static
name|Scan
name|createScanForBackupHistory
parameter_list|()
block|{
name|Scan
name|scan
init|=
operator|new
name|Scan
argument_list|()
decl_stmt|;
name|byte
index|[]
name|startRow
init|=
name|BACKUP_CONTEXT_PREFIX
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|byte
index|[]
name|stopRow
init|=
name|Arrays
operator|.
name|copyOf
argument_list|(
name|startRow
argument_list|,
name|startRow
operator|.
name|length
argument_list|)
decl_stmt|;
name|stopRow
index|[
name|stopRow
operator|.
name|length
operator|-
literal|1
index|]
operator|=
call|(
name|byte
call|)
argument_list|(
name|stopRow
index|[
name|stopRow
operator|.
name|length
operator|-
literal|1
index|]
operator|+
literal|1
argument_list|)
expr_stmt|;
name|scan
operator|.
name|setStartRow
argument_list|(
name|startRow
argument_list|)
expr_stmt|;
name|scan
operator|.
name|setStopRow
argument_list|(
name|stopRow
argument_list|)
expr_stmt|;
name|scan
operator|.
name|addFamily
argument_list|(
name|BackupSystemTable
operator|.
name|familyName
argument_list|)
expr_stmt|;
return|return
name|scan
return|;
block|}
comment|/**    * Converts cell to backup context instance.    * @param current - cell    * @return backup context instance    * @throws IOException exception    */
specifier|static
name|BackupContext
name|cellToBackupContext
parameter_list|(
name|Cell
name|current
parameter_list|)
throws|throws
name|IOException
block|{
name|byte
index|[]
name|data
init|=
name|CellUtil
operator|.
name|cloneValue
argument_list|(
name|current
argument_list|)
decl_stmt|;
try|try
block|{
name|BackupContext
name|ctxt
init|=
name|BackupContext
operator|.
name|fromByteArray
argument_list|(
name|data
argument_list|)
decl_stmt|;
return|return
name|ctxt
return|;
block|}
catch|catch
parameter_list|(
name|ClassNotFoundException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
comment|/**    * Creates Put to write RS last roll log timestamp map    * @param table - table    * @param smap - map, containing RS:ts    * @return put operation    */
specifier|static
name|Put
name|createPutForWriteRegionServerLogTimestamp
parameter_list|(
name|String
name|table
parameter_list|,
name|String
name|smap
parameter_list|)
block|{
name|Put
name|put
init|=
operator|new
name|Put
argument_list|(
operator|(
name|TABLE_RS_LOG_MAP_PREFIX
operator|+
name|table
operator|)
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|put
operator|.
name|addColumn
argument_list|(
name|BackupSystemTable
operator|.
name|familyName
argument_list|,
name|q0
argument_list|,
name|smap
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|put
return|;
block|}
comment|/**    * Creates Scan to load table-> { RS -> ts} map of maps    * @return scan operation    */
specifier|static
name|Scan
name|createScanForReadLogTimestampMap
parameter_list|()
block|{
name|Scan
name|scan
init|=
operator|new
name|Scan
argument_list|()
decl_stmt|;
name|byte
index|[]
name|startRow
init|=
name|TABLE_RS_LOG_MAP_PREFIX
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|byte
index|[]
name|stopRow
init|=
name|Arrays
operator|.
name|copyOf
argument_list|(
name|startRow
argument_list|,
name|startRow
operator|.
name|length
argument_list|)
decl_stmt|;
name|stopRow
index|[
name|stopRow
operator|.
name|length
operator|-
literal|1
index|]
operator|=
call|(
name|byte
call|)
argument_list|(
name|stopRow
index|[
name|stopRow
operator|.
name|length
operator|-
literal|1
index|]
operator|+
literal|1
argument_list|)
expr_stmt|;
name|scan
operator|.
name|setStartRow
argument_list|(
name|startRow
argument_list|)
expr_stmt|;
name|scan
operator|.
name|setStopRow
argument_list|(
name|stopRow
argument_list|)
expr_stmt|;
name|scan
operator|.
name|addFamily
argument_list|(
name|BackupSystemTable
operator|.
name|familyName
argument_list|)
expr_stmt|;
return|return
name|scan
return|;
block|}
comment|/**    * Get table name from rowkey    * @param cloneRow rowkey    * @return table name    */
specifier|static
name|String
name|getTableNameForReadLogTimestampMap
parameter_list|(
name|byte
index|[]
name|cloneRow
parameter_list|)
block|{
name|int
name|prefixSize
init|=
name|TABLE_RS_LOG_MAP_PREFIX
operator|.
name|length
argument_list|()
decl_stmt|;
return|return
operator|new
name|String
argument_list|(
name|cloneRow
argument_list|,
name|prefixSize
argument_list|,
name|cloneRow
operator|.
name|length
operator|-
name|prefixSize
argument_list|)
return|;
block|}
comment|/**    * Creates Put to store RS last log result    * @param server - server name    * @param fileName - log roll result (timestamp)    * @return put operation    */
specifier|static
name|Put
name|createPutForRegionServerLastLogRollResult
parameter_list|(
name|String
name|server
parameter_list|,
name|String
name|fileName
parameter_list|)
block|{
name|Put
name|put
init|=
operator|new
name|Put
argument_list|(
operator|(
name|RS_LOG_TS_PREFIX
operator|+
name|server
operator|)
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|put
operator|.
name|addColumn
argument_list|(
name|BackupSystemTable
operator|.
name|familyName
argument_list|,
name|q0
argument_list|,
name|fileName
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|put
return|;
block|}
comment|/**    * Creates Scan operation to load last RS log roll results    * @return scan operation    */
specifier|static
name|Scan
name|createScanForReadRegionServerLastLogRollResult
parameter_list|()
block|{
name|Scan
name|scan
init|=
operator|new
name|Scan
argument_list|()
decl_stmt|;
name|byte
index|[]
name|startRow
init|=
name|RS_LOG_TS_PREFIX
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|byte
index|[]
name|stopRow
init|=
name|Arrays
operator|.
name|copyOf
argument_list|(
name|startRow
argument_list|,
name|startRow
operator|.
name|length
argument_list|)
decl_stmt|;
name|stopRow
index|[
name|stopRow
operator|.
name|length
operator|-
literal|1
index|]
operator|=
call|(
name|byte
call|)
argument_list|(
name|stopRow
index|[
name|stopRow
operator|.
name|length
operator|-
literal|1
index|]
operator|+
literal|1
argument_list|)
expr_stmt|;
name|scan
operator|.
name|setStartRow
argument_list|(
name|startRow
argument_list|)
expr_stmt|;
name|scan
operator|.
name|setStopRow
argument_list|(
name|stopRow
argument_list|)
expr_stmt|;
name|scan
operator|.
name|addFamily
argument_list|(
name|BackupSystemTable
operator|.
name|familyName
argument_list|)
expr_stmt|;
return|return
name|scan
return|;
block|}
comment|/**    * Get server's name from rowkey    * @param row - rowkey    * @return server's name    */
specifier|static
name|String
name|getServerNameForReadRegionServerLastLogRollResult
parameter_list|(
name|byte
index|[]
name|row
parameter_list|)
block|{
name|int
name|prefixSize
init|=
name|RS_LOG_TS_PREFIX
operator|.
name|length
argument_list|()
decl_stmt|;
return|return
operator|new
name|String
argument_list|(
name|row
argument_list|,
name|prefixSize
argument_list|,
name|row
operator|.
name|length
operator|-
name|prefixSize
argument_list|)
return|;
block|}
comment|/**    * Creates put list for list of WAL files    * @param files list of WAL file paths    * @param backupId backup id    * @return put list    * @throws IOException exception    */
specifier|public
specifier|static
name|List
argument_list|<
name|Put
argument_list|>
name|createPutsForAddWALFiles
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|files
parameter_list|,
name|String
name|backupId
parameter_list|)
throws|throws
name|IOException
block|{
name|List
argument_list|<
name|Put
argument_list|>
name|puts
init|=
operator|new
name|ArrayList
argument_list|<
name|Put
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|file
range|:
name|files
control|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"+++ put: "
operator|+
name|BackupUtil
operator|.
name|getUniqueWALFileNamePart
argument_list|(
name|file
argument_list|)
argument_list|)
expr_stmt|;
name|byte
index|[]
name|row
init|=
operator|(
name|WALS_PREFIX
operator|+
name|BackupUtil
operator|.
name|getUniqueWALFileNamePart
argument_list|(
name|file
argument_list|)
operator|)
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|Put
name|put
init|=
operator|new
name|Put
argument_list|(
name|row
argument_list|)
decl_stmt|;
name|put
operator|.
name|addColumn
argument_list|(
name|BackupSystemTable
operator|.
name|familyName
argument_list|,
name|q0
argument_list|,
name|backupId
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|puts
operator|.
name|add
argument_list|(
name|put
argument_list|)
expr_stmt|;
block|}
return|return
name|puts
return|;
block|}
comment|/**    * Creates Get operation for a given wal file name    * @param file file    * @return get operation    * @throws IOException exception    */
specifier|public
specifier|static
name|Get
name|createGetForCheckWALFile
parameter_list|(
name|String
name|file
parameter_list|)
throws|throws
name|IOException
block|{
name|byte
index|[]
name|row
init|=
operator|(
name|WALS_PREFIX
operator|+
name|BackupUtil
operator|.
name|getUniqueWALFileNamePart
argument_list|(
name|file
argument_list|)
operator|)
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|Get
name|get
init|=
operator|new
name|Get
argument_list|(
name|row
argument_list|)
decl_stmt|;
name|get
operator|.
name|addFamily
argument_list|(
name|BackupSystemTable
operator|.
name|familyName
argument_list|)
expr_stmt|;
name|get
operator|.
name|setMaxVersions
argument_list|(
literal|1
argument_list|)
expr_stmt|;
return|return
name|get
return|;
block|}
block|}
end_class

end_unit

