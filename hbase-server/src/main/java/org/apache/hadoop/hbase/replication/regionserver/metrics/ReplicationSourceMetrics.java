begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|replication
operator|.
name|regionserver
operator|.
name|metrics
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_comment
comment|/**  * This class is for maintaining the various replication statistics for a source and publishing them  * through the metrics interfaces.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|ReplicationSourceMetrics
block|{
specifier|public
specifier|static
specifier|final
name|String
name|SOURCE_SIZE_OF_LOG_QUEUE
init|=
literal|"source.sizeOfLogQueue"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SOURCE_AGE_OF_LAST_SHIPPED_OP
init|=
literal|"source.ageOfLastShippedOp"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SOURCE_LOG_EDITS_READ
init|=
literal|"source.logEditsRead"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SOURCE_LOG_EDITS_FILTERED
init|=
literal|"source.logEditsFiltered"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SOURCE_SHIPPED_BATCHES
init|=
literal|"source.shippedBatches"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SOURCE_SHIPPED_OPS
init|=
literal|"source.shippedOps"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|ReplicationSourceMetrics
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|String
name|id
decl_stmt|;
specifier|private
name|long
name|lastTimestamp
init|=
literal|0
decl_stmt|;
specifier|private
name|int
name|lastQueueSize
init|=
literal|0
decl_stmt|;
specifier|private
name|String
name|sizeOfLogQueKey
decl_stmt|;
specifier|private
name|String
name|ageOfLastShippedOpKey
decl_stmt|;
specifier|private
name|String
name|logEditsReadKey
decl_stmt|;
specifier|private
name|String
name|logEditsFilteredKey
decl_stmt|;
specifier|private
specifier|final
name|String
name|shippedBatchesKey
decl_stmt|;
specifier|private
specifier|final
name|String
name|shippedOpsKey
decl_stmt|;
specifier|private
name|ReplicationMetricsSource
name|rms
decl_stmt|;
comment|/**    * Constructor used to register the metrics    *    * @param id Name of the source this class is monitoring    */
specifier|public
name|ReplicationSourceMetrics
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
name|sizeOfLogQueKey
operator|=
literal|"source."
operator|+
name|id
operator|+
literal|".sizeOfLogQueue"
expr_stmt|;
name|ageOfLastShippedOpKey
operator|=
literal|"source."
operator|+
name|id
operator|+
literal|".ageOfLastShippedOp"
expr_stmt|;
name|logEditsReadKey
operator|=
literal|"source."
operator|+
name|id
operator|+
literal|".logEditsRead"
expr_stmt|;
name|logEditsFilteredKey
operator|=
literal|"source."
operator|+
name|id
operator|+
literal|".logEditsFiltered"
expr_stmt|;
name|shippedBatchesKey
operator|=
literal|"source."
operator|+
name|this
operator|.
name|id
operator|+
literal|".shippedBatches"
expr_stmt|;
name|shippedOpsKey
operator|=
literal|"source."
operator|+
name|this
operator|.
name|id
operator|+
literal|".shippedOps"
expr_stmt|;
name|rms
operator|=
name|ReplicationMetricsSourceFactory
operator|.
name|getInstance
argument_list|()
expr_stmt|;
block|}
comment|/**    * Set the age of the last edit that was shipped    *    * @param timestamp write time of the edit    */
specifier|public
name|void
name|setAgeOfLastShippedOp
parameter_list|(
name|long
name|timestamp
parameter_list|)
block|{
name|long
name|age
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|timestamp
decl_stmt|;
name|rms
operator|.
name|setGauge
argument_list|(
name|ageOfLastShippedOpKey
argument_list|,
name|age
argument_list|)
expr_stmt|;
name|rms
operator|.
name|setGauge
argument_list|(
name|SOURCE_AGE_OF_LAST_SHIPPED_OP
argument_list|,
name|age
argument_list|)
expr_stmt|;
name|this
operator|.
name|lastTimestamp
operator|=
name|timestamp
expr_stmt|;
block|}
comment|/**    * Convenience method to use the last given timestamp to refresh the age of the last edit. Used    * when replication fails and need to keep that metric accurate.    */
specifier|public
name|void
name|refreshAgeOfLastShippedOp
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|lastTimestamp
operator|>
literal|0
condition|)
block|{
name|setAgeOfLastShippedOp
argument_list|(
name|this
operator|.
name|lastTimestamp
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Set the size of the log queue    *    * @param size the size.    */
specifier|public
name|void
name|setSizeOfLogQueue
parameter_list|(
name|int
name|size
parameter_list|)
block|{
name|rms
operator|.
name|setGauge
argument_list|(
name|sizeOfLogQueKey
argument_list|,
name|size
argument_list|)
expr_stmt|;
name|rms
operator|.
name|incGauge
argument_list|(
name|SOURCE_SIZE_OF_LOG_QUEUE
argument_list|,
name|size
operator|-
name|lastQueueSize
argument_list|)
expr_stmt|;
name|lastQueueSize
operator|=
name|size
expr_stmt|;
block|}
comment|/**    * Add on the the number of log edits read    *    * @param delta the number of log edits read.    */
specifier|private
name|void
name|incrLogEditsRead
parameter_list|(
name|long
name|delta
parameter_list|)
block|{
name|rms
operator|.
name|incCounters
argument_list|(
name|logEditsReadKey
argument_list|,
name|delta
argument_list|)
expr_stmt|;
name|rms
operator|.
name|incCounters
argument_list|(
name|SOURCE_LOG_EDITS_READ
argument_list|,
name|delta
argument_list|)
expr_stmt|;
block|}
comment|/** Increment the number of log edits read by one. */
specifier|public
name|void
name|incrLogEditsRead
parameter_list|()
block|{
name|incrLogEditsRead
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
comment|/**    * Add on the number of log edits filtered    *    * @param delta the number filtered.    */
specifier|private
name|void
name|incrLogEditsFiltered
parameter_list|(
name|long
name|delta
parameter_list|)
block|{
name|rms
operator|.
name|incCounters
argument_list|(
name|logEditsFilteredKey
argument_list|,
name|delta
argument_list|)
expr_stmt|;
name|rms
operator|.
name|incCounters
argument_list|(
name|SOURCE_LOG_EDITS_FILTERED
argument_list|,
name|delta
argument_list|)
expr_stmt|;
block|}
comment|/** The number of log edits filtered out. */
specifier|public
name|void
name|incrLogEditsFiltered
parameter_list|()
block|{
name|incrLogEditsFiltered
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
comment|/**    * Convience method to apply changes to metrics do to shipping a batch of logs.    *    * @param batchSize the size of the batch that was shipped to sinks.    */
specifier|public
name|void
name|shipBatch
parameter_list|(
name|long
name|batchSize
parameter_list|)
block|{
name|rms
operator|.
name|incCounters
argument_list|(
name|shippedBatchesKey
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|rms
operator|.
name|incCounters
argument_list|(
name|SOURCE_SHIPPED_BATCHES
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|rms
operator|.
name|incCounters
argument_list|(
name|shippedOpsKey
argument_list|,
name|batchSize
argument_list|)
expr_stmt|;
name|rms
operator|.
name|incCounters
argument_list|(
name|SOURCE_SHIPPED_OPS
argument_list|,
name|batchSize
argument_list|)
expr_stmt|;
block|}
comment|/** Removes all metrics about this Source. */
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|rms
operator|.
name|removeGauge
argument_list|(
name|sizeOfLogQueKey
argument_list|)
expr_stmt|;
name|rms
operator|.
name|decGauge
argument_list|(
name|SOURCE_SIZE_OF_LOG_QUEUE
argument_list|,
name|lastQueueSize
argument_list|)
expr_stmt|;
name|lastQueueSize
operator|=
literal|0
expr_stmt|;
name|rms
operator|.
name|removeGauge
argument_list|(
name|ageOfLastShippedOpKey
argument_list|)
expr_stmt|;
name|rms
operator|.
name|removeCounter
argument_list|(
name|logEditsFilteredKey
argument_list|)
expr_stmt|;
name|rms
operator|.
name|removeCounter
argument_list|(
name|logEditsReadKey
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

