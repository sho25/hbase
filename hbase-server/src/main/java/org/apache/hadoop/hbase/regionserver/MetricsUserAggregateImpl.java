begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|CompatibilitySingletonFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ipc
operator|.
name|RpcServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|UserProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|LossyCounting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|MetricsUserAggregateImpl
implements|implements
name|MetricsUserAggregate
block|{
comment|/** Provider for mapping principal names to Users */
specifier|private
specifier|final
name|UserProvider
name|userProvider
decl_stmt|;
specifier|private
specifier|final
name|MetricsUserAggregateSource
name|source
decl_stmt|;
specifier|private
specifier|final
name|LossyCounting
name|userMetricLossyCounting
decl_stmt|;
specifier|public
name|MetricsUserAggregateImpl
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|source
operator|=
name|CompatibilitySingletonFactory
operator|.
name|getInstance
argument_list|(
name|MetricsRegionServerSourceFactory
operator|.
name|class
argument_list|)
operator|.
name|getUserAggregate
argument_list|()
expr_stmt|;
name|userMetricLossyCounting
operator|=
operator|new
name|LossyCounting
argument_list|<
name|MetricsUserSource
argument_list|>
argument_list|(
literal|"userMetrics"
argument_list|,
operator|(
name|LossyCounting
operator|.
name|LossyCountingListener
argument_list|<
name|MetricsUserSource
argument_list|>
operator|)
name|key
lambda|->
name|source
operator|.
name|deregister
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|userProvider
operator|=
name|UserProvider
operator|.
name|instantiate
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
comment|/**    * Returns the active user to which authorization checks should be applied.    * If we are in the context of an RPC call, the remote user is used,    * otherwise the currently logged in user is used.    */
specifier|private
name|String
name|getActiveUser
parameter_list|()
block|{
name|Optional
argument_list|<
name|User
argument_list|>
name|user
init|=
name|RpcServer
operator|.
name|getRequestUser
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|user
operator|.
name|isPresent
argument_list|()
condition|)
block|{
comment|// for non-rpc handling, fallback to system user
try|try
block|{
name|user
operator|=
name|Optional
operator|.
name|of
argument_list|(
name|userProvider
operator|.
name|getCurrent
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ignore
parameter_list|)
block|{       }
block|}
return|return
name|user
operator|.
name|isPresent
argument_list|()
condition|?
name|user
operator|.
name|get
argument_list|()
operator|.
name|getShortName
argument_list|()
else|:
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|MetricsUserAggregateSource
name|getSource
parameter_list|()
block|{
return|return
name|source
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updatePut
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|String
name|user
init|=
name|getActiveUser
argument_list|()
decl_stmt|;
if|if
condition|(
name|user
operator|!=
literal|null
condition|)
block|{
name|MetricsUserSource
name|userSource
init|=
name|getOrCreateMetricsUser
argument_list|(
name|user
argument_list|)
decl_stmt|;
name|userSource
operator|.
name|updatePut
argument_list|(
name|t
argument_list|)
expr_stmt|;
name|incrementClientWriteMetrics
argument_list|(
name|userSource
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|String
name|getClient
parameter_list|()
block|{
name|Optional
argument_list|<
name|InetAddress
argument_list|>
name|ipOptional
init|=
name|RpcServer
operator|.
name|getRemoteAddress
argument_list|()
decl_stmt|;
if|if
condition|(
name|ipOptional
operator|.
name|isPresent
argument_list|()
condition|)
block|{
return|return
name|ipOptional
operator|.
name|get
argument_list|()
operator|.
name|getHostName
argument_list|()
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|private
name|void
name|incrementClientReadMetrics
parameter_list|(
name|MetricsUserSource
name|userSource
parameter_list|)
block|{
name|String
name|client
init|=
name|getClient
argument_list|()
decl_stmt|;
if|if
condition|(
name|client
operator|!=
literal|null
operator|&&
name|userSource
operator|!=
literal|null
condition|)
block|{
name|userSource
operator|.
name|getOrCreateMetricsClient
argument_list|(
name|client
argument_list|)
operator|.
name|incrementReadRequest
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|incrementFilteredReadRequests
parameter_list|(
name|MetricsUserSource
name|userSource
parameter_list|)
block|{
name|String
name|client
init|=
name|getClient
argument_list|()
decl_stmt|;
if|if
condition|(
name|client
operator|!=
literal|null
operator|&&
name|userSource
operator|!=
literal|null
condition|)
block|{
name|userSource
operator|.
name|getOrCreateMetricsClient
argument_list|(
name|client
argument_list|)
operator|.
name|incrementFilteredReadRequests
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|incrementClientWriteMetrics
parameter_list|(
name|MetricsUserSource
name|userSource
parameter_list|)
block|{
name|String
name|client
init|=
name|getClient
argument_list|()
decl_stmt|;
if|if
condition|(
name|client
operator|!=
literal|null
operator|&&
name|userSource
operator|!=
literal|null
condition|)
block|{
name|userSource
operator|.
name|getOrCreateMetricsClient
argument_list|(
name|client
argument_list|)
operator|.
name|incrementWriteRequest
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateDelete
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|String
name|user
init|=
name|getActiveUser
argument_list|()
decl_stmt|;
if|if
condition|(
name|user
operator|!=
literal|null
condition|)
block|{
name|MetricsUserSource
name|userSource
init|=
name|getOrCreateMetricsUser
argument_list|(
name|user
argument_list|)
decl_stmt|;
name|userSource
operator|.
name|updateDelete
argument_list|(
name|t
argument_list|)
expr_stmt|;
name|incrementClientWriteMetrics
argument_list|(
name|userSource
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateGet
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|String
name|user
init|=
name|getActiveUser
argument_list|()
decl_stmt|;
if|if
condition|(
name|user
operator|!=
literal|null
condition|)
block|{
name|MetricsUserSource
name|userSource
init|=
name|getOrCreateMetricsUser
argument_list|(
name|user
argument_list|)
decl_stmt|;
name|userSource
operator|.
name|updateGet
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateIncrement
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|String
name|user
init|=
name|getActiveUser
argument_list|()
decl_stmt|;
if|if
condition|(
name|user
operator|!=
literal|null
condition|)
block|{
name|MetricsUserSource
name|userSource
init|=
name|getOrCreateMetricsUser
argument_list|(
name|user
argument_list|)
decl_stmt|;
name|userSource
operator|.
name|updateIncrement
argument_list|(
name|t
argument_list|)
expr_stmt|;
name|incrementClientWriteMetrics
argument_list|(
name|userSource
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateAppend
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|String
name|user
init|=
name|getActiveUser
argument_list|()
decl_stmt|;
if|if
condition|(
name|user
operator|!=
literal|null
condition|)
block|{
name|MetricsUserSource
name|userSource
init|=
name|getOrCreateMetricsUser
argument_list|(
name|user
argument_list|)
decl_stmt|;
name|userSource
operator|.
name|updateAppend
argument_list|(
name|t
argument_list|)
expr_stmt|;
name|incrementClientWriteMetrics
argument_list|(
name|userSource
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateReplay
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|String
name|user
init|=
name|getActiveUser
argument_list|()
decl_stmt|;
if|if
condition|(
name|user
operator|!=
literal|null
condition|)
block|{
name|MetricsUserSource
name|userSource
init|=
name|getOrCreateMetricsUser
argument_list|(
name|user
argument_list|)
decl_stmt|;
name|userSource
operator|.
name|updateReplay
argument_list|(
name|t
argument_list|)
expr_stmt|;
name|incrementClientWriteMetrics
argument_list|(
name|userSource
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateScanTime
parameter_list|(
name|long
name|t
parameter_list|)
block|{
name|String
name|user
init|=
name|getActiveUser
argument_list|()
decl_stmt|;
if|if
condition|(
name|user
operator|!=
literal|null
condition|)
block|{
name|MetricsUserSource
name|userSource
init|=
name|getOrCreateMetricsUser
argument_list|(
name|user
argument_list|)
decl_stmt|;
name|userSource
operator|.
name|updateScanTime
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateFilteredReadRequests
parameter_list|()
block|{
name|String
name|user
init|=
name|getActiveUser
argument_list|()
decl_stmt|;
if|if
condition|(
name|user
operator|!=
literal|null
condition|)
block|{
name|MetricsUserSource
name|userSource
init|=
name|getOrCreateMetricsUser
argument_list|(
name|user
argument_list|)
decl_stmt|;
name|incrementFilteredReadRequests
argument_list|(
name|userSource
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateReadRequestCount
parameter_list|()
block|{
name|String
name|user
init|=
name|getActiveUser
argument_list|()
decl_stmt|;
if|if
condition|(
name|user
operator|!=
literal|null
condition|)
block|{
name|MetricsUserSource
name|userSource
init|=
name|getOrCreateMetricsUser
argument_list|(
name|user
argument_list|)
decl_stmt|;
name|incrementClientReadMetrics
argument_list|(
name|userSource
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|MetricsUserSource
name|getOrCreateMetricsUser
parameter_list|(
name|String
name|user
parameter_list|)
block|{
name|MetricsUserSource
name|userSource
init|=
name|source
operator|.
name|getOrCreateMetricsUser
argument_list|(
name|user
argument_list|)
decl_stmt|;
name|userMetricLossyCounting
operator|.
name|add
argument_list|(
name|userSource
argument_list|)
expr_stmt|;
return|return
name|userSource
return|;
block|}
block|}
end_class

end_unit

