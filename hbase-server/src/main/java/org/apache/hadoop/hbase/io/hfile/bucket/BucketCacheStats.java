begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements. See the NOTICE file distributed with this  * work for additional information regarding copyright ownership. The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|io
operator|.
name|hfile
operator|.
name|bucket
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicLong
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|io
operator|.
name|hfile
operator|.
name|CacheStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|EnvironmentEdgeManager
import|;
end_import

begin_comment
comment|/**  * Class that implements cache metrics for bucket cache.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|BucketCacheStats
extends|extends
name|CacheStats
block|{
specifier|private
specifier|final
name|AtomicLong
name|ioHitCount
init|=
operator|new
name|AtomicLong
argument_list|(
literal|0
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|AtomicLong
name|ioHitTime
init|=
operator|new
name|AtomicLong
argument_list|(
literal|0
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|int
name|nanoTime
init|=
literal|1000000
decl_stmt|;
specifier|private
name|long
name|lastLogTime
init|=
name|EnvironmentEdgeManager
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
specifier|public
name|void
name|ioHit
parameter_list|(
name|long
name|time
parameter_list|)
block|{
name|ioHitCount
operator|.
name|incrementAndGet
argument_list|()
expr_stmt|;
name|ioHitTime
operator|.
name|addAndGet
argument_list|(
name|time
argument_list|)
expr_stmt|;
block|}
specifier|public
name|long
name|getIOHitsPerSecond
parameter_list|()
block|{
name|long
name|now
init|=
name|EnvironmentEdgeManager
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|long
name|took
init|=
operator|(
name|now
operator|-
name|lastLogTime
operator|)
operator|/
literal|1000
decl_stmt|;
name|lastLogTime
operator|=
name|now
expr_stmt|;
return|return
name|ioHitCount
operator|.
name|get
argument_list|()
operator|/
name|took
return|;
block|}
specifier|public
name|double
name|getIOTimePerHit
parameter_list|()
block|{
name|long
name|time
init|=
name|ioHitTime
operator|.
name|get
argument_list|()
operator|/
name|nanoTime
decl_stmt|;
name|long
name|count
init|=
name|ioHitCount
operator|.
name|get
argument_list|()
decl_stmt|;
return|return
operator|(
operator|(
name|float
operator|)
name|time
operator|/
operator|(
name|float
operator|)
name|count
operator|)
return|;
block|}
specifier|public
name|void
name|reset
parameter_list|()
block|{
name|ioHitCount
operator|.
name|set
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|ioHitTime
operator|.
name|set
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

