begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|replication
operator|.
name|regionserver
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|wal
operator|.
name|WAL
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_comment
comment|/**  * Holds a batch of WAL entries to replicate, along with some statistics  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
class|class
name|WALEntryBatch
block|{
specifier|private
name|List
argument_list|<
name|Entry
argument_list|>
name|walEntries
decl_stmt|;
comment|// last WAL that was read
specifier|private
name|Path
name|lastWalPath
decl_stmt|;
comment|// position in WAL of last entry in this batch
specifier|private
name|long
name|lastWalPosition
init|=
literal|0
decl_stmt|;
comment|// number of distinct row keys in this batch
specifier|private
name|int
name|nbRowKeys
init|=
literal|0
decl_stmt|;
comment|// number of HFiles
specifier|private
name|int
name|nbHFiles
init|=
literal|0
decl_stmt|;
comment|// heap size of data we need to replicate
specifier|private
name|long
name|heapSize
init|=
literal|0
decl_stmt|;
comment|// save the last sequenceid for each region if the table has serial-replication scope
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|lastSeqIds
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
comment|/**    * @param lastWalPath Path of the WAL the last entry in this batch was read from    */
name|WALEntryBatch
parameter_list|(
name|int
name|maxNbEntries
parameter_list|,
name|Path
name|lastWalPath
parameter_list|)
block|{
name|this
operator|.
name|walEntries
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|maxNbEntries
argument_list|)
expr_stmt|;
name|this
operator|.
name|lastWalPath
operator|=
name|lastWalPath
expr_stmt|;
block|}
specifier|public
name|void
name|addEntry
parameter_list|(
name|Entry
name|entry
parameter_list|)
block|{
name|walEntries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
comment|/**    * @return the WAL Entries.    */
specifier|public
name|List
argument_list|<
name|Entry
argument_list|>
name|getWalEntries
parameter_list|()
block|{
return|return
name|walEntries
return|;
block|}
comment|/**    * @return the path of the last WAL that was read.    */
specifier|public
name|Path
name|getLastWalPath
parameter_list|()
block|{
return|return
name|lastWalPath
return|;
block|}
comment|/**    * @return the position in the last WAL that was read.    */
specifier|public
name|long
name|getLastWalPosition
parameter_list|()
block|{
return|return
name|lastWalPosition
return|;
block|}
specifier|public
name|void
name|setLastWalPosition
parameter_list|(
name|long
name|lastWalPosition
parameter_list|)
block|{
name|this
operator|.
name|lastWalPosition
operator|=
name|lastWalPosition
expr_stmt|;
block|}
specifier|public
name|int
name|getNbEntries
parameter_list|()
block|{
return|return
name|walEntries
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**    * @return the number of distinct row keys in this batch    */
specifier|public
name|int
name|getNbRowKeys
parameter_list|()
block|{
return|return
name|nbRowKeys
return|;
block|}
comment|/**    * @return the number of HFiles in this batch    */
specifier|public
name|int
name|getNbHFiles
parameter_list|()
block|{
return|return
name|nbHFiles
return|;
block|}
comment|/**    * @return total number of operations in this batch    */
specifier|public
name|int
name|getNbOperations
parameter_list|()
block|{
return|return
name|getNbRowKeys
argument_list|()
operator|+
name|getNbHFiles
argument_list|()
return|;
block|}
comment|/**    * @return the heap size of this batch    */
specifier|public
name|long
name|getHeapSize
parameter_list|()
block|{
return|return
name|heapSize
return|;
block|}
comment|/**    * @return the last sequenceid for each region if the table has serial-replication scope    */
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|getLastSeqIds
parameter_list|()
block|{
return|return
name|lastSeqIds
return|;
block|}
specifier|public
name|void
name|incrementNbRowKeys
parameter_list|(
name|int
name|increment
parameter_list|)
block|{
name|nbRowKeys
operator|+=
name|increment
expr_stmt|;
block|}
specifier|public
name|void
name|incrementNbHFiles
parameter_list|(
name|int
name|increment
parameter_list|)
block|{
name|nbHFiles
operator|+=
name|increment
expr_stmt|;
block|}
specifier|public
name|void
name|incrementHeapSize
parameter_list|(
name|long
name|increment
parameter_list|)
block|{
name|heapSize
operator|+=
name|increment
expr_stmt|;
block|}
specifier|public
name|void
name|setLastSeqId
parameter_list|(
name|String
name|region
parameter_list|,
name|long
name|sequenceId
parameter_list|)
block|{
name|lastSeqIds
operator|.
name|put
argument_list|(
name|region
argument_list|,
name|sequenceId
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

