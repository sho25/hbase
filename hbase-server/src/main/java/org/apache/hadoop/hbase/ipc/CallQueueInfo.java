begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ipc
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|CallQueueInfo
block|{
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
argument_list|>
name|callQueueMethodCountsSummary
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
argument_list|>
name|callQueueMethodSizeSummary
decl_stmt|;
name|CallQueueInfo
parameter_list|()
block|{
name|callQueueMethodCountsSummary
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|callQueueMethodSizeSummary
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
block|}
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getCallQueueNames
parameter_list|()
block|{
return|return
name|callQueueMethodCountsSummary
operator|.
name|keySet
argument_list|()
return|;
block|}
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getCalledMethodNames
parameter_list|(
name|String
name|callQueueName
parameter_list|)
block|{
return|return
name|callQueueMethodCountsSummary
operator|.
name|get
argument_list|(
name|callQueueName
argument_list|)
operator|.
name|keySet
argument_list|()
return|;
block|}
specifier|public
name|long
name|getCallMethodCount
parameter_list|(
name|String
name|callQueueName
parameter_list|,
name|String
name|methodName
parameter_list|)
block|{
name|long
name|methodCount
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|methodCountMap
init|=
name|callQueueMethodCountsSummary
operator|.
name|getOrDefault
argument_list|(
name|callQueueName
argument_list|,
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
literal|null
operator|!=
name|methodCountMap
condition|)
block|{
name|methodCount
operator|=
name|methodCountMap
operator|.
name|getOrDefault
argument_list|(
name|methodName
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|methodCount
operator|=
literal|0L
expr_stmt|;
block|}
return|return
name|methodCount
return|;
block|}
name|void
name|setCallMethodCount
parameter_list|(
name|String
name|callQueueName
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|methodCountMap
parameter_list|)
block|{
name|callQueueMethodCountsSummary
operator|.
name|put
argument_list|(
name|callQueueName
argument_list|,
name|methodCountMap
argument_list|)
expr_stmt|;
block|}
specifier|public
name|long
name|getCallMethodSize
parameter_list|(
name|String
name|callQueueName
parameter_list|,
name|String
name|methodName
parameter_list|)
block|{
name|long
name|methodSize
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|methodSizeMap
init|=
name|callQueueMethodSizeSummary
operator|.
name|getOrDefault
argument_list|(
name|callQueueName
argument_list|,
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
literal|null
operator|!=
name|methodSizeMap
condition|)
block|{
name|methodSize
operator|=
name|methodSizeMap
operator|.
name|getOrDefault
argument_list|(
name|methodName
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|methodSize
operator|=
literal|0L
expr_stmt|;
block|}
return|return
name|methodSize
return|;
block|}
name|void
name|setCallMethodSize
parameter_list|(
name|String
name|callQueueName
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Long
argument_list|>
name|methodSizeMap
parameter_list|)
block|{
name|callQueueMethodSizeSummary
operator|.
name|put
argument_list|(
name|callQueueName
argument_list|,
name|methodSizeMap
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

