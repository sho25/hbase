begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|VersionInfoUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RpcController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ServiceException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|RegionServerStatusProtos
import|;
end_import

begin_comment
comment|/**  * A wrapper class for MasterRpcServices shortcut that ensures a client version is available  * to the callee without a current RPC call.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|MasterRpcServicesVersionWrapper
implements|implements
name|RegionServerStatusProtos
operator|.
name|RegionServerStatusService
operator|.
name|BlockingInterface
block|{
annotation|@
name|FunctionalInterface
specifier|public
interface|interface
name|ServiceCallFunction
parameter_list|<
name|Req
parameter_list|,
name|Resp
parameter_list|>
extends|extends
name|VersionInfoUtil
operator|.
name|ServiceCallFunction
argument_list|<
name|RpcController
argument_list|,
name|Req
argument_list|,
name|Resp
argument_list|,
name|ServiceException
argument_list|>
block|{   }
specifier|private
specifier|final
name|MasterRpcServices
name|masterRpcServices
decl_stmt|;
specifier|private
specifier|final
name|ServiceCallFunction
argument_list|<
name|RegionServerStatusProtos
operator|.
name|RegionServerStartupRequest
argument_list|,
name|RegionServerStatusProtos
operator|.
name|RegionServerStartupResponse
argument_list|>
name|startupCall
decl_stmt|;
specifier|private
specifier|final
name|ServiceCallFunction
argument_list|<
name|RegionServerStatusProtos
operator|.
name|RegionServerReportRequest
argument_list|,
name|RegionServerStatusProtos
operator|.
name|RegionServerReportResponse
argument_list|>
name|reportCall
decl_stmt|;
specifier|public
name|MasterRpcServicesVersionWrapper
parameter_list|(
name|MasterRpcServices
name|masterRpcServices
parameter_list|)
block|{
name|this
operator|.
name|masterRpcServices
operator|=
name|masterRpcServices
expr_stmt|;
name|this
operator|.
name|startupCall
operator|=
parameter_list|(
name|c
parameter_list|,
name|req
parameter_list|)
lambda|->
name|masterRpcServices
operator|.
name|regionServerStartup
argument_list|(
name|c
argument_list|,
name|req
argument_list|)
expr_stmt|;
name|this
operator|.
name|reportCall
operator|=
parameter_list|(
name|c
parameter_list|,
name|req
parameter_list|)
lambda|->
name|masterRpcServices
operator|.
name|regionServerReport
argument_list|(
name|c
argument_list|,
name|req
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|RegionServerStatusProtos
operator|.
name|RegionServerStartupResponse
name|regionServerStartup
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|RegionServerStatusProtos
operator|.
name|RegionServerStartupRequest
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
return|return
name|VersionInfoUtil
operator|.
name|callWithVersion
argument_list|(
name|startupCall
argument_list|,
name|controller
argument_list|,
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|RegionServerStatusProtos
operator|.
name|RegionServerReportResponse
name|regionServerReport
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|RegionServerStatusProtos
operator|.
name|RegionServerReportRequest
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
return|return
name|VersionInfoUtil
operator|.
name|callWithVersion
argument_list|(
name|reportCall
argument_list|,
name|controller
argument_list|,
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|RegionServerStatusProtos
operator|.
name|ReportRSFatalErrorResponse
name|reportRSFatalError
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|RegionServerStatusProtos
operator|.
name|ReportRSFatalErrorRequest
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
return|return
name|masterRpcServices
operator|.
name|reportRSFatalError
argument_list|(
name|controller
argument_list|,
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|RegionServerStatusProtos
operator|.
name|GetLastFlushedSequenceIdResponse
name|getLastFlushedSequenceId
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|RegionServerStatusProtos
operator|.
name|GetLastFlushedSequenceIdRequest
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
return|return
name|masterRpcServices
operator|.
name|getLastFlushedSequenceId
argument_list|(
name|controller
argument_list|,
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|RegionServerStatusProtos
operator|.
name|ReportRegionStateTransitionResponse
name|reportRegionStateTransition
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|RegionServerStatusProtos
operator|.
name|ReportRegionStateTransitionRequest
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
return|return
name|masterRpcServices
operator|.
name|reportRegionStateTransition
argument_list|(
name|controller
argument_list|,
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|RegionServerStatusProtos
operator|.
name|RegionSpaceUseReportResponse
name|reportRegionSpaceUse
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|RegionServerStatusProtos
operator|.
name|RegionSpaceUseReportRequest
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
return|return
name|masterRpcServices
operator|.
name|reportRegionSpaceUse
argument_list|(
name|controller
argument_list|,
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|RegionServerStatusProtos
operator|.
name|ReportProcedureDoneResponse
name|reportProcedureDone
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|RegionServerStatusProtos
operator|.
name|ReportProcedureDoneRequest
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
return|return
name|masterRpcServices
operator|.
name|reportProcedureDone
argument_list|(
name|controller
argument_list|,
name|request
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|RegionServerStatusProtos
operator|.
name|FileArchiveNotificationResponse
name|reportFileArchival
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|RegionServerStatusProtos
operator|.
name|FileArchiveNotificationRequest
name|request
parameter_list|)
throws|throws
name|ServiceException
block|{
return|return
name|masterRpcServices
operator|.
name|reportFileArchival
argument_list|(
name|controller
argument_list|,
name|request
argument_list|)
return|;
block|}
block|}
end_class

end_unit

