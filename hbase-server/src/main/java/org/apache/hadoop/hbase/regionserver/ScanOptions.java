begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseInterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceStability
import|;
end_import

begin_comment
comment|/**  * This class gives you the ability to change the max versions and TTL options before opening a  * scanner for a Store. And also gives you some information for the scan.  *<p>  * Changing max versions and TTL are usually safe even for flush/compaction, so here we provide a  * way to do it for you. If you want to do other complicated stuffs such as filtering, please wrap  * the {@link InternalScanner} in the {@code preCompact} and {@code preFlush} methods in  * {@link org.apache.hadoop.hbase.coprocessor.RegionObserver}.  *<p>  * For user scans, we also provide this class as a parameter in the {@code preStoreScannerOpen}  * method in {@link org.apache.hadoop.hbase.coprocessor.RegionObserver}. You can use it to change  * the inherent properties for a Store. For example, even if you use {@code Scan.readAllVersions},  * you still can not read two versions if the max versions property of the Store is one. You need to  * set the max versions to a value greater than two in {@code preStoreScannerOpen}.  * @see org.apache.hadoop.hbase.coprocessor.RegionObserver#preFlushScannerOpen(org.apache.hadoop.hbase.coprocessor.ObserverContext,  *      Store, ScanOptions, FlushLifeCycleTracker)  * @see org.apache.hadoop.hbase.coprocessor.RegionObserver#preCompactScannerOpen(org.apache.hadoop.hbase.coprocessor.ObserverContext,  *      Store, ScanType, ScanOptions,  *      org.apache.hadoop.hbase.regionserver.compactions.CompactionLifeCycleTracker,  *      org.apache.hadoop.hbase.regionserver.compactions.CompactionRequest)  * @see org.apache.hadoop.hbase.coprocessor.RegionObserver#preStoreScannerOpen(org.apache.hadoop.hbase.coprocessor.ObserverContext,  *      Store, ScanOptions)  */
end_comment

begin_interface
annotation|@
name|InterfaceAudience
operator|.
name|LimitedPrivate
argument_list|(
name|HBaseInterfaceAudience
operator|.
name|COPROC
argument_list|)
annotation|@
name|InterfaceStability
operator|.
name|Evolving
specifier|public
interface|interface
name|ScanOptions
block|{
name|int
name|getMaxVersions
parameter_list|()
function_decl|;
name|void
name|setMaxVersions
parameter_list|(
name|int
name|maxVersions
parameter_list|)
function_decl|;
specifier|default
name|void
name|readAllVersions
parameter_list|()
block|{
name|setMaxVersions
argument_list|(
name|Integer
operator|.
name|MAX_VALUE
argument_list|)
expr_stmt|;
block|}
name|long
name|getTTL
parameter_list|()
function_decl|;
name|void
name|setTTL
parameter_list|(
name|long
name|ttl
parameter_list|)
function_decl|;
block|}
end_interface

end_unit

