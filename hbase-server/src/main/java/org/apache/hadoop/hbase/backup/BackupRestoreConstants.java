begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|backup
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_comment
comment|/**  * BackupRestoreConstants holds a bunch of HBase Backup and Restore constants  */
end_comment

begin_interface
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
interface|interface
name|BackupRestoreConstants
block|{
comment|/*    * Backup/Restore constants    */
specifier|public
specifier|final
specifier|static
name|String
name|BACKUP_SYSTEM_TABLE_NAME_KEY
init|=
literal|"hbase.backup.system.table.name"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|BACKUP_SYSTEM_TABLE_NAME_DEFAULT
init|=
literal|"hbase:backup"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|BACKUP_SYSTEM_TTL_KEY
init|=
literal|"hbase.backup.system.ttl"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|int
name|BACKUP_SYSTEM_TTL_DEFAULT
init|=
name|HConstants
operator|.
name|FOREVER
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|BACKUP_ENABLE_KEY
init|=
literal|"hbase.backup.enable"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|boolean
name|BACKUP_ENABLE_DEFAULT
init|=
literal|false
decl_stmt|;
comment|/*    *  Drivers option list    */
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_OVERWRITE
init|=
literal|"o"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_OVERWRITE_DESC
init|=
literal|"Overwrite data if any of the restore target tables exists"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_CHECK
init|=
literal|"c"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_CHECK_DESC
init|=
literal|"Check restore sequence and dependencies only (does not execute the command)"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_SET
init|=
literal|"s"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_SET_DESC
init|=
literal|"Backup set name"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_SET_RESTORE_DESC
init|=
literal|"Backup set to restore, mutually exclusive with -t (table list)"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_SET_BACKUP_DESC
init|=
literal|"Backup set to backup, mutually exclusive with -t (table list)"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_DEBUG
init|=
literal|"d"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_DEBUG_DESC
init|=
literal|"Enable debug loggings"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_TABLE
init|=
literal|"t"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_TABLE_DESC
init|=
literal|"Table name. If specified, only backup images,"
operator|+
literal|" which contain this table will be listed."
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_TABLE_LIST
init|=
literal|"l"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_TABLE_LIST_DESC
init|=
literal|"Table name list, comma-separated."
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_BANDWIDTH
init|=
literal|"b"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_BANDWIDTH_DESC
init|=
literal|"Bandwidth per task (MapReduce task) in MB/s"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_WORKERS
init|=
literal|"w"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_WORKERS_DESC
init|=
literal|"Number of parallel MapReduce tasks to execute"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_RECORD_NUMBER
init|=
literal|"n"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_RECORD_NUMBER_DESC
init|=
literal|"Number of records of backup history. Default: 10"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_PATH
init|=
literal|"p"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_PATH_DESC
init|=
literal|"Backup destination root directory path"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_TABLE_MAPPING
init|=
literal|"m"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OPTION_TABLE_MAPPING_DESC
init|=
literal|"A comma separated list of target tables. "
operator|+
literal|"If specified, each table in<tables> must have a mapping"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|BACKUP_CONFIG_STRING
init|=
name|BackupRestoreConstants
operator|.
name|BACKUP_ENABLE_KEY
operator|+
literal|"=true\n"
operator|+
literal|"hbase.master.logcleaner.plugins="
operator|+
literal|"YOUR_PLUGINS,org.apache.hadoop.hbase.backup.master.BackupLogCleaner\n"
operator|+
literal|"hbase.procedure.master.classes=YOUR_CLASSES,"
operator|+
literal|"org.apache.hadoop.hbase.backup.master.LogRollMasterProcedureManager\n"
operator|+
literal|"hbase.procedure.regionserver.classes=YOUR_CLASSES,"
operator|+
literal|"org.apache.hadoop.hbase.backup.regionserver.LogRollRegionServerProcedureManager\n"
operator|+
literal|"and restart the cluster"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ENABLE_BACKUP
init|=
literal|"Backup is not enabled. To enable backup, "
operator|+
literal|"in hbase-site.xml, set:\n "
operator|+
name|BACKUP_CONFIG_STRING
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|VERIFY_BACKUP
init|=
literal|"Please make sure that backup is enabled on the cluster. To enable backup, "
operator|+
literal|"in hbase-site.xml, set:\n "
operator|+
name|BACKUP_CONFIG_STRING
decl_stmt|;
comment|/*    *  Delimiter in table name list in restore command    */
specifier|public
specifier|static
specifier|final
name|String
name|TABLENAME_DELIMITER_IN_COMMAND
init|=
literal|","
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CONF_STAGING_ROOT
init|=
literal|"snapshot.export.staging.root"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|BACKUPID_PREFIX
init|=
literal|"backup_"
decl_stmt|;
specifier|public
specifier|static
enum|enum
name|BackupCommand
block|{
name|CREATE
block|,
name|CANCEL
block|,
name|DELETE
block|,
name|DESCRIBE
block|,
name|HISTORY
block|,
name|STATUS
block|,
name|CONVERT
block|,
name|MERGE
block|,
name|STOP
block|,
name|SHOW
block|,
name|HELP
block|,
name|PROGRESS
block|,
name|SET
block|,
name|SET_ADD
block|,
name|SET_REMOVE
block|,
name|SET_DELETE
block|,
name|SET_DESCRIBE
block|,
name|SET_LIST
block|}
block|}
end_interface

end_unit

