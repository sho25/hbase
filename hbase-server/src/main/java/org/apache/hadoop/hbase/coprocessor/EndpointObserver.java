begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|Coprocessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseInterfaceAudience
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Service
import|;
end_import

begin_comment
comment|/**  * Coprocessors implement this interface to observe and mediate endpoint invocations  * on a region.  */
end_comment

begin_interface
annotation|@
name|InterfaceAudience
operator|.
name|LimitedPrivate
argument_list|(
name|HBaseInterfaceAudience
operator|.
name|COPROC
argument_list|)
annotation|@
name|InterfaceStability
operator|.
name|Evolving
specifier|public
interface|interface
name|EndpointObserver
extends|extends
name|Coprocessor
block|{
comment|/**    * Called before an Endpoint service method is invoked.    * The request message can be altered by returning a new instance. Throwing an    * exception will abort the invocation.    * Calling {@link org.apache.hadoop.hbase.coprocessor.ObserverContext#bypass()} has no    * effect in this hook.    * @param ctx the environment provided by the region server    * @param service the endpoint service    * @param methodName the invoked service method    * @param request the request message    * @return the possibly modified message    * @throws IOException    */
name|Message
name|preEndpointInvocation
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|,
name|Service
name|service
parameter_list|,
name|String
name|methodName
parameter_list|,
name|Message
name|request
parameter_list|)
throws|throws
name|IOException
function_decl|;
comment|/**    * Called after an Endpoint service method is invoked. The response message can be    * altered using the builder.    * @param ctx the environment provided by the region server    * @param service the endpoint service    * @param methodName the invoked service method    * @param request the request message    * @param responseBuilder the response message builder    * @throws IOException    */
name|void
name|postEndpointInvocation
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|,
name|Service
name|service
parameter_list|,
name|String
name|methodName
parameter_list|,
name|Message
name|request
parameter_list|,
name|Message
operator|.
name|Builder
name|responseBuilder
parameter_list|)
throws|throws
name|IOException
function_decl|;
block|}
end_interface

end_unit

