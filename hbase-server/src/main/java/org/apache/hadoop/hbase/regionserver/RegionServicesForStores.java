begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|LinkedBlockingQueue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ThreadFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ThreadPoolExecutor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HRegionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|StealJobQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|wal
operator|.
name|WAL
import|;
end_import

begin_comment
comment|/**  * Services a Store needs from a Region.  * RegionServicesForStores class is the interface through which memstore access services at the  * region level.  * For example, when using alternative memory formats or due to compaction the memstore needs to  * take occasional lock and update size counters at the region level.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Evolving
specifier|public
class|class
name|RegionServicesForStores
block|{
specifier|private
specifier|static
specifier|final
name|int
name|POOL_SIZE
init|=
literal|10
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|ThreadPoolExecutor
name|INMEMORY_COMPACTION_POOL
init|=
operator|new
name|ThreadPoolExecutor
argument_list|(
name|POOL_SIZE
argument_list|,
name|POOL_SIZE
argument_list|,
literal|60
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|,
operator|new
name|LinkedBlockingQueue
argument_list|<
name|Runnable
argument_list|>
argument_list|()
argument_list|,
operator|new
name|ThreadFactory
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Thread
name|newThread
parameter_list|(
name|Runnable
name|r
parameter_list|)
block|{
name|Thread
name|t
init|=
operator|new
name|Thread
argument_list|(
name|r
argument_list|)
decl_stmt|;
name|t
operator|.
name|setName
argument_list|(
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"-inmemoryCompactions-"
operator|+
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|t
return|;
block|}
block|}
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|HRegion
name|region
decl_stmt|;
specifier|public
name|RegionServicesForStores
parameter_list|(
name|HRegion
name|region
parameter_list|)
block|{
name|this
operator|.
name|region
operator|=
name|region
expr_stmt|;
block|}
specifier|public
name|void
name|blockUpdates
parameter_list|()
block|{
name|region
operator|.
name|blockUpdates
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|unblockUpdates
parameter_list|()
block|{
name|region
operator|.
name|unblockUpdates
argument_list|()
expr_stmt|;
block|}
specifier|public
name|long
name|addAndGetGlobalMemstoreSize
parameter_list|(
name|long
name|size
parameter_list|)
block|{
return|return
name|region
operator|.
name|addAndGetGlobalMemstoreSize
argument_list|(
name|size
argument_list|)
return|;
block|}
specifier|public
name|HRegionInfo
name|getRegionInfo
parameter_list|()
block|{
return|return
name|region
operator|.
name|getRegionInfo
argument_list|()
return|;
block|}
specifier|public
name|WAL
name|getWAL
parameter_list|()
block|{
return|return
name|region
operator|.
name|getWAL
argument_list|()
return|;
block|}
specifier|public
name|ThreadPoolExecutor
name|getInMemoryCompactionPool
parameter_list|()
block|{
return|return
name|INMEMORY_COMPACTION_POOL
return|;
block|}
specifier|public
name|long
name|getMemstoreFlushSize
parameter_list|()
block|{
return|return
name|region
operator|.
name|getMemstoreFlushSize
argument_list|()
return|;
block|}
specifier|public
name|int
name|getNumStores
parameter_list|()
block|{
return|return
name|region
operator|.
name|getStores
argument_list|()
operator|.
name|size
argument_list|()
return|;
block|}
comment|// methods for tests
name|long
name|getGlobalMemstoreTotalSize
parameter_list|()
block|{
return|return
name|region
operator|.
name|getMemstoreSize
argument_list|()
return|;
block|}
block|}
end_class

end_unit

