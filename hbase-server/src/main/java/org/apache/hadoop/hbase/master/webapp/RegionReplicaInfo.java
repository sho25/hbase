begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|webapp
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|StreamSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|builder
operator|.
name|EqualsBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|builder
operator|.
name|HashCodeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|builder
operator|.
name|ToStringBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|builder
operator|.
name|ToStringStyle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HRegionLocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|MetaTableAccessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|RegionLocations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ServerName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|RegionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|RegionState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|assignment
operator|.
name|RegionStateStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_comment
comment|/**  * A POJO that consolidates the information about a single region replica that's stored in meta.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
specifier|final
class|class
name|RegionReplicaInfo
block|{
specifier|private
specifier|final
name|byte
index|[]
name|row
decl_stmt|;
specifier|private
specifier|final
name|RegionInfo
name|regionInfo
decl_stmt|;
specifier|private
specifier|final
name|RegionState
operator|.
name|State
name|regionState
decl_stmt|;
specifier|private
specifier|final
name|ServerName
name|serverName
decl_stmt|;
specifier|private
name|RegionReplicaInfo
parameter_list|(
specifier|final
name|Result
name|result
parameter_list|,
specifier|final
name|HRegionLocation
name|location
parameter_list|)
block|{
name|this
operator|.
name|row
operator|=
name|result
operator|!=
literal|null
condition|?
name|result
operator|.
name|getRow
argument_list|()
else|:
literal|null
expr_stmt|;
name|this
operator|.
name|regionInfo
operator|=
name|location
operator|!=
literal|null
condition|?
name|location
operator|.
name|getRegion
argument_list|()
else|:
literal|null
expr_stmt|;
name|this
operator|.
name|regionState
operator|=
operator|(
name|result
operator|!=
literal|null
operator|&&
name|regionInfo
operator|!=
literal|null
operator|)
condition|?
name|RegionStateStore
operator|.
name|getRegionState
argument_list|(
name|result
argument_list|,
name|regionInfo
argument_list|)
else|:
literal|null
expr_stmt|;
name|this
operator|.
name|serverName
operator|=
name|location
operator|!=
literal|null
condition|?
name|location
operator|.
name|getServerName
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
specifier|public
specifier|static
name|List
argument_list|<
name|RegionReplicaInfo
argument_list|>
name|from
parameter_list|(
specifier|final
name|Result
name|result
parameter_list|)
block|{
if|if
condition|(
name|result
operator|==
literal|null
condition|)
block|{
return|return
name|Collections
operator|.
name|singletonList
argument_list|(
literal|null
argument_list|)
return|;
block|}
specifier|final
name|RegionLocations
name|locations
init|=
name|MetaTableAccessor
operator|.
name|getRegionLocations
argument_list|(
name|result
argument_list|)
decl_stmt|;
if|if
condition|(
name|locations
operator|==
literal|null
condition|)
block|{
return|return
name|Collections
operator|.
name|singletonList
argument_list|(
literal|null
argument_list|)
return|;
block|}
return|return
name|StreamSupport
operator|.
name|stream
argument_list|(
name|locations
operator|.
name|spliterator
argument_list|()
argument_list|,
literal|false
argument_list|)
operator|.
name|map
argument_list|(
name|location
lambda|->
operator|new
name|RegionReplicaInfo
argument_list|(
name|result
argument_list|,
name|location
argument_list|)
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|byte
index|[]
name|getRow
parameter_list|()
block|{
return|return
name|row
return|;
block|}
specifier|public
name|RegionInfo
name|getRegionInfo
parameter_list|()
block|{
return|return
name|regionInfo
return|;
block|}
specifier|public
name|byte
index|[]
name|getRegionName
parameter_list|()
block|{
return|return
name|regionInfo
operator|!=
literal|null
condition|?
name|regionInfo
operator|.
name|getRegionName
argument_list|()
else|:
literal|null
return|;
block|}
specifier|public
name|byte
index|[]
name|getStartKey
parameter_list|()
block|{
return|return
name|regionInfo
operator|!=
literal|null
condition|?
name|regionInfo
operator|.
name|getStartKey
argument_list|()
else|:
literal|null
return|;
block|}
specifier|public
name|byte
index|[]
name|getEndKey
parameter_list|()
block|{
return|return
name|regionInfo
operator|!=
literal|null
condition|?
name|regionInfo
operator|.
name|getEndKey
argument_list|()
else|:
literal|null
return|;
block|}
specifier|public
name|Integer
name|getReplicaId
parameter_list|()
block|{
return|return
name|regionInfo
operator|!=
literal|null
condition|?
name|regionInfo
operator|.
name|getReplicaId
argument_list|()
else|:
literal|null
return|;
block|}
specifier|public
name|RegionState
operator|.
name|State
name|getRegionState
parameter_list|()
block|{
return|return
name|regionState
return|;
block|}
specifier|public
name|ServerName
name|getServerName
parameter_list|()
block|{
return|return
name|serverName
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|other
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|other
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|other
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|other
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|RegionReplicaInfo
name|that
init|=
operator|(
name|RegionReplicaInfo
operator|)
name|other
decl_stmt|;
return|return
operator|new
name|EqualsBuilder
argument_list|()
operator|.
name|append
argument_list|(
name|row
argument_list|,
name|that
operator|.
name|row
argument_list|)
operator|.
name|append
argument_list|(
name|regionInfo
argument_list|,
name|that
operator|.
name|regionInfo
argument_list|)
operator|.
name|append
argument_list|(
name|regionState
argument_list|,
name|that
operator|.
name|regionState
argument_list|)
operator|.
name|append
argument_list|(
name|serverName
argument_list|,
name|that
operator|.
name|serverName
argument_list|)
operator|.
name|isEquals
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
operator|new
name|HashCodeBuilder
argument_list|(
literal|17
argument_list|,
literal|37
argument_list|)
operator|.
name|append
argument_list|(
name|row
argument_list|)
operator|.
name|append
argument_list|(
name|regionInfo
argument_list|)
operator|.
name|append
argument_list|(
name|regionState
argument_list|)
operator|.
name|append
argument_list|(
name|serverName
argument_list|)
operator|.
name|toHashCode
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
operator|new
name|ToStringBuilder
argument_list|(
name|this
argument_list|,
name|ToStringStyle
operator|.
name|SHORT_PREFIX_STYLE
argument_list|)
operator|.
name|append
argument_list|(
literal|"row"
argument_list|,
name|Bytes
operator|.
name|toStringBinary
argument_list|(
name|row
argument_list|)
argument_list|)
operator|.
name|append
argument_list|(
literal|"regionInfo"
argument_list|,
name|regionInfo
argument_list|)
operator|.
name|append
argument_list|(
literal|"regionState"
argument_list|,
name|regionState
argument_list|)
operator|.
name|append
argument_list|(
literal|"serverName"
argument_list|,
name|serverName
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

