begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|replication
operator|.
name|regionserver
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|CompatibilitySingletonFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseInterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|EnvironmentEdgeManager
import|;
end_import

begin_comment
comment|/**  * This class is for maintaining the various replication statistics for a source and publishing them  * through the metrics interfaces.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|LimitedPrivate
argument_list|(
name|HBaseInterfaceAudience
operator|.
name|REPLICATION
argument_list|)
specifier|public
class|class
name|MetricsSource
block|{
specifier|public
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|MetricsSource
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|long
name|lastTimestamp
init|=
literal|0
decl_stmt|;
specifier|private
name|int
name|lastQueueSize
init|=
literal|0
decl_stmt|;
specifier|private
name|String
name|id
decl_stmt|;
specifier|private
specifier|final
name|MetricsReplicationSourceSource
name|singleSourceSource
decl_stmt|;
specifier|private
specifier|final
name|MetricsReplicationSourceSource
name|globalSourceSource
decl_stmt|;
comment|/**    * Constructor used to register the metrics    *    * @param id Name of the source this class is monitoring    */
specifier|public
name|MetricsSource
parameter_list|(
name|String
name|id
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
name|singleSourceSource
operator|=
name|CompatibilitySingletonFactory
operator|.
name|getInstance
argument_list|(
name|MetricsReplicationSourceFactory
operator|.
name|class
argument_list|)
operator|.
name|getSource
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|globalSourceSource
operator|=
name|CompatibilitySingletonFactory
operator|.
name|getInstance
argument_list|(
name|MetricsReplicationSourceFactory
operator|.
name|class
argument_list|)
operator|.
name|getGlobalSource
argument_list|()
expr_stmt|;
block|}
comment|/**    * Set the age of the last edit that was shipped    *    * @param timestamp write time of the edit    */
specifier|public
name|void
name|setAgeOfLastShippedOp
parameter_list|(
name|long
name|timestamp
parameter_list|)
block|{
name|long
name|age
init|=
name|EnvironmentEdgeManager
operator|.
name|currentTime
argument_list|()
operator|-
name|timestamp
decl_stmt|;
name|singleSourceSource
operator|.
name|setLastShippedAge
argument_list|(
name|age
argument_list|)
expr_stmt|;
name|globalSourceSource
operator|.
name|setLastShippedAge
argument_list|(
name|age
argument_list|)
expr_stmt|;
name|this
operator|.
name|lastTimestamp
operator|=
name|timestamp
expr_stmt|;
block|}
comment|/**    * Convenience method to use the last given timestamp to refresh the age of the last edit. Used    * when replication fails and need to keep that metric accurate.    */
specifier|public
name|void
name|refreshAgeOfLastShippedOp
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|lastTimestamp
operator|>
literal|0
condition|)
block|{
name|setAgeOfLastShippedOp
argument_list|(
name|this
operator|.
name|lastTimestamp
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Set the size of the log queue    *    * @param size the size.    */
specifier|public
name|void
name|setSizeOfLogQueue
parameter_list|(
name|int
name|size
parameter_list|)
block|{
name|singleSourceSource
operator|.
name|setSizeOfLogQueue
argument_list|(
name|size
argument_list|)
expr_stmt|;
name|globalSourceSource
operator|.
name|incrSizeOfLogQueue
argument_list|(
name|size
operator|-
name|lastQueueSize
argument_list|)
expr_stmt|;
name|lastQueueSize
operator|=
name|size
expr_stmt|;
block|}
comment|/**    * Add on the the number of log edits read    *    * @param delta the number of log edits read.    */
specifier|private
name|void
name|incrLogEditsRead
parameter_list|(
name|long
name|delta
parameter_list|)
block|{
name|singleSourceSource
operator|.
name|incrLogReadInEdits
argument_list|(
name|delta
argument_list|)
expr_stmt|;
name|globalSourceSource
operator|.
name|incrLogReadInEdits
argument_list|(
name|delta
argument_list|)
expr_stmt|;
block|}
comment|/** Increment the number of log edits read by one. */
specifier|public
name|void
name|incrLogEditsRead
parameter_list|()
block|{
name|incrLogEditsRead
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
comment|/**    * Add on the number of log edits filtered    *    * @param delta the number filtered.    */
specifier|public
name|void
name|incrLogEditsFiltered
parameter_list|(
name|long
name|delta
parameter_list|)
block|{
name|singleSourceSource
operator|.
name|incrLogEditsFiltered
argument_list|(
name|delta
argument_list|)
expr_stmt|;
name|globalSourceSource
operator|.
name|incrLogEditsFiltered
argument_list|(
name|delta
argument_list|)
expr_stmt|;
block|}
comment|/** The number of log edits filtered out. */
specifier|public
name|void
name|incrLogEditsFiltered
parameter_list|()
block|{
name|incrLogEditsFiltered
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
comment|/**    * Convience method to apply changes to metrics do to shipping a batch of logs.    *    * @param batchSize the size of the batch that was shipped to sinks.    */
specifier|public
name|void
name|shipBatch
parameter_list|(
name|long
name|batchSize
parameter_list|,
name|int
name|sizeInKB
parameter_list|)
block|{
name|singleSourceSource
operator|.
name|incrBatchesShipped
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|globalSourceSource
operator|.
name|incrBatchesShipped
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|singleSourceSource
operator|.
name|incrOpsShipped
argument_list|(
name|batchSize
argument_list|)
expr_stmt|;
name|globalSourceSource
operator|.
name|incrOpsShipped
argument_list|(
name|batchSize
argument_list|)
expr_stmt|;
name|singleSourceSource
operator|.
name|incrShippedKBs
argument_list|(
name|sizeInKB
argument_list|)
expr_stmt|;
name|globalSourceSource
operator|.
name|incrShippedKBs
argument_list|(
name|sizeInKB
argument_list|)
expr_stmt|;
block|}
comment|/** increase the byte number read by source from log file */
specifier|public
name|void
name|incrLogReadInBytes
parameter_list|(
name|long
name|readInBytes
parameter_list|)
block|{
name|singleSourceSource
operator|.
name|incrLogReadInBytes
argument_list|(
name|readInBytes
argument_list|)
expr_stmt|;
name|globalSourceSource
operator|.
name|incrLogReadInBytes
argument_list|(
name|readInBytes
argument_list|)
expr_stmt|;
block|}
comment|/** Removes all metrics about this Source. */
specifier|public
name|void
name|clear
parameter_list|()
block|{
name|singleSourceSource
operator|.
name|clear
argument_list|()
expr_stmt|;
name|globalSourceSource
operator|.
name|decrSizeOfLogQueue
argument_list|(
name|lastQueueSize
argument_list|)
expr_stmt|;
name|lastQueueSize
operator|=
literal|0
expr_stmt|;
block|}
comment|/**    * Get AgeOfLastShippedOp    * @return AgeOfLastShippedOp    */
specifier|public
name|Long
name|getAgeOfLastShippedOp
parameter_list|()
block|{
return|return
name|singleSourceSource
operator|.
name|getLastShippedAge
argument_list|()
return|;
block|}
comment|/**    * Get the sizeOfLogQueue    * @return sizeOfLogQueue    */
specifier|public
name|int
name|getSizeOfLogQueue
parameter_list|()
block|{
return|return
name|this
operator|.
name|lastQueueSize
return|;
block|}
comment|/**    * Get the timeStampsOfLastShippedOp    * @return lastTimestampForAge    */
specifier|public
name|long
name|getTimeStampOfLastShippedOp
parameter_list|()
block|{
return|return
name|lastTimestamp
return|;
block|}
comment|/**    * Get the slave peer ID    * @return peerID    */
specifier|public
name|String
name|getPeerID
parameter_list|()
block|{
return|return
name|id
return|;
block|}
block|}
end_class

end_unit

