begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AdminProtos
operator|.
name|AdminService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|ClientService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|MasterService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|RegionServerStatusProtos
operator|.
name|RegionServerStatusService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authorize
operator|.
name|PolicyProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authorize
operator|.
name|ProxyUsers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authorize
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|authorize
operator|.
name|ServiceAuthorizationManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_comment
comment|/**  * Implementation of secure Hadoop policy provider for mapping  * protocol interfaces to hbase-policy.xml entries.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|HBasePolicyProvider
extends|extends
name|PolicyProvider
block|{
specifier|protected
specifier|final
specifier|static
name|Service
index|[]
name|services
init|=
block|{
operator|new
name|Service
argument_list|(
literal|"security.client.protocol.acl"
argument_list|,
name|ClientService
operator|.
name|BlockingInterface
operator|.
name|class
argument_list|)
block|,
operator|new
name|Service
argument_list|(
literal|"security.client.protocol.acl"
argument_list|,
name|AdminService
operator|.
name|BlockingInterface
operator|.
name|class
argument_list|)
block|,
operator|new
name|Service
argument_list|(
literal|"security.client.protocol.acl"
argument_list|,
name|MasterProtos
operator|.
name|HbckService
operator|.
name|BlockingInterface
operator|.
name|class
argument_list|)
block|,
operator|new
name|Service
argument_list|(
literal|"security.client.protocol.acl"
argument_list|,
name|MasterProtos
operator|.
name|ClientMetaService
operator|.
name|BlockingInterface
operator|.
name|class
argument_list|)
block|,
operator|new
name|Service
argument_list|(
literal|"security.admin.protocol.acl"
argument_list|,
name|MasterService
operator|.
name|BlockingInterface
operator|.
name|class
argument_list|)
block|,
operator|new
name|Service
argument_list|(
literal|"security.masterregion.protocol.acl"
argument_list|,
name|RegionServerStatusService
operator|.
name|BlockingInterface
operator|.
name|class
argument_list|)
block|}
decl_stmt|;
annotation|@
name|Override
specifier|public
name|Service
index|[]
name|getServices
parameter_list|()
block|{
return|return
name|services
return|;
block|}
specifier|public
specifier|static
name|void
name|init
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|ServiceAuthorizationManager
name|authManager
parameter_list|)
block|{
comment|// set service-level authorization security policy
name|System
operator|.
name|setProperty
argument_list|(
literal|"hadoop.policy.file"
argument_list|,
literal|"hbase-policy.xml"
argument_list|)
expr_stmt|;
if|if
condition|(
name|conf
operator|.
name|getBoolean
argument_list|(
name|ServiceAuthorizationManager
operator|.
name|SERVICE_AUTHORIZATION_CONFIG
argument_list|,
literal|false
argument_list|)
condition|)
block|{
name|authManager
operator|.
name|refresh
argument_list|(
name|conf
argument_list|,
operator|new
name|HBasePolicyProvider
argument_list|()
argument_list|)
expr_stmt|;
name|ProxyUsers
operator|.
name|refreshSuperUserGroupsConfiguration
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

