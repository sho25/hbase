begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|quotas
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|quotas
operator|.
name|OperationQuota
operator|.
name|OperationType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|QuotaProtos
operator|.
name|Throttle
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Evolving
specifier|public
class|class
name|QuotaLimiterFactory
block|{
specifier|public
specifier|static
name|QuotaLimiter
name|fromThrottle
parameter_list|(
specifier|final
name|Throttle
name|throttle
parameter_list|)
block|{
return|return
name|TimeBasedLimiter
operator|.
name|fromThrottle
argument_list|(
name|throttle
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|QuotaLimiter
name|update
parameter_list|(
specifier|final
name|QuotaLimiter
name|a
parameter_list|,
specifier|final
name|QuotaLimiter
name|b
parameter_list|)
block|{
if|if
condition|(
name|a
operator|.
name|getClass
argument_list|()
operator|.
name|equals
argument_list|(
name|b
operator|.
name|getClass
argument_list|()
argument_list|)
operator|&&
name|a
operator|instanceof
name|TimeBasedLimiter
condition|)
block|{
operator|(
operator|(
name|TimeBasedLimiter
operator|)
name|a
operator|)
operator|.
name|update
argument_list|(
operator|(
operator|(
name|TimeBasedLimiter
operator|)
name|b
operator|)
argument_list|)
expr_stmt|;
return|return
name|a
return|;
block|}
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"TODO not implemented yet"
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

