begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|procedure
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ServerName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|procedure2
operator|.
name|ProcedureStateSerializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|procedure2
operator|.
name|RemoteProcedureDispatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|replication
operator|.
name|regionserver
operator|.
name|SwitchRpcThrottleRemoteCallable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|ProtobufUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProcedureProtos
operator|.
name|SwitchRpcThrottleRemoteStateData
import|;
end_import

begin_comment
comment|/**  * The procedure to switch rpc throttle on region server  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|SwitchRpcThrottleRemoteProcedure
extends|extends
name|ServerRemoteProcedure
implements|implements
name|ServerProcedureInterface
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|SwitchRpcThrottleRemoteProcedure
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|boolean
name|rpcThrottleEnabled
decl_stmt|;
specifier|public
name|SwitchRpcThrottleRemoteProcedure
parameter_list|()
block|{   }
specifier|public
name|SwitchRpcThrottleRemoteProcedure
parameter_list|(
name|ServerName
name|serverName
parameter_list|,
name|boolean
name|rpcThrottleEnabled
parameter_list|)
block|{
name|this
operator|.
name|targetServer
operator|=
name|serverName
expr_stmt|;
name|this
operator|.
name|rpcThrottleEnabled
operator|=
name|rpcThrottleEnabled
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|rollback
parameter_list|(
name|MasterProcedureEnv
name|env
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{   }
annotation|@
name|Override
specifier|protected
name|boolean
name|abort
parameter_list|(
name|MasterProcedureEnv
name|env
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|serializeStateData
parameter_list|(
name|ProcedureStateSerializer
name|serializer
parameter_list|)
throws|throws
name|IOException
block|{
name|SwitchRpcThrottleRemoteStateData
operator|.
name|newBuilder
argument_list|()
operator|.
name|setTargetServer
argument_list|(
name|ProtobufUtil
operator|.
name|toServerName
argument_list|(
name|targetServer
argument_list|)
argument_list|)
operator|.
name|setRpcThrottleEnabled
argument_list|(
name|rpcThrottleEnabled
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|deserializeStateData
parameter_list|(
name|ProcedureStateSerializer
name|serializer
parameter_list|)
throws|throws
name|IOException
block|{
name|SwitchRpcThrottleRemoteStateData
name|data
init|=
name|serializer
operator|.
name|deserialize
argument_list|(
name|SwitchRpcThrottleRemoteStateData
operator|.
name|class
argument_list|)
decl_stmt|;
name|targetServer
operator|=
name|ProtobufUtil
operator|.
name|toServerName
argument_list|(
name|data
operator|.
name|getTargetServer
argument_list|()
argument_list|)
expr_stmt|;
name|rpcThrottleEnabled
operator|=
name|data
operator|.
name|getRpcThrottleEnabled
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|RemoteProcedureDispatcher
operator|.
name|RemoteOperation
name|remoteCallBuild
parameter_list|(
name|MasterProcedureEnv
name|masterProcedureEnv
parameter_list|,
name|ServerName
name|remote
parameter_list|)
block|{
assert|assert
name|targetServer
operator|.
name|equals
argument_list|(
name|remote
argument_list|)
assert|;
return|return
operator|new
name|RSProcedureDispatcher
operator|.
name|ServerOperation
argument_list|(
name|this
argument_list|,
name|getProcId
argument_list|()
argument_list|,
name|SwitchRpcThrottleRemoteCallable
operator|.
name|class
argument_list|,
name|SwitchRpcThrottleRemoteStateData
operator|.
name|newBuilder
argument_list|()
operator|.
name|setTargetServer
argument_list|(
name|ProtobufUtil
operator|.
name|toServerName
argument_list|(
name|remote
argument_list|)
argument_list|)
operator|.
name|setRpcThrottleEnabled
argument_list|(
name|rpcThrottleEnabled
argument_list|)
operator|.
name|build
argument_list|()
operator|.
name|toByteArray
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ServerName
name|getServerName
parameter_list|()
block|{
return|return
name|targetServer
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|hasMetaTableRegion
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|ServerOperationType
name|getServerOperationType
parameter_list|()
block|{
return|return
name|ServerOperationType
operator|.
name|SWITCH_RPC_THROTTLE
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|complete
parameter_list|(
name|MasterProcedureEnv
name|env
parameter_list|,
name|Throwable
name|error
parameter_list|)
block|{
if|if
condition|(
name|error
operator|!=
literal|null
condition|)
block|{
name|LOG
operator|.
name|warn
argument_list|(
literal|"Failed to switch rpc throttle to {} on server {}"
argument_list|,
name|rpcThrottleEnabled
argument_list|,
name|targetServer
argument_list|,
name|error
argument_list|)
expr_stmt|;
name|this
operator|.
name|succ
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|succ
operator|=
literal|true
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|toStringClassDetails
parameter_list|(
name|StringBuilder
name|sb
parameter_list|)
block|{
name|sb
operator|.
name|append
argument_list|(
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|" server="
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|targetServer
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|", rpcThrottleEnabled="
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|rpcThrottleEnabled
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

