begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements. See the NOTICE file distributed with this  * work for additional information regarding copyright ownership. The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|CompatibilityFactory
import|;
end_import

begin_comment
comment|/**  * This is the glue between the HRegion and whatever hadoop shim layer  * is loaded (hbase-hadoop1-compat or hbase-hadoop2-compat).  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|MetricsRegion
block|{
specifier|private
name|MetricsRegionSource
name|source
decl_stmt|;
specifier|public
name|MetricsRegion
parameter_list|(
name|MetricsRegionWrapper
name|wrapper
parameter_list|)
block|{
name|source
operator|=
name|CompatibilityFactory
operator|.
name|getInstance
argument_list|(
name|MetricsRegionServerSourceFactory
operator|.
name|class
argument_list|)
operator|.
name|createRegion
argument_list|(
name|wrapper
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|close
parameter_list|()
block|{
name|source
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|updatePut
parameter_list|()
block|{
name|source
operator|.
name|updatePut
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|updateDelete
parameter_list|()
block|{
name|source
operator|.
name|updateDelete
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|updateGet
parameter_list|()
block|{
name|source
operator|.
name|updateGet
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|updateAppend
parameter_list|()
block|{
name|source
operator|.
name|updateAppend
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|updateIncrement
parameter_list|()
block|{
name|source
operator|.
name|updateIncrement
argument_list|()
expr_stmt|;
block|}
name|MetricsRegionSource
name|getSource
parameter_list|()
block|{
return|return
name|source
return|;
block|}
block|}
end_class

end_unit

