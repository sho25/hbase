begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ipc
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|Abortable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceStability
import|;
end_import

begin_comment
comment|/**  * RPC Executor that uses different queues for reads and writes for meta.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Evolving
specifier|public
class|class
name|MetaRWQueueRpcExecutor
extends|extends
name|RWQueueRpcExecutor
block|{
specifier|public
specifier|static
specifier|final
name|String
name|META_CALL_QUEUE_READ_SHARE_CONF_KEY
init|=
literal|"hbase.ipc.server.metacallqueue.read.ratio"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|META_CALL_QUEUE_SCAN_SHARE_CONF_KEY
init|=
literal|"hbase.ipc.server.metacallqueue.scan.ratio"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|float
name|DEFAULT_META_CALL_QUEUE_READ_SHARE
init|=
literal|0.9f
decl_stmt|;
specifier|public
name|MetaRWQueueRpcExecutor
parameter_list|(
specifier|final
name|String
name|name
parameter_list|,
specifier|final
name|int
name|handlerCount
parameter_list|,
specifier|final
name|int
name|maxQueueLength
parameter_list|,
specifier|final
name|PriorityFunction
name|priority
parameter_list|,
specifier|final
name|Configuration
name|conf
parameter_list|,
specifier|final
name|Abortable
name|abortable
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|,
name|handlerCount
argument_list|,
name|maxQueueLength
argument_list|,
name|priority
argument_list|,
name|conf
argument_list|,
name|abortable
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|float
name|getReadShare
parameter_list|(
specifier|final
name|Configuration
name|conf
parameter_list|)
block|{
return|return
name|conf
operator|.
name|getFloat
argument_list|(
name|META_CALL_QUEUE_READ_SHARE_CONF_KEY
argument_list|,
name|DEFAULT_META_CALL_QUEUE_READ_SHARE
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|float
name|getScanShare
parameter_list|(
specifier|final
name|Configuration
name|conf
parameter_list|)
block|{
return|return
name|conf
operator|.
name|getFloat
argument_list|(
name|META_CALL_QUEUE_SCAN_SHARE_CONF_KEY
argument_list|,
literal|0
argument_list|)
return|;
block|}
block|}
end_class

end_unit

