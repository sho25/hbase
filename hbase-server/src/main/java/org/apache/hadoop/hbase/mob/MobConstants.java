begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|mob
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ArrayBackedTag
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|Tag
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TagType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_comment
comment|/**  * The constants used in mob.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Public
specifier|public
specifier|final
class|class
name|MobConstants
block|{
specifier|public
specifier|static
specifier|final
name|String
name|MOB_SCAN_RAW
init|=
literal|"hbase.mob.scan.raw"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MOB_CACHE_BLOCKS
init|=
literal|"hbase.mob.cache.blocks"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MOB_SCAN_REF_ONLY
init|=
literal|"hbase.mob.scan.ref.only"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|EMPTY_VALUE_ON_MOBCELL_MISS
init|=
literal|"empty.value.on.mobcell.miss"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MOB_FILE_CACHE_SIZE_KEY
init|=
literal|"hbase.mob.file.cache.size"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_MOB_FILE_CACHE_SIZE
init|=
literal|1000
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MOB_DIR_NAME
init|=
literal|"mobdir"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MOB_REGION_NAME
init|=
literal|".mob"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|byte
index|[]
name|MOB_REGION_NAME_BYTES
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
name|MOB_REGION_NAME
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MOB_CLEANER_PERIOD
init|=
literal|"hbase.master.mob.cleaner.period"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|DEPRECATED_MOB_CLEANER_PERIOD
init|=
literal|"hbase.master.mob.ttl.cleaner.period"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_MOB_CLEANER_PERIOD
init|=
literal|24
operator|*
literal|60
operator|*
literal|60
decl_stmt|;
comment|// one day
specifier|public
specifier|static
specifier|final
name|String
name|MOB_CACHE_EVICT_PERIOD
init|=
literal|"hbase.mob.cache.evict.period"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MOB_CACHE_EVICT_REMAIN_RATIO
init|=
literal|"hbase.mob.cache.evict.remain.ratio"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Tag
name|MOB_REF_TAG
init|=
operator|new
name|ArrayBackedTag
argument_list|(
name|TagType
operator|.
name|MOB_REFERENCE_TAG_TYPE
argument_list|,
name|HConstants
operator|.
name|EMPTY_BYTE_ARRAY
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|float
name|DEFAULT_EVICT_REMAIN_RATIO
init|=
literal|0.5f
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|long
name|DEFAULT_MOB_CACHE_EVICT_PERIOD
init|=
literal|3600L
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|TEMP_DIR_NAME
init|=
literal|".tmp"
decl_stmt|;
comment|/**    * The max number of a MOB table regions that is allowed in a batch of the mob compaction. By    * setting this number to a custom value, users can control the overall effect of a major    * compaction of a large MOB-enabled table.    */
specifier|public
specifier|static
specifier|final
name|String
name|MOB_MAJOR_COMPACTION_REGION_BATCH_SIZE
init|=
literal|"hbase.mob.major.compaction.region.batch.size"
decl_stmt|;
comment|/**    * Default is 0 - means no limit - all regions of a MOB table will be compacted at once    */
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_MOB_MAJOR_COMPACTION_REGION_BATCH_SIZE
init|=
literal|0
decl_stmt|;
comment|/**    * The period that MobCompactionChore runs. The unit is second. The default value is one week.    */
specifier|public
specifier|static
specifier|final
name|String
name|MOB_COMPACTION_CHORE_PERIOD
init|=
literal|"hbase.mob.compaction.chore.period"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_MOB_COMPACTION_CHORE_PERIOD
init|=
literal|24
operator|*
literal|60
operator|*
literal|60
operator|*
literal|7
decl_stmt|;
comment|// a week
specifier|public
specifier|static
specifier|final
name|String
name|MOB_COMPACTOR_CLASS_KEY
init|=
literal|"hbase.mob.compactor.class"
decl_stmt|;
comment|/**    * Mob compaction type: "full", "optimized" "full" - run full major compaction (during migration)    * "optimized" - optimized version for use case with infrequent updates/deletes    */
specifier|public
specifier|final
specifier|static
name|String
name|OPTIMIZED_MOB_COMPACTION_TYPE
init|=
literal|"optimized"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|FULL_MOB_COMPACTION_TYPE
init|=
literal|"full"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|MOB_COMPACTION_TYPE_KEY
init|=
literal|"hbase.mob.compaction.type"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|DEFAULT_MOB_COMPACTION_TYPE
init|=
name|FULL_MOB_COMPACTION_TYPE
decl_stmt|;
comment|/**    * Maximum size of a MOB compaction selection    */
specifier|public
specifier|static
specifier|final
name|String
name|MOB_COMPACTION_MAX_FILE_SIZE_KEY
init|=
literal|"hbase.mob.compactions.max.file.size"
decl_stmt|;
comment|/**    * Default maximum selection size = 1GB    */
specifier|public
specifier|static
specifier|final
name|long
name|DEFAULT_MOB_COMPACTION_MAX_FILE_SIZE
init|=
literal|1024
operator|*
literal|1024
operator|*
literal|1024
decl_stmt|;
comment|/**    * Use this configuration option with caution, only during upgrade procedure to handle missing MOB    * cells during compaction.    */
specifier|public
specifier|static
specifier|final
name|String
name|MOB_UNSAFE_DISCARD_MISS_KEY
init|=
literal|"hbase.unsafe.mob.discard.miss"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|boolean
name|DEFAULT_MOB_DISCARD_MISS
init|=
literal|false
decl_stmt|;
comment|/**    * Minimum MOB file age to archive, default (3600000 - 1h)    */
specifier|public
specifier|static
specifier|final
name|String
name|MIN_AGE_TO_ARCHIVE_KEY
init|=
literal|"hbase.mob.min.age.archive"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|long
name|DEFAULT_MIN_AGE_TO_ARCHIVE
init|=
literal|3600000
decl_stmt|;
comment|// 1h
comment|/**    * Old configuration parameters (obsolete)    */
specifier|public
specifier|final
specifier|static
name|String
name|BULKLOAD_DIR_NAME
init|=
literal|".bulkload"
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|byte
index|[]
name|MOB_TABLE_LOCK_SUFFIX
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|".mobLock"
argument_list|)
decl_stmt|;
specifier|public
specifier|final
specifier|static
name|String
name|EMPTY_STRING
init|=
literal|""
decl_stmt|;
comment|/**    * If the size of a mob file is less than this value, it's regarded as a small file and needs to    * be merged in mob compaction. The default value is 1280MB.    */
specifier|public
specifier|static
specifier|final
name|String
name|MOB_COMPACTION_MERGEABLE_THRESHOLD
init|=
literal|"hbase.mob.compaction.mergeable.threshold"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|long
name|DEFAULT_MOB_COMPACTION_MERGEABLE_THRESHOLD
init|=
literal|10
operator|*
literal|128
operator|*
literal|1024
operator|*
literal|1024
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MOB_DELFILE_MAX_COUNT
init|=
literal|"hbase.mob.delfile.max.count"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_MOB_DELFILE_MAX_COUNT
init|=
literal|3
decl_stmt|;
comment|/**    * The max number of the mob files that is allowed in a batch of the mob compaction. The mob    * compaction merges the small mob files to bigger ones. If the number of the small files is very    * large, it could lead to a "too many opened file handlers" in the merge. And the merge has to be    * split into batches. This value limits the number of mob files that are selected in a batch of    * the mob compaction. The default value is 100. Default is 0 - means no limit - all regions of a    * MOB table will be compacted at once    */
specifier|public
specifier|static
specifier|final
name|String
name|MOB_COMPACTION_BATCH_SIZE
init|=
literal|"hbase.mob.compaction.batch.size"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_MOB_COMPACTION_BATCH_SIZE
init|=
literal|100
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MOB_COMPACTION_THREADS_MAX
init|=
literal|"hbase.mob.compaction.threads.max"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|DEFAULT_MOB_COMPACTION_THREADS_MAX
init|=
literal|1
decl_stmt|;
specifier|private
name|MobConstants
parameter_list|()
block|{    }
block|}
end_class

end_unit

