begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|hbck
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|ClusterConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|cleaner
operator|.
name|ReplicationZKNodeCleaner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|replication
operator|.
name|ReplicationQueueInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|HBaseFsck
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|HBaseFsck
operator|.
name|ErrorReporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|zookeeper
operator|.
name|ZooKeeperWatcher
import|;
end_import

begin_comment
comment|/*  * Check and fix undeleted replication queues for removed peerId.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|ReplicationChecker
block|{
specifier|private
specifier|final
name|ErrorReporter
name|errorReporter
decl_stmt|;
comment|// replicator with its queueIds for removed peers
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|undeletedQueueIds
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
comment|// replicator with its undeleted queueIds for removed peers in hfile-refs queue
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|undeletedHFileRefsQueueIds
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|ReplicationZKNodeCleaner
name|cleaner
decl_stmt|;
specifier|public
name|ReplicationChecker
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|ZooKeeperWatcher
name|zkw
parameter_list|,
name|ClusterConnection
name|connection
parameter_list|,
name|ErrorReporter
name|errorReporter
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|cleaner
operator|=
operator|new
name|ReplicationZKNodeCleaner
argument_list|(
name|conf
argument_list|,
name|zkw
argument_list|,
name|connection
argument_list|)
expr_stmt|;
name|this
operator|.
name|errorReporter
operator|=
name|errorReporter
expr_stmt|;
block|}
specifier|public
name|boolean
name|hasUnDeletedQueues
parameter_list|()
block|{
return|return
name|errorReporter
operator|.
name|getErrorList
argument_list|()
operator|.
name|contains
argument_list|(
name|HBaseFsck
operator|.
name|ErrorReporter
operator|.
name|ERROR_CODE
operator|.
name|UNDELETED_REPLICATION_QUEUE
argument_list|)
return|;
block|}
specifier|public
name|void
name|checkUnDeletedQueues
parameter_list|()
throws|throws
name|IOException
block|{
name|undeletedQueueIds
operator|=
name|cleaner
operator|.
name|getUnDeletedQueues
argument_list|()
expr_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|replicatorAndQueueIds
range|:
name|undeletedQueueIds
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|String
name|replicator
init|=
name|replicatorAndQueueIds
operator|.
name|getKey
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|queueId
range|:
name|replicatorAndQueueIds
operator|.
name|getValue
argument_list|()
control|)
block|{
name|ReplicationQueueInfo
name|queueInfo
init|=
operator|new
name|ReplicationQueueInfo
argument_list|(
name|queueId
argument_list|)
decl_stmt|;
name|String
name|msg
init|=
literal|"Undeleted replication queue for removed peer found: "
operator|+
name|String
operator|.
name|format
argument_list|(
literal|"[removedPeerId=%s, replicator=%s, queueId=%s]"
argument_list|,
name|queueInfo
operator|.
name|getPeerId
argument_list|()
argument_list|,
name|replicator
argument_list|,
name|queueId
argument_list|)
decl_stmt|;
name|errorReporter
operator|.
name|reportError
argument_list|(
name|HBaseFsck
operator|.
name|ErrorReporter
operator|.
name|ERROR_CODE
operator|.
name|UNDELETED_REPLICATION_QUEUE
argument_list|,
name|msg
argument_list|)
expr_stmt|;
block|}
block|}
name|checkUnDeletedHFileRefsQueues
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|checkUnDeletedHFileRefsQueues
parameter_list|()
throws|throws
name|IOException
block|{
name|undeletedHFileRefsQueueIds
operator|=
name|cleaner
operator|.
name|getUnDeletedHFileRefsQueues
argument_list|()
expr_stmt|;
if|if
condition|(
name|undeletedHFileRefsQueueIds
operator|!=
literal|null
operator|&&
operator|!
name|undeletedHFileRefsQueueIds
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|String
name|msg
init|=
literal|"Undeleted replication hfile-refs queue for removed peer found: "
operator|+
name|undeletedHFileRefsQueueIds
operator|+
literal|" under hfile-refs node"
decl_stmt|;
name|errorReporter
operator|.
name|reportError
argument_list|(
name|HBaseFsck
operator|.
name|ErrorReporter
operator|.
name|ERROR_CODE
operator|.
name|UNDELETED_REPLICATION_QUEUE
argument_list|,
name|msg
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|fixUnDeletedQueues
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
operator|!
name|undeletedQueueIds
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|cleaner
operator|.
name|removeQueues
argument_list|(
name|undeletedQueueIds
argument_list|)
expr_stmt|;
block|}
name|fixUnDeletedHFileRefsQueue
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|fixUnDeletedHFileRefsQueue
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|undeletedHFileRefsQueueIds
operator|!=
literal|null
operator|&&
operator|!
name|undeletedHFileRefsQueueIds
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|cleaner
operator|.
name|removeHFileRefsQueues
argument_list|(
name|undeletedHFileRefsQueueIds
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

