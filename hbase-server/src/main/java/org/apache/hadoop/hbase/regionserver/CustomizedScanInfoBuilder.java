begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_comment
comment|/**  * Helper class for CP hooks to change max versions and TTL.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|CustomizedScanInfoBuilder
implements|implements
name|ScanOptions
block|{
specifier|private
specifier|final
name|ScanInfo
name|scanInfo
decl_stmt|;
specifier|private
name|Integer
name|maxVersions
decl_stmt|;
specifier|private
name|Long
name|ttl
decl_stmt|;
specifier|public
name|CustomizedScanInfoBuilder
parameter_list|(
name|ScanInfo
name|scanInfo
parameter_list|)
block|{
name|this
operator|.
name|scanInfo
operator|=
name|scanInfo
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getMaxVersions
parameter_list|()
block|{
return|return
name|maxVersions
operator|!=
literal|null
condition|?
name|maxVersions
operator|.
name|intValue
argument_list|()
else|:
name|scanInfo
operator|.
name|getMaxVersions
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setMaxVersions
parameter_list|(
name|int
name|maxVersions
parameter_list|)
block|{
name|this
operator|.
name|maxVersions
operator|=
name|maxVersions
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getTTL
parameter_list|()
block|{
return|return
name|ttl
operator|!=
literal|null
condition|?
name|ttl
operator|.
name|longValue
argument_list|()
else|:
name|scanInfo
operator|.
name|getTtl
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setTTL
parameter_list|(
name|long
name|ttl
parameter_list|)
block|{
name|this
operator|.
name|ttl
operator|=
name|ttl
expr_stmt|;
block|}
specifier|public
name|ScanInfo
name|build
parameter_list|()
block|{
if|if
condition|(
name|maxVersions
operator|==
literal|null
operator|&&
name|ttl
operator|==
literal|null
condition|)
block|{
return|return
name|scanInfo
return|;
block|}
return|return
name|scanInfo
operator|.
name|customize
argument_list|(
name|getMaxVersions
argument_list|()
argument_list|,
name|getTTL
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"ScanOptions [maxVersions="
operator|+
name|getMaxVersions
argument_list|()
operator|+
literal|", TTL="
operator|+
name|getTTL
argument_list|()
operator|+
literal|"]"
return|;
block|}
block|}
end_class

end_unit

