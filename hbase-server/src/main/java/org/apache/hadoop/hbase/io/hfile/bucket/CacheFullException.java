begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements. See the NOTICE file distributed with this  * work for additional information regarding copyright ownership. The ASF  * licenses this file to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the  * License for the specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|io
operator|.
name|hfile
operator|.
name|bucket
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_comment
comment|/**  * Thrown by {@link BucketAllocator#allocateBlock(int)} when cache is full for  * the requested size  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|CacheFullException
extends|extends
name|IOException
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|3265127301824638920L
decl_stmt|;
specifier|private
name|int
name|requestedSize
decl_stmt|,
name|bucketIndex
decl_stmt|;
name|CacheFullException
parameter_list|(
name|int
name|requestedSize
parameter_list|,
name|int
name|bucketIndex
parameter_list|)
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|requestedSize
operator|=
name|requestedSize
expr_stmt|;
name|this
operator|.
name|bucketIndex
operator|=
name|bucketIndex
expr_stmt|;
block|}
specifier|public
name|int
name|bucketIndex
parameter_list|()
block|{
return|return
name|bucketIndex
return|;
block|}
specifier|public
name|int
name|requestedSize
parameter_list|()
block|{
return|return
name|requestedSize
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|(
literal|1024
argument_list|)
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"Allocator requested size "
argument_list|)
operator|.
name|append
argument_list|(
name|requestedSize
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|" for bucket "
argument_list|)
operator|.
name|append
argument_list|(
name|bucketIndex
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

