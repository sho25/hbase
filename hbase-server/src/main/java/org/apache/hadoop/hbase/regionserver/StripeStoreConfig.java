begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_comment
comment|/**  * Configuration class for stripe store and compactions.  * See {@link StripeStoreFileManager} for general documentation.  * See getters for the description of each setting.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|StripeStoreConfig
block|{
specifier|public
specifier|static
specifier|final
name|String
name|MAX_SPLIT_IMBALANCE
init|=
literal|"hbase.store.stripe.split.max.imbalance"
decl_stmt|;
specifier|private
name|float
name|maxSplitImbalance
decl_stmt|;
specifier|public
name|StripeStoreConfig
parameter_list|(
name|Configuration
name|config
parameter_list|)
block|{
name|maxSplitImbalance
operator|=
name|config
operator|.
name|getFloat
argument_list|(
name|MAX_SPLIT_IMBALANCE
argument_list|,
literal|1.5f
argument_list|)
expr_stmt|;
if|if
condition|(
name|maxSplitImbalance
operator|==
literal|0
condition|)
block|{
name|maxSplitImbalance
operator|=
literal|1.5f
expr_stmt|;
block|}
if|if
condition|(
name|maxSplitImbalance
operator|<
literal|1f
condition|)
block|{
name|maxSplitImbalance
operator|=
literal|1f
operator|/
name|maxSplitImbalance
expr_stmt|;
block|}
block|}
comment|/**    * @return the maximum imbalance to tolerate between sides when splitting the region    * at the stripe boundary. If the ratio of a larger to a smaller side of the split on    * the stripe-boundary is bigger than this, then some stripe will be split.    */
specifier|public
name|float
name|getMaxSplitImbalance
parameter_list|()
block|{
return|return
name|this
operator|.
name|maxSplitImbalance
return|;
block|}
block|}
end_class

end_unit

