begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|wal
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|CompatibilitySingletonFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_comment
comment|/**  * Class used to push numbers about WAL edits replay into the metrics subsystem. This will take a  * single function call and turn it into multiple manipulations of the hadoop metrics system.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|MetricsWALEditsReplay
block|{
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|MetricsWALEditsReplay
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|MetricsEditsReplaySource
name|source
decl_stmt|;
specifier|public
name|MetricsWALEditsReplay
parameter_list|()
block|{
name|source
operator|=
name|CompatibilitySingletonFactory
operator|.
name|getInstance
argument_list|(
name|MetricsEditsReplaySource
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
comment|/**    * Add the time a replay command took    */
name|void
name|updateReplayTime
parameter_list|(
name|long
name|time
parameter_list|)
block|{
name|source
operator|.
name|updateReplayTime
argument_list|(
name|time
argument_list|)
expr_stmt|;
block|}
comment|/**    * Add the batch size of each replay    */
name|void
name|updateReplayBatchSize
parameter_list|(
name|long
name|size
parameter_list|)
block|{
name|source
operator|.
name|updateReplayDataSize
argument_list|(
name|size
argument_list|)
expr_stmt|;
block|}
comment|/**    * Add the payload data size of each replay    */
name|void
name|updateReplayDataSize
parameter_list|(
name|long
name|size
parameter_list|)
block|{   }
block|}
end_class

end_unit

