begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|io
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|FSUtils
import|;
end_import

begin_comment
comment|/**  * HLogLink describes a link to a WAL.  *  * An hlog can be in /hbase/.logs/<server>/<hlog>  * or it can be in /hbase/.oldlogs/<hlog>  *  * The link checks first in the original path,  * if it is not present it fallbacks to the archived path.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|HLogLink
extends|extends
name|FileLink
block|{
comment|/**    * @param conf {@link Configuration} from which to extract specific archive locations    * @param serverName Region Server owner of the log    * @param logName WAL file name    * @throws IOException on unexpected error.    */
specifier|public
name|HLogLink
parameter_list|(
specifier|final
name|Configuration
name|conf
parameter_list|,
specifier|final
name|String
name|serverName
parameter_list|,
specifier|final
name|String
name|logName
parameter_list|)
throws|throws
name|IOException
block|{
name|this
argument_list|(
name|FSUtils
operator|.
name|getRootDir
argument_list|(
name|conf
argument_list|)
argument_list|,
name|serverName
argument_list|,
name|logName
argument_list|)
expr_stmt|;
block|}
comment|/**    * @param rootdir Path to the root directory where hbase files are stored    * @param serverName Region Server owner of the log    * @param logName WAL file name    */
specifier|public
name|HLogLink
parameter_list|(
specifier|final
name|Path
name|rootDir
parameter_list|,
specifier|final
name|String
name|serverName
parameter_list|,
specifier|final
name|String
name|logName
parameter_list|)
block|{
specifier|final
name|Path
name|oldLogDir
init|=
operator|new
name|Path
argument_list|(
name|rootDir
argument_list|,
name|HConstants
operator|.
name|HREGION_OLDLOGDIR_NAME
argument_list|)
decl_stmt|;
specifier|final
name|Path
name|logDir
init|=
operator|new
name|Path
argument_list|(
operator|new
name|Path
argument_list|(
name|rootDir
argument_list|,
name|HConstants
operator|.
name|HREGION_LOGDIR_NAME
argument_list|)
argument_list|,
name|serverName
argument_list|)
decl_stmt|;
name|setLocations
argument_list|(
operator|new
name|Path
argument_list|(
name|logDir
argument_list|,
name|logName
argument_list|)
argument_list|,
operator|new
name|Path
argument_list|(
name|oldLogDir
argument_list|,
name|logName
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * @param originPath Path to the wal in the log directory    * @param archiveDir Path to the wal in the archived log directory    */
specifier|public
name|HLogLink
parameter_list|(
specifier|final
name|Path
name|originPath
parameter_list|,
specifier|final
name|Path
name|archivePath
parameter_list|)
block|{
name|setLocations
argument_list|(
name|originPath
argument_list|,
name|archivePath
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

