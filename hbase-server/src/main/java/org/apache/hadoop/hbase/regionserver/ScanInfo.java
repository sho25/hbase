begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|CellComparator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|ColumnFamilyDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|KeepDeletedCells
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|ClassSize
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|VisibleForTesting
import|;
end_import

begin_comment
comment|/**  * Immutable information for scans over a store.  */
end_comment

begin_comment
comment|// Has to be public for PartitionedMobCompactor to access; ditto on tests making use of a few of
end_comment

begin_comment
comment|// the accessors below. Shutdown access. TODO
end_comment

begin_class
annotation|@
name|VisibleForTesting
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|ScanInfo
block|{
specifier|private
name|byte
index|[]
name|family
decl_stmt|;
specifier|private
name|int
name|minVersions
decl_stmt|;
specifier|private
name|int
name|maxVersions
decl_stmt|;
specifier|private
name|long
name|ttl
decl_stmt|;
specifier|private
name|KeepDeletedCells
name|keepDeletedCells
decl_stmt|;
specifier|private
name|long
name|timeToPurgeDeletes
decl_stmt|;
specifier|private
name|CellComparator
name|comparator
decl_stmt|;
specifier|private
name|long
name|tableMaxRowSize
decl_stmt|;
specifier|private
name|boolean
name|usePread
decl_stmt|;
specifier|private
name|long
name|cellsPerTimeoutCheck
decl_stmt|;
specifier|private
name|boolean
name|parallelSeekEnabled
decl_stmt|;
specifier|private
specifier|final
name|long
name|preadMaxBytes
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|newVersionBehavior
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|long
name|FIXED_OVERHEAD
init|=
name|ClassSize
operator|.
name|align
argument_list|(
name|ClassSize
operator|.
name|OBJECT
operator|+
operator|(
literal|2
operator|*
name|ClassSize
operator|.
name|REFERENCE
operator|)
operator|+
operator|(
literal|2
operator|*
name|Bytes
operator|.
name|SIZEOF_INT
operator|)
operator|+
operator|(
literal|4
operator|*
name|Bytes
operator|.
name|SIZEOF_LONG
operator|)
operator|+
operator|(
literal|4
operator|*
name|Bytes
operator|.
name|SIZEOF_BOOLEAN
operator|)
argument_list|)
decl_stmt|;
comment|/**    * @param conf    * @param family {@link ColumnFamilyDescriptor} describing the column family    * @param ttl Store's TTL (in ms)    * @param timeToPurgeDeletes duration in ms after which a delete marker can be purged during a    *          major compaction.    * @param comparator The store's comparator    */
specifier|public
name|ScanInfo
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|ColumnFamilyDescriptor
name|family
parameter_list|,
name|long
name|ttl
parameter_list|,
name|long
name|timeToPurgeDeletes
parameter_list|,
name|CellComparator
name|comparator
parameter_list|)
block|{
name|this
argument_list|(
name|conf
argument_list|,
name|family
operator|.
name|getName
argument_list|()
argument_list|,
name|family
operator|.
name|getMinVersions
argument_list|()
argument_list|,
name|family
operator|.
name|getMaxVersions
argument_list|()
argument_list|,
name|ttl
argument_list|,
name|family
operator|.
name|getKeepDeletedCells
argument_list|()
argument_list|,
name|family
operator|.
name|getBlocksize
argument_list|()
argument_list|,
name|timeToPurgeDeletes
argument_list|,
name|comparator
argument_list|,
name|family
operator|.
name|isNewVersionBehavior
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|long
name|getCellsPerTimeoutCheck
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|long
name|perHeartbeat
init|=
name|conf
operator|.
name|getLong
argument_list|(
name|StoreScanner
operator|.
name|HBASE_CELLS_SCANNED_PER_HEARTBEAT_CHECK
argument_list|,
name|StoreScanner
operator|.
name|DEFAULT_HBASE_CELLS_SCANNED_PER_HEARTBEAT_CHECK
argument_list|)
decl_stmt|;
return|return
name|perHeartbeat
operator|>
literal|0
condition|?
name|perHeartbeat
else|:
name|StoreScanner
operator|.
name|DEFAULT_HBASE_CELLS_SCANNED_PER_HEARTBEAT_CHECK
return|;
block|}
comment|/**    * @param conf    * @param family Name of this store's column family    * @param minVersions Store's MIN_VERSIONS setting    * @param maxVersions Store's VERSIONS setting    * @param ttl Store's TTL (in ms)    * @param blockSize Store's block size    * @param timeToPurgeDeletes duration in ms after which a delete marker can    *        be purged during a major compaction.    * @param keepDeletedCells Store's keepDeletedCells setting    * @param comparator The store's comparator    */
specifier|public
name|ScanInfo
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|byte
index|[]
name|family
parameter_list|,
name|int
name|minVersions
parameter_list|,
name|int
name|maxVersions
parameter_list|,
name|long
name|ttl
parameter_list|,
name|KeepDeletedCells
name|keepDeletedCells
parameter_list|,
name|long
name|blockSize
parameter_list|,
name|long
name|timeToPurgeDeletes
parameter_list|,
name|CellComparator
name|comparator
parameter_list|,
name|boolean
name|newVersionBehavior
parameter_list|)
block|{
name|this
argument_list|(
name|family
argument_list|,
name|minVersions
argument_list|,
name|maxVersions
argument_list|,
name|ttl
argument_list|,
name|keepDeletedCells
argument_list|,
name|timeToPurgeDeletes
argument_list|,
name|comparator
argument_list|,
name|conf
operator|.
name|getLong
argument_list|(
name|HConstants
operator|.
name|TABLE_MAX_ROWSIZE_KEY
argument_list|,
name|HConstants
operator|.
name|TABLE_MAX_ROWSIZE_DEFAULT
argument_list|)
argument_list|,
name|conf
operator|.
name|getBoolean
argument_list|(
literal|"hbase.storescanner.use.pread"
argument_list|,
literal|false
argument_list|)
argument_list|,
name|getCellsPerTimeoutCheck
argument_list|(
name|conf
argument_list|)
argument_list|,
name|conf
operator|.
name|getBoolean
argument_list|(
name|StoreScanner
operator|.
name|STORESCANNER_PARALLEL_SEEK_ENABLE
argument_list|,
literal|false
argument_list|)
argument_list|,
name|conf
operator|.
name|getLong
argument_list|(
name|StoreScanner
operator|.
name|STORESCANNER_PREAD_MAX_BYTES
argument_list|,
literal|4
operator|*
name|blockSize
argument_list|)
argument_list|,
name|newVersionBehavior
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ScanInfo
parameter_list|(
name|byte
index|[]
name|family
parameter_list|,
name|int
name|minVersions
parameter_list|,
name|int
name|maxVersions
parameter_list|,
name|long
name|ttl
parameter_list|,
name|KeepDeletedCells
name|keepDeletedCells
parameter_list|,
name|long
name|timeToPurgeDeletes
parameter_list|,
name|CellComparator
name|comparator
parameter_list|,
name|long
name|tableMaxRowSize
parameter_list|,
name|boolean
name|usePread
parameter_list|,
name|long
name|cellsPerTimeoutCheck
parameter_list|,
name|boolean
name|parallelSeekEnabled
parameter_list|,
name|long
name|preadMaxBytes
parameter_list|,
name|boolean
name|newVersionBehavior
parameter_list|)
block|{
name|this
operator|.
name|family
operator|=
name|family
expr_stmt|;
name|this
operator|.
name|minVersions
operator|=
name|minVersions
expr_stmt|;
name|this
operator|.
name|maxVersions
operator|=
name|maxVersions
expr_stmt|;
name|this
operator|.
name|ttl
operator|=
name|ttl
expr_stmt|;
name|this
operator|.
name|keepDeletedCells
operator|=
name|keepDeletedCells
expr_stmt|;
name|this
operator|.
name|timeToPurgeDeletes
operator|=
name|timeToPurgeDeletes
expr_stmt|;
name|this
operator|.
name|comparator
operator|=
name|comparator
expr_stmt|;
name|this
operator|.
name|tableMaxRowSize
operator|=
name|tableMaxRowSize
expr_stmt|;
name|this
operator|.
name|usePread
operator|=
name|usePread
expr_stmt|;
name|this
operator|.
name|cellsPerTimeoutCheck
operator|=
name|cellsPerTimeoutCheck
expr_stmt|;
name|this
operator|.
name|parallelSeekEnabled
operator|=
name|parallelSeekEnabled
expr_stmt|;
name|this
operator|.
name|preadMaxBytes
operator|=
name|preadMaxBytes
expr_stmt|;
name|this
operator|.
name|newVersionBehavior
operator|=
name|newVersionBehavior
expr_stmt|;
block|}
name|long
name|getTableMaxRowSize
parameter_list|()
block|{
return|return
name|this
operator|.
name|tableMaxRowSize
return|;
block|}
name|boolean
name|isUsePread
parameter_list|()
block|{
return|return
name|this
operator|.
name|usePread
return|;
block|}
name|long
name|getCellsPerTimeoutCheck
parameter_list|()
block|{
return|return
name|this
operator|.
name|cellsPerTimeoutCheck
return|;
block|}
name|boolean
name|isParallelSeekEnabled
parameter_list|()
block|{
return|return
name|this
operator|.
name|parallelSeekEnabled
return|;
block|}
specifier|public
name|byte
index|[]
name|getFamily
parameter_list|()
block|{
return|return
name|family
return|;
block|}
specifier|public
name|int
name|getMinVersions
parameter_list|()
block|{
return|return
name|minVersions
return|;
block|}
specifier|public
name|int
name|getMaxVersions
parameter_list|()
block|{
return|return
name|maxVersions
return|;
block|}
specifier|public
name|long
name|getTtl
parameter_list|()
block|{
return|return
name|ttl
return|;
block|}
specifier|public
name|KeepDeletedCells
name|getKeepDeletedCells
parameter_list|()
block|{
return|return
name|keepDeletedCells
return|;
block|}
specifier|public
name|long
name|getTimeToPurgeDeletes
parameter_list|()
block|{
return|return
name|timeToPurgeDeletes
return|;
block|}
specifier|public
name|CellComparator
name|getComparator
parameter_list|()
block|{
return|return
name|comparator
return|;
block|}
name|long
name|getPreadMaxBytes
parameter_list|()
block|{
return|return
name|preadMaxBytes
return|;
block|}
specifier|public
name|boolean
name|isNewVersionBehavior
parameter_list|()
block|{
return|return
name|newVersionBehavior
return|;
block|}
comment|/**    * Used for CP users for customizing max versions, ttl and keepDeletedCells.    */
name|ScanInfo
name|customize
parameter_list|(
name|int
name|maxVersions
parameter_list|,
name|long
name|ttl
parameter_list|,
name|KeepDeletedCells
name|keepDeletedCells
parameter_list|)
block|{
return|return
operator|new
name|ScanInfo
argument_list|(
name|family
argument_list|,
name|minVersions
argument_list|,
name|maxVersions
argument_list|,
name|ttl
argument_list|,
name|keepDeletedCells
argument_list|,
name|timeToPurgeDeletes
argument_list|,
name|comparator
argument_list|,
name|tableMaxRowSize
argument_list|,
name|usePread
argument_list|,
name|cellsPerTimeoutCheck
argument_list|,
name|parallelSeekEnabled
argument_list|,
name|preadMaxBytes
argument_list|,
name|newVersionBehavior
argument_list|)
return|;
block|}
block|}
end_class

end_unit

