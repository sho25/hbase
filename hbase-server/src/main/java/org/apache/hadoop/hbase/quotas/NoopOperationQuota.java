begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|quotas
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Mutation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Result
import|;
end_import

begin_comment
comment|/**  * Noop operation quota returned when no quota is associated to the user/table  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Evolving
class|class
name|NoopOperationQuota
implements|implements
name|OperationQuota
block|{
specifier|private
specifier|static
name|OperationQuota
name|instance
init|=
operator|new
name|NoopOperationQuota
argument_list|()
decl_stmt|;
specifier|private
name|NoopOperationQuota
parameter_list|()
block|{
comment|// no-op
block|}
specifier|public
specifier|static
name|OperationQuota
name|get
parameter_list|()
block|{
return|return
name|instance
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|checkQuota
parameter_list|(
name|int
name|numWrites
parameter_list|,
name|int
name|numReads
parameter_list|,
name|int
name|numScans
parameter_list|)
throws|throws
name|ThrottlingException
block|{
comment|// no-op
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
block|{
comment|// no-op
block|}
annotation|@
name|Override
specifier|public
name|void
name|addGetResult
parameter_list|(
specifier|final
name|Result
name|result
parameter_list|)
block|{
comment|// no-op
block|}
annotation|@
name|Override
specifier|public
name|void
name|addScanResult
parameter_list|(
specifier|final
name|List
argument_list|<
name|Result
argument_list|>
name|results
parameter_list|)
block|{
comment|// no-op
block|}
annotation|@
name|Override
specifier|public
name|void
name|addMutation
parameter_list|(
specifier|final
name|Mutation
name|mutation
parameter_list|)
block|{
comment|// no-op
block|}
annotation|@
name|Override
specifier|public
name|long
name|getReadAvailable
parameter_list|()
block|{
return|return
name|Long
operator|.
name|MAX_VALUE
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getWriteAvailable
parameter_list|()
block|{
return|return
name|Long
operator|.
name|MAX_VALUE
return|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getAvgOperationSize
parameter_list|(
name|OperationType
name|type
parameter_list|)
block|{
return|return
operator|-
literal|1
return|;
block|}
block|}
end_class

end_unit

