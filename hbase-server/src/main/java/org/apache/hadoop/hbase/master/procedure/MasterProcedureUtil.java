begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|procedure
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|RPCProtos
operator|.
name|UserInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|security
operator|.
name|UserGroupInformation
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Evolving
specifier|public
specifier|final
class|class
name|MasterProcedureUtil
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|MasterProcedureUtil
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|MasterProcedureUtil
parameter_list|()
block|{}
specifier|public
specifier|static
name|UserInformation
name|toProtoUserInfo
parameter_list|(
name|User
name|user
parameter_list|)
block|{
name|UserInformation
operator|.
name|Builder
name|userInfoPB
init|=
name|UserInformation
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|userInfoPB
operator|.
name|setEffectiveUser
argument_list|(
name|user
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|user
operator|.
name|getUGI
argument_list|()
operator|.
name|getRealUser
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|userInfoPB
operator|.
name|setRealUser
argument_list|(
name|user
operator|.
name|getUGI
argument_list|()
operator|.
name|getRealUser
argument_list|()
operator|.
name|getUserName
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|userInfoPB
operator|.
name|build
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|User
name|toUserInfo
parameter_list|(
name|UserInformation
name|userInfoProto
parameter_list|)
block|{
if|if
condition|(
name|userInfoProto
operator|.
name|hasEffectiveUser
argument_list|()
condition|)
block|{
name|String
name|effectiveUser
init|=
name|userInfoProto
operator|.
name|getEffectiveUser
argument_list|()
decl_stmt|;
if|if
condition|(
name|userInfoProto
operator|.
name|hasRealUser
argument_list|()
condition|)
block|{
name|String
name|realUser
init|=
name|userInfoProto
operator|.
name|getRealUser
argument_list|()
decl_stmt|;
name|UserGroupInformation
name|realUserUgi
init|=
name|UserGroupInformation
operator|.
name|createRemoteUser
argument_list|(
name|realUser
argument_list|)
decl_stmt|;
return|return
name|User
operator|.
name|create
argument_list|(
name|UserGroupInformation
operator|.
name|createProxyUser
argument_list|(
name|effectiveUser
argument_list|,
name|realUserUgi
argument_list|)
argument_list|)
return|;
block|}
return|return
name|User
operator|.
name|create
argument_list|(
name|UserGroupInformation
operator|.
name|createRemoteUser
argument_list|(
name|effectiveUser
argument_list|)
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

