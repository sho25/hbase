begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterMonitorProtos
operator|.
name|MasterMonitorService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|TokenInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|KerberosInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterMonitorProtos
operator|.
name|GetSchemaAlterStatusRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterMonitorProtos
operator|.
name|GetSchemaAlterStatusResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterMonitorProtos
operator|.
name|GetTableDescriptorsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterMonitorProtos
operator|.
name|GetTableDescriptorsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterMonitorProtos
operator|.
name|GetClusterStatusRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterMonitorProtos
operator|.
name|GetClusterStatusResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|IsMasterRunningRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|MasterProtos
operator|.
name|IsMasterRunningResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RpcController
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ServiceException
import|;
end_import

begin_comment
comment|/**  * Protocol that a client uses to communicate with the Master (for monitoring purposes).  */
end_comment

begin_interface
annotation|@
name|KerberosInfo
argument_list|(
name|serverPrincipal
operator|=
literal|"hbase.master.kerberos.principal"
argument_list|)
annotation|@
name|TokenInfo
argument_list|(
literal|"HBASE_AUTH_TOKEN"
argument_list|)
annotation|@
name|InterfaceAudience
operator|.
name|Public
annotation|@
name|InterfaceStability
operator|.
name|Evolving
specifier|public
interface|interface
name|MasterMonitorProtocol
extends|extends
name|MasterMonitorService
operator|.
name|BlockingInterface
extends|,
name|MasterProtocol
block|{
specifier|public
specifier|static
specifier|final
name|long
name|VERSION
init|=
literal|1L
decl_stmt|;
comment|/**    * Used by the client to get the number of regions that have received the    * updated schema    *    * @param controller Unused (set to null).    * @param req GetSchemaAlterStatusRequest that contains:<br>    * - tableName    * @return GetSchemaAlterStatusResponse indicating the number of regions updated.    *         yetToUpdateRegions is the regions that are yet to be updated totalRegions    *         is the total number of regions of the table    * @throws ServiceException    */
annotation|@
name|Override
specifier|public
name|GetSchemaAlterStatusResponse
name|getSchemaAlterStatus
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|GetSchemaAlterStatusRequest
name|req
parameter_list|)
throws|throws
name|ServiceException
function_decl|;
comment|/**    * Get list of TableDescriptors for requested tables.    * @param controller Unused (set to null).    * @param req GetTableDescriptorsRequest that contains:<br>    * - tableNames: requested tables, or if empty, all are requested    * @return GetTableDescriptorsResponse    * @throws ServiceException    */
annotation|@
name|Override
specifier|public
name|GetTableDescriptorsResponse
name|getTableDescriptors
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|GetTableDescriptorsRequest
name|req
parameter_list|)
throws|throws
name|ServiceException
function_decl|;
comment|/**    * Return cluster status.    * @param controller Unused (set to null).    * @param req GetClusterStatusRequest    * @return status object    * @throws ServiceException    */
annotation|@
name|Override
specifier|public
name|GetClusterStatusResponse
name|getClusterStatus
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|GetClusterStatusRequest
name|req
parameter_list|)
throws|throws
name|ServiceException
function_decl|;
comment|/**    * @param c Unused (set to null).    * @param req IsMasterRunningRequest    * @return IsMasterRunningRequest that contains:<br>    * isMasterRunning: true if master is available    * @throws ServiceException    */
annotation|@
name|Override
specifier|public
name|IsMasterRunningResponse
name|isMasterRunning
parameter_list|(
name|RpcController
name|c
parameter_list|,
name|IsMasterRunningRequest
name|req
parameter_list|)
throws|throws
name|ServiceException
function_decl|;
block|}
end_interface

end_unit

