begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|migration
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Lists
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HRegionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|NamespaceDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|exceptions
operator|.
name|DeserializationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|HRegion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|snapshot
operator|.
name|SnapshotDescriptionUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|FSUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|util
operator|.
name|Tool
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Upgrades old 0.94 filesystem layout to namespace layout  * Does the following:  *  * - creates system namespace directory and move .META. table there  * renaming .META. table to hbase:meta,  * this in turn would require to re-encode the region directory name  */
end_comment

begin_class
specifier|public
class|class
name|NamespaceUpgrade
implements|implements
name|Tool
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|NamespaceUpgrade
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|Configuration
name|conf
decl_stmt|;
specifier|private
name|FileSystem
name|fs
decl_stmt|;
specifier|private
name|Path
name|rootDir
decl_stmt|;
specifier|private
name|Path
name|sysNsDir
decl_stmt|;
specifier|private
name|Path
name|defNsDir
decl_stmt|;
specifier|private
name|Path
name|baseDirs
index|[]
decl_stmt|;
specifier|public
name|NamespaceUpgrade
parameter_list|()
throws|throws
name|IOException
block|{   }
specifier|public
name|void
name|init
parameter_list|()
throws|throws
name|IOException
block|{
name|this
operator|.
name|rootDir
operator|=
name|FSUtils
operator|.
name|getRootDir
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|this
operator|.
name|fs
operator|=
name|FileSystem
operator|.
name|get
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|sysNsDir
operator|=
name|FSUtils
operator|.
name|getNamespaceDir
argument_list|(
name|rootDir
argument_list|,
name|NamespaceDescriptor
operator|.
name|SYSTEM_NAMESPACE_NAME_STR
argument_list|)
expr_stmt|;
name|defNsDir
operator|=
name|FSUtils
operator|.
name|getNamespaceDir
argument_list|(
name|rootDir
argument_list|,
name|NamespaceDescriptor
operator|.
name|DEFAULT_NAMESPACE_NAME_STR
argument_list|)
expr_stmt|;
name|baseDirs
operator|=
operator|new
name|Path
index|[]
block|{
name|rootDir
block|,
operator|new
name|Path
argument_list|(
name|rootDir
argument_list|,
name|HConstants
operator|.
name|HFILE_ARCHIVE_DIRECTORY
argument_list|)
block|,
operator|new
name|Path
argument_list|(
name|rootDir
argument_list|,
name|HConstants
operator|.
name|HBASE_TEMP_DIRECTORY
argument_list|)
block|}
expr_stmt|;
block|}
specifier|public
name|void
name|upgradeTableDirs
parameter_list|()
throws|throws
name|IOException
throws|,
name|DeserializationException
block|{
comment|//if new version is written then upgrade is done
if|if
condition|(
name|verifyNSUpgrade
argument_list|(
name|fs
argument_list|,
name|rootDir
argument_list|)
condition|)
block|{
return|return;
block|}
name|makeNamespaceDirs
argument_list|()
expr_stmt|;
name|migrateTables
argument_list|()
expr_stmt|;
name|migrateSnapshots
argument_list|()
expr_stmt|;
name|migrateMeta
argument_list|()
expr_stmt|;
name|FSUtils
operator|.
name|setVersion
argument_list|(
name|fs
argument_list|,
name|rootDir
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|makeNamespaceDirs
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
operator|!
name|fs
operator|.
name|exists
argument_list|(
name|sysNsDir
argument_list|)
condition|)
block|{
if|if
condition|(
operator|!
name|fs
operator|.
name|mkdirs
argument_list|(
name|sysNsDir
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Failed to create system namespace dir: "
operator|+
name|sysNsDir
argument_list|)
throw|;
block|}
block|}
if|if
condition|(
operator|!
name|fs
operator|.
name|exists
argument_list|(
name|defNsDir
argument_list|)
condition|)
block|{
if|if
condition|(
operator|!
name|fs
operator|.
name|mkdirs
argument_list|(
name|defNsDir
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Failed to create default namespace dir: "
operator|+
name|defNsDir
argument_list|)
throw|;
block|}
block|}
block|}
specifier|public
name|void
name|migrateTables
parameter_list|()
throws|throws
name|IOException
block|{
name|List
argument_list|<
name|String
argument_list|>
name|sysTables
init|=
name|Lists
operator|.
name|newArrayList
argument_list|(
literal|"-ROOT-"
argument_list|,
literal|".META."
argument_list|)
decl_stmt|;
comment|//migrate tables including archive and tmp
for|for
control|(
name|Path
name|baseDir
range|:
name|baseDirs
control|)
block|{
name|List
argument_list|<
name|Path
argument_list|>
name|oldTableDirs
init|=
name|FSUtils
operator|.
name|getLocalTableDirs
argument_list|(
name|fs
argument_list|,
name|baseDir
argument_list|)
decl_stmt|;
for|for
control|(
name|Path
name|oldTableDir
range|:
name|oldTableDirs
control|)
block|{
if|if
condition|(
operator|!
name|sysTables
operator|.
name|contains
argument_list|(
name|oldTableDir
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|Path
name|nsDir
init|=
name|FSUtils
operator|.
name|getTableDir
argument_list|(
name|baseDir
argument_list|,
name|TableName
operator|.
name|valueOf
argument_list|(
name|oldTableDir
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|fs
operator|.
name|exists
argument_list|(
name|nsDir
operator|.
name|getParent
argument_list|()
argument_list|)
condition|)
block|{
if|if
condition|(
operator|!
name|fs
operator|.
name|mkdirs
argument_list|(
name|nsDir
operator|.
name|getParent
argument_list|()
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Failed to create namespace dir "
operator|+
name|nsDir
operator|.
name|getParent
argument_list|()
argument_list|)
throw|;
block|}
block|}
if|if
condition|(
name|sysTables
operator|.
name|indexOf
argument_list|(
name|oldTableDir
operator|.
name|getName
argument_list|()
argument_list|)
operator|<
literal|0
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Migrating table "
operator|+
name|oldTableDir
operator|.
name|getName
argument_list|()
operator|+
literal|" to "
operator|+
name|nsDir
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|fs
operator|.
name|rename
argument_list|(
name|oldTableDir
argument_list|,
name|nsDir
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Failed to move "
operator|+
name|oldTableDir
operator|+
literal|" to namespace dir "
operator|+
name|nsDir
argument_list|)
throw|;
block|}
block|}
block|}
block|}
block|}
block|}
specifier|public
name|void
name|migrateSnapshots
parameter_list|()
throws|throws
name|IOException
block|{
comment|//migrate snapshot dir
name|Path
name|oldSnapshotDir
init|=
operator|new
name|Path
argument_list|(
name|rootDir
argument_list|,
name|HConstants
operator|.
name|OLD_SNAPSHOT_DIR_NAME
argument_list|)
decl_stmt|;
name|Path
name|newSnapshotDir
init|=
operator|new
name|Path
argument_list|(
name|rootDir
argument_list|,
name|HConstants
operator|.
name|SNAPSHOT_DIR_NAME
argument_list|)
decl_stmt|;
if|if
condition|(
name|fs
operator|.
name|exists
argument_list|(
name|oldSnapshotDir
argument_list|)
condition|)
block|{
name|boolean
name|foundOldSnapshotDir
init|=
literal|false
decl_stmt|;
comment|// Logic to verify old snapshot dir culled from SnapshotManager
comment|// ignore all the snapshots in progress
name|FileStatus
index|[]
name|snapshots
init|=
name|fs
operator|.
name|listStatus
argument_list|(
name|oldSnapshotDir
argument_list|,
operator|new
name|SnapshotDescriptionUtils
operator|.
name|CompletedSnaphotDirectoriesFilter
argument_list|(
name|fs
argument_list|)
argument_list|)
decl_stmt|;
comment|// loop through all the completed snapshots
for|for
control|(
name|FileStatus
name|snapshot
range|:
name|snapshots
control|)
block|{
name|Path
name|info
init|=
operator|new
name|Path
argument_list|(
name|snapshot
operator|.
name|getPath
argument_list|()
argument_list|,
name|SnapshotDescriptionUtils
operator|.
name|SNAPSHOTINFO_FILE
argument_list|)
decl_stmt|;
comment|// if the snapshot is bad
if|if
condition|(
name|fs
operator|.
name|exists
argument_list|(
name|info
argument_list|)
condition|)
block|{
name|foundOldSnapshotDir
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
name|foundOldSnapshotDir
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Migrating snapshot dir"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|fs
operator|.
name|rename
argument_list|(
name|oldSnapshotDir
argument_list|,
name|newSnapshotDir
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Failed to move old snapshot dir "
operator|+
name|oldSnapshotDir
operator|+
literal|" to new "
operator|+
name|newSnapshotDir
argument_list|)
throw|;
block|}
block|}
block|}
block|}
specifier|public
name|void
name|migrateMeta
parameter_list|()
throws|throws
name|IOException
block|{
name|Path
name|newMetaRegionDir
init|=
name|HRegion
operator|.
name|getRegionDir
argument_list|(
name|rootDir
argument_list|,
name|HRegionInfo
operator|.
name|FIRST_META_REGIONINFO
argument_list|)
decl_stmt|;
name|Path
name|newMetaDir
init|=
name|FSUtils
operator|.
name|getTableDir
argument_list|(
name|rootDir
argument_list|,
name|TableName
operator|.
name|META_TABLE_NAME
argument_list|)
decl_stmt|;
name|Path
name|oldMetaDir
init|=
operator|new
name|Path
argument_list|(
name|rootDir
argument_list|,
literal|".META."
argument_list|)
decl_stmt|;
if|if
condition|(
name|fs
operator|.
name|exists
argument_list|(
name|oldMetaDir
argument_list|)
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Migrating meta table "
operator|+
name|oldMetaDir
operator|.
name|getName
argument_list|()
operator|+
literal|" to "
operator|+
name|newMetaDir
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|fs
operator|.
name|rename
argument_list|(
name|oldMetaDir
argument_list|,
name|newMetaDir
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Failed to migrate meta table "
operator|+
name|oldMetaDir
operator|.
name|getName
argument_list|()
operator|+
literal|" to "
operator|+
name|newMetaDir
argument_list|)
throw|;
block|}
block|}
comment|//since meta table name has changed
comment|//rename meta region dir from it's old encoding to new one
name|Path
name|oldMetaRegionDir
init|=
name|HRegion
operator|.
name|getRegionDir
argument_list|(
name|rootDir
argument_list|,
operator|new
name|Path
argument_list|(
name|newMetaDir
argument_list|,
literal|"1028785192"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|fs
operator|.
name|exists
argument_list|(
name|oldMetaRegionDir
argument_list|)
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Migrating meta region "
operator|+
name|oldMetaRegionDir
operator|+
literal|" to "
operator|+
name|newMetaRegionDir
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|fs
operator|.
name|rename
argument_list|(
name|oldMetaRegionDir
argument_list|,
name|newMetaRegionDir
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Failed to migrate meta region "
operator|+
name|oldMetaRegionDir
operator|+
literal|" to "
operator|+
name|newMetaRegionDir
argument_list|)
throw|;
block|}
block|}
block|}
specifier|public
specifier|static
name|boolean
name|verifyNSUpgrade
parameter_list|(
name|FileSystem
name|fs
parameter_list|,
name|Path
name|rootDir
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
return|return
name|FSUtils
operator|.
name|getVersion
argument_list|(
name|fs
argument_list|,
name|rootDir
argument_list|)
operator|.
name|equals
argument_list|(
name|HConstants
operator|.
name|FILE_SYSTEM_VERSION
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|DeserializationException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Failed to verify namespace upgrade"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|int
name|run
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|args
operator|.
name|length
operator|<
literal|1
operator|||
operator|!
name|args
index|[
literal|0
index|]
operator|.
name|equals
argument_list|(
literal|"--upgrade"
argument_list|)
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Usage:<CMD> --upgrade"
argument_list|)
expr_stmt|;
return|return
literal|0
return|;
block|}
name|init
argument_list|()
expr_stmt|;
name|upgradeTableDirs
argument_list|()
expr_stmt|;
return|return
literal|0
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setConf
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Configuration
name|getConf
parameter_list|()
block|{
return|return
name|conf
return|;
block|}
block|}
end_class

end_unit

