begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|balancer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ServerName
import|;
end_import

begin_comment
comment|/**  * Data structure that holds servername and 'load'.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
class|class
name|ServerAndLoad
implements|implements
name|Comparable
argument_list|<
name|ServerAndLoad
argument_list|>
implements|,
name|Serializable
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|2735470854607296965L
decl_stmt|;
specifier|private
specifier|final
name|ServerName
name|sn
decl_stmt|;
specifier|private
specifier|final
name|int
name|load
decl_stmt|;
name|ServerAndLoad
parameter_list|(
specifier|final
name|ServerName
name|sn
parameter_list|,
specifier|final
name|int
name|load
parameter_list|)
block|{
name|this
operator|.
name|sn
operator|=
name|sn
expr_stmt|;
name|this
operator|.
name|load
operator|=
name|load
expr_stmt|;
block|}
name|ServerName
name|getServerName
parameter_list|()
block|{
return|return
name|this
operator|.
name|sn
return|;
block|}
name|int
name|getLoad
parameter_list|()
block|{
return|return
name|this
operator|.
name|load
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
name|ServerAndLoad
name|other
parameter_list|)
block|{
name|int
name|diff
init|=
name|this
operator|.
name|load
operator|-
name|other
operator|.
name|load
decl_stmt|;
return|return
name|diff
operator|!=
literal|0
condition|?
name|diff
else|:
name|this
operator|.
name|sn
operator|.
name|compareTo
argument_list|(
name|other
operator|.
name|getServerName
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|instanceof
name|ServerAndLoad
condition|)
block|{
name|ServerAndLoad
name|sl
init|=
operator|(
name|ServerAndLoad
operator|)
name|o
decl_stmt|;
return|return
name|this
operator|.
name|compareTo
argument_list|(
name|sl
argument_list|)
operator|==
literal|0
return|;
block|}
return|return
literal|false
return|;
block|}
block|}
end_class

end_unit

