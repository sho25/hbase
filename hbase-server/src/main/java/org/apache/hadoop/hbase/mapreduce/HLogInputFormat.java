begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|mapreduce
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|wal
operator|.
name|HLogKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|wal
operator|.
name|WALEdit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|InputFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|InputSplit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|JobContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|RecordReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|TaskAttemptContext
import|;
end_import

begin_comment
comment|/**  * Simple {@link InputFormat} for {@link org.apache.hadoop.hbase.wal.WAL}   * files.  * @deprecated use {@link WALInputFormat}.  Remove in hadoop 3.0  */
end_comment

begin_class
annotation|@
name|Deprecated
annotation|@
name|InterfaceAudience
operator|.
name|Public
specifier|public
class|class
name|HLogInputFormat
extends|extends
name|InputFormat
argument_list|<
name|HLogKey
argument_list|,
name|WALEdit
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|HLogInputFormat
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|START_TIME_KEY
init|=
literal|"hlog.start.time"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|END_TIME_KEY
init|=
literal|"hlog.end.time"
decl_stmt|;
comment|// Delegate to WALInputFormat for implementation.
specifier|private
specifier|final
name|WALInputFormat
name|delegate
init|=
operator|new
name|WALInputFormat
argument_list|()
decl_stmt|;
comment|/**    * {@link RecordReader} that pulls out the legacy HLogKey format directly.    */
specifier|static
class|class
name|HLogKeyRecordReader
extends|extends
name|WALInputFormat
operator|.
name|WALRecordReader
argument_list|<
name|HLogKey
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|HLogKey
name|getCurrentKey
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
if|if
condition|(
operator|!
operator|(
name|currentEntry
operator|.
name|getKey
argument_list|()
operator|instanceof
name|HLogKey
operator|)
condition|)
block|{
specifier|final
name|IllegalStateException
name|exception
init|=
operator|new
name|IllegalStateException
argument_list|(
literal|"HLogInputFormat only works when given entries that have HLogKey for keys. This"
operator|+
literal|" one had '"
operator|+
name|currentEntry
operator|.
name|getKey
argument_list|()
operator|.
name|getClass
argument_list|()
operator|+
literal|"'"
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|error
argument_list|(
literal|"The deprecated HLogInputFormat has to work with the deprecated HLogKey class, "
operator|+
literal|" but HBase internals read the wal entry using some other class."
operator|+
literal|" This is a bug; please file an issue or email the developer mailing list. It is "
operator|+
literal|"likely that you would not have this problem if you updated to use WALInputFormat. "
operator|+
literal|"You will need the following exception details when seeking help from the HBase "
operator|+
literal|"community."
argument_list|,
name|exception
argument_list|)
expr_stmt|;
throw|throw
name|exception
throw|;
block|}
return|return
operator|(
name|HLogKey
operator|)
name|currentEntry
operator|.
name|getKey
argument_list|()
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|InputSplit
argument_list|>
name|getSplits
parameter_list|(
name|JobContext
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
name|delegate
operator|.
name|getSplits
argument_list|(
name|context
argument_list|,
name|START_TIME_KEY
argument_list|,
name|END_TIME_KEY
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|RecordReader
argument_list|<
name|HLogKey
argument_list|,
name|WALEdit
argument_list|>
name|createRecordReader
parameter_list|(
name|InputSplit
name|split
parameter_list|,
name|TaskAttemptContext
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
return|return
operator|new
name|HLogKeyRecordReader
argument_list|()
return|;
block|}
block|}
end_class

end_unit

