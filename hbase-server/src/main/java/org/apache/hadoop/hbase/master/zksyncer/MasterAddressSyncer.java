begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|zksyncer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|zookeeper
operator|.
name|ZKWatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_comment
comment|/**  * Tracks the active master address on server ZK cluster and synchronize them to client ZK cluster  * if changed  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|MasterAddressSyncer
extends|extends
name|ClientZKSyncer
block|{
specifier|private
specifier|final
name|String
name|masterAddressZNode
decl_stmt|;
specifier|public
name|MasterAddressSyncer
parameter_list|(
name|ZKWatcher
name|watcher
parameter_list|,
name|ZKWatcher
name|clientZkWatcher
parameter_list|,
name|Server
name|server
parameter_list|)
block|{
name|super
argument_list|(
name|watcher
argument_list|,
name|clientZkWatcher
argument_list|,
name|server
argument_list|)
expr_stmt|;
name|masterAddressZNode
operator|=
name|watcher
operator|.
name|znodePaths
operator|.
name|masterAddressZNode
expr_stmt|;
block|}
annotation|@
name|Override
name|boolean
name|validate
parameter_list|(
name|String
name|path
parameter_list|)
block|{
return|return
name|path
operator|.
name|equals
argument_list|(
name|masterAddressZNode
argument_list|)
return|;
block|}
annotation|@
name|Override
name|Collection
argument_list|<
name|String
argument_list|>
name|getNodesToWatch
parameter_list|()
block|{
name|ArrayList
argument_list|<
name|String
argument_list|>
name|toReturn
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|toReturn
operator|.
name|add
argument_list|(
name|masterAddressZNode
argument_list|)
expr_stmt|;
return|return
name|toReturn
return|;
block|}
block|}
end_class

end_unit

