begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|classification
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|SnapshotDescription
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Provides the coprocessor framework and environment for master oriented  * operations.  {@link HMaster} interacts with the loaded coprocessors  * through this class.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|MasterCoprocessorHost
extends|extends
name|CoprocessorHost
argument_list|<
name|MasterCoprocessorHost
operator|.
name|MasterEnvironment
argument_list|>
block|{
comment|/**    * Coprocessor environment extension providing access to master related    * services.    */
specifier|static
class|class
name|MasterEnvironment
extends|extends
name|CoprocessorHost
operator|.
name|Environment
implements|implements
name|MasterCoprocessorEnvironment
block|{
specifier|private
name|MasterServices
name|masterServices
decl_stmt|;
specifier|public
name|MasterEnvironment
parameter_list|(
specifier|final
name|Class
argument_list|<
name|?
argument_list|>
name|implClass
parameter_list|,
specifier|final
name|Coprocessor
name|impl
parameter_list|,
specifier|final
name|int
name|priority
parameter_list|,
specifier|final
name|int
name|seq
parameter_list|,
specifier|final
name|Configuration
name|conf
parameter_list|,
specifier|final
name|MasterServices
name|services
parameter_list|)
block|{
name|super
argument_list|(
name|impl
argument_list|,
name|priority
argument_list|,
name|seq
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|this
operator|.
name|masterServices
operator|=
name|services
expr_stmt|;
block|}
specifier|public
name|MasterServices
name|getMasterServices
parameter_list|()
block|{
return|return
name|masterServices
return|;
block|}
block|}
specifier|private
name|MasterServices
name|masterServices
decl_stmt|;
name|MasterCoprocessorHost
parameter_list|(
specifier|final
name|MasterServices
name|services
parameter_list|,
specifier|final
name|Configuration
name|conf
parameter_list|)
block|{
name|super
argument_list|(
name|services
argument_list|)
expr_stmt|;
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
name|this
operator|.
name|masterServices
operator|=
name|services
expr_stmt|;
name|loadSystemCoprocessors
argument_list|(
name|conf
argument_list|,
name|MASTER_COPROCESSOR_CONF_KEY
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|MasterEnvironment
name|createEnvironment
parameter_list|(
specifier|final
name|Class
argument_list|<
name|?
argument_list|>
name|implClass
parameter_list|,
specifier|final
name|Coprocessor
name|instance
parameter_list|,
specifier|final
name|int
name|priority
parameter_list|,
specifier|final
name|int
name|seq
parameter_list|,
specifier|final
name|Configuration
name|conf
parameter_list|)
block|{
for|for
control|(
name|Class
argument_list|<
name|?
argument_list|>
name|c
range|:
name|implClass
operator|.
name|getInterfaces
argument_list|()
control|)
block|{
if|if
condition|(
name|CoprocessorService
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|c
argument_list|)
condition|)
block|{
name|masterServices
operator|.
name|registerService
argument_list|(
operator|(
operator|(
name|CoprocessorService
operator|)
name|instance
operator|)
operator|.
name|getService
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|return
operator|new
name|MasterEnvironment
argument_list|(
name|implClass
argument_list|,
name|instance
argument_list|,
name|priority
argument_list|,
name|seq
argument_list|,
name|conf
argument_list|,
name|masterServices
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|preCreateNamespace
parameter_list|(
specifier|final
name|NamespaceDescriptor
name|ns
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preCreateNamespace
argument_list|(
name|ctx
argument_list|,
name|ns
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postCreateNamespace
parameter_list|(
specifier|final
name|NamespaceDescriptor
name|ns
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postCreateNamespace
argument_list|(
name|ctx
argument_list|,
name|ns
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preDeleteNamespace
parameter_list|(
specifier|final
name|String
name|namespaceName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preDeleteNamespace
argument_list|(
name|ctx
argument_list|,
name|namespaceName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postDeleteNamespace
parameter_list|(
specifier|final
name|String
name|namespaceName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postDeleteNamespace
argument_list|(
name|ctx
argument_list|,
name|namespaceName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preModifyNamespace
parameter_list|(
specifier|final
name|NamespaceDescriptor
name|ns
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preModifyNamespace
argument_list|(
name|ctx
argument_list|,
name|ns
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postModifyNamespace
parameter_list|(
specifier|final
name|NamespaceDescriptor
name|ns
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postModifyNamespace
argument_list|(
name|ctx
argument_list|,
name|ns
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/* Implementation of hooks for invoking MasterObservers */
specifier|public
name|void
name|preCreateTable
parameter_list|(
specifier|final
name|HTableDescriptor
name|htd
parameter_list|,
specifier|final
name|HRegionInfo
index|[]
name|regions
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preCreateTable
argument_list|(
name|ctx
argument_list|,
name|htd
argument_list|,
name|regions
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postCreateTable
parameter_list|(
specifier|final
name|HTableDescriptor
name|htd
parameter_list|,
specifier|final
name|HRegionInfo
index|[]
name|regions
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postCreateTable
argument_list|(
name|ctx
argument_list|,
name|htd
argument_list|,
name|regions
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preCreateTableHandler
parameter_list|(
specifier|final
name|HTableDescriptor
name|htd
parameter_list|,
specifier|final
name|HRegionInfo
index|[]
name|regions
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preCreateTableHandler
argument_list|(
name|ctx
argument_list|,
name|htd
argument_list|,
name|regions
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postCreateTableHandler
parameter_list|(
specifier|final
name|HTableDescriptor
name|htd
parameter_list|,
specifier|final
name|HRegionInfo
index|[]
name|regions
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postCreateTableHandler
argument_list|(
name|ctx
argument_list|,
name|htd
argument_list|,
name|regions
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preDeleteTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preDeleteTable
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postDeleteTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postDeleteTable
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preDeleteTableHandler
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preDeleteTableHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postDeleteTableHandler
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postDeleteTableHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preTruncateTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preTruncateTable
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postTruncateTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postTruncateTable
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preTruncateTableHandler
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preTruncateTableHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postTruncateTableHandler
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postTruncateTableHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preModifyTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|HTableDescriptor
name|htd
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preModifyTable
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|htd
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postModifyTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|HTableDescriptor
name|htd
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postModifyTable
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|htd
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preModifyTableHandler
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|HTableDescriptor
name|htd
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preModifyTableHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|htd
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postModifyTableHandler
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|HTableDescriptor
name|htd
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postModifyTableHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|htd
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preAddColumn
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|HColumnDescriptor
name|column
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preAddColumn
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|column
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postAddColumn
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|HColumnDescriptor
name|column
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postAddColumn
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|column
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preAddColumnHandler
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|HColumnDescriptor
name|column
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preAddColumnHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|column
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postAddColumnHandler
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|HColumnDescriptor
name|column
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postAddColumnHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|column
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preModifyColumn
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|HColumnDescriptor
name|descriptor
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preModifyColumn
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|descriptor
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postModifyColumn
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|HColumnDescriptor
name|descriptor
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postModifyColumn
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|descriptor
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preModifyColumnHandler
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|HColumnDescriptor
name|descriptor
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preModifyColumnHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|descriptor
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postModifyColumnHandler
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|HColumnDescriptor
name|descriptor
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postModifyColumnHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|descriptor
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preDeleteColumn
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|byte
index|[]
name|c
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preDeleteColumn
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postDeleteColumn
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|byte
index|[]
name|c
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postDeleteColumn
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preDeleteColumnHandler
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|byte
index|[]
name|c
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preDeleteColumnHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postDeleteColumnHandler
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|byte
index|[]
name|c
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postDeleteColumnHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preEnableTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preEnableTable
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postEnableTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postEnableTable
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preEnableTableHandler
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preEnableTableHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postEnableTableHandler
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postEnableTableHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preDisableTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preDisableTable
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postDisableTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postDisableTable
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preDisableTableHandler
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preDisableTableHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postDisableTableHandler
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postDisableTableHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preMove
parameter_list|(
specifier|final
name|HRegionInfo
name|region
parameter_list|,
specifier|final
name|ServerName
name|srcServer
parameter_list|,
specifier|final
name|ServerName
name|destServer
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preMove
argument_list|(
name|ctx
argument_list|,
name|region
argument_list|,
name|srcServer
argument_list|,
name|destServer
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postMove
parameter_list|(
specifier|final
name|HRegionInfo
name|region
parameter_list|,
specifier|final
name|ServerName
name|srcServer
parameter_list|,
specifier|final
name|ServerName
name|destServer
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postMove
argument_list|(
name|ctx
argument_list|,
name|region
argument_list|,
name|srcServer
argument_list|,
name|destServer
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preAssign
parameter_list|(
specifier|final
name|HRegionInfo
name|regionInfo
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preAssign
argument_list|(
name|ctx
argument_list|,
name|regionInfo
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postAssign
parameter_list|(
specifier|final
name|HRegionInfo
name|regionInfo
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postAssign
argument_list|(
name|ctx
argument_list|,
name|regionInfo
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preUnassign
parameter_list|(
specifier|final
name|HRegionInfo
name|regionInfo
parameter_list|,
specifier|final
name|boolean
name|force
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preUnassign
argument_list|(
name|ctx
argument_list|,
name|regionInfo
argument_list|,
name|force
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postUnassign
parameter_list|(
specifier|final
name|HRegionInfo
name|regionInfo
parameter_list|,
specifier|final
name|boolean
name|force
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postUnassign
argument_list|(
name|ctx
argument_list|,
name|regionInfo
argument_list|,
name|force
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preRegionOffline
parameter_list|(
specifier|final
name|HRegionInfo
name|regionInfo
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preRegionOffline
argument_list|(
name|ctx
argument_list|,
name|regionInfo
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postRegionOffline
parameter_list|(
specifier|final
name|HRegionInfo
name|regionInfo
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postRegionOffline
argument_list|(
name|ctx
argument_list|,
name|regionInfo
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preBalance
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preBalance
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postBalance
parameter_list|(
specifier|final
name|List
argument_list|<
name|RegionPlan
argument_list|>
name|plans
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postBalance
argument_list|(
name|ctx
argument_list|,
name|plans
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preBalanceSwitch
parameter_list|(
specifier|final
name|boolean
name|b
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperationWithResult
argument_list|(
name|b
argument_list|,
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperationWithResult
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|setResult
argument_list|(
name|oserver
operator|.
name|preBalanceSwitch
argument_list|(
name|ctx
argument_list|,
name|getResult
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postBalanceSwitch
parameter_list|(
specifier|final
name|boolean
name|oldValue
parameter_list|,
specifier|final
name|boolean
name|newValue
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postBalanceSwitch
argument_list|(
name|ctx
argument_list|,
name|oldValue
argument_list|,
name|newValue
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preShutdown
parameter_list|()
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preShutdown
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|postEnvCall
parameter_list|(
name|MasterEnvironment
name|env
parameter_list|)
block|{
comment|// invoke coprocessor stop method
name|shutdown
argument_list|(
name|env
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preStopMaster
parameter_list|()
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preStopMaster
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|postEnvCall
parameter_list|(
name|MasterEnvironment
name|env
parameter_list|)
block|{
comment|// invoke coprocessor stop method
name|shutdown
argument_list|(
name|env
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preMasterInitialization
parameter_list|()
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preMasterInitialization
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postStartMaster
parameter_list|()
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postStartMaster
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|,
specifier|final
name|HTableDescriptor
name|hTableDescriptor
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preSnapshot
argument_list|(
name|ctx
argument_list|,
name|snapshot
argument_list|,
name|hTableDescriptor
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|,
specifier|final
name|HTableDescriptor
name|hTableDescriptor
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postSnapshot
argument_list|(
name|ctx
argument_list|,
name|snapshot
argument_list|,
name|hTableDescriptor
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preCloneSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|,
specifier|final
name|HTableDescriptor
name|hTableDescriptor
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preCloneSnapshot
argument_list|(
name|ctx
argument_list|,
name|snapshot
argument_list|,
name|hTableDescriptor
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postCloneSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|,
specifier|final
name|HTableDescriptor
name|hTableDescriptor
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postCloneSnapshot
argument_list|(
name|ctx
argument_list|,
name|snapshot
argument_list|,
name|hTableDescriptor
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preRestoreSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|,
specifier|final
name|HTableDescriptor
name|hTableDescriptor
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preRestoreSnapshot
argument_list|(
name|ctx
argument_list|,
name|snapshot
argument_list|,
name|hTableDescriptor
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postRestoreSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|,
specifier|final
name|HTableDescriptor
name|hTableDescriptor
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postRestoreSnapshot
argument_list|(
name|ctx
argument_list|,
name|snapshot
argument_list|,
name|hTableDescriptor
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preDeleteSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preDeleteSnapshot
argument_list|(
name|ctx
argument_list|,
name|snapshot
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postDeleteSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postDeleteSnapshot
argument_list|(
name|ctx
argument_list|,
name|snapshot
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preGetTableDescriptors
parameter_list|(
specifier|final
name|List
argument_list|<
name|TableName
argument_list|>
name|tableNamesList
parameter_list|,
specifier|final
name|List
argument_list|<
name|HTableDescriptor
argument_list|>
name|descriptors
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preGetTableDescriptors
argument_list|(
name|ctx
argument_list|,
name|tableNamesList
argument_list|,
name|descriptors
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postGetTableDescriptors
parameter_list|(
specifier|final
name|List
argument_list|<
name|HTableDescriptor
argument_list|>
name|descriptors
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postGetTableDescriptors
argument_list|(
name|ctx
argument_list|,
name|descriptors
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preTableFlush
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preTableFlush
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postTableFlush
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postTableFlush
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|abstract
class|class
name|CoprocessorOperation
extends|extends
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
block|{
specifier|public
name|CoprocessorOperation
parameter_list|()
block|{     }
specifier|public
specifier|abstract
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
function_decl|;
specifier|public
name|void
name|postEnvCall
parameter_list|(
name|MasterEnvironment
name|env
parameter_list|)
block|{     }
block|}
specifier|private
specifier|static
specifier|abstract
class|class
name|CoprocessorOperationWithResult
parameter_list|<
name|T
parameter_list|>
extends|extends
name|CoprocessorOperation
block|{
specifier|private
name|T
name|result
init|=
literal|null
decl_stmt|;
specifier|public
name|void
name|setResult
parameter_list|(
specifier|final
name|T
name|result
parameter_list|)
block|{
name|this
operator|.
name|result
operator|=
name|result
expr_stmt|;
block|}
specifier|public
name|T
name|getResult
parameter_list|()
block|{
return|return
name|this
operator|.
name|result
return|;
block|}
block|}
specifier|private
parameter_list|<
name|T
parameter_list|>
name|T
name|execOperationWithResult
parameter_list|(
specifier|final
name|T
name|defaultValue
parameter_list|,
specifier|final
name|CoprocessorOperationWithResult
argument_list|<
name|T
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|ctx
operator|==
literal|null
condition|)
return|return
name|defaultValue
return|;
name|ctx
operator|.
name|setResult
argument_list|(
name|defaultValue
argument_list|)
expr_stmt|;
name|execOperation
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
return|return
name|ctx
operator|.
name|getResult
argument_list|()
return|;
block|}
specifier|private
name|boolean
name|execOperation
parameter_list|(
specifier|final
name|CoprocessorOperation
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|ctx
operator|==
literal|null
condition|)
return|return
literal|false
return|;
name|boolean
name|bypass
init|=
literal|false
decl_stmt|;
for|for
control|(
name|MasterEnvironment
name|env
range|:
name|coprocessors
control|)
block|{
if|if
condition|(
name|env
operator|.
name|getInstance
argument_list|()
operator|instanceof
name|MasterObserver
condition|)
block|{
name|ctx
operator|.
name|prepare
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|Thread
name|currentThread
init|=
name|Thread
operator|.
name|currentThread
argument_list|()
decl_stmt|;
name|ClassLoader
name|cl
init|=
name|currentThread
operator|.
name|getContextClassLoader
argument_list|()
decl_stmt|;
try|try
block|{
name|currentThread
operator|.
name|setContextClassLoader
argument_list|(
name|env
operator|.
name|getClassLoader
argument_list|()
argument_list|)
expr_stmt|;
name|ctx
operator|.
name|call
argument_list|(
operator|(
name|MasterObserver
operator|)
name|env
operator|.
name|getInstance
argument_list|()
argument_list|,
name|ctx
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|handleCoprocessorThrowable
argument_list|(
name|env
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|currentThread
operator|.
name|setContextClassLoader
argument_list|(
name|cl
argument_list|)
expr_stmt|;
block|}
name|bypass
operator||=
name|ctx
operator|.
name|shouldBypass
argument_list|()
expr_stmt|;
if|if
condition|(
name|ctx
operator|.
name|shouldComplete
argument_list|()
condition|)
block|{
break|break;
block|}
block|}
name|ctx
operator|.
name|postEnvCall
argument_list|(
name|env
argument_list|)
expr_stmt|;
block|}
return|return
name|bypass
return|;
block|}
block|}
end_class

end_unit

