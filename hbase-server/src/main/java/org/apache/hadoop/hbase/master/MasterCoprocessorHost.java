begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ClusterStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|MetaMutationAnnotation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|NamespaceDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ServerName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|MasterSwitchType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Mutation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|RegionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|SnapshotDescription
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|TableDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|BaseEnvironment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|CoprocessorHost
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|CoprocessorService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|CoprocessorServiceBackwardCompatiblity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|CoreCoprocessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|HasMasterServices
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|MasterCoprocessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|MasterCoprocessorEnvironment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|MasterObserver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|MetricsCoprocessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|ObserverContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|locking
operator|.
name|LockProcedure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|procedure
operator|.
name|MasterProcedureEnv
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|metrics
operator|.
name|MetricRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|net
operator|.
name|Address
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|procedure2
operator|.
name|LockType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|procedure2
operator|.
name|LockedResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|procedure2
operator|.
name|Procedure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|procedure2
operator|.
name|ProcedureExecutor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|quotas
operator|.
name|GlobalQuotaSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|replication
operator|.
name|ReplicationPeerConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_comment
comment|/**  * Provides the coprocessor framework and environment for master oriented  * operations.  {@link HMaster} interacts with the loaded coprocessors  * through this class.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|MasterCoprocessorHost
extends|extends
name|CoprocessorHost
argument_list|<
name|MasterCoprocessor
argument_list|,
name|MasterCoprocessorEnvironment
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|MasterCoprocessorHost
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/**    * Coprocessor environment extension providing access to master related    * services.    */
specifier|private
specifier|static
class|class
name|MasterEnvironment
extends|extends
name|BaseEnvironment
argument_list|<
name|MasterCoprocessor
argument_list|>
implements|implements
name|MasterCoprocessorEnvironment
block|{
specifier|private
specifier|final
name|boolean
name|supportGroupCPs
decl_stmt|;
specifier|private
specifier|final
name|MetricRegistry
name|metricRegistry
decl_stmt|;
specifier|private
specifier|final
name|MasterServices
name|services
decl_stmt|;
specifier|public
name|MasterEnvironment
parameter_list|(
specifier|final
name|MasterCoprocessor
name|impl
parameter_list|,
specifier|final
name|int
name|priority
parameter_list|,
specifier|final
name|int
name|seq
parameter_list|,
specifier|final
name|Configuration
name|conf
parameter_list|,
specifier|final
name|MasterServices
name|services
parameter_list|)
block|{
name|super
argument_list|(
name|impl
argument_list|,
name|priority
argument_list|,
name|seq
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|this
operator|.
name|services
operator|=
name|services
expr_stmt|;
name|supportGroupCPs
operator|=
operator|!
name|useLegacyMethod
argument_list|(
name|impl
operator|.
name|getClass
argument_list|()
argument_list|,
literal|"preBalanceRSGroup"
argument_list|,
name|ObserverContext
operator|.
name|class
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|metricRegistry
operator|=
name|MetricsCoprocessor
operator|.
name|createRegistryForMasterCoprocessor
argument_list|(
name|impl
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|ServerName
name|getServerName
parameter_list|()
block|{
return|return
name|this
operator|.
name|services
operator|.
name|getServerName
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Connection
name|getConnection
parameter_list|()
block|{
return|return
name|this
operator|.
name|services
operator|.
name|getConnection
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Connection
name|createConnection
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|this
operator|.
name|services
operator|.
name|createConnection
argument_list|(
name|conf
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|MetricRegistry
name|getMetricRegistryForMaster
parameter_list|()
block|{
return|return
name|metricRegistry
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|shutdown
parameter_list|()
block|{
name|super
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|MetricsCoprocessor
operator|.
name|removeRegistry
argument_list|(
name|this
operator|.
name|metricRegistry
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**    * Special version of MasterEnvironment that exposes MasterServices for Core Coprocessors only.    * Temporary hack until Core Coprocessors are integrated into Core.    */
specifier|private
specifier|static
class|class
name|MasterEnvironmentForCoreCoprocessors
extends|extends
name|MasterEnvironment
implements|implements
name|HasMasterServices
block|{
specifier|private
specifier|final
name|MasterServices
name|masterServices
decl_stmt|;
specifier|public
name|MasterEnvironmentForCoreCoprocessors
parameter_list|(
specifier|final
name|MasterCoprocessor
name|impl
parameter_list|,
specifier|final
name|int
name|priority
parameter_list|,
specifier|final
name|int
name|seq
parameter_list|,
specifier|final
name|Configuration
name|conf
parameter_list|,
specifier|final
name|MasterServices
name|services
parameter_list|)
block|{
name|super
argument_list|(
name|impl
argument_list|,
name|priority
argument_list|,
name|seq
argument_list|,
name|conf
argument_list|,
name|services
argument_list|)
expr_stmt|;
name|this
operator|.
name|masterServices
operator|=
name|services
expr_stmt|;
block|}
comment|/**      * @return An instance of MasterServices, an object NOT for general user-space Coprocessor      * consumption.      */
specifier|public
name|MasterServices
name|getMasterServices
parameter_list|()
block|{
return|return
name|this
operator|.
name|masterServices
return|;
block|}
block|}
specifier|private
name|MasterServices
name|masterServices
decl_stmt|;
specifier|public
name|MasterCoprocessorHost
parameter_list|(
specifier|final
name|MasterServices
name|services
parameter_list|,
specifier|final
name|Configuration
name|conf
parameter_list|)
block|{
name|super
argument_list|(
name|services
argument_list|)
expr_stmt|;
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
name|this
operator|.
name|masterServices
operator|=
name|services
expr_stmt|;
comment|// Log the state of coprocessor loading here; should appear only once or
comment|// twice in the daemon log, depending on HBase version, because there is
comment|// only one MasterCoprocessorHost instance in the master process
name|boolean
name|coprocessorsEnabled
init|=
name|conf
operator|.
name|getBoolean
argument_list|(
name|COPROCESSORS_ENABLED_CONF_KEY
argument_list|,
name|DEFAULT_COPROCESSORS_ENABLED
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"System coprocessor loading is "
operator|+
operator|(
name|coprocessorsEnabled
condition|?
literal|"enabled"
else|:
literal|"disabled"
operator|)
argument_list|)
expr_stmt|;
name|loadSystemCoprocessors
argument_list|(
name|conf
argument_list|,
name|MASTER_COPROCESSOR_CONF_KEY
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|MasterEnvironment
name|createEnvironment
parameter_list|(
specifier|final
name|MasterCoprocessor
name|instance
parameter_list|,
specifier|final
name|int
name|priority
parameter_list|,
specifier|final
name|int
name|seq
parameter_list|,
specifier|final
name|Configuration
name|conf
parameter_list|)
block|{
comment|// If coprocessor exposes any services, register them.
for|for
control|(
name|Service
name|service
range|:
name|instance
operator|.
name|getServices
argument_list|()
control|)
block|{
name|masterServices
operator|.
name|registerService
argument_list|(
name|service
argument_list|)
expr_stmt|;
block|}
comment|// If a CoreCoprocessor, return a 'richer' environment, one laden with MasterServices.
return|return
name|instance
operator|.
name|getClass
argument_list|()
operator|.
name|isAnnotationPresent
argument_list|(
name|CoreCoprocessor
operator|.
name|class
argument_list|)
condition|?
operator|new
name|MasterEnvironmentForCoreCoprocessors
argument_list|(
name|instance
argument_list|,
name|priority
argument_list|,
name|seq
argument_list|,
name|conf
argument_list|,
name|masterServices
argument_list|)
else|:
operator|new
name|MasterEnvironment
argument_list|(
name|instance
argument_list|,
name|priority
argument_list|,
name|seq
argument_list|,
name|conf
argument_list|,
name|masterServices
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|MasterCoprocessor
name|checkAndGetInstance
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|implClass
parameter_list|)
throws|throws
name|InstantiationException
throws|,
name|IllegalAccessException
block|{
if|if
condition|(
name|MasterCoprocessor
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|implClass
argument_list|)
condition|)
block|{
return|return
operator|(
name|MasterCoprocessor
operator|)
name|implClass
operator|.
name|newInstance
argument_list|()
return|;
block|}
elseif|else
if|if
condition|(
name|CoprocessorService
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|implClass
argument_list|)
condition|)
block|{
comment|// For backward compatibility with old CoprocessorService impl which don't extend
comment|// MasterCoprocessor.
return|return
operator|new
name|CoprocessorServiceBackwardCompatiblity
operator|.
name|MasterCoprocessorService
argument_list|(
operator|(
name|CoprocessorService
operator|)
name|implClass
operator|.
name|newInstance
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
name|LOG
operator|.
name|error
argument_list|(
name|implClass
operator|.
name|getName
argument_list|()
operator|+
literal|" is not of type MasterCoprocessor. Check the "
operator|+
literal|"configuration "
operator|+
name|CoprocessorHost
operator|.
name|MASTER_COPROCESSOR_CONF_KEY
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
specifier|private
name|ObserverGetter
argument_list|<
name|MasterCoprocessor
argument_list|,
name|MasterObserver
argument_list|>
name|masterObserverGetter
init|=
name|MasterCoprocessor
operator|::
name|getMasterObserver
decl_stmt|;
specifier|abstract
class|class
name|MasterObserverOperation
extends|extends
name|ObserverOperationWithoutResult
argument_list|<
name|MasterObserver
argument_list|>
block|{
specifier|public
name|MasterObserverOperation
parameter_list|()
block|{
name|super
argument_list|(
name|masterObserverGetter
argument_list|)
expr_stmt|;
block|}
specifier|public
name|MasterObserverOperation
parameter_list|(
name|boolean
name|bypassable
parameter_list|)
block|{
name|this
argument_list|(
literal|null
argument_list|,
name|bypassable
argument_list|)
expr_stmt|;
block|}
specifier|public
name|MasterObserverOperation
parameter_list|(
name|User
name|user
parameter_list|)
block|{
name|super
argument_list|(
name|masterObserverGetter
argument_list|,
name|user
argument_list|)
expr_stmt|;
block|}
specifier|public
name|MasterObserverOperation
parameter_list|(
name|User
name|user
parameter_list|,
name|boolean
name|bypassable
parameter_list|)
block|{
name|super
argument_list|(
name|masterObserverGetter
argument_list|,
name|user
argument_list|,
name|bypassable
argument_list|)
expr_stmt|;
block|}
block|}
comment|//////////////////////////////////////////////////////////////////////////////////////////////////
comment|// MasterObserver operations
comment|//////////////////////////////////////////////////////////////////////////////////////////////////
specifier|public
name|void
name|preCreateNamespace
parameter_list|(
specifier|final
name|NamespaceDescriptor
name|ns
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preCreateNamespace
argument_list|(
name|this
argument_list|,
name|ns
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postCreateNamespace
parameter_list|(
specifier|final
name|NamespaceDescriptor
name|ns
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postCreateNamespace
argument_list|(
name|this
argument_list|,
name|ns
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preDeleteNamespace
parameter_list|(
specifier|final
name|String
name|namespaceName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preDeleteNamespace
argument_list|(
name|this
argument_list|,
name|namespaceName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postDeleteNamespace
parameter_list|(
specifier|final
name|String
name|namespaceName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postDeleteNamespace
argument_list|(
name|this
argument_list|,
name|namespaceName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preModifyNamespace
parameter_list|(
specifier|final
name|NamespaceDescriptor
name|ns
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preModifyNamespace
argument_list|(
name|this
argument_list|,
name|ns
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postModifyNamespace
parameter_list|(
specifier|final
name|NamespaceDescriptor
name|ns
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postModifyNamespace
argument_list|(
name|this
argument_list|,
name|ns
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preGetNamespaceDescriptor
parameter_list|(
specifier|final
name|String
name|namespaceName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preGetNamespaceDescriptor
argument_list|(
name|this
argument_list|,
name|namespaceName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postGetNamespaceDescriptor
parameter_list|(
specifier|final
name|NamespaceDescriptor
name|ns
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postGetNamespaceDescriptor
argument_list|(
name|this
argument_list|,
name|ns
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preListNamespaceDescriptors
parameter_list|(
specifier|final
name|List
argument_list|<
name|NamespaceDescriptor
argument_list|>
name|descriptors
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preListNamespaceDescriptors
argument_list|(
name|this
argument_list|,
name|descriptors
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postListNamespaceDescriptors
parameter_list|(
specifier|final
name|List
argument_list|<
name|NamespaceDescriptor
argument_list|>
name|descriptors
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postListNamespaceDescriptors
argument_list|(
name|this
argument_list|,
name|descriptors
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/* Implementation of hooks for invoking MasterObservers */
specifier|public
name|void
name|preCreateTable
parameter_list|(
specifier|final
name|TableDescriptor
name|htd
parameter_list|,
specifier|final
name|RegionInfo
index|[]
name|regions
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preCreateTable
argument_list|(
name|this
argument_list|,
name|htd
argument_list|,
name|regions
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postCreateTable
parameter_list|(
specifier|final
name|TableDescriptor
name|htd
parameter_list|,
specifier|final
name|RegionInfo
index|[]
name|regions
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postCreateTable
argument_list|(
name|this
argument_list|,
name|htd
argument_list|,
name|regions
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preCreateTableAction
parameter_list|(
specifier|final
name|TableDescriptor
name|htd
parameter_list|,
specifier|final
name|RegionInfo
index|[]
name|regions
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preCreateTableAction
argument_list|(
name|this
argument_list|,
name|htd
argument_list|,
name|regions
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postCompletedCreateTableAction
parameter_list|(
specifier|final
name|TableDescriptor
name|htd
parameter_list|,
specifier|final
name|RegionInfo
index|[]
name|regions
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postCompletedCreateTableAction
argument_list|(
name|this
argument_list|,
name|htd
argument_list|,
name|regions
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preDeleteTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preDeleteTable
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postDeleteTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postDeleteTable
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preDeleteTableAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preDeleteTableAction
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postCompletedDeleteTableAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postCompletedDeleteTableAction
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preTruncateTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preTruncateTable
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postTruncateTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postTruncateTable
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preTruncateTableAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preTruncateTableAction
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postCompletedTruncateTableAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postCompletedTruncateTableAction
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preModifyTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|TableDescriptor
name|htd
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preModifyTable
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|,
name|htd
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postModifyTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|TableDescriptor
name|htd
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postModifyTable
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|,
name|htd
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preModifyTableAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|TableDescriptor
name|htd
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preModifyTableAction
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|,
name|htd
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postCompletedModifyTableAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|TableDescriptor
name|htd
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postCompletedModifyTableAction
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|,
name|htd
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preEnableTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preEnableTable
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postEnableTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postEnableTable
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preEnableTableAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preEnableTableAction
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postCompletedEnableTableAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postCompletedEnableTableAction
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preDisableTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preDisableTable
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postDisableTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postDisableTable
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preDisableTableAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preDisableTableAction
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postCompletedDisableTableAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postCompletedDisableTableAction
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preAbortProcedure
parameter_list|(
specifier|final
name|ProcedureExecutor
argument_list|<
name|MasterProcedureEnv
argument_list|>
name|procEnv
parameter_list|,
specifier|final
name|long
name|procId
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preAbortProcedure
argument_list|(
name|this
argument_list|,
name|procId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postAbortProcedure
parameter_list|()
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postAbortProcedure
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preGetProcedures
parameter_list|()
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preGetProcedures
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postGetProcedures
parameter_list|(
specifier|final
name|List
argument_list|<
name|Procedure
argument_list|<
name|?
argument_list|>
argument_list|>
name|procInfoList
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postGetProcedures
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preGetLocks
parameter_list|()
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preGetLocks
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postGetLocks
parameter_list|(
specifier|final
name|List
argument_list|<
name|LockedResource
argument_list|>
name|lockedResources
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postGetLocks
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preMove
parameter_list|(
specifier|final
name|RegionInfo
name|region
parameter_list|,
specifier|final
name|ServerName
name|srcServer
parameter_list|,
specifier|final
name|ServerName
name|destServer
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preMove
argument_list|(
name|this
argument_list|,
name|region
argument_list|,
name|srcServer
argument_list|,
name|destServer
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postMove
parameter_list|(
specifier|final
name|RegionInfo
name|region
parameter_list|,
specifier|final
name|ServerName
name|srcServer
parameter_list|,
specifier|final
name|ServerName
name|destServer
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postMove
argument_list|(
name|this
argument_list|,
name|region
argument_list|,
name|srcServer
argument_list|,
name|destServer
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preAssign
parameter_list|(
specifier|final
name|RegionInfo
name|regionInfo
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preAssign
argument_list|(
name|this
argument_list|,
name|regionInfo
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postAssign
parameter_list|(
specifier|final
name|RegionInfo
name|regionInfo
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postAssign
argument_list|(
name|this
argument_list|,
name|regionInfo
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preUnassign
parameter_list|(
specifier|final
name|RegionInfo
name|regionInfo
parameter_list|,
specifier|final
name|boolean
name|force
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preUnassign
argument_list|(
name|this
argument_list|,
name|regionInfo
argument_list|,
name|force
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postUnassign
parameter_list|(
specifier|final
name|RegionInfo
name|regionInfo
parameter_list|,
specifier|final
name|boolean
name|force
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postUnassign
argument_list|(
name|this
argument_list|,
name|regionInfo
argument_list|,
name|force
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preRegionOffline
parameter_list|(
specifier|final
name|RegionInfo
name|regionInfo
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preRegionOffline
argument_list|(
name|this
argument_list|,
name|regionInfo
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postRegionOffline
parameter_list|(
specifier|final
name|RegionInfo
name|regionInfo
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postRegionOffline
argument_list|(
name|this
argument_list|,
name|regionInfo
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preMergeRegions
parameter_list|(
specifier|final
name|RegionInfo
index|[]
name|regionsToMerge
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preMergeRegions
argument_list|(
name|this
argument_list|,
name|regionsToMerge
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postMergeRegions
parameter_list|(
specifier|final
name|RegionInfo
index|[]
name|regionsToMerge
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postMergeRegions
argument_list|(
name|this
argument_list|,
name|regionsToMerge
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preBalance
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preBalance
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postBalance
parameter_list|(
specifier|final
name|List
argument_list|<
name|RegionPlan
argument_list|>
name|plans
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postBalance
argument_list|(
name|this
argument_list|,
name|plans
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preSetSplitOrMergeEnabled
parameter_list|(
specifier|final
name|boolean
name|newValue
parameter_list|,
specifier|final
name|MasterSwitchType
name|switchType
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preSetSplitOrMergeEnabled
argument_list|(
name|this
argument_list|,
name|newValue
argument_list|,
name|switchType
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postSetSplitOrMergeEnabled
parameter_list|(
specifier|final
name|boolean
name|newValue
parameter_list|,
specifier|final
name|MasterSwitchType
name|switchType
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postSetSplitOrMergeEnabled
argument_list|(
name|this
argument_list|,
name|newValue
argument_list|,
name|switchType
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**    * Invoked just before calling the split region procedure    * @param tableName the table where the region belongs to    * @param splitRow the split point    * @throws IOException    */
specifier|public
name|void
name|preSplitRegion
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|byte
index|[]
name|splitRow
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preSplitRegion
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|,
name|splitRow
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**    * Invoked just before a split    * @param tableName the table where the region belongs to    * @param splitRow the split point    * @param user the user    * @throws IOException    */
specifier|public
name|void
name|preSplitRegionAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|byte
index|[]
name|splitRow
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preSplitRegionAction
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|,
name|splitRow
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**    * Invoked just after a split    * @param regionInfoA the new left-hand daughter region    * @param regionInfoB the new right-hand daughter region    * @param user the user    * @throws IOException    */
specifier|public
name|void
name|postCompletedSplitRegionAction
parameter_list|(
specifier|final
name|RegionInfo
name|regionInfoA
parameter_list|,
specifier|final
name|RegionInfo
name|regionInfoB
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postCompletedSplitRegionAction
argument_list|(
name|this
argument_list|,
name|regionInfoA
argument_list|,
name|regionInfoB
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**    * This will be called before update META step as part of split table region procedure.    * @param splitKey    * @param metaEntries    * @param user the user    * @throws IOException    */
specifier|public
name|void
name|preSplitBeforeMETAAction
parameter_list|(
specifier|final
name|byte
index|[]
name|splitKey
parameter_list|,
specifier|final
name|List
argument_list|<
name|Mutation
argument_list|>
name|metaEntries
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preSplitRegionBeforeMETAAction
argument_list|(
name|this
argument_list|,
name|splitKey
argument_list|,
name|metaEntries
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**    * This will be called after update META step as part of split table region procedure.    * @param user the user    * @throws IOException    */
specifier|public
name|void
name|preSplitAfterMETAAction
parameter_list|(
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preSplitRegionAfterMETAAction
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**    * Invoked just after the rollback of a failed split    * @param user the user    * @throws IOException    */
specifier|public
name|void
name|postRollBackSplitRegionAction
parameter_list|(
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postRollBackSplitRegionAction
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**    * Invoked just before a merge    * @param regionsToMerge the regions to merge    * @param user the user    * @throws IOException    */
specifier|public
name|void
name|preMergeRegionsAction
parameter_list|(
specifier|final
name|RegionInfo
index|[]
name|regionsToMerge
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preMergeRegionsAction
argument_list|(
name|this
argument_list|,
name|regionsToMerge
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**    * Invoked after completing merge regions operation    * @param regionsToMerge the regions to merge    * @param mergedRegion the new merged region    * @param user the user    * @throws IOException    */
specifier|public
name|void
name|postCompletedMergeRegionsAction
parameter_list|(
specifier|final
name|RegionInfo
index|[]
name|regionsToMerge
parameter_list|,
specifier|final
name|RegionInfo
name|mergedRegion
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postCompletedMergeRegionsAction
argument_list|(
name|this
argument_list|,
name|regionsToMerge
argument_list|,
name|mergedRegion
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**    * Invoked before merge regions operation writes the new region to hbase:meta    * @param regionsToMerge the regions to merge    * @param metaEntries the meta entry    * @param user the user    * @throws IOException    */
specifier|public
name|void
name|preMergeRegionsCommit
parameter_list|(
specifier|final
name|RegionInfo
index|[]
name|regionsToMerge
parameter_list|,
specifier|final
annotation|@
name|MetaMutationAnnotation
name|List
argument_list|<
name|Mutation
argument_list|>
name|metaEntries
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preMergeRegionsCommitAction
argument_list|(
name|this
argument_list|,
name|regionsToMerge
argument_list|,
name|metaEntries
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**    * Invoked after merge regions operation writes the new region to hbase:meta    * @param regionsToMerge the regions to merge    * @param mergedRegion the new merged region    * @param user the user    * @throws IOException    */
specifier|public
name|void
name|postMergeRegionsCommit
parameter_list|(
specifier|final
name|RegionInfo
index|[]
name|regionsToMerge
parameter_list|,
specifier|final
name|RegionInfo
name|mergedRegion
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postMergeRegionsCommitAction
argument_list|(
name|this
argument_list|,
name|regionsToMerge
argument_list|,
name|mergedRegion
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**    * Invoked after rollback merge regions operation    * @param regionsToMerge the regions to merge    * @param user the user    * @throws IOException    */
specifier|public
name|void
name|postRollBackMergeRegionsAction
parameter_list|(
specifier|final
name|RegionInfo
index|[]
name|regionsToMerge
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postRollBackMergeRegionsAction
argument_list|(
name|this
argument_list|,
name|regionsToMerge
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|// This hook allows Coprocessor change value of balance switch.
specifier|public
name|void
name|preBalanceSwitch
parameter_list|(
specifier|final
name|boolean
name|b
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|this
operator|.
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return;
block|}
name|execOperation
argument_list|(
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preBalanceSwitch
argument_list|(
name|this
argument_list|,
name|b
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postBalanceSwitch
parameter_list|(
specifier|final
name|boolean
name|oldValue
parameter_list|,
specifier|final
name|boolean
name|newValue
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postBalanceSwitch
argument_list|(
name|this
argument_list|,
name|oldValue
argument_list|,
name|newValue
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preShutdown
parameter_list|()
throws|throws
name|IOException
block|{
comment|// While stopping the cluster all coprocessors method should be executed first then the
comment|// coprocessor should be cleaned up.
if|if
condition|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return;
block|}
name|execShutdown
argument_list|(
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preShutdown
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|postEnvCall
parameter_list|()
block|{
comment|// invoke coprocessor stop method
name|shutdown
argument_list|(
name|this
operator|.
name|getEnvironment
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preStopMaster
parameter_list|()
throws|throws
name|IOException
block|{
comment|// While stopping master all coprocessors method should be executed first then the coprocessor
comment|// environment should be cleaned up.
if|if
condition|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return;
block|}
name|execShutdown
argument_list|(
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preStopMaster
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|postEnvCall
parameter_list|()
block|{
comment|// invoke coprocessor stop method
name|shutdown
argument_list|(
name|this
operator|.
name|getEnvironment
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preMasterInitialization
parameter_list|()
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preMasterInitialization
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postStartMaster
parameter_list|()
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postStartMaster
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|,
specifier|final
name|TableDescriptor
name|hTableDescriptor
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preSnapshot
argument_list|(
name|this
argument_list|,
name|snapshot
argument_list|,
name|hTableDescriptor
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|,
specifier|final
name|TableDescriptor
name|hTableDescriptor
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postSnapshot
argument_list|(
name|this
argument_list|,
name|snapshot
argument_list|,
name|hTableDescriptor
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preListSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preListSnapshot
argument_list|(
name|this
argument_list|,
name|snapshot
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postListSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postListSnapshot
argument_list|(
name|this
argument_list|,
name|snapshot
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preCloneSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|,
specifier|final
name|TableDescriptor
name|hTableDescriptor
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preCloneSnapshot
argument_list|(
name|this
argument_list|,
name|snapshot
argument_list|,
name|hTableDescriptor
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postCloneSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|,
specifier|final
name|TableDescriptor
name|hTableDescriptor
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postCloneSnapshot
argument_list|(
name|this
argument_list|,
name|snapshot
argument_list|,
name|hTableDescriptor
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preRestoreSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|,
specifier|final
name|TableDescriptor
name|hTableDescriptor
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preRestoreSnapshot
argument_list|(
name|this
argument_list|,
name|snapshot
argument_list|,
name|hTableDescriptor
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postRestoreSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|,
specifier|final
name|TableDescriptor
name|hTableDescriptor
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postRestoreSnapshot
argument_list|(
name|this
argument_list|,
name|snapshot
argument_list|,
name|hTableDescriptor
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preDeleteSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preDeleteSnapshot
argument_list|(
name|this
argument_list|,
name|snapshot
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postDeleteSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postDeleteSnapshot
argument_list|(
name|this
argument_list|,
name|snapshot
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preGetTableDescriptors
parameter_list|(
specifier|final
name|List
argument_list|<
name|TableName
argument_list|>
name|tableNamesList
parameter_list|,
specifier|final
name|List
argument_list|<
name|TableDescriptor
argument_list|>
name|descriptors
parameter_list|,
specifier|final
name|String
name|regex
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preGetTableDescriptors
argument_list|(
name|this
argument_list|,
name|tableNamesList
argument_list|,
name|descriptors
argument_list|,
name|regex
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postGetTableDescriptors
parameter_list|(
specifier|final
name|List
argument_list|<
name|TableName
argument_list|>
name|tableNamesList
parameter_list|,
specifier|final
name|List
argument_list|<
name|TableDescriptor
argument_list|>
name|descriptors
parameter_list|,
specifier|final
name|String
name|regex
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postGetTableDescriptors
argument_list|(
name|this
argument_list|,
name|tableNamesList
argument_list|,
name|descriptors
argument_list|,
name|regex
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preGetTableNames
parameter_list|(
specifier|final
name|List
argument_list|<
name|TableDescriptor
argument_list|>
name|descriptors
parameter_list|,
specifier|final
name|String
name|regex
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preGetTableNames
argument_list|(
name|this
argument_list|,
name|descriptors
argument_list|,
name|regex
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postGetTableNames
parameter_list|(
specifier|final
name|List
argument_list|<
name|TableDescriptor
argument_list|>
name|descriptors
parameter_list|,
specifier|final
name|String
name|regex
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postGetTableNames
argument_list|(
name|this
argument_list|,
name|descriptors
argument_list|,
name|regex
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preTableFlush
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preTableFlush
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postTableFlush
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postTableFlush
argument_list|(
name|this
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preSetUserQuota
parameter_list|(
specifier|final
name|String
name|user
parameter_list|,
specifier|final
name|GlobalQuotaSettings
name|quotas
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preSetUserQuota
argument_list|(
name|this
argument_list|,
name|user
argument_list|,
name|quotas
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postSetUserQuota
parameter_list|(
specifier|final
name|String
name|user
parameter_list|,
specifier|final
name|GlobalQuotaSettings
name|quotas
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postSetUserQuota
argument_list|(
name|this
argument_list|,
name|user
argument_list|,
name|quotas
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preSetUserQuota
parameter_list|(
specifier|final
name|String
name|user
parameter_list|,
specifier|final
name|TableName
name|table
parameter_list|,
specifier|final
name|GlobalQuotaSettings
name|quotas
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preSetUserQuota
argument_list|(
name|this
argument_list|,
name|user
argument_list|,
name|table
argument_list|,
name|quotas
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postSetUserQuota
parameter_list|(
specifier|final
name|String
name|user
parameter_list|,
specifier|final
name|TableName
name|table
parameter_list|,
specifier|final
name|GlobalQuotaSettings
name|quotas
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postSetUserQuota
argument_list|(
name|this
argument_list|,
name|user
argument_list|,
name|table
argument_list|,
name|quotas
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preSetUserQuota
parameter_list|(
specifier|final
name|String
name|user
parameter_list|,
specifier|final
name|String
name|namespace
parameter_list|,
specifier|final
name|GlobalQuotaSettings
name|quotas
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preSetUserQuota
argument_list|(
name|this
argument_list|,
name|user
argument_list|,
name|namespace
argument_list|,
name|quotas
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postSetUserQuota
parameter_list|(
specifier|final
name|String
name|user
parameter_list|,
specifier|final
name|String
name|namespace
parameter_list|,
specifier|final
name|GlobalQuotaSettings
name|quotas
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postSetUserQuota
argument_list|(
name|this
argument_list|,
name|user
argument_list|,
name|namespace
argument_list|,
name|quotas
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preSetTableQuota
parameter_list|(
specifier|final
name|TableName
name|table
parameter_list|,
specifier|final
name|GlobalQuotaSettings
name|quotas
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preSetTableQuota
argument_list|(
name|this
argument_list|,
name|table
argument_list|,
name|quotas
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postSetTableQuota
parameter_list|(
specifier|final
name|TableName
name|table
parameter_list|,
specifier|final
name|GlobalQuotaSettings
name|quotas
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postSetTableQuota
argument_list|(
name|this
argument_list|,
name|table
argument_list|,
name|quotas
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preSetNamespaceQuota
parameter_list|(
specifier|final
name|String
name|namespace
parameter_list|,
specifier|final
name|GlobalQuotaSettings
name|quotas
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preSetNamespaceQuota
argument_list|(
name|this
argument_list|,
name|namespace
argument_list|,
name|quotas
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postSetNamespaceQuota
parameter_list|(
specifier|final
name|String
name|namespace
parameter_list|,
specifier|final
name|GlobalQuotaSettings
name|quotas
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postSetNamespaceQuota
argument_list|(
name|this
argument_list|,
name|namespace
argument_list|,
name|quotas
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preMoveServersAndTables
parameter_list|(
specifier|final
name|Set
argument_list|<
name|Address
argument_list|>
name|servers
parameter_list|,
specifier|final
name|Set
argument_list|<
name|TableName
argument_list|>
name|tables
parameter_list|,
specifier|final
name|String
name|targetGroup
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|observer
operator|.
name|preMoveServersAndTables
argument_list|(
name|this
argument_list|,
name|servers
argument_list|,
name|tables
argument_list|,
name|targetGroup
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postMoveServersAndTables
parameter_list|(
specifier|final
name|Set
argument_list|<
name|Address
argument_list|>
name|servers
parameter_list|,
specifier|final
name|Set
argument_list|<
name|TableName
argument_list|>
name|tables
parameter_list|,
specifier|final
name|String
name|targetGroup
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|observer
operator|.
name|postMoveServersAndTables
argument_list|(
name|this
argument_list|,
name|servers
argument_list|,
name|tables
argument_list|,
name|targetGroup
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preMoveServers
parameter_list|(
specifier|final
name|Set
argument_list|<
name|Address
argument_list|>
name|servers
parameter_list|,
specifier|final
name|String
name|targetGroup
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|observer
operator|.
name|preMoveServers
argument_list|(
name|this
argument_list|,
name|servers
argument_list|,
name|targetGroup
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postMoveServers
parameter_list|(
specifier|final
name|Set
argument_list|<
name|Address
argument_list|>
name|servers
parameter_list|,
specifier|final
name|String
name|targetGroup
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|observer
operator|.
name|postMoveServers
argument_list|(
name|this
argument_list|,
name|servers
argument_list|,
name|targetGroup
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preMoveTables
parameter_list|(
specifier|final
name|Set
argument_list|<
name|TableName
argument_list|>
name|tables
parameter_list|,
specifier|final
name|String
name|targetGroup
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|observer
operator|.
name|preMoveTables
argument_list|(
name|this
argument_list|,
name|tables
argument_list|,
name|targetGroup
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postMoveTables
parameter_list|(
specifier|final
name|Set
argument_list|<
name|TableName
argument_list|>
name|tables
parameter_list|,
specifier|final
name|String
name|targetGroup
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|observer
operator|.
name|postMoveTables
argument_list|(
name|this
argument_list|,
name|tables
argument_list|,
name|targetGroup
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preAddRSGroup
parameter_list|(
specifier|final
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|observer
operator|.
name|preAddRSGroup
argument_list|(
name|this
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postAddRSGroup
parameter_list|(
specifier|final
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|observer
operator|.
name|postAddRSGroup
argument_list|(
name|this
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preRemoveRSGroup
parameter_list|(
specifier|final
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|observer
operator|.
name|preRemoveRSGroup
argument_list|(
name|this
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postRemoveRSGroup
parameter_list|(
specifier|final
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|observer
operator|.
name|postRemoveRSGroup
argument_list|(
name|this
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preBalanceRSGroup
parameter_list|(
specifier|final
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|observer
operator|.
name|preBalanceRSGroup
argument_list|(
name|this
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postBalanceRSGroup
parameter_list|(
specifier|final
name|String
name|name
parameter_list|,
specifier|final
name|boolean
name|balanceRan
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|observer
operator|.
name|postBalanceRSGroup
argument_list|(
name|this
argument_list|,
name|name
argument_list|,
name|balanceRan
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preRemoveServers
parameter_list|(
specifier|final
name|Set
argument_list|<
name|Address
argument_list|>
name|servers
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|observer
operator|.
name|preRemoveServers
argument_list|(
name|this
argument_list|,
name|servers
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postRemoveServers
parameter_list|(
specifier|final
name|Set
argument_list|<
name|Address
argument_list|>
name|servers
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|observer
operator|.
name|postRemoveServers
argument_list|(
name|this
argument_list|,
name|servers
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preAddReplicationPeer
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|,
specifier|final
name|ReplicationPeerConfig
name|peerConfig
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preAddReplicationPeer
argument_list|(
name|this
argument_list|,
name|peerId
argument_list|,
name|peerConfig
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postAddReplicationPeer
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|,
specifier|final
name|ReplicationPeerConfig
name|peerConfig
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postAddReplicationPeer
argument_list|(
name|this
argument_list|,
name|peerId
argument_list|,
name|peerConfig
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preRemoveReplicationPeer
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preRemoveReplicationPeer
argument_list|(
name|this
argument_list|,
name|peerId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postRemoveReplicationPeer
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postRemoveReplicationPeer
argument_list|(
name|this
argument_list|,
name|peerId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preEnableReplicationPeer
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preEnableReplicationPeer
argument_list|(
name|this
argument_list|,
name|peerId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postEnableReplicationPeer
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postEnableReplicationPeer
argument_list|(
name|this
argument_list|,
name|peerId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preDisableReplicationPeer
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preDisableReplicationPeer
argument_list|(
name|this
argument_list|,
name|peerId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postDisableReplicationPeer
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postDisableReplicationPeer
argument_list|(
name|this
argument_list|,
name|peerId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preGetReplicationPeerConfig
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preGetReplicationPeerConfig
argument_list|(
name|this
argument_list|,
name|peerId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postGetReplicationPeerConfig
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postGetReplicationPeerConfig
argument_list|(
name|this
argument_list|,
name|peerId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preUpdateReplicationPeerConfig
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|,
specifier|final
name|ReplicationPeerConfig
name|peerConfig
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preUpdateReplicationPeerConfig
argument_list|(
name|this
argument_list|,
name|peerId
argument_list|,
name|peerConfig
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postUpdateReplicationPeerConfig
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|,
specifier|final
name|ReplicationPeerConfig
name|peerConfig
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postUpdateReplicationPeerConfig
argument_list|(
name|this
argument_list|,
name|peerId
argument_list|,
name|peerConfig
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preListReplicationPeers
parameter_list|(
specifier|final
name|String
name|regex
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preListReplicationPeers
argument_list|(
name|this
argument_list|,
name|regex
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postListReplicationPeers
parameter_list|(
specifier|final
name|String
name|regex
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postListReplicationPeers
argument_list|(
name|this
argument_list|,
name|regex
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preRequestLock
parameter_list|(
name|String
name|namespace
parameter_list|,
name|TableName
name|tableName
parameter_list|,
name|RegionInfo
index|[]
name|regionInfos
parameter_list|,
name|LockType
name|type
parameter_list|,
name|String
name|description
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preRequestLock
argument_list|(
name|this
argument_list|,
name|namespace
argument_list|,
name|tableName
argument_list|,
name|regionInfos
argument_list|,
name|description
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postRequestLock
parameter_list|(
name|String
name|namespace
parameter_list|,
name|TableName
name|tableName
parameter_list|,
name|RegionInfo
index|[]
name|regionInfos
parameter_list|,
name|LockType
name|type
parameter_list|,
name|String
name|description
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postRequestLock
argument_list|(
name|this
argument_list|,
name|namespace
argument_list|,
name|tableName
argument_list|,
name|regionInfos
argument_list|,
name|description
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preLockHeartbeat
parameter_list|(
name|LockProcedure
name|proc
parameter_list|,
name|boolean
name|keepAlive
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preLockHeartbeat
argument_list|(
name|this
argument_list|,
name|proc
operator|.
name|getTableName
argument_list|()
argument_list|,
name|proc
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postLockHeartbeat
parameter_list|(
name|LockProcedure
name|proc
parameter_list|,
name|boolean
name|keepAlive
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postLockHeartbeat
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preGetClusterStatus
parameter_list|()
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preGetClusterStatus
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postGetClusterStatus
parameter_list|(
name|ClusterStatus
name|status
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postGetClusterStatus
argument_list|(
name|this
argument_list|,
name|status
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preClearDeadServers
parameter_list|()
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preClearDeadServers
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postClearDeadServers
parameter_list|(
name|List
argument_list|<
name|ServerName
argument_list|>
name|servers
parameter_list|,
name|List
argument_list|<
name|ServerName
argument_list|>
name|notClearedServers
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postClearDeadServers
argument_list|(
name|this
argument_list|,
name|servers
argument_list|,
name|notClearedServers
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preDecommissionRegionServers
parameter_list|(
name|List
argument_list|<
name|ServerName
argument_list|>
name|servers
parameter_list|,
name|boolean
name|offload
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preDecommissionRegionServers
argument_list|(
name|this
argument_list|,
name|servers
argument_list|,
name|offload
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postDecommissionRegionServers
parameter_list|(
name|List
argument_list|<
name|ServerName
argument_list|>
name|servers
parameter_list|,
name|boolean
name|offload
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postDecommissionRegionServers
argument_list|(
name|this
argument_list|,
name|servers
argument_list|,
name|offload
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preListDecommissionedRegionServers
parameter_list|()
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preListDecommissionedRegionServers
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postListDecommissionedRegionServers
parameter_list|()
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postListDecommissionedRegionServers
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preRecommissionRegionServer
parameter_list|(
name|ServerName
name|server
parameter_list|,
name|List
argument_list|<
name|byte
index|[]
argument_list|>
name|encodedRegionNames
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preRecommissionRegionServer
argument_list|(
name|this
argument_list|,
name|server
argument_list|,
name|encodedRegionNames
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postRecommissionRegionServer
parameter_list|(
name|ServerName
name|server
parameter_list|,
name|List
argument_list|<
name|byte
index|[]
argument_list|>
name|encodedRegionNames
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocEnvironments
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|MasterObserverOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postRecommissionRegionServer
argument_list|(
name|this
argument_list|,
name|server
argument_list|,
name|encodedRegionNames
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

