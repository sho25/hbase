begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|ClassUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|Coprocessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HColumnDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HRegionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HTableDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|MetaMutationAnnotation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|NamespaceDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ServerName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|ColumnFamilyDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|ImmutableHColumnDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|ImmutableHTableDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|MasterSwitchType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Mutation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|TableDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|CoprocessorHost
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|CoprocessorService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|MasterCoprocessorEnvironment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|MasterObserver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|MetricsCoprocessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|ObserverContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ipc
operator|.
name|RpcServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|locking
operator|.
name|LockProcedure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|procedure
operator|.
name|MasterProcedureEnv
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|metrics
operator|.
name|MetricRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|net
operator|.
name|Address
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|procedure2
operator|.
name|LockType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|procedure2
operator|.
name|LockedResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|procedure2
operator|.
name|Procedure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|procedure2
operator|.
name|ProcedureExecutor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|replication
operator|.
name|ReplicationPeerConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|QuotaProtos
operator|.
name|Quotas
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|SnapshotProtos
operator|.
name|SnapshotDescription
import|;
end_import

begin_comment
comment|/**  * Provides the coprocessor framework and environment for master oriented  * operations.  {@link HMaster} interacts with the loaded coprocessors  * through this class.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|MasterCoprocessorHost
extends|extends
name|CoprocessorHost
argument_list|<
name|MasterCoprocessorHost
operator|.
name|MasterEnvironment
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|MasterCoprocessorHost
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/**    * Coprocessor environment extension providing access to master related    * services.    */
specifier|static
class|class
name|MasterEnvironment
extends|extends
name|CoprocessorHost
operator|.
name|Environment
implements|implements
name|MasterCoprocessorEnvironment
block|{
specifier|private
specifier|final
name|MasterServices
name|masterServices
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|supportGroupCPs
decl_stmt|;
specifier|private
specifier|final
name|MetricRegistry
name|metricRegistry
decl_stmt|;
specifier|public
name|MasterEnvironment
parameter_list|(
specifier|final
name|Class
argument_list|<
name|?
argument_list|>
name|implClass
parameter_list|,
specifier|final
name|Coprocessor
name|impl
parameter_list|,
specifier|final
name|int
name|priority
parameter_list|,
specifier|final
name|int
name|seq
parameter_list|,
specifier|final
name|Configuration
name|conf
parameter_list|,
specifier|final
name|MasterServices
name|services
parameter_list|)
block|{
name|super
argument_list|(
name|impl
argument_list|,
name|priority
argument_list|,
name|seq
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|this
operator|.
name|masterServices
operator|=
name|services
expr_stmt|;
name|supportGroupCPs
operator|=
operator|!
name|useLegacyMethod
argument_list|(
name|impl
operator|.
name|getClass
argument_list|()
argument_list|,
literal|"preBalanceRSGroup"
argument_list|,
name|ObserverContext
operator|.
name|class
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|metricRegistry
operator|=
name|MetricsCoprocessor
operator|.
name|createRegistryForMasterCoprocessor
argument_list|(
name|implClass
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|MasterServices
name|getMasterServices
parameter_list|()
block|{
return|return
name|masterServices
return|;
block|}
annotation|@
name|Override
specifier|public
name|MetricRegistry
name|getMetricRegistryForMaster
parameter_list|()
block|{
return|return
name|metricRegistry
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|shutdown
parameter_list|()
block|{
name|super
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|MetricsCoprocessor
operator|.
name|removeRegistry
argument_list|(
name|this
operator|.
name|metricRegistry
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|MasterServices
name|masterServices
decl_stmt|;
specifier|public
name|MasterCoprocessorHost
parameter_list|(
specifier|final
name|MasterServices
name|services
parameter_list|,
specifier|final
name|Configuration
name|conf
parameter_list|)
block|{
name|super
argument_list|(
name|services
argument_list|)
expr_stmt|;
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
name|this
operator|.
name|masterServices
operator|=
name|services
expr_stmt|;
comment|// Log the state of coprocessor loading here; should appear only once or
comment|// twice in the daemon log, depending on HBase version, because there is
comment|// only one MasterCoprocessorHost instance in the master process
name|boolean
name|coprocessorsEnabled
init|=
name|conf
operator|.
name|getBoolean
argument_list|(
name|COPROCESSORS_ENABLED_CONF_KEY
argument_list|,
name|DEFAULT_COPROCESSORS_ENABLED
argument_list|)
decl_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"System coprocessor loading is "
operator|+
operator|(
name|coprocessorsEnabled
condition|?
literal|"enabled"
else|:
literal|"disabled"
operator|)
argument_list|)
expr_stmt|;
name|loadSystemCoprocessors
argument_list|(
name|conf
argument_list|,
name|MASTER_COPROCESSOR_CONF_KEY
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|MasterEnvironment
name|createEnvironment
parameter_list|(
specifier|final
name|Class
argument_list|<
name|?
argument_list|>
name|implClass
parameter_list|,
specifier|final
name|Coprocessor
name|instance
parameter_list|,
specifier|final
name|int
name|priority
parameter_list|,
specifier|final
name|int
name|seq
parameter_list|,
specifier|final
name|Configuration
name|conf
parameter_list|)
block|{
for|for
control|(
name|Object
name|itf
range|:
name|ClassUtils
operator|.
name|getAllInterfaces
argument_list|(
name|implClass
argument_list|)
control|)
block|{
name|Class
argument_list|<
name|?
argument_list|>
name|c
init|=
operator|(
name|Class
argument_list|<
name|?
argument_list|>
operator|)
name|itf
decl_stmt|;
if|if
condition|(
name|CoprocessorService
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|c
argument_list|)
condition|)
block|{
name|masterServices
operator|.
name|registerService
argument_list|(
operator|(
operator|(
name|CoprocessorService
operator|)
name|instance
operator|)
operator|.
name|getService
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|return
operator|new
name|MasterEnvironment
argument_list|(
name|implClass
argument_list|,
name|instance
argument_list|,
name|priority
argument_list|,
name|seq
argument_list|,
name|conf
argument_list|,
name|masterServices
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|preCreateNamespace
parameter_list|(
specifier|final
name|NamespaceDescriptor
name|ns
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preCreateNamespace
argument_list|(
name|ctx
argument_list|,
name|ns
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postCreateNamespace
parameter_list|(
specifier|final
name|NamespaceDescriptor
name|ns
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postCreateNamespace
argument_list|(
name|ctx
argument_list|,
name|ns
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preDeleteNamespace
parameter_list|(
specifier|final
name|String
name|namespaceName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preDeleteNamespace
argument_list|(
name|ctx
argument_list|,
name|namespaceName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postDeleteNamespace
parameter_list|(
specifier|final
name|String
name|namespaceName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postDeleteNamespace
argument_list|(
name|ctx
argument_list|,
name|namespaceName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preModifyNamespace
parameter_list|(
specifier|final
name|NamespaceDescriptor
name|ns
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preModifyNamespace
argument_list|(
name|ctx
argument_list|,
name|ns
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postModifyNamespace
parameter_list|(
specifier|final
name|NamespaceDescriptor
name|ns
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postModifyNamespace
argument_list|(
name|ctx
argument_list|,
name|ns
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preGetNamespaceDescriptor
parameter_list|(
specifier|final
name|String
name|namespaceName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preGetNamespaceDescriptor
argument_list|(
name|ctx
argument_list|,
name|namespaceName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postGetNamespaceDescriptor
parameter_list|(
specifier|final
name|NamespaceDescriptor
name|ns
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postGetNamespaceDescriptor
argument_list|(
name|ctx
argument_list|,
name|ns
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preListNamespaceDescriptors
parameter_list|(
specifier|final
name|List
argument_list|<
name|NamespaceDescriptor
argument_list|>
name|descriptors
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preListNamespaceDescriptors
argument_list|(
name|ctx
argument_list|,
name|descriptors
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postListNamespaceDescriptors
parameter_list|(
specifier|final
name|List
argument_list|<
name|NamespaceDescriptor
argument_list|>
name|descriptors
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postListNamespaceDescriptors
argument_list|(
name|ctx
argument_list|,
name|descriptors
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/* Implementation of hooks for invoking MasterObservers */
specifier|public
name|void
name|preCreateTable
parameter_list|(
specifier|final
name|TableDescriptor
name|htd
parameter_list|,
specifier|final
name|HRegionInfo
index|[]
name|regions
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preCreateTable
argument_list|(
name|ctx
argument_list|,
name|htd
argument_list|,
name|regions
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postCreateTable
parameter_list|(
specifier|final
name|TableDescriptor
name|htd
parameter_list|,
specifier|final
name|HRegionInfo
index|[]
name|regions
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postCreateTable
argument_list|(
name|ctx
argument_list|,
name|htd
argument_list|,
name|regions
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preCreateTableAction
parameter_list|(
specifier|final
name|TableDescriptor
name|htd
parameter_list|,
specifier|final
name|HRegionInfo
index|[]
name|regions
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preCreateTableHandler
argument_list|(
name|ctx
argument_list|,
name|toImmutableHTableDescriptor
argument_list|(
name|htd
argument_list|)
argument_list|,
name|regions
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|preCreateTableAction
argument_list|(
name|ctx
argument_list|,
name|htd
argument_list|,
name|regions
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postCompletedCreateTableAction
parameter_list|(
specifier|final
name|TableDescriptor
name|htd
parameter_list|,
specifier|final
name|HRegionInfo
index|[]
name|regions
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postCreateTableHandler
argument_list|(
name|ctx
argument_list|,
name|toImmutableHTableDescriptor
argument_list|(
name|htd
argument_list|)
argument_list|,
name|regions
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|postCompletedCreateTableAction
argument_list|(
name|ctx
argument_list|,
name|htd
argument_list|,
name|regions
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preDeleteTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preDeleteTable
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postDeleteTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postDeleteTable
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preDeleteTableAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preDeleteTableHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|preDeleteTableAction
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postCompletedDeleteTableAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postDeleteTableHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|postCompletedDeleteTableAction
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preTruncateTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preTruncateTable
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postTruncateTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postTruncateTable
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preTruncateTableAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preTruncateTableHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|preTruncateTableAction
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postCompletedTruncateTableAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postTruncateTableHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|postCompletedTruncateTableAction
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preModifyTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|TableDescriptor
name|htd
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preModifyTable
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|htd
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postModifyTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|TableDescriptor
name|htd
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postModifyTable
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|htd
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preModifyTableAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|TableDescriptor
name|htd
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preModifyTableHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|toImmutableHTableDescriptor
argument_list|(
name|htd
argument_list|)
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|preModifyTableAction
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|htd
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postCompletedModifyTableAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|TableDescriptor
name|htd
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postModifyTableHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|toImmutableHTableDescriptor
argument_list|(
name|htd
argument_list|)
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|postCompletedModifyTableAction
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|htd
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preAddColumn
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|ColumnFamilyDescriptor
name|columnFamily
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preAddColumn
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|toImmutableHColumnDescriptor
argument_list|(
name|columnFamily
argument_list|)
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|preAddColumnFamily
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|columnFamily
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postAddColumn
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|ColumnFamilyDescriptor
name|columnFamily
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postAddColumn
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|toImmutableHColumnDescriptor
argument_list|(
name|columnFamily
argument_list|)
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|postAddColumnFamily
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|columnFamily
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preAddColumnFamilyAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|ColumnFamilyDescriptor
name|columnFamily
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preAddColumnHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|toImmutableHColumnDescriptor
argument_list|(
name|columnFamily
argument_list|)
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|preAddColumnFamilyAction
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|columnFamily
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postCompletedAddColumnFamilyAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|ColumnFamilyDescriptor
name|columnFamily
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postAddColumnHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|toImmutableHColumnDescriptor
argument_list|(
name|columnFamily
argument_list|)
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|postCompletedAddColumnFamilyAction
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|columnFamily
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preModifyColumn
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|ColumnFamilyDescriptor
name|columnFamily
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preModifyColumn
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|toImmutableHColumnDescriptor
argument_list|(
name|columnFamily
argument_list|)
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|preModifyColumnFamily
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|columnFamily
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postModifyColumn
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|ColumnFamilyDescriptor
name|columnFamily
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postModifyColumn
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|toImmutableHColumnDescriptor
argument_list|(
name|columnFamily
argument_list|)
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|postModifyColumnFamily
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|columnFamily
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preModifyColumnFamilyAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|ColumnFamilyDescriptor
name|columnFamily
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preModifyColumnHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|toImmutableHColumnDescriptor
argument_list|(
name|columnFamily
argument_list|)
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|preModifyColumnFamilyAction
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|columnFamily
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postCompletedModifyColumnFamilyAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|ColumnFamilyDescriptor
name|columnFamily
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postModifyColumnHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|toImmutableHColumnDescriptor
argument_list|(
name|columnFamily
argument_list|)
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|postCompletedModifyColumnFamilyAction
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|columnFamily
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preDeleteColumn
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|byte
index|[]
name|columnFamily
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preDeleteColumn
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|columnFamily
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|preDeleteColumnFamily
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|columnFamily
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postDeleteColumn
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|byte
index|[]
name|columnFamily
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postDeleteColumn
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|columnFamily
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|postDeleteColumnFamily
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|columnFamily
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preDeleteColumnFamilyAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|byte
index|[]
name|columnFamily
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preDeleteColumnHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|columnFamily
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|preDeleteColumnFamilyAction
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|columnFamily
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postCompletedDeleteColumnFamilyAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|byte
index|[]
name|columnFamily
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postDeleteColumnHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|columnFamily
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|postCompletedDeleteColumnFamilyAction
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|columnFamily
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preEnableTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preEnableTable
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postEnableTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postEnableTable
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preEnableTableAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preEnableTableHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|preEnableTableAction
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postCompletedEnableTableAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postEnableTableHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|postCompletedEnableTableAction
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preDisableTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preDisableTable
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postDisableTable
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postDisableTable
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preDisableTableAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preDisableTableHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|preDisableTableAction
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postCompletedDisableTableAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postDisableTableHandler
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
name|oserver
operator|.
name|postCompletedDisableTableAction
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preAbortProcedure
parameter_list|(
specifier|final
name|ProcedureExecutor
argument_list|<
name|MasterProcedureEnv
argument_list|>
name|procEnv
parameter_list|,
specifier|final
name|long
name|procId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preAbortProcedure
argument_list|(
name|ctx
argument_list|,
name|procEnv
argument_list|,
name|procId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postAbortProcedure
parameter_list|()
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postAbortProcedure
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preGetProcedures
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preGetProcedures
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postGetProcedures
parameter_list|(
specifier|final
name|List
argument_list|<
name|Procedure
argument_list|<
name|?
argument_list|>
argument_list|>
name|procInfoList
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postGetProcedures
argument_list|(
name|ctx
argument_list|,
name|procInfoList
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preGetLocks
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preGetLocks
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postGetLocks
parameter_list|(
specifier|final
name|List
argument_list|<
name|LockedResource
argument_list|>
name|lockedResources
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postGetLocks
argument_list|(
name|ctx
argument_list|,
name|lockedResources
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preMove
parameter_list|(
specifier|final
name|HRegionInfo
name|region
parameter_list|,
specifier|final
name|ServerName
name|srcServer
parameter_list|,
specifier|final
name|ServerName
name|destServer
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preMove
argument_list|(
name|ctx
argument_list|,
name|region
argument_list|,
name|srcServer
argument_list|,
name|destServer
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postMove
parameter_list|(
specifier|final
name|HRegionInfo
name|region
parameter_list|,
specifier|final
name|ServerName
name|srcServer
parameter_list|,
specifier|final
name|ServerName
name|destServer
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postMove
argument_list|(
name|ctx
argument_list|,
name|region
argument_list|,
name|srcServer
argument_list|,
name|destServer
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preAssign
parameter_list|(
specifier|final
name|HRegionInfo
name|regionInfo
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preAssign
argument_list|(
name|ctx
argument_list|,
name|regionInfo
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postAssign
parameter_list|(
specifier|final
name|HRegionInfo
name|regionInfo
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postAssign
argument_list|(
name|ctx
argument_list|,
name|regionInfo
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preUnassign
parameter_list|(
specifier|final
name|HRegionInfo
name|regionInfo
parameter_list|,
specifier|final
name|boolean
name|force
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preUnassign
argument_list|(
name|ctx
argument_list|,
name|regionInfo
argument_list|,
name|force
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postUnassign
parameter_list|(
specifier|final
name|HRegionInfo
name|regionInfo
parameter_list|,
specifier|final
name|boolean
name|force
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postUnassign
argument_list|(
name|ctx
argument_list|,
name|regionInfo
argument_list|,
name|force
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preRegionOffline
parameter_list|(
specifier|final
name|HRegionInfo
name|regionInfo
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preRegionOffline
argument_list|(
name|ctx
argument_list|,
name|regionInfo
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postRegionOffline
parameter_list|(
specifier|final
name|HRegionInfo
name|regionInfo
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postRegionOffline
argument_list|(
name|ctx
argument_list|,
name|regionInfo
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preMergeRegions
parameter_list|(
specifier|final
name|HRegionInfo
index|[]
name|regionsToMerge
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preMergeRegions
argument_list|(
name|ctx
argument_list|,
name|regionsToMerge
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postMergeRegions
parameter_list|(
specifier|final
name|HRegionInfo
index|[]
name|regionsToMerge
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postMergeRegions
argument_list|(
name|ctx
argument_list|,
name|regionsToMerge
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preBalance
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preBalance
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postBalance
parameter_list|(
specifier|final
name|List
argument_list|<
name|RegionPlan
argument_list|>
name|plans
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postBalance
argument_list|(
name|ctx
argument_list|,
name|plans
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preSetSplitOrMergeEnabled
parameter_list|(
specifier|final
name|boolean
name|newValue
parameter_list|,
specifier|final
name|MasterSwitchType
name|switchType
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preSetSplitOrMergeEnabled
argument_list|(
name|ctx
argument_list|,
name|newValue
argument_list|,
name|switchType
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postSetSplitOrMergeEnabled
parameter_list|(
specifier|final
name|boolean
name|newValue
parameter_list|,
specifier|final
name|MasterSwitchType
name|switchType
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postSetSplitOrMergeEnabled
argument_list|(
name|ctx
argument_list|,
name|newValue
argument_list|,
name|switchType
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**    * Invoked just before calling the split region procedure    * @param tableName the table where the region belongs to    * @param splitRow the split point    * @throws IOException    */
specifier|public
name|void
name|preSplitRegion
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|byte
index|[]
name|splitRow
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preSplitRegion
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|splitRow
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**    * Invoked just before a split    * @param tableName the table where the region belongs to    * @param splitRow the split point    * @param user the user    * @throws IOException    */
specifier|public
name|void
name|preSplitRegionAction
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|,
specifier|final
name|byte
index|[]
name|splitRow
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preSplitRegionAction
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|,
name|splitRow
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**    * Invoked just after a split    * @param regionInfoA the new left-hand daughter region    * @param regionInfoB the new right-hand daughter region    * @param user the user    * @throws IOException    */
specifier|public
name|void
name|postCompletedSplitRegionAction
parameter_list|(
specifier|final
name|HRegionInfo
name|regionInfoA
parameter_list|,
specifier|final
name|HRegionInfo
name|regionInfoB
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postCompletedSplitRegionAction
argument_list|(
name|ctx
argument_list|,
name|regionInfoA
argument_list|,
name|regionInfoB
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**    * This will be called before PONR step as part of split table region procedure.    * @param splitKey    * @param metaEntries    * @param user the user    * @throws IOException    */
specifier|public
name|boolean
name|preSplitBeforePONRAction
parameter_list|(
specifier|final
name|byte
index|[]
name|splitKey
parameter_list|,
specifier|final
name|List
argument_list|<
name|Mutation
argument_list|>
name|metaEntries
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preSplitRegionBeforePONRAction
argument_list|(
name|ctx
argument_list|,
name|splitKey
argument_list|,
name|metaEntries
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
comment|/**    * This will be called after PONR step as part of split table region procedure.    * @param user the user    * @throws IOException    */
specifier|public
name|void
name|preSplitAfterPONRAction
parameter_list|(
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preSplitRegionAfterPONRAction
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**    * Invoked just after the rollback of a failed split    * @param user the user    * @throws IOException    */
specifier|public
name|void
name|postRollBackSplitRegionAction
parameter_list|(
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postRollBackSplitRegionAction
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**    * Invoked just before a merge    * @param regionsToMerge the regions to merge    * @param user the user    * @throws IOException    */
specifier|public
name|boolean
name|preMergeRegionsAction
parameter_list|(
specifier|final
name|HRegionInfo
index|[]
name|regionsToMerge
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preMergeRegionsAction
argument_list|(
name|ctx
argument_list|,
name|regionsToMerge
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
comment|/**    * Invoked after completing merge regions operation    * @param regionsToMerge the regions to merge    * @param mergedRegion the new merged region    * @param user the user    * @throws IOException    */
specifier|public
name|void
name|postCompletedMergeRegionsAction
parameter_list|(
specifier|final
name|HRegionInfo
index|[]
name|regionsToMerge
parameter_list|,
specifier|final
name|HRegionInfo
name|mergedRegion
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postCompletedMergeRegionsAction
argument_list|(
name|ctx
argument_list|,
name|regionsToMerge
argument_list|,
name|mergedRegion
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**    * Invoked before merge regions operation writes the new region to hbase:meta    * @param regionsToMerge the regions to merge    * @param metaEntries the meta entry    * @param user the user    * @throws IOException    */
specifier|public
name|boolean
name|preMergeRegionsCommit
parameter_list|(
specifier|final
name|HRegionInfo
index|[]
name|regionsToMerge
parameter_list|,
specifier|final
annotation|@
name|MetaMutationAnnotation
name|List
argument_list|<
name|Mutation
argument_list|>
name|metaEntries
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preMergeRegionsCommitAction
argument_list|(
name|ctx
argument_list|,
name|regionsToMerge
argument_list|,
name|metaEntries
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
comment|/**    * Invoked after merge regions operation writes the new region to hbase:meta    * @param regionsToMerge the regions to merge    * @param mergedRegion the new merged region    * @param user the user    * @throws IOException    */
specifier|public
name|void
name|postMergeRegionsCommit
parameter_list|(
specifier|final
name|HRegionInfo
index|[]
name|regionsToMerge
parameter_list|,
specifier|final
name|HRegionInfo
name|mergedRegion
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postMergeRegionsCommitAction
argument_list|(
name|ctx
argument_list|,
name|regionsToMerge
argument_list|,
name|mergedRegion
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**    * Invoked after rollback merge regions operation    * @param regionsToMerge the regions to merge    * @param user the user    * @throws IOException    */
specifier|public
name|void
name|postRollBackMergeRegionsAction
parameter_list|(
specifier|final
name|HRegionInfo
index|[]
name|regionsToMerge
parameter_list|,
specifier|final
name|User
name|user
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|(
name|user
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postRollBackMergeRegionsAction
argument_list|(
name|ctx
argument_list|,
name|regionsToMerge
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preBalanceSwitch
parameter_list|(
specifier|final
name|boolean
name|b
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperationWithResult
argument_list|(
name|b
argument_list|,
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperationWithResult
argument_list|<
name|Boolean
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|setResult
argument_list|(
name|oserver
operator|.
name|preBalanceSwitch
argument_list|(
name|ctx
argument_list|,
name|getResult
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postBalanceSwitch
parameter_list|(
specifier|final
name|boolean
name|oldValue
parameter_list|,
specifier|final
name|boolean
name|newValue
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postBalanceSwitch
argument_list|(
name|ctx
argument_list|,
name|oldValue
argument_list|,
name|newValue
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preShutdown
parameter_list|()
throws|throws
name|IOException
block|{
comment|// While stopping the cluster all coprocessors method should be executed first then the
comment|// coprocessor should be cleaned up.
name|execShutdown
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preShutdown
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|postEnvCall
parameter_list|(
name|MasterEnvironment
name|env
parameter_list|)
block|{
comment|// invoke coprocessor stop method
name|shutdown
argument_list|(
name|env
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preStopMaster
parameter_list|()
throws|throws
name|IOException
block|{
comment|// While stopping master all coprocessors method should be executed first then the coprocessor
comment|// environment should be cleaned up.
name|execShutdown
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preStopMaster
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|postEnvCall
parameter_list|(
name|MasterEnvironment
name|env
parameter_list|)
block|{
comment|// invoke coprocessor stop method
name|shutdown
argument_list|(
name|env
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preMasterInitialization
parameter_list|()
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preMasterInitialization
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postStartMaster
parameter_list|()
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postStartMaster
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|,
specifier|final
name|TableDescriptor
name|hTableDescriptor
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preSnapshot
argument_list|(
name|ctx
argument_list|,
name|snapshot
argument_list|,
name|hTableDescriptor
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|,
specifier|final
name|TableDescriptor
name|hTableDescriptor
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postSnapshot
argument_list|(
name|ctx
argument_list|,
name|snapshot
argument_list|,
name|hTableDescriptor
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preListSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preListSnapshot
argument_list|(
name|ctx
argument_list|,
name|snapshot
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postListSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postListSnapshot
argument_list|(
name|ctx
argument_list|,
name|snapshot
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preCloneSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|,
specifier|final
name|TableDescriptor
name|hTableDescriptor
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preCloneSnapshot
argument_list|(
name|ctx
argument_list|,
name|snapshot
argument_list|,
name|hTableDescriptor
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postCloneSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|,
specifier|final
name|TableDescriptor
name|hTableDescriptor
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postCloneSnapshot
argument_list|(
name|ctx
argument_list|,
name|snapshot
argument_list|,
name|hTableDescriptor
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preRestoreSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|,
specifier|final
name|TableDescriptor
name|hTableDescriptor
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preRestoreSnapshot
argument_list|(
name|ctx
argument_list|,
name|snapshot
argument_list|,
name|hTableDescriptor
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postRestoreSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|,
specifier|final
name|TableDescriptor
name|hTableDescriptor
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postRestoreSnapshot
argument_list|(
name|ctx
argument_list|,
name|snapshot
argument_list|,
name|hTableDescriptor
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preDeleteSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preDeleteSnapshot
argument_list|(
name|ctx
argument_list|,
name|snapshot
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postDeleteSnapshot
parameter_list|(
specifier|final
name|SnapshotDescription
name|snapshot
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postDeleteSnapshot
argument_list|(
name|ctx
argument_list|,
name|snapshot
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preGetTableDescriptors
parameter_list|(
specifier|final
name|List
argument_list|<
name|TableName
argument_list|>
name|tableNamesList
parameter_list|,
specifier|final
name|List
argument_list|<
name|TableDescriptor
argument_list|>
name|descriptors
parameter_list|,
specifier|final
name|String
name|regex
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preGetTableDescriptors
argument_list|(
name|ctx
argument_list|,
name|tableNamesList
argument_list|,
name|descriptors
argument_list|,
name|regex
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postGetTableDescriptors
parameter_list|(
specifier|final
name|List
argument_list|<
name|TableName
argument_list|>
name|tableNamesList
parameter_list|,
specifier|final
name|List
argument_list|<
name|TableDescriptor
argument_list|>
name|descriptors
parameter_list|,
specifier|final
name|String
name|regex
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postGetTableDescriptors
argument_list|(
name|ctx
argument_list|,
name|tableNamesList
argument_list|,
name|descriptors
argument_list|,
name|regex
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|preGetTableNames
parameter_list|(
specifier|final
name|List
argument_list|<
name|TableDescriptor
argument_list|>
name|descriptors
parameter_list|,
specifier|final
name|String
name|regex
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preGetTableNames
argument_list|(
name|ctx
argument_list|,
name|descriptors
argument_list|,
name|regex
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
return|;
block|}
specifier|public
name|void
name|postGetTableNames
parameter_list|(
specifier|final
name|List
argument_list|<
name|TableDescriptor
argument_list|>
name|descriptors
parameter_list|,
specifier|final
name|String
name|regex
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postGetTableNames
argument_list|(
name|ctx
argument_list|,
name|descriptors
argument_list|,
name|regex
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preTableFlush
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preTableFlush
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postTableFlush
parameter_list|(
specifier|final
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postTableFlush
argument_list|(
name|ctx
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preSetUserQuota
parameter_list|(
specifier|final
name|String
name|user
parameter_list|,
specifier|final
name|Quotas
name|quotas
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preSetUserQuota
argument_list|(
name|ctx
argument_list|,
name|user
argument_list|,
name|quotas
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postSetUserQuota
parameter_list|(
specifier|final
name|String
name|user
parameter_list|,
specifier|final
name|Quotas
name|quotas
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postSetUserQuota
argument_list|(
name|ctx
argument_list|,
name|user
argument_list|,
name|quotas
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preSetUserQuota
parameter_list|(
specifier|final
name|String
name|user
parameter_list|,
specifier|final
name|TableName
name|table
parameter_list|,
specifier|final
name|Quotas
name|quotas
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preSetUserQuota
argument_list|(
name|ctx
argument_list|,
name|user
argument_list|,
name|table
argument_list|,
name|quotas
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postSetUserQuota
parameter_list|(
specifier|final
name|String
name|user
parameter_list|,
specifier|final
name|TableName
name|table
parameter_list|,
specifier|final
name|Quotas
name|quotas
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postSetUserQuota
argument_list|(
name|ctx
argument_list|,
name|user
argument_list|,
name|table
argument_list|,
name|quotas
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preSetUserQuota
parameter_list|(
specifier|final
name|String
name|user
parameter_list|,
specifier|final
name|String
name|namespace
parameter_list|,
specifier|final
name|Quotas
name|quotas
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preSetUserQuota
argument_list|(
name|ctx
argument_list|,
name|user
argument_list|,
name|namespace
argument_list|,
name|quotas
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postSetUserQuota
parameter_list|(
specifier|final
name|String
name|user
parameter_list|,
specifier|final
name|String
name|namespace
parameter_list|,
specifier|final
name|Quotas
name|quotas
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postSetUserQuota
argument_list|(
name|ctx
argument_list|,
name|user
argument_list|,
name|namespace
argument_list|,
name|quotas
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preSetTableQuota
parameter_list|(
specifier|final
name|TableName
name|table
parameter_list|,
specifier|final
name|Quotas
name|quotas
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preSetTableQuota
argument_list|(
name|ctx
argument_list|,
name|table
argument_list|,
name|quotas
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postSetTableQuota
parameter_list|(
specifier|final
name|TableName
name|table
parameter_list|,
specifier|final
name|Quotas
name|quotas
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postSetTableQuota
argument_list|(
name|ctx
argument_list|,
name|table
argument_list|,
name|quotas
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preSetNamespaceQuota
parameter_list|(
specifier|final
name|String
name|namespace
parameter_list|,
specifier|final
name|Quotas
name|quotas
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preSetNamespaceQuota
argument_list|(
name|ctx
argument_list|,
name|namespace
argument_list|,
name|quotas
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postSetNamespaceQuota
parameter_list|(
specifier|final
name|String
name|namespace
parameter_list|,
specifier|final
name|Quotas
name|quotas
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postSetNamespaceQuota
argument_list|(
name|ctx
argument_list|,
name|namespace
argument_list|,
name|quotas
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|abstract
class|class
name|CoprocessorOperation
extends|extends
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
block|{
specifier|public
name|CoprocessorOperation
parameter_list|()
block|{
name|this
argument_list|(
name|RpcServer
operator|.
name|getRequestUser
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|CoprocessorOperation
parameter_list|(
name|User
name|user
parameter_list|)
block|{
name|super
argument_list|(
name|user
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|abstract
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
function_decl|;
specifier|public
name|void
name|postEnvCall
parameter_list|(
name|MasterEnvironment
name|env
parameter_list|)
block|{     }
block|}
specifier|private
specifier|static
specifier|abstract
class|class
name|CoprocessorOperationWithResult
parameter_list|<
name|T
parameter_list|>
extends|extends
name|CoprocessorOperation
block|{
specifier|private
name|T
name|result
init|=
literal|null
decl_stmt|;
specifier|public
name|void
name|setResult
parameter_list|(
specifier|final
name|T
name|result
parameter_list|)
block|{
name|this
operator|.
name|result
operator|=
name|result
expr_stmt|;
block|}
specifier|public
name|T
name|getResult
parameter_list|()
block|{
return|return
name|this
operator|.
name|result
return|;
block|}
block|}
specifier|private
parameter_list|<
name|T
parameter_list|>
name|T
name|execOperationWithResult
parameter_list|(
specifier|final
name|T
name|defaultValue
parameter_list|,
specifier|final
name|CoprocessorOperationWithResult
argument_list|<
name|T
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|ctx
operator|==
literal|null
condition|)
return|return
name|defaultValue
return|;
name|ctx
operator|.
name|setResult
argument_list|(
name|defaultValue
argument_list|)
expr_stmt|;
name|execOperation
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
return|return
name|ctx
operator|.
name|getResult
argument_list|()
return|;
block|}
specifier|private
name|boolean
name|execOperation
parameter_list|(
specifier|final
name|CoprocessorOperation
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|ctx
operator|==
literal|null
condition|)
return|return
literal|false
return|;
name|boolean
name|bypass
init|=
literal|false
decl_stmt|;
name|List
argument_list|<
name|MasterEnvironment
argument_list|>
name|envs
init|=
name|coprocessors
operator|.
name|get
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|envs
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|MasterEnvironment
name|env
init|=
name|envs
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|env
operator|.
name|getInstance
argument_list|()
operator|instanceof
name|MasterObserver
condition|)
block|{
name|ctx
operator|.
name|prepare
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|Thread
name|currentThread
init|=
name|Thread
operator|.
name|currentThread
argument_list|()
decl_stmt|;
name|ClassLoader
name|cl
init|=
name|currentThread
operator|.
name|getContextClassLoader
argument_list|()
decl_stmt|;
try|try
block|{
name|currentThread
operator|.
name|setContextClassLoader
argument_list|(
name|env
operator|.
name|getClassLoader
argument_list|()
argument_list|)
expr_stmt|;
name|ctx
operator|.
name|call
argument_list|(
operator|(
name|MasterObserver
operator|)
name|env
operator|.
name|getInstance
argument_list|()
argument_list|,
name|ctx
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|handleCoprocessorThrowable
argument_list|(
name|env
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|currentThread
operator|.
name|setContextClassLoader
argument_list|(
name|cl
argument_list|)
expr_stmt|;
block|}
name|bypass
operator||=
name|ctx
operator|.
name|shouldBypass
argument_list|()
expr_stmt|;
if|if
condition|(
name|ctx
operator|.
name|shouldComplete
argument_list|()
condition|)
block|{
break|break;
block|}
block|}
name|ctx
operator|.
name|postEnvCall
argument_list|(
name|env
argument_list|)
expr_stmt|;
block|}
return|return
name|bypass
return|;
block|}
comment|/**    * Master coprocessor classes can be configured in any order, based on that priority is set and    * chained in a sorted order. For preStopMaster()/preShutdown(), coprocessor methods are invoked    * in call() and environment is shutdown in postEnvCall().<br>    * Need to execute all coprocessor methods first then postEnvCall(), otherwise some coprocessors    * may remain shutdown if any exception occurs during next coprocessor execution which prevent    * Master stop or cluster shutdown. (Refer:    *<a href="https://issues.apache.org/jira/browse/HBASE-16663">HBASE-16663</a>    * @param ctx CoprocessorOperation    * @return true if bypaas coprocessor execution, false if not.    * @throws IOException    */
specifier|private
name|boolean
name|execShutdown
parameter_list|(
specifier|final
name|CoprocessorOperation
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|ctx
operator|==
literal|null
condition|)
return|return
literal|false
return|;
name|boolean
name|bypass
init|=
literal|false
decl_stmt|;
name|List
argument_list|<
name|MasterEnvironment
argument_list|>
name|envs
init|=
name|coprocessors
operator|.
name|get
argument_list|()
decl_stmt|;
name|int
name|envsSize
init|=
name|envs
operator|.
name|size
argument_list|()
decl_stmt|;
comment|// Iterate the coprocessors and execute CoprocessorOperation's call()
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|envsSize
condition|;
name|i
operator|++
control|)
block|{
name|MasterEnvironment
name|env
init|=
name|envs
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|env
operator|.
name|getInstance
argument_list|()
operator|instanceof
name|MasterObserver
condition|)
block|{
name|ctx
operator|.
name|prepare
argument_list|(
name|env
argument_list|)
expr_stmt|;
name|Thread
name|currentThread
init|=
name|Thread
operator|.
name|currentThread
argument_list|()
decl_stmt|;
name|ClassLoader
name|cl
init|=
name|currentThread
operator|.
name|getContextClassLoader
argument_list|()
decl_stmt|;
try|try
block|{
name|currentThread
operator|.
name|setContextClassLoader
argument_list|(
name|env
operator|.
name|getClassLoader
argument_list|()
argument_list|)
expr_stmt|;
name|ctx
operator|.
name|call
argument_list|(
operator|(
name|MasterObserver
operator|)
name|env
operator|.
name|getInstance
argument_list|()
argument_list|,
name|ctx
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
name|handleCoprocessorThrowable
argument_list|(
name|env
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|currentThread
operator|.
name|setContextClassLoader
argument_list|(
name|cl
argument_list|)
expr_stmt|;
block|}
name|bypass
operator||=
name|ctx
operator|.
name|shouldBypass
argument_list|()
expr_stmt|;
if|if
condition|(
name|ctx
operator|.
name|shouldComplete
argument_list|()
condition|)
block|{
break|break;
block|}
block|}
block|}
comment|// Iterate the coprocessors and execute CoprocessorOperation's postEnvCall()
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|envsSize
condition|;
name|i
operator|++
control|)
block|{
name|MasterEnvironment
name|env
init|=
name|envs
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|ctx
operator|.
name|postEnvCall
argument_list|(
name|env
argument_list|)
expr_stmt|;
block|}
return|return
name|bypass
return|;
block|}
specifier|public
name|void
name|preMoveServersAndTables
parameter_list|(
specifier|final
name|Set
argument_list|<
name|Address
argument_list|>
name|servers
parameter_list|,
specifier|final
name|Set
argument_list|<
name|TableName
argument_list|>
name|tables
parameter_list|,
specifier|final
name|String
name|targetGroup
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|ctx
operator|.
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|oserver
operator|.
name|preMoveServersAndTables
argument_list|(
name|ctx
argument_list|,
name|servers
argument_list|,
name|tables
argument_list|,
name|targetGroup
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postMoveServersAndTables
parameter_list|(
specifier|final
name|Set
argument_list|<
name|Address
argument_list|>
name|servers
parameter_list|,
specifier|final
name|Set
argument_list|<
name|TableName
argument_list|>
name|tables
parameter_list|,
specifier|final
name|String
name|targetGroup
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|ctx
operator|.
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|oserver
operator|.
name|postMoveServersAndTables
argument_list|(
name|ctx
argument_list|,
name|servers
argument_list|,
name|tables
argument_list|,
name|targetGroup
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preMoveServers
parameter_list|(
specifier|final
name|Set
argument_list|<
name|Address
argument_list|>
name|servers
parameter_list|,
specifier|final
name|String
name|targetGroup
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|ctx
operator|.
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|oserver
operator|.
name|preMoveServers
argument_list|(
name|ctx
argument_list|,
name|servers
argument_list|,
name|targetGroup
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postMoveServers
parameter_list|(
specifier|final
name|Set
argument_list|<
name|Address
argument_list|>
name|servers
parameter_list|,
specifier|final
name|String
name|targetGroup
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|ctx
operator|.
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|oserver
operator|.
name|postMoveServers
argument_list|(
name|ctx
argument_list|,
name|servers
argument_list|,
name|targetGroup
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preMoveTables
parameter_list|(
specifier|final
name|Set
argument_list|<
name|TableName
argument_list|>
name|tables
parameter_list|,
specifier|final
name|String
name|targetGroup
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|ctx
operator|.
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|oserver
operator|.
name|preMoveTables
argument_list|(
name|ctx
argument_list|,
name|tables
argument_list|,
name|targetGroup
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postMoveTables
parameter_list|(
specifier|final
name|Set
argument_list|<
name|TableName
argument_list|>
name|tables
parameter_list|,
specifier|final
name|String
name|targetGroup
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|ctx
operator|.
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|oserver
operator|.
name|postMoveTables
argument_list|(
name|ctx
argument_list|,
name|tables
argument_list|,
name|targetGroup
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preAddRSGroup
parameter_list|(
specifier|final
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|ctx
operator|.
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|oserver
operator|.
name|preAddRSGroup
argument_list|(
name|ctx
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postAddRSGroup
parameter_list|(
specifier|final
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|ctx
operator|.
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|oserver
operator|.
name|postAddRSGroup
argument_list|(
name|ctx
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preRemoveRSGroup
parameter_list|(
specifier|final
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|ctx
operator|.
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|oserver
operator|.
name|preRemoveRSGroup
argument_list|(
name|ctx
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postRemoveRSGroup
parameter_list|(
specifier|final
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|ctx
operator|.
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|oserver
operator|.
name|postRemoveRSGroup
argument_list|(
name|ctx
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preBalanceRSGroup
parameter_list|(
specifier|final
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|ctx
operator|.
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|oserver
operator|.
name|preBalanceRSGroup
argument_list|(
name|ctx
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postBalanceRSGroup
parameter_list|(
specifier|final
name|String
name|name
parameter_list|,
specifier|final
name|boolean
name|balanceRan
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
operator|(
operator|(
name|MasterEnvironment
operator|)
name|ctx
operator|.
name|getEnvironment
argument_list|()
operator|)
operator|.
name|supportGroupCPs
condition|)
block|{
name|oserver
operator|.
name|postBalanceRSGroup
argument_list|(
name|ctx
argument_list|,
name|name
argument_list|,
name|balanceRan
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preAddReplicationPeer
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|,
specifier|final
name|ReplicationPeerConfig
name|peerConfig
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preAddReplicationPeer
argument_list|(
name|ctx
argument_list|,
name|peerId
argument_list|,
name|peerConfig
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postAddReplicationPeer
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|,
specifier|final
name|ReplicationPeerConfig
name|peerConfig
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postAddReplicationPeer
argument_list|(
name|ctx
argument_list|,
name|peerId
argument_list|,
name|peerConfig
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preRemoveReplicationPeer
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preRemoveReplicationPeer
argument_list|(
name|ctx
argument_list|,
name|peerId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postRemoveReplicationPeer
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postRemoveReplicationPeer
argument_list|(
name|ctx
argument_list|,
name|peerId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preEnableReplicationPeer
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preEnableReplicationPeer
argument_list|(
name|ctx
argument_list|,
name|peerId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postEnableReplicationPeer
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postEnableReplicationPeer
argument_list|(
name|ctx
argument_list|,
name|peerId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preDisableReplicationPeer
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preDisableReplicationPeer
argument_list|(
name|ctx
argument_list|,
name|peerId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postDisableReplicationPeer
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postDisableReplicationPeer
argument_list|(
name|ctx
argument_list|,
name|peerId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preGetReplicationPeerConfig
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preGetReplicationPeerConfig
argument_list|(
name|ctx
argument_list|,
name|peerId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postGetReplicationPeerConfig
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postGetReplicationPeerConfig
argument_list|(
name|ctx
argument_list|,
name|peerId
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preUpdateReplicationPeerConfig
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|,
specifier|final
name|ReplicationPeerConfig
name|peerConfig
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preUpdateReplicationPeerConfig
argument_list|(
name|ctx
argument_list|,
name|peerId
argument_list|,
name|peerConfig
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postUpdateReplicationPeerConfig
parameter_list|(
specifier|final
name|String
name|peerId
parameter_list|,
specifier|final
name|ReplicationPeerConfig
name|peerConfig
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postUpdateReplicationPeerConfig
argument_list|(
name|ctx
argument_list|,
name|peerId
argument_list|,
name|peerConfig
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preListReplicationPeers
parameter_list|(
specifier|final
name|String
name|regex
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|preListReplicationPeers
argument_list|(
name|ctx
argument_list|,
name|regex
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postListReplicationPeers
parameter_list|(
specifier|final
name|String
name|regex
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|observer
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|observer
operator|.
name|postListReplicationPeers
argument_list|(
name|ctx
argument_list|,
name|regex
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preRequestLock
parameter_list|(
name|String
name|namespace
parameter_list|,
name|TableName
name|tableName
parameter_list|,
name|HRegionInfo
index|[]
name|regionInfos
parameter_list|,
name|LockType
name|type
parameter_list|,
name|String
name|description
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preRequestLock
argument_list|(
name|ctx
argument_list|,
name|namespace
argument_list|,
name|tableName
argument_list|,
name|regionInfos
argument_list|,
name|type
argument_list|,
name|description
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postRequestLock
parameter_list|(
name|String
name|namespace
parameter_list|,
name|TableName
name|tableName
parameter_list|,
name|HRegionInfo
index|[]
name|regionInfos
parameter_list|,
name|LockType
name|type
parameter_list|,
name|String
name|description
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postRequestLock
argument_list|(
name|ctx
argument_list|,
name|namespace
argument_list|,
name|tableName
argument_list|,
name|regionInfos
argument_list|,
name|type
argument_list|,
name|description
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preLockHeartbeat
parameter_list|(
name|LockProcedure
name|proc
parameter_list|,
name|boolean
name|keepAlive
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preLockHeartbeat
argument_list|(
name|ctx
argument_list|,
name|proc
argument_list|,
name|keepAlive
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postLockHeartbeat
parameter_list|(
name|LockProcedure
name|proc
parameter_list|,
name|boolean
name|keepAlive
parameter_list|)
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postLockHeartbeat
argument_list|(
name|ctx
argument_list|,
name|proc
argument_list|,
name|keepAlive
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preListDeadServers
parameter_list|()
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preListDeadServers
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postListDeadServers
parameter_list|()
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postListDeadServers
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|preClearDeadServers
parameter_list|()
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|preClearDeadServers
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|postClearDeadServers
parameter_list|()
throws|throws
name|IOException
block|{
name|execOperation
argument_list|(
name|coprocessors
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
operator|new
name|CoprocessorOperation
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|call
parameter_list|(
name|MasterObserver
name|oserver
parameter_list|,
name|ObserverContext
argument_list|<
name|MasterCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|)
throws|throws
name|IOException
block|{
name|oserver
operator|.
name|postClearDeadServers
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|ImmutableHTableDescriptor
name|toImmutableHTableDescriptor
parameter_list|(
name|TableDescriptor
name|desc
parameter_list|)
block|{
return|return
operator|new
name|ImmutableHTableDescriptor
argument_list|(
name|desc
argument_list|)
return|;
block|}
specifier|private
specifier|static
name|ImmutableHColumnDescriptor
name|toImmutableHColumnDescriptor
parameter_list|(
name|ColumnFamilyDescriptor
name|desc
parameter_list|)
block|{
return|return
operator|new
name|ImmutableHColumnDescriptor
argument_list|(
name|desc
argument_list|)
return|;
block|}
block|}
end_class

end_unit

