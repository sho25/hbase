begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|tool
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutorService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|VisibleForTesting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_interface
annotation|@
name|InterfaceAudience
operator|.
name|Public
specifier|public
interface|interface
name|Canary
block|{
specifier|static
name|Canary
name|create
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|ExecutorService
name|executor
parameter_list|)
block|{
return|return
operator|new
name|CanaryTool
argument_list|(
name|conf
argument_list|,
name|executor
argument_list|)
return|;
block|}
annotation|@
name|VisibleForTesting
specifier|static
name|Canary
name|create
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|ExecutorService
name|executor
parameter_list|,
name|CanaryTool
operator|.
name|Sink
name|sink
parameter_list|)
block|{
return|return
operator|new
name|CanaryTool
argument_list|(
name|conf
argument_list|,
name|executor
argument_list|,
name|sink
argument_list|)
return|;
block|}
comment|/**    * Run Canary in Region mode.    *    * @param targets -- list of monitor tables.    * @return the exit code of the Canary tool.    */
specifier|public
name|int
name|checkRegions
parameter_list|(
name|String
index|[]
name|targets
parameter_list|)
throws|throws
name|Exception
function_decl|;
comment|/**    * Runs Canary in Region server mode.    *    * @param targets -- list of monitor tables.    * @return the exit code of the Canary tool.    */
specifier|public
name|int
name|checkRegionServers
parameter_list|(
name|String
index|[]
name|targets
parameter_list|)
throws|throws
name|Exception
function_decl|;
comment|/**    * Runs Canary in Zookeeper mode.    *    * @return the exit code of the Canary tool.    */
specifier|public
name|int
name|checkZooKeeper
parameter_list|()
throws|throws
name|Exception
function_decl|;
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getReadFailures
parameter_list|()
function_decl|;
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getWriteFailures
parameter_list|()
function_decl|;
block|}
end_interface

end_unit

