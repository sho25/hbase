begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|procedure
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceStability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|procedure2
operator|.
name|Procedure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|procedure2
operator|.
name|ProcedureUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|ProtobufMessageConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ProcedureProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|JRubyFormat
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
annotation|@
name|InterfaceStability
operator|.
name|Evolving
specifier|public
class|class
name|ProcedureDescriber
block|{
specifier|private
name|ProcedureDescriber
parameter_list|()
block|{   }
specifier|private
specifier|static
name|Object
name|parametersToObject
parameter_list|(
name|Procedure
argument_list|<
name|?
argument_list|>
name|proc
parameter_list|)
block|{
try|try
block|{
name|ProcedureProtos
operator|.
name|Procedure
name|protoProc
init|=
name|ProcedureUtil
operator|.
name|convertToProtoProcedure
argument_list|(
name|proc
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Object
argument_list|>
name|parameters
init|=
name|protoProc
operator|.
name|getStateMessageList
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
parameter_list|(
name|any
parameter_list|)
lambda|->
block|{
try|try
block|{
return|return
name|ProtobufMessageConverter
operator|.
name|toJavaObject
argument_list|(
name|any
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
return|return
name|e
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|parameters
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
return|return
name|e
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
specifier|public
specifier|static
name|String
name|describe
parameter_list|(
name|Procedure
argument_list|<
name|?
argument_list|>
name|proc
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|description
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|description
operator|.
name|put
argument_list|(
literal|"ID"
argument_list|,
name|proc
operator|.
name|getProcId
argument_list|()
argument_list|)
expr_stmt|;
name|description
operator|.
name|put
argument_list|(
literal|"PARENT_ID"
argument_list|,
name|proc
operator|.
name|getParentProcId
argument_list|()
argument_list|)
expr_stmt|;
name|description
operator|.
name|put
argument_list|(
literal|"STATE"
argument_list|,
name|proc
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
name|description
operator|.
name|put
argument_list|(
literal|"OWNER"
argument_list|,
name|proc
operator|.
name|getOwner
argument_list|()
argument_list|)
expr_stmt|;
name|description
operator|.
name|put
argument_list|(
literal|"TYPE"
argument_list|,
name|proc
operator|.
name|getProcName
argument_list|()
argument_list|)
expr_stmt|;
name|description
operator|.
name|put
argument_list|(
literal|"START_TIME"
argument_list|,
operator|new
name|Date
argument_list|(
name|proc
operator|.
name|getSubmittedTime
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|description
operator|.
name|put
argument_list|(
literal|"LAST_UPDATE"
argument_list|,
operator|new
name|Date
argument_list|(
name|proc
operator|.
name|getLastUpdate
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|proc
operator|.
name|isFailed
argument_list|()
condition|)
block|{
name|description
operator|.
name|put
argument_list|(
literal|"ERRORS"
argument_list|,
name|proc
operator|.
name|getException
argument_list|()
operator|.
name|unwrapRemoteIOException
argument_list|()
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|description
operator|.
name|put
argument_list|(
literal|"PARAMETERS"
argument_list|,
name|parametersToObject
argument_list|(
name|proc
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|JRubyFormat
operator|.
name|print
argument_list|(
name|description
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|String
name|describeParameters
parameter_list|(
name|Procedure
argument_list|<
name|?
argument_list|>
name|proc
parameter_list|)
block|{
name|Object
name|object
init|=
name|parametersToObject
argument_list|(
name|proc
argument_list|)
decl_stmt|;
return|return
name|JRubyFormat
operator|.
name|print
argument_list|(
name|object
argument_list|)
return|;
block|}
block|}
end_class

end_unit

