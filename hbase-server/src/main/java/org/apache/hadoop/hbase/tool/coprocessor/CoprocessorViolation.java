begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|tool
operator|.
name|coprocessor
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Throwables
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|CoprocessorViolation
block|{
specifier|public
enum|enum
name|Severity
block|{
name|WARNING
block|,
name|ERROR
block|}
specifier|private
specifier|final
name|Severity
name|severity
decl_stmt|;
specifier|private
specifier|final
name|String
name|message
decl_stmt|;
specifier|public
name|CoprocessorViolation
parameter_list|(
name|Severity
name|severity
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|this
argument_list|(
name|severity
argument_list|,
name|message
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|CoprocessorViolation
parameter_list|(
name|Severity
name|severity
parameter_list|,
name|String
name|message
parameter_list|,
name|Throwable
name|t
parameter_list|)
block|{
name|this
operator|.
name|severity
operator|=
name|severity
expr_stmt|;
if|if
condition|(
name|t
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|message
operator|=
name|message
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|message
operator|=
name|message
operator|+
literal|"\n"
operator|+
name|Throwables
operator|.
name|getStackTraceAsString
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|Severity
name|getSeverity
parameter_list|()
block|{
return|return
name|severity
return|;
block|}
specifier|public
name|String
name|getMessage
parameter_list|()
block|{
return|return
name|message
return|;
block|}
block|}
end_class

end_unit

