begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ipc
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseClassTestRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|SmallTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|ClassRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_class
annotation|@
name|Category
argument_list|(
name|SmallTests
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestRpcServerTraceLogging
block|{
annotation|@
name|ClassRule
specifier|public
specifier|static
specifier|final
name|HBaseClassTestRule
name|CLASS_RULE
init|=
name|HBaseClassTestRule
operator|.
name|forClass
argument_list|(
name|TestRpcServerTraceLogging
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|static
name|Logger
name|rpcServerLog
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
name|RpcServer
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|static
specifier|final
name|String
name|TRACE_LOG_MSG
init|=
literal|"This is dummy message for testing:: region { type: REGION_NAME value: \"hbase:meta,,1\" }"
operator|+
literal|" scan { column { family: \"info\" } time_range { from: 0 to: 9223372036854775807 } "
operator|+
literal|"max_versions: 1 cache_blocks: true max_result_size: 2097152 caching: 2147483647 } "
operator|+
literal|"number_of_rows: 2147483647 close_scanner: false client_handles_partials: "
operator|+
literal|"true client_handles_heartbeats: true track_scan_metrics: false"
decl_stmt|;
specifier|static
specifier|final
name|int
name|TRACE_LOG_LENGTH
init|=
name|TRACE_LOG_MSG
operator|.
name|length
argument_list|()
decl_stmt|;
specifier|static
specifier|final
name|RpcServer
name|mockRpcServer
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|RpcServer
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|static
specifier|final
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|(
literal|false
argument_list|)
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|setUp
parameter_list|()
block|{
name|Mockito
operator|.
name|when
argument_list|(
name|mockRpcServer
operator|.
name|getConf
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockRpcServer
operator|.
name|truncateTraceLog
argument_list|(
name|Mockito
operator|.
name|any
argument_list|(
name|String
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenCallRealMethod
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLoggingWithTraceOff
parameter_list|()
block|{
name|conf
operator|.
name|setInt
argument_list|(
literal|"hbase.ipc.trace.log.max.length"
argument_list|,
literal|250
argument_list|)
expr_stmt|;
name|rpcServerLog
operator|.
name|setLevel
argument_list|(
name|Level
operator|.
name|DEBUG
argument_list|)
expr_stmt|;
name|String
name|truncatedString
init|=
name|mockRpcServer
operator|.
name|truncateTraceLog
argument_list|(
name|TRACE_LOG_MSG
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|150
operator|+
name|RpcServer
operator|.
name|KEY_WORD_TRUNCATED
operator|.
name|length
argument_list|()
argument_list|,
name|truncatedString
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|truncatedString
operator|.
name|contains
argument_list|(
name|RpcServer
operator|.
name|KEY_WORD_TRUNCATED
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLoggingWithTraceOn
parameter_list|()
block|{
name|conf
operator|.
name|setInt
argument_list|(
literal|"hbase.ipc.trace.log.max.length"
argument_list|,
literal|250
argument_list|)
expr_stmt|;
name|rpcServerLog
operator|.
name|setLevel
argument_list|(
name|Level
operator|.
name|TRACE
argument_list|)
expr_stmt|;
name|String
name|truncatedString
init|=
name|mockRpcServer
operator|.
name|truncateTraceLog
argument_list|(
name|TRACE_LOG_MSG
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|250
operator|+
name|RpcServer
operator|.
name|KEY_WORD_TRUNCATED
operator|.
name|length
argument_list|()
argument_list|,
name|truncatedString
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|truncatedString
operator|.
name|contains
argument_list|(
name|RpcServer
operator|.
name|KEY_WORD_TRUNCATED
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLoggingWithTraceOnLargeMax
parameter_list|()
block|{
name|conf
operator|.
name|setInt
argument_list|(
literal|"hbase.ipc.trace.log.max.length"
argument_list|,
literal|2000
argument_list|)
expr_stmt|;
name|rpcServerLog
operator|.
name|setLevel
argument_list|(
name|Level
operator|.
name|TRACE
argument_list|)
expr_stmt|;
name|String
name|truncatedString
init|=
name|mockRpcServer
operator|.
name|truncateTraceLog
argument_list|(
name|TRACE_LOG_MSG
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|TRACE_LOG_LENGTH
argument_list|,
name|truncatedString
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|mockRpcServer
operator|.
name|truncateTraceLog
argument_list|(
name|TRACE_LOG_MSG
argument_list|)
operator|.
name|contains
argument_list|(
name|RpcServer
operator|.
name|KEY_WORD_TRUNCATED
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

