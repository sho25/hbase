begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|catalog
operator|.
name|CatalogTracker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|executor
operator|.
name|EventType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|executor
operator|.
name|ExecutorService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|executor
operator|.
name|ExecutorType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|AssignmentManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|HMaster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|LoadBalancer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|RegionPlan
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|RegionState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|ServerManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|balancer
operator|.
name|LoadBalancerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|RegionOpeningState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|zookeeper
operator|.
name|ZKAssign
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|zookeeper
operator|.
name|ZooKeeperWatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * Test the draining servers feature.  */
end_comment

begin_class
annotation|@
name|Category
argument_list|(
name|MediumTests
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestDrainingServer
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|TestDrainingServer
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|HBaseTestingUtility
name|TEST_UTIL
init|=
operator|new
name|HBaseTestingUtility
argument_list|()
decl_stmt|;
specifier|private
name|Abortable
name|abortable
init|=
operator|new
name|Abortable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|isAborted
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|abort
parameter_list|(
name|String
name|why
parameter_list|,
name|Throwable
name|e
parameter_list|)
block|{     }
block|}
decl_stmt|;
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|afterClass
parameter_list|()
throws|throws
name|Exception
block|{
name|TEST_UTIL
operator|.
name|shutdownMiniZKCluster
argument_list|()
expr_stmt|;
block|}
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|beforeClass
parameter_list|()
throws|throws
name|Exception
block|{
name|TEST_UTIL
operator|.
name|startMiniZKCluster
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAssignmentManagerDoesntUseDrainingServer
parameter_list|()
throws|throws
name|Exception
block|{
name|AssignmentManager
name|am
decl_stmt|;
name|Configuration
name|conf
init|=
name|TEST_UTIL
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
specifier|final
name|HMaster
name|master
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HMaster
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|Server
name|server
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Server
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|ServerManager
name|serverManager
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|ServerManager
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|ServerName
name|SERVERNAME_A
init|=
name|ServerName
operator|.
name|valueOf
argument_list|(
literal|"mockserver_a.org"
argument_list|,
literal|1000
argument_list|,
literal|8000
argument_list|)
decl_stmt|;
specifier|final
name|ServerName
name|SERVERNAME_B
init|=
name|ServerName
operator|.
name|valueOf
argument_list|(
literal|"mockserver_b.org"
argument_list|,
literal|1001
argument_list|,
literal|8000
argument_list|)
decl_stmt|;
name|LoadBalancer
name|balancer
init|=
name|LoadBalancerFactory
operator|.
name|getLoadBalancer
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|CatalogTracker
name|catalogTracker
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|CatalogTracker
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|HRegionInfo
name|REGIONINFO
init|=
operator|new
name|HRegionInfo
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"table_test"
argument_list|)
argument_list|,
name|HConstants
operator|.
name|EMPTY_START_ROW
argument_list|,
name|HConstants
operator|.
name|EMPTY_START_ROW
argument_list|)
decl_stmt|;
name|ZooKeeperWatcher
name|zkWatcher
init|=
operator|new
name|ZooKeeperWatcher
argument_list|(
name|TEST_UTIL
operator|.
name|getConfiguration
argument_list|()
argument_list|,
literal|"zkWatcher-Test"
argument_list|,
name|abortable
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|ServerName
argument_list|,
name|ServerLoad
argument_list|>
name|onlineServers
init|=
operator|new
name|HashMap
argument_list|<
name|ServerName
argument_list|,
name|ServerLoad
argument_list|>
argument_list|()
decl_stmt|;
name|onlineServers
operator|.
name|put
argument_list|(
name|SERVERNAME_A
argument_list|,
name|ServerLoad
operator|.
name|EMPTY_SERVERLOAD
argument_list|)
expr_stmt|;
name|onlineServers
operator|.
name|put
argument_list|(
name|SERVERNAME_B
argument_list|,
name|ServerLoad
operator|.
name|EMPTY_SERVERLOAD
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|server
operator|.
name|getConfiguration
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|server
operator|.
name|getServerName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ServerName
operator|.
name|valueOf
argument_list|(
literal|"masterMock,1,1"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|server
operator|.
name|getZooKeeper
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|zkWatcher
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|serverManager
operator|.
name|getOnlineServers
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|onlineServers
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|serverManager
operator|.
name|getOnlineServersList
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|ServerName
argument_list|>
argument_list|(
name|onlineServers
operator|.
name|keySet
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|serverManager
operator|.
name|createDestinationServersList
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|ServerName
argument_list|>
argument_list|(
name|onlineServers
operator|.
name|keySet
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|serverManager
operator|.
name|createDestinationServersList
argument_list|(
literal|null
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|ServerName
argument_list|>
argument_list|(
name|onlineServers
operator|.
name|keySet
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|ServerName
name|sn
range|:
name|onlineServers
operator|.
name|keySet
argument_list|()
control|)
block|{
name|Mockito
operator|.
name|when
argument_list|(
name|serverManager
operator|.
name|isServerOnline
argument_list|(
name|sn
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|serverManager
operator|.
name|sendRegionClose
argument_list|(
name|sn
argument_list|,
name|REGIONINFO
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|serverManager
operator|.
name|sendRegionClose
argument_list|(
name|sn
argument_list|,
name|REGIONINFO
argument_list|,
operator|-
literal|1
argument_list|,
literal|null
argument_list|,
literal|false
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|serverManager
operator|.
name|sendRegionOpen
argument_list|(
name|sn
argument_list|,
name|REGIONINFO
argument_list|,
operator|-
literal|1
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|ServerName
argument_list|>
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|RegionOpeningState
operator|.
name|OPENED
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|serverManager
operator|.
name|sendRegionOpen
argument_list|(
name|sn
argument_list|,
name|REGIONINFO
argument_list|,
operator|-
literal|1
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|RegionOpeningState
operator|.
name|OPENED
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|serverManager
operator|.
name|addServerToDrainList
argument_list|(
name|sn
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|Mockito
operator|.
name|when
argument_list|(
name|master
operator|.
name|getServerManager
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|serverManager
argument_list|)
expr_stmt|;
name|am
operator|=
operator|new
name|AssignmentManager
argument_list|(
name|server
argument_list|,
name|serverManager
argument_list|,
name|catalogTracker
argument_list|,
name|balancer
argument_list|,
name|startupMasterExecutor
argument_list|(
literal|"mockExecutorService"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|master
operator|.
name|getAssignmentManager
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|am
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|master
operator|.
name|getZooKeeperWatcher
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|zkWatcher
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|master
operator|.
name|getZooKeeper
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|zkWatcher
argument_list|)
expr_stmt|;
name|am
operator|.
name|addPlan
argument_list|(
name|REGIONINFO
operator|.
name|getEncodedName
argument_list|()
argument_list|,
operator|new
name|RegionPlan
argument_list|(
name|REGIONINFO
argument_list|,
literal|null
argument_list|,
name|SERVERNAME_A
argument_list|)
argument_list|)
expr_stmt|;
name|zkWatcher
operator|.
name|registerListenerFirst
argument_list|(
name|am
argument_list|)
expr_stmt|;
name|addServerToDrainedList
argument_list|(
name|SERVERNAME_A
argument_list|,
name|onlineServers
argument_list|,
name|serverManager
argument_list|)
expr_stmt|;
name|am
operator|.
name|assign
argument_list|(
name|REGIONINFO
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|setRegionOpenedOnZK
argument_list|(
name|zkWatcher
argument_list|,
name|SERVERNAME_A
argument_list|,
name|REGIONINFO
argument_list|)
expr_stmt|;
name|setRegionOpenedOnZK
argument_list|(
name|zkWatcher
argument_list|,
name|SERVERNAME_B
argument_list|,
name|REGIONINFO
argument_list|)
expr_stmt|;
name|am
operator|.
name|waitForAssignment
argument_list|(
name|REGIONINFO
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|am
operator|.
name|getRegionStates
argument_list|()
operator|.
name|isRegionOnline
argument_list|(
name|REGIONINFO
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotEquals
argument_list|(
name|am
operator|.
name|getRegionStates
argument_list|()
operator|.
name|getRegionServerOfRegion
argument_list|(
name|REGIONINFO
argument_list|)
argument_list|,
name|SERVERNAME_A
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAssignmentManagerDoesntUseDrainedServerWithBulkAssign
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
name|TEST_UTIL
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|LoadBalancer
name|balancer
init|=
name|LoadBalancerFactory
operator|.
name|getLoadBalancer
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|CatalogTracker
name|catalogTracker
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|CatalogTracker
operator|.
name|class
argument_list|)
decl_stmt|;
name|AssignmentManager
name|am
decl_stmt|;
specifier|final
name|HMaster
name|master
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HMaster
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|Server
name|server
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|Server
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|ServerManager
name|serverManager
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|ServerManager
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|ServerName
name|SERVERNAME_A
init|=
name|ServerName
operator|.
name|valueOf
argument_list|(
literal|"mockserverbulk_a.org"
argument_list|,
literal|1000
argument_list|,
literal|8000
argument_list|)
decl_stmt|;
specifier|final
name|ServerName
name|SERVERNAME_B
init|=
name|ServerName
operator|.
name|valueOf
argument_list|(
literal|"mockserverbulk_b.org"
argument_list|,
literal|1001
argument_list|,
literal|8000
argument_list|)
decl_stmt|;
specifier|final
name|ServerName
name|SERVERNAME_C
init|=
name|ServerName
operator|.
name|valueOf
argument_list|(
literal|"mockserverbulk_c.org"
argument_list|,
literal|1002
argument_list|,
literal|8000
argument_list|)
decl_stmt|;
specifier|final
name|ServerName
name|SERVERNAME_D
init|=
name|ServerName
operator|.
name|valueOf
argument_list|(
literal|"mockserverbulk_d.org"
argument_list|,
literal|1003
argument_list|,
literal|8000
argument_list|)
decl_stmt|;
specifier|final
name|ServerName
name|SERVERNAME_E
init|=
name|ServerName
operator|.
name|valueOf
argument_list|(
literal|"mockserverbulk_e.org"
argument_list|,
literal|1004
argument_list|,
literal|8000
argument_list|)
decl_stmt|;
specifier|final
name|Map
argument_list|<
name|HRegionInfo
argument_list|,
name|ServerName
argument_list|>
name|bulk
init|=
operator|new
name|HashMap
argument_list|<
name|HRegionInfo
argument_list|,
name|ServerName
argument_list|>
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|ServerName
argument_list|>
name|bunchServersAssigned
init|=
operator|new
name|HashSet
argument_list|<
name|ServerName
argument_list|>
argument_list|()
decl_stmt|;
name|HRegionInfo
name|REGIONINFO_A
init|=
operator|new
name|HRegionInfo
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"table_A"
argument_list|)
argument_list|,
name|HConstants
operator|.
name|EMPTY_START_ROW
argument_list|,
name|HConstants
operator|.
name|EMPTY_START_ROW
argument_list|)
decl_stmt|;
name|HRegionInfo
name|REGIONINFO_B
init|=
operator|new
name|HRegionInfo
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"table_B"
argument_list|)
argument_list|,
name|HConstants
operator|.
name|EMPTY_START_ROW
argument_list|,
name|HConstants
operator|.
name|EMPTY_START_ROW
argument_list|)
decl_stmt|;
name|HRegionInfo
name|REGIONINFO_C
init|=
operator|new
name|HRegionInfo
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"table_C"
argument_list|)
argument_list|,
name|HConstants
operator|.
name|EMPTY_START_ROW
argument_list|,
name|HConstants
operator|.
name|EMPTY_START_ROW
argument_list|)
decl_stmt|;
name|HRegionInfo
name|REGIONINFO_D
init|=
operator|new
name|HRegionInfo
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"table_D"
argument_list|)
argument_list|,
name|HConstants
operator|.
name|EMPTY_START_ROW
argument_list|,
name|HConstants
operator|.
name|EMPTY_START_ROW
argument_list|)
decl_stmt|;
name|HRegionInfo
name|REGIONINFO_E
init|=
operator|new
name|HRegionInfo
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"table_E"
argument_list|)
argument_list|,
name|HConstants
operator|.
name|EMPTY_START_ROW
argument_list|,
name|HConstants
operator|.
name|EMPTY_START_ROW
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|ServerName
argument_list|,
name|ServerLoad
argument_list|>
name|onlineServers
init|=
operator|new
name|HashMap
argument_list|<
name|ServerName
argument_list|,
name|ServerLoad
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|ServerName
argument_list|>
name|drainedServers
init|=
operator|new
name|ArrayList
argument_list|<
name|ServerName
argument_list|>
argument_list|()
decl_stmt|;
name|onlineServers
operator|.
name|put
argument_list|(
name|SERVERNAME_A
argument_list|,
name|ServerLoad
operator|.
name|EMPTY_SERVERLOAD
argument_list|)
expr_stmt|;
name|onlineServers
operator|.
name|put
argument_list|(
name|SERVERNAME_B
argument_list|,
name|ServerLoad
operator|.
name|EMPTY_SERVERLOAD
argument_list|)
expr_stmt|;
name|onlineServers
operator|.
name|put
argument_list|(
name|SERVERNAME_C
argument_list|,
name|ServerLoad
operator|.
name|EMPTY_SERVERLOAD
argument_list|)
expr_stmt|;
name|onlineServers
operator|.
name|put
argument_list|(
name|SERVERNAME_D
argument_list|,
name|ServerLoad
operator|.
name|EMPTY_SERVERLOAD
argument_list|)
expr_stmt|;
name|onlineServers
operator|.
name|put
argument_list|(
name|SERVERNAME_E
argument_list|,
name|ServerLoad
operator|.
name|EMPTY_SERVERLOAD
argument_list|)
expr_stmt|;
name|bulk
operator|.
name|put
argument_list|(
name|REGIONINFO_A
argument_list|,
name|SERVERNAME_A
argument_list|)
expr_stmt|;
name|bulk
operator|.
name|put
argument_list|(
name|REGIONINFO_B
argument_list|,
name|SERVERNAME_B
argument_list|)
expr_stmt|;
name|bulk
operator|.
name|put
argument_list|(
name|REGIONINFO_C
argument_list|,
name|SERVERNAME_C
argument_list|)
expr_stmt|;
name|bulk
operator|.
name|put
argument_list|(
name|REGIONINFO_D
argument_list|,
name|SERVERNAME_D
argument_list|)
expr_stmt|;
name|bulk
operator|.
name|put
argument_list|(
name|REGIONINFO_E
argument_list|,
name|SERVERNAME_E
argument_list|)
expr_stmt|;
name|ZooKeeperWatcher
name|zkWatcher
init|=
operator|new
name|ZooKeeperWatcher
argument_list|(
name|TEST_UTIL
operator|.
name|getConfiguration
argument_list|()
argument_list|,
literal|"zkWatcher-BulkAssignTest"
argument_list|,
name|abortable
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|server
operator|.
name|getConfiguration
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|server
operator|.
name|getServerName
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|ServerName
operator|.
name|valueOf
argument_list|(
literal|"masterMock,1,1"
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|server
operator|.
name|getZooKeeper
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|zkWatcher
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|serverManager
operator|.
name|getOnlineServers
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|onlineServers
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|serverManager
operator|.
name|getOnlineServersList
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|ServerName
argument_list|>
argument_list|(
name|onlineServers
operator|.
name|keySet
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|serverManager
operator|.
name|createDestinationServersList
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|ServerName
argument_list|>
argument_list|(
name|onlineServers
operator|.
name|keySet
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|serverManager
operator|.
name|createDestinationServersList
argument_list|(
literal|null
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|ServerName
argument_list|>
argument_list|(
name|onlineServers
operator|.
name|keySet
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|HRegionInfo
argument_list|,
name|ServerName
argument_list|>
name|entry
range|:
name|bulk
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|Mockito
operator|.
name|when
argument_list|(
name|serverManager
operator|.
name|isServerOnline
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|serverManager
operator|.
name|sendRegionClose
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|,
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|serverManager
operator|.
name|sendRegionOpen
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|,
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
operator|-
literal|1
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|RegionOpeningState
operator|.
name|OPENED
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|serverManager
operator|.
name|addServerToDrainList
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|Mockito
operator|.
name|when
argument_list|(
name|master
operator|.
name|getServerManager
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|serverManager
argument_list|)
expr_stmt|;
name|drainedServers
operator|.
name|add
argument_list|(
name|SERVERNAME_A
argument_list|)
expr_stmt|;
name|drainedServers
operator|.
name|add
argument_list|(
name|SERVERNAME_B
argument_list|)
expr_stmt|;
name|drainedServers
operator|.
name|add
argument_list|(
name|SERVERNAME_C
argument_list|)
expr_stmt|;
name|drainedServers
operator|.
name|add
argument_list|(
name|SERVERNAME_D
argument_list|)
expr_stmt|;
name|am
operator|=
operator|new
name|AssignmentManager
argument_list|(
name|server
argument_list|,
name|serverManager
argument_list|,
name|catalogTracker
argument_list|,
name|balancer
argument_list|,
name|startupMasterExecutor
argument_list|(
literal|"mockExecutorServiceBulk"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|master
operator|.
name|getAssignmentManager
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|am
argument_list|)
expr_stmt|;
name|zkWatcher
operator|.
name|registerListener
argument_list|(
name|am
argument_list|)
expr_stmt|;
for|for
control|(
name|ServerName
name|drained
range|:
name|drainedServers
control|)
block|{
name|addServerToDrainedList
argument_list|(
name|drained
argument_list|,
name|onlineServers
argument_list|,
name|serverManager
argument_list|)
expr_stmt|;
block|}
name|am
operator|.
name|assign
argument_list|(
name|bulk
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|RegionState
argument_list|>
name|regionsInTransition
init|=
name|am
operator|.
name|getRegionStates
argument_list|()
operator|.
name|getRegionsInTransition
argument_list|()
decl_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|RegionState
argument_list|>
name|entry
range|:
name|regionsInTransition
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|setRegionOpenedOnZK
argument_list|(
name|zkWatcher
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|getServerName
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|getRegion
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|am
operator|.
name|waitForAssignment
argument_list|(
name|REGIONINFO_A
argument_list|)
expr_stmt|;
name|am
operator|.
name|waitForAssignment
argument_list|(
name|REGIONINFO_B
argument_list|)
expr_stmt|;
name|am
operator|.
name|waitForAssignment
argument_list|(
name|REGIONINFO_C
argument_list|)
expr_stmt|;
name|am
operator|.
name|waitForAssignment
argument_list|(
name|REGIONINFO_D
argument_list|)
expr_stmt|;
name|am
operator|.
name|waitForAssignment
argument_list|(
name|REGIONINFO_E
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|HRegionInfo
argument_list|,
name|ServerName
argument_list|>
name|regionAssignments
init|=
name|am
operator|.
name|getRegionStates
argument_list|()
operator|.
name|getRegionAssignments
argument_list|()
decl_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|HRegionInfo
argument_list|,
name|ServerName
argument_list|>
name|entry
range|:
name|regionAssignments
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Region Assignment: "
operator|+
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|getRegionNameAsString
argument_list|()
operator|+
literal|" Server: "
operator|+
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|bunchServersAssigned
operator|.
name|add
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|ServerName
name|sn
range|:
name|drainedServers
control|)
block|{
name|assertFalse
argument_list|(
name|bunchServersAssigned
operator|.
name|contains
argument_list|(
name|sn
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|addServerToDrainedList
parameter_list|(
name|ServerName
name|serverName
parameter_list|,
name|Map
argument_list|<
name|ServerName
argument_list|,
name|ServerLoad
argument_list|>
name|onlineServers
parameter_list|,
name|ServerManager
name|serverManager
parameter_list|)
block|{
name|onlineServers
operator|.
name|remove
argument_list|(
name|serverName
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ServerName
argument_list|>
name|availableServers
init|=
operator|new
name|ArrayList
argument_list|<
name|ServerName
argument_list|>
argument_list|(
name|onlineServers
operator|.
name|keySet
argument_list|()
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|serverManager
operator|.
name|createDestinationServersList
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|availableServers
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|serverManager
operator|.
name|createDestinationServersList
argument_list|(
literal|null
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|availableServers
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|setRegionOpenedOnZK
parameter_list|(
specifier|final
name|ZooKeeperWatcher
name|zkWatcher
parameter_list|,
specifier|final
name|ServerName
name|serverName
parameter_list|,
name|HRegionInfo
name|hregionInfo
parameter_list|)
throws|throws
name|Exception
block|{
name|int
name|version
init|=
name|ZKAssign
operator|.
name|getVersion
argument_list|(
name|zkWatcher
argument_list|,
name|hregionInfo
argument_list|)
decl_stmt|;
name|int
name|versionTransition
init|=
name|ZKAssign
operator|.
name|transitionNode
argument_list|(
name|zkWatcher
argument_list|,
name|hregionInfo
argument_list|,
name|serverName
argument_list|,
name|EventType
operator|.
name|M_ZK_REGION_OFFLINE
argument_list|,
name|EventType
operator|.
name|RS_ZK_REGION_OPENING
argument_list|,
name|version
argument_list|)
decl_stmt|;
name|ZKAssign
operator|.
name|transitionNodeOpened
argument_list|(
name|zkWatcher
argument_list|,
name|hregionInfo
argument_list|,
name|serverName
argument_list|,
name|versionTransition
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ExecutorService
name|startupMasterExecutor
parameter_list|(
specifier|final
name|String
name|name
parameter_list|)
block|{
name|ExecutorService
name|executor
init|=
operator|new
name|ExecutorService
argument_list|(
name|name
argument_list|)
decl_stmt|;
name|executor
operator|.
name|startExecutorService
argument_list|(
name|ExecutorType
operator|.
name|MASTER_OPEN_REGION
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|executor
operator|.
name|startExecutorService
argument_list|(
name|ExecutorType
operator|.
name|MASTER_CLOSE_REGION
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|executor
operator|.
name|startExecutorService
argument_list|(
name|ExecutorType
operator|.
name|MASTER_SERVER_OPERATIONS
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|executor
operator|.
name|startExecutorService
argument_list|(
name|ExecutorType
operator|.
name|MASTER_META_SERVER_OPERATIONS
argument_list|,
literal|3
argument_list|)
expr_stmt|;
return|return
name|executor
return|;
block|}
block|}
end_class

end_unit

