begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright 2009 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_class
annotation|@
name|Category
argument_list|(
name|SmallTests
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestKeyValueScanFixture
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testKeyValueScanFixture
parameter_list|()
throws|throws
name|IOException
block|{
name|KeyValue
name|kvs
index|[]
init|=
operator|new
name|KeyValue
index|[]
block|{
name|KeyValueTestUtil
operator|.
name|create
argument_list|(
literal|"RowA"
argument_list|,
literal|"family"
argument_list|,
literal|"qf1"
argument_list|,
literal|1
argument_list|,
name|KeyValue
operator|.
name|Type
operator|.
name|Put
argument_list|,
literal|"value-1"
argument_list|)
block|,
name|KeyValueTestUtil
operator|.
name|create
argument_list|(
literal|"RowA"
argument_list|,
literal|"family"
argument_list|,
literal|"qf2"
argument_list|,
literal|1
argument_list|,
name|KeyValue
operator|.
name|Type
operator|.
name|Put
argument_list|,
literal|"value-2"
argument_list|)
block|,
name|KeyValueTestUtil
operator|.
name|create
argument_list|(
literal|"RowB"
argument_list|,
literal|"family"
argument_list|,
literal|"qf1"
argument_list|,
literal|10
argument_list|,
name|KeyValue
operator|.
name|Type
operator|.
name|Put
argument_list|,
literal|"value-10"
argument_list|)
block|}
decl_stmt|;
name|KeyValueScanner
name|scan
init|=
operator|new
name|KeyValueScanFixture
argument_list|(
name|KeyValue
operator|.
name|COMPARATOR
argument_list|,
name|kvs
argument_list|)
decl_stmt|;
name|KeyValue
name|kv
init|=
name|KeyValue
operator|.
name|createFirstOnRow
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"RowA"
argument_list|)
argument_list|)
decl_stmt|;
comment|// should seek to this:
name|assertTrue
argument_list|(
name|scan
operator|.
name|seek
argument_list|(
name|kv
argument_list|)
argument_list|)
expr_stmt|;
name|KeyValue
name|res
init|=
name|scan
operator|.
name|peek
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
literal|0
index|]
argument_list|,
name|res
argument_list|)
expr_stmt|;
name|kv
operator|=
name|KeyValue
operator|.
name|createFirstOnRow
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"RowB"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|scan
operator|.
name|seek
argument_list|(
name|kv
argument_list|)
argument_list|)
expr_stmt|;
name|res
operator|=
name|scan
operator|.
name|peek
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
literal|2
index|]
argument_list|,
name|res
argument_list|)
expr_stmt|;
comment|// ensure we pull things out properly:
name|kv
operator|=
name|KeyValue
operator|.
name|createFirstOnRow
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"RowA"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|scan
operator|.
name|seek
argument_list|(
name|kv
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
literal|0
index|]
argument_list|,
name|scan
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
literal|0
index|]
argument_list|,
name|scan
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
literal|1
index|]
argument_list|,
name|scan
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
literal|1
index|]
argument_list|,
name|scan
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
literal|2
index|]
argument_list|,
name|scan
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|kvs
index|[
literal|2
index|]
argument_list|,
name|scan
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|scan
operator|.
name|peek
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|scan
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|org
operator|.
name|junit
operator|.
name|Rule
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ResourceCheckerJUnitRule
name|cu
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ResourceCheckerJUnitRule
argument_list|()
decl_stmt|;
block|}
end_class

end_unit

