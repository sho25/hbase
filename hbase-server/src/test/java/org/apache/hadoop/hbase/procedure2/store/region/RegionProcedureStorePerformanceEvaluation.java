begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|procedure2
operator|.
name|store
operator|.
name|region
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|management
operator|.
name|MemoryType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ChoreService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|CoordinatedStateManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ServerName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|AsyncClusterConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|io
operator|.
name|util
operator|.
name|MemorySizeUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|procedure2
operator|.
name|store
operator|.
name|ProcedureStorePerformanceEvaluation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|ChunkCreator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|MemStoreLAB
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|CommonFSUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Pair
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|zookeeper
operator|.
name|ZKWatcher
import|;
end_import

begin_class
specifier|public
class|class
name|RegionProcedureStorePerformanceEvaluation
extends|extends
name|ProcedureStorePerformanceEvaluation
argument_list|<
name|RegionProcedureStore
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
class|class
name|MockServer
implements|implements
name|Server
block|{
specifier|private
specifier|final
name|Configuration
name|conf
decl_stmt|;
specifier|private
specifier|final
name|ServerName
name|serverName
init|=
name|ServerName
operator|.
name|valueOf
argument_list|(
literal|"localhost"
argument_list|,
literal|12345
argument_list|,
name|System
operator|.
name|currentTimeMillis
argument_list|()
argument_list|)
decl_stmt|;
specifier|public
name|MockServer
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|abort
parameter_list|(
name|String
name|why
parameter_list|,
name|Throwable
name|e
parameter_list|)
block|{     }
annotation|@
name|Override
specifier|public
name|boolean
name|isAborted
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|stop
parameter_list|(
name|String
name|why
parameter_list|)
block|{     }
annotation|@
name|Override
specifier|public
name|boolean
name|isStopped
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|Configuration
name|getConfiguration
parameter_list|()
block|{
return|return
name|conf
return|;
block|}
annotation|@
name|Override
specifier|public
name|ZKWatcher
name|getZooKeeper
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Connection
name|getConnection
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Connection
name|createConnection
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|AsyncClusterConnection
name|getAsyncClusterConnection
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|ServerName
name|getServerName
parameter_list|()
block|{
return|return
name|serverName
return|;
block|}
annotation|@
name|Override
specifier|public
name|CoordinatedStateManager
name|getCoordinatedStateManager
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|ChoreService
name|getChoreService
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|RegionProcedureStore
name|createProcedureStore
parameter_list|(
name|Path
name|storeDir
parameter_list|)
throws|throws
name|IOException
block|{
name|Pair
argument_list|<
name|Long
argument_list|,
name|MemoryType
argument_list|>
name|pair
init|=
name|MemorySizeUtil
operator|.
name|getGlobalMemStoreSize
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|long
name|globalMemStoreSize
init|=
name|pair
operator|.
name|getFirst
argument_list|()
decl_stmt|;
name|boolean
name|offheap
init|=
name|pair
operator|.
name|getSecond
argument_list|()
operator|==
name|MemoryType
operator|.
name|NON_HEAP
decl_stmt|;
name|float
name|poolSizePercentage
init|=
name|offheap
condition|?
literal|1.0F
else|:
name|conf
operator|.
name|getFloat
argument_list|(
name|MemStoreLAB
operator|.
name|CHUNK_POOL_MAXSIZE_KEY
argument_list|,
name|MemStoreLAB
operator|.
name|POOL_MAX_SIZE_DEFAULT
argument_list|)
decl_stmt|;
name|float
name|initialCountPercentage
init|=
name|conf
operator|.
name|getFloat
argument_list|(
name|MemStoreLAB
operator|.
name|CHUNK_POOL_INITIALSIZE_KEY
argument_list|,
name|MemStoreLAB
operator|.
name|POOL_INITIAL_SIZE_DEFAULT
argument_list|)
decl_stmt|;
name|int
name|chunkSize
init|=
name|conf
operator|.
name|getInt
argument_list|(
name|MemStoreLAB
operator|.
name|CHUNK_SIZE_KEY
argument_list|,
name|MemStoreLAB
operator|.
name|CHUNK_SIZE_DEFAULT
argument_list|)
decl_stmt|;
name|ChunkCreator
operator|.
name|initialize
argument_list|(
name|chunkSize
argument_list|,
name|offheap
argument_list|,
name|globalMemStoreSize
argument_list|,
name|poolSizePercentage
argument_list|,
name|initialCountPercentage
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setBoolean
argument_list|(
name|RegionProcedureStore
operator|.
name|USE_HSYNC_KEY
argument_list|,
literal|"hsync"
operator|.
name|equals
argument_list|(
name|syncType
argument_list|)
argument_list|)
expr_stmt|;
name|CommonFSUtils
operator|.
name|setRootDir
argument_list|(
name|conf
argument_list|,
name|storeDir
argument_list|)
expr_stmt|;
return|return
operator|new
name|RegionProcedureStore
argument_list|(
operator|new
name|MockServer
argument_list|(
name|conf
argument_list|)
argument_list|,
parameter_list|(
name|fs
parameter_list|,
name|apth
parameter_list|)
lambda|->
block|{     }
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|printRawFormatResult
parameter_list|(
name|long
name|timeTakenNs
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"RESULT [%s=%s, %s=%s, %s=%s, %s=%s, "
operator|+
literal|"total_time_ms=%s]"
argument_list|,
name|NUM_PROCS_OPTION
operator|.
name|getOpt
argument_list|()
argument_list|,
name|numProcs
argument_list|,
name|STATE_SIZE_OPTION
operator|.
name|getOpt
argument_list|()
argument_list|,
name|stateSize
argument_list|,
name|SYNC_OPTION
operator|.
name|getOpt
argument_list|()
argument_list|,
name|syncType
argument_list|,
name|NUM_THREADS_OPTION
operator|.
name|getOpt
argument_list|()
argument_list|,
name|numThreads
argument_list|,
name|timeTakenNs
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|preWrite
parameter_list|(
name|long
name|procId
parameter_list|)
throws|throws
name|IOException
block|{   }
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|IOException
block|{
name|RegionProcedureStorePerformanceEvaluation
name|tool
init|=
operator|new
name|RegionProcedureStorePerformanceEvaluation
argument_list|()
decl_stmt|;
name|tool
operator|.
name|setConf
argument_list|(
name|HBaseConfiguration
operator|.
name|create
argument_list|()
argument_list|)
expr_stmt|;
name|tool
operator|.
name|run
argument_list|(
name|args
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

