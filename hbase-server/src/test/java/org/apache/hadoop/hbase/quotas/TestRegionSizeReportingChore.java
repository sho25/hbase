begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|quotas
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseClassTestRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|RegionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|RegionInfoBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|HRegionServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|SmallTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|ClassRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_class
annotation|@
name|Category
argument_list|(
block|{
name|SmallTests
operator|.
name|class
block|}
argument_list|)
specifier|public
class|class
name|TestRegionSizeReportingChore
block|{
annotation|@
name|ClassRule
specifier|public
specifier|static
specifier|final
name|HBaseClassTestRule
name|CLASS_RULE
init|=
name|HBaseClassTestRule
operator|.
name|forClass
argument_list|(
name|TestRegionSizeReportingChore
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testDefaultConfigurationProperties
parameter_list|()
block|{
specifier|final
name|Configuration
name|conf
init|=
name|getDefaultHBaseConfiguration
argument_list|()
decl_stmt|;
specifier|final
name|HRegionServer
name|rs
init|=
name|mockRegionServer
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|RegionSizeReportingChore
name|chore
init|=
operator|new
name|RegionSizeReportingChore
argument_list|(
name|rs
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|RegionSizeReportingChore
operator|.
name|REGION_SIZE_REPORTING_CHORE_DELAY_DEFAULT
argument_list|,
name|chore
operator|.
name|getInitialDelay
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|RegionSizeReportingChore
operator|.
name|REGION_SIZE_REPORTING_CHORE_PERIOD_DEFAULT
argument_list|,
name|chore
operator|.
name|getPeriod
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TimeUnit
operator|.
name|valueOf
argument_list|(
name|RegionSizeReportingChore
operator|.
name|REGION_SIZE_REPORTING_CHORE_TIMEUNIT_DEFAULT
argument_list|)
argument_list|,
name|chore
operator|.
name|getTimeUnit
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNonDefaultConfigurationProperties
parameter_list|()
block|{
specifier|final
name|Configuration
name|conf
init|=
name|getDefaultHBaseConfiguration
argument_list|()
decl_stmt|;
specifier|final
name|HRegionServer
name|rs
init|=
name|mockRegionServer
argument_list|(
name|conf
argument_list|)
decl_stmt|;
specifier|final
name|int
name|period
init|=
name|RegionSizeReportingChore
operator|.
name|REGION_SIZE_REPORTING_CHORE_PERIOD_DEFAULT
operator|+
literal|1
decl_stmt|;
specifier|final
name|long
name|delay
init|=
name|RegionSizeReportingChore
operator|.
name|REGION_SIZE_REPORTING_CHORE_DELAY_DEFAULT
operator|+
literal|1L
decl_stmt|;
specifier|final
name|String
name|timeUnit
init|=
name|TimeUnit
operator|.
name|SECONDS
operator|.
name|name
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|RegionSizeReportingChore
operator|.
name|REGION_SIZE_REPORTING_CHORE_PERIOD_KEY
argument_list|,
name|period
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setLong
argument_list|(
name|RegionSizeReportingChore
operator|.
name|REGION_SIZE_REPORTING_CHORE_DELAY_KEY
argument_list|,
name|delay
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|RegionSizeReportingChore
operator|.
name|REGION_SIZE_REPORTING_CHORE_TIMEUNIT_KEY
argument_list|,
name|timeUnit
argument_list|)
expr_stmt|;
name|RegionSizeReportingChore
name|chore
init|=
operator|new
name|RegionSizeReportingChore
argument_list|(
name|rs
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|delay
argument_list|,
name|chore
operator|.
name|getInitialDelay
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|period
argument_list|,
name|chore
operator|.
name|getPeriod
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TimeUnit
operator|.
name|valueOf
argument_list|(
name|timeUnit
argument_list|)
argument_list|,
name|chore
operator|.
name|getTimeUnit
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRemovableOfNonOnlineRegions
parameter_list|()
block|{
specifier|final
name|Configuration
name|conf
init|=
name|getDefaultHBaseConfiguration
argument_list|()
decl_stmt|;
specifier|final
name|HRegionServer
name|rs
init|=
name|mockRegionServer
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|RegionSizeReportingChore
name|chore
init|=
operator|new
name|RegionSizeReportingChore
argument_list|(
name|rs
argument_list|)
decl_stmt|;
name|RegionInfo
name|infoA
init|=
name|RegionInfoBuilder
operator|.
name|newBuilder
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"T1"
argument_list|)
argument_list|)
operator|.
name|setStartKey
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"a"
argument_list|)
argument_list|)
operator|.
name|setEndKey
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"b"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|RegionInfo
name|infoB
init|=
name|RegionInfoBuilder
operator|.
name|newBuilder
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"T1"
argument_list|)
argument_list|)
operator|.
name|setStartKey
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"b"
argument_list|)
argument_list|)
operator|.
name|setEndKey
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"d"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|RegionInfo
name|infoC
init|=
name|RegionInfoBuilder
operator|.
name|newBuilder
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"T1"
argument_list|)
argument_list|)
operator|.
name|setStartKey
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"c"
argument_list|)
argument_list|)
operator|.
name|setEndKey
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"d"
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|RegionSizeStore
name|store
init|=
operator|new
name|RegionSizeStoreImpl
argument_list|()
decl_stmt|;
name|store
operator|.
name|put
argument_list|(
name|infoA
argument_list|,
literal|1024L
argument_list|)
expr_stmt|;
name|store
operator|.
name|put
argument_list|(
name|infoB
argument_list|,
literal|1024L
argument_list|)
expr_stmt|;
name|store
operator|.
name|put
argument_list|(
name|infoC
argument_list|,
literal|1024L
argument_list|)
expr_stmt|;
comment|// If there are no online regions, all entries should be removed.
name|chore
operator|.
name|removeNonOnlineRegions
argument_list|(
name|store
argument_list|,
name|Collections
operator|.
expr|<
name|RegionInfo
operator|>
name|emptySet
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|store
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|store
operator|.
name|put
argument_list|(
name|infoA
argument_list|,
literal|1024L
argument_list|)
expr_stmt|;
name|store
operator|.
name|put
argument_list|(
name|infoB
argument_list|,
literal|1024L
argument_list|)
expr_stmt|;
name|store
operator|.
name|put
argument_list|(
name|infoC
argument_list|,
literal|1024L
argument_list|)
expr_stmt|;
comment|// Remove a single region
name|chore
operator|.
name|removeNonOnlineRegions
argument_list|(
name|store
argument_list|,
operator|new
name|HashSet
argument_list|<>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|infoA
argument_list|,
name|infoC
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|store
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|store
operator|.
name|getRegionSize
argument_list|(
name|infoA
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|store
operator|.
name|getRegionSize
argument_list|(
name|infoC
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**    * Creates an HBase Configuration object for the default values.    */
specifier|private
name|Configuration
name|getDefaultHBaseConfiguration
parameter_list|()
block|{
specifier|final
name|Configuration
name|conf
init|=
name|HBaseConfiguration
operator|.
name|create
argument_list|()
decl_stmt|;
name|conf
operator|.
name|addResource
argument_list|(
literal|"hbase-default.xml"
argument_list|)
expr_stmt|;
return|return
name|conf
return|;
block|}
specifier|private
name|HRegionServer
name|mockRegionServer
parameter_list|(
name|Configuration
name|conf
parameter_list|)
block|{
name|HRegionServer
name|rs
init|=
name|mock
argument_list|(
name|HRegionServer
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|rs
operator|.
name|getConfiguration
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|conf
argument_list|)
expr_stmt|;
return|return
name|rs
return|;
block|}
block|}
end_class

end_unit

