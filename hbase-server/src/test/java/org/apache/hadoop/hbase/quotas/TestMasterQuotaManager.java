begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|quotas
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
operator|.
name|toBytes
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseClassTestRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HRegionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|MasterServices
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|SmallTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|ClassRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_class
annotation|@
name|Category
argument_list|(
name|SmallTests
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestMasterQuotaManager
block|{
annotation|@
name|ClassRule
specifier|public
specifier|static
specifier|final
name|HBaseClassTestRule
name|CLASS_RULE
init|=
name|HBaseClassTestRule
operator|.
name|forClass
argument_list|(
name|TestMasterQuotaManager
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testUninitializedQuotaManangerDoesNotFail
parameter_list|()
block|{
name|MasterServices
name|masterServices
init|=
name|mock
argument_list|(
name|MasterServices
operator|.
name|class
argument_list|)
decl_stmt|;
name|MasterQuotaManager
name|manager
init|=
operator|new
name|MasterQuotaManager
argument_list|(
name|masterServices
argument_list|)
decl_stmt|;
name|manager
operator|.
name|addRegionSize
argument_list|(
literal|null
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|manager
operator|.
name|snapshotRegionSizes
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOldEntriesRemoved
parameter_list|()
block|{
name|MasterServices
name|masterServices
init|=
name|mock
argument_list|(
name|MasterServices
operator|.
name|class
argument_list|)
decl_stmt|;
name|MasterQuotaManager
name|manager
init|=
operator|new
name|MasterQuotaManager
argument_list|(
name|masterServices
argument_list|)
decl_stmt|;
name|manager
operator|.
name|initializeRegionSizes
argument_list|()
expr_stmt|;
comment|// Mock out some regions
name|TableName
name|tableName
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"foo"
argument_list|)
decl_stmt|;
name|HRegionInfo
name|region1
init|=
operator|new
name|HRegionInfo
argument_list|(
name|tableName
argument_list|,
literal|null
argument_list|,
name|toBytes
argument_list|(
literal|"a"
argument_list|)
argument_list|)
decl_stmt|;
name|HRegionInfo
name|region2
init|=
operator|new
name|HRegionInfo
argument_list|(
name|tableName
argument_list|,
name|toBytes
argument_list|(
literal|"a"
argument_list|)
argument_list|,
name|toBytes
argument_list|(
literal|"b"
argument_list|)
argument_list|)
decl_stmt|;
name|HRegionInfo
name|region3
init|=
operator|new
name|HRegionInfo
argument_list|(
name|tableName
argument_list|,
name|toBytes
argument_list|(
literal|"b"
argument_list|)
argument_list|,
name|toBytes
argument_list|(
literal|"c"
argument_list|)
argument_list|)
decl_stmt|;
name|HRegionInfo
name|region4
init|=
operator|new
name|HRegionInfo
argument_list|(
name|tableName
argument_list|,
name|toBytes
argument_list|(
literal|"c"
argument_list|)
argument_list|,
name|toBytes
argument_list|(
literal|"d"
argument_list|)
argument_list|)
decl_stmt|;
name|HRegionInfo
name|region5
init|=
operator|new
name|HRegionInfo
argument_list|(
name|tableName
argument_list|,
name|toBytes
argument_list|(
literal|"d"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
specifier|final
name|long
name|size
init|=
literal|0
decl_stmt|;
name|long
name|time1
init|=
literal|10
decl_stmt|;
name|manager
operator|.
name|addRegionSize
argument_list|(
name|region1
argument_list|,
name|size
argument_list|,
name|time1
argument_list|)
expr_stmt|;
name|manager
operator|.
name|addRegionSize
argument_list|(
name|region2
argument_list|,
name|size
argument_list|,
name|time1
argument_list|)
expr_stmt|;
name|long
name|time2
init|=
literal|20
decl_stmt|;
name|manager
operator|.
name|addRegionSize
argument_list|(
name|region3
argument_list|,
name|size
argument_list|,
name|time2
argument_list|)
expr_stmt|;
name|manager
operator|.
name|addRegionSize
argument_list|(
name|region4
argument_list|,
name|size
argument_list|,
name|time2
argument_list|)
expr_stmt|;
name|long
name|time3
init|=
literal|30
decl_stmt|;
name|manager
operator|.
name|addRegionSize
argument_list|(
name|region5
argument_list|,
name|size
argument_list|,
name|time3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|manager
operator|.
name|snapshotRegionSizes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// Prune nothing
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|manager
operator|.
name|pruneEntriesOlderThan
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|manager
operator|.
name|snapshotRegionSizes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|manager
operator|.
name|pruneEntriesOlderThan
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|manager
operator|.
name|snapshotRegionSizes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// Prune the elements at time1
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|manager
operator|.
name|pruneEntriesOlderThan
argument_list|(
literal|15
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|manager
operator|.
name|snapshotRegionSizes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// Prune the elements at time2
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|manager
operator|.
name|pruneEntriesOlderThan
argument_list|(
literal|30
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|manager
operator|.
name|snapshotRegionSizes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

