begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|snapshot
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseTestingUtility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|SmallTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|errorhandling
operator|.
name|ForeignExceptionDispatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|SnapshotDescription
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|snapshot
operator|.
name|ReferenceServerWALsTask
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|snapshot
operator|.
name|SnapshotDescriptionUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|snapshot
operator|.
name|TakeSnapshotUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|FSUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_comment
comment|/**  * Test that the WAL reference task works as expected  */
end_comment

begin_class
annotation|@
name|Category
argument_list|(
name|SmallTests
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestWALReferenceTask
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|TestWALReferenceTask
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|HBaseTestingUtility
name|UTIL
init|=
operator|new
name|HBaseTestingUtility
argument_list|()
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testRun
parameter_list|()
throws|throws
name|IOException
block|{
name|Configuration
name|conf
init|=
name|UTIL
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|FileSystem
name|fs
init|=
name|UTIL
operator|.
name|getTestFileSystem
argument_list|()
decl_stmt|;
comment|// setup the log dir
name|Path
name|testDir
init|=
name|UTIL
operator|.
name|getDataTestDir
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|servers
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|Path
name|logDir
init|=
operator|new
name|Path
argument_list|(
name|testDir
argument_list|,
literal|".logs"
argument_list|)
decl_stmt|;
name|Path
name|server1Dir
init|=
operator|new
name|Path
argument_list|(
name|logDir
argument_list|,
literal|"Server1"
argument_list|)
decl_stmt|;
name|servers
operator|.
name|add
argument_list|(
name|server1Dir
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Path
name|server2Dir
init|=
operator|new
name|Path
argument_list|(
name|logDir
argument_list|,
literal|"me.hbase.com,56073,1348618509968"
argument_list|)
decl_stmt|;
name|servers
operator|.
name|add
argument_list|(
name|server2Dir
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|// logs under server 1
name|Path
name|log1_1
init|=
operator|new
name|Path
argument_list|(
name|server1Dir
argument_list|,
literal|"me.hbase.com%2C56073%2C1348618509968.1348618520536"
argument_list|)
decl_stmt|;
name|Path
name|log1_2
init|=
operator|new
name|Path
argument_list|(
name|server1Dir
argument_list|,
literal|"me.hbase.com%2C56073%2C1348618509968.1234567890123"
argument_list|)
decl_stmt|;
comment|// logs under server 2
name|Path
name|log2_1
init|=
operator|new
name|Path
argument_list|(
name|server2Dir
argument_list|,
literal|"me.hbase.com%2C56074%2C1348618509998.1348618515589"
argument_list|)
decl_stmt|;
name|Path
name|log2_2
init|=
operator|new
name|Path
argument_list|(
name|server2Dir
argument_list|,
literal|"me.hbase.com%2C56073%2C1348618509968.1234567890123"
argument_list|)
decl_stmt|;
comment|// create all the log files
name|fs
operator|.
name|createNewFile
argument_list|(
name|log1_1
argument_list|)
expr_stmt|;
name|fs
operator|.
name|createNewFile
argument_list|(
name|log1_2
argument_list|)
expr_stmt|;
name|fs
operator|.
name|createNewFile
argument_list|(
name|log2_1
argument_list|)
expr_stmt|;
name|fs
operator|.
name|createNewFile
argument_list|(
name|log2_2
argument_list|)
expr_stmt|;
name|FSUtils
operator|.
name|logFileSystemState
argument_list|(
name|fs
argument_list|,
name|testDir
argument_list|,
name|LOG
argument_list|)
expr_stmt|;
name|FSUtils
operator|.
name|setRootDir
argument_list|(
name|conf
argument_list|,
name|testDir
argument_list|)
expr_stmt|;
name|SnapshotDescription
name|snapshot
init|=
name|SnapshotDescription
operator|.
name|newBuilder
argument_list|()
operator|.
name|setName
argument_list|(
literal|"testWALReferenceSnapshot"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|ForeignExceptionDispatcher
name|listener
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|ForeignExceptionDispatcher
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// reference all the files in the first server directory
name|ReferenceServerWALsTask
name|task
init|=
operator|new
name|ReferenceServerWALsTask
argument_list|(
name|snapshot
argument_list|,
name|listener
argument_list|,
name|server1Dir
argument_list|,
name|conf
argument_list|,
name|fs
argument_list|)
decl_stmt|;
name|task
operator|.
name|call
argument_list|()
expr_stmt|;
comment|// reference all the files in the first server directory
name|task
operator|=
operator|new
name|ReferenceServerWALsTask
argument_list|(
name|snapshot
argument_list|,
name|listener
argument_list|,
name|server2Dir
argument_list|,
name|conf
argument_list|,
name|fs
argument_list|)
expr_stmt|;
name|task
operator|.
name|call
argument_list|()
expr_stmt|;
comment|// verify that we got everything
name|FSUtils
operator|.
name|logFileSystemState
argument_list|(
name|fs
argument_list|,
name|testDir
argument_list|,
name|LOG
argument_list|)
expr_stmt|;
name|Path
name|workingDir
init|=
name|SnapshotDescriptionUtils
operator|.
name|getWorkingSnapshotDir
argument_list|(
name|snapshot
argument_list|,
name|testDir
argument_list|)
decl_stmt|;
name|Path
name|snapshotLogDir
init|=
operator|new
name|Path
argument_list|(
name|workingDir
argument_list|,
name|HConstants
operator|.
name|HREGION_LOGDIR_NAME
argument_list|)
decl_stmt|;
comment|// make sure we reference the all the wal files
name|TakeSnapshotUtils
operator|.
name|verifyAllLogsGotReferenced
argument_list|(
name|fs
argument_list|,
name|logDir
argument_list|,
name|servers
argument_list|,
name|snapshot
argument_list|,
name|snapshotLogDir
argument_list|)
expr_stmt|;
comment|// make sure we never got an error
name|Mockito
operator|.
name|verify
argument_list|(
name|listener
argument_list|,
name|Mockito
operator|.
name|atLeastOnce
argument_list|()
argument_list|)
operator|.
name|rethrowException
argument_list|()
expr_stmt|;
name|Mockito
operator|.
name|verifyNoMoreInteractions
argument_list|(
name|listener
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

