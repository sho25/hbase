begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|CompatibilityFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseClassTestRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|test
operator|.
name|MetricsAssertHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|RegionServerTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|SmallTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|ClassRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_class
annotation|@
name|Category
argument_list|(
block|{
name|RegionServerTests
operator|.
name|class
block|,
name|SmallTests
operator|.
name|class
block|}
argument_list|)
specifier|public
class|class
name|TestMetricsTableAggregate
block|{
annotation|@
name|ClassRule
specifier|public
specifier|static
specifier|final
name|HBaseClassTestRule
name|CLASS_RULE
init|=
name|HBaseClassTestRule
operator|.
name|forClass
argument_list|(
name|TestMetricsTableAggregate
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|MetricsAssertHelper
name|HELPER
init|=
name|CompatibilityFactory
operator|.
name|getInstance
argument_list|(
name|MetricsAssertHelper
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|String
name|tableName
init|=
literal|"testTableMetrics"
decl_stmt|;
specifier|private
name|String
name|pre
init|=
literal|"Namespace_default_table_"
operator|+
name|tableName
operator|+
literal|"_metric_"
decl_stmt|;
specifier|private
name|MetricsTableWrapperStub
name|tableWrapper
decl_stmt|;
specifier|private
name|MetricsTable
name|mt
decl_stmt|;
specifier|private
name|MetricsRegionServerWrapper
name|rsWrapper
decl_stmt|;
specifier|private
name|MetricsRegionServer
name|rsm
decl_stmt|;
specifier|private
name|MetricsTableAggregateSource
name|agg
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|classSetUp
parameter_list|()
block|{
name|HELPER
operator|.
name|init
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|tableWrapper
operator|=
operator|new
name|MetricsTableWrapperStub
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
name|mt
operator|=
operator|new
name|MetricsTable
argument_list|(
name|tableWrapper
argument_list|)
expr_stmt|;
name|rsWrapper
operator|=
operator|new
name|MetricsRegionServerWrapperStub
argument_list|()
expr_stmt|;
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|rsm
operator|=
operator|new
name|MetricsRegionServer
argument_list|(
name|rsWrapper
argument_list|,
name|conf
argument_list|,
name|mt
argument_list|)
expr_stmt|;
name|agg
operator|=
name|mt
operator|.
name|getTableSourceAgg
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRequestMetrics
parameter_list|()
throws|throws
name|IOException
block|{
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"readRequestCount"
argument_list|,
literal|10
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"writeRequestCount"
argument_list|,
literal|20
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"totalRequestCount"
argument_list|,
literal|30
argument_list|,
name|agg
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRegionAndStoreMetrics
parameter_list|()
throws|throws
name|IOException
block|{
name|HELPER
operator|.
name|assertGauge
argument_list|(
name|pre
operator|+
literal|"memstoreSize"
argument_list|,
literal|1000
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertGauge
argument_list|(
name|pre
operator|+
literal|"storeFileSize"
argument_list|,
literal|2000
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertGauge
argument_list|(
name|pre
operator|+
literal|"tableSize"
argument_list|,
literal|3000
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertGauge
argument_list|(
name|pre
operator|+
literal|"regionCount"
argument_list|,
literal|11
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertGauge
argument_list|(
name|pre
operator|+
literal|"storeCount"
argument_list|,
literal|22
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertGauge
argument_list|(
name|pre
operator|+
literal|"storeFileCount"
argument_list|,
literal|33
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertGauge
argument_list|(
name|pre
operator|+
literal|"maxStoreFileAge"
argument_list|,
literal|44
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertGauge
argument_list|(
name|pre
operator|+
literal|"minStoreFileAge"
argument_list|,
literal|55
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertGauge
argument_list|(
name|pre
operator|+
literal|"avgStoreFileAge"
argument_list|,
literal|66
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertGauge
argument_list|(
name|pre
operator|+
literal|"numReferenceFiles"
argument_list|,
literal|77
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertGauge
argument_list|(
name|pre
operator|+
literal|"averageRegionSize"
argument_list|,
literal|88
argument_list|,
name|agg
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testFlush
parameter_list|()
block|{
name|rsm
operator|.
name|updateFlush
argument_list|(
name|tableName
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"flushTime_num_ops"
argument_list|,
literal|1
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"flushMemstoreSize_num_ops"
argument_list|,
literal|1
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"flushOutputSize_num_ops"
argument_list|,
literal|1
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"flushedMemstoreBytes"
argument_list|,
literal|2
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"flushedOutputBytes"
argument_list|,
literal|3
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|rsm
operator|.
name|updateFlush
argument_list|(
name|tableName
argument_list|,
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"flushTime_num_ops"
argument_list|,
literal|2
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"flushMemstoreSize_num_ops"
argument_list|,
literal|2
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"flushOutputSize_num_ops"
argument_list|,
literal|2
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"flushedMemstoreBytes"
argument_list|,
literal|22
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"flushedOutputBytes"
argument_list|,
literal|33
argument_list|,
name|agg
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCompaction
parameter_list|()
block|{
name|rsm
operator|.
name|updateCompaction
argument_list|(
name|tableName
argument_list|,
literal|false
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|4
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"compactionTime_num_ops"
argument_list|,
literal|1
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"compactionInputFileCount_num_ops"
argument_list|,
literal|1
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"compactionInputSize_num_ops"
argument_list|,
literal|1
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"compactionOutputFileCount_num_ops"
argument_list|,
literal|1
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"compactedInputBytes"
argument_list|,
literal|4
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"compactedoutputBytes"
argument_list|,
literal|5
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|rsm
operator|.
name|updateCompaction
argument_list|(
name|tableName
argument_list|,
literal|false
argument_list|,
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|,
literal|50
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"compactionTime_num_ops"
argument_list|,
literal|2
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"compactionInputFileCount_num_ops"
argument_list|,
literal|2
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"compactionInputSize_num_ops"
argument_list|,
literal|2
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"compactionOutputFileCount_num_ops"
argument_list|,
literal|2
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"compactedInputBytes"
argument_list|,
literal|44
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"compactedoutputBytes"
argument_list|,
literal|55
argument_list|,
name|agg
argument_list|)
expr_stmt|;
comment|// do major compaction
name|rsm
operator|.
name|updateCompaction
argument_list|(
name|tableName
argument_list|,
literal|true
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
literal|300
argument_list|,
literal|400
argument_list|,
literal|500
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"compactionTime_num_ops"
argument_list|,
literal|3
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"compactionInputFileCount_num_ops"
argument_list|,
literal|3
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"compactionInputSize_num_ops"
argument_list|,
literal|3
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"compactionOutputFileCount_num_ops"
argument_list|,
literal|3
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"compactedInputBytes"
argument_list|,
literal|444
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"compactedoutputBytes"
argument_list|,
literal|555
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"majorCompactionTime_num_ops"
argument_list|,
literal|1
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"majorCompactionInputFileCount_num_ops"
argument_list|,
literal|1
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"majorCompactionInputSize_num_ops"
argument_list|,
literal|1
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"majorCompactionOutputFileCount_num_ops"
argument_list|,
literal|1
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"majorCompactedInputBytes"
argument_list|,
literal|400
argument_list|,
name|agg
argument_list|)
expr_stmt|;
name|HELPER
operator|.
name|assertCounter
argument_list|(
name|pre
operator|+
literal|"majorCompactedoutputBytes"
argument_list|,
literal|500
argument_list|,
name|agg
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

