begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|rsgroup
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Closeable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|SortedSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Future
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|CacheEvictionStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ClusterMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ClusterMetrics
operator|.
name|Option
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|NamespaceDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|NamespaceNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|RegionMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ServerName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableExistsException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Admin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|ColumnFamilyDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|CompactType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|CompactionState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|RegionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|ResultScanner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Scan
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|SlowLogQueryFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|SlowLogRecord
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|SnapshotDescription
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|TableDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|replication
operator|.
name|TableCFs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|security
operator|.
name|SecurityCapability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|exceptions
operator|.
name|DeserializationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ipc
operator|.
name|CoprocessorRpcChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|net
operator|.
name|Address
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|ProtobufUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|RSGroupProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|quotas
operator|.
name|QuotaFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|quotas
operator|.
name|QuotaSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|quotas
operator|.
name|SpaceQuotaSnapshotView
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|wal
operator|.
name|FailedLogCloseException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|replication
operator|.
name|ReplicationPeerConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|replication
operator|.
name|ReplicationPeerDescription
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|replication
operator|.
name|SyncReplicationState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|access
operator|.
name|GetUserPermissionsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|access
operator|.
name|Permission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|access
operator|.
name|UserPermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|snapshot
operator|.
name|HBaseSnapshotException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|snapshot
operator|.
name|RestoreSnapshotException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|snapshot
operator|.
name|SnapshotCreationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|snapshot
operator|.
name|UnknownSnapshotException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|zookeeper
operator|.
name|ZKUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|zookeeper
operator|.
name|ZKWatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|zookeeper
operator|.
name|ZNodePaths
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|zookeeper
operator|.
name|KeeperException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Maps
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Sets
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|VerifyingRSGroupAdmin
implements|implements
name|Admin
implements|,
name|Closeable
block|{
specifier|private
specifier|final
name|Connection
name|conn
decl_stmt|;
specifier|private
specifier|final
name|Admin
name|admin
decl_stmt|;
specifier|private
specifier|final
name|ZKWatcher
name|zkw
decl_stmt|;
specifier|public
name|VerifyingRSGroupAdmin
parameter_list|(
name|Configuration
name|conf
parameter_list|)
throws|throws
name|IOException
block|{
name|conn
operator|=
name|ConnectionFactory
operator|.
name|createConnection
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|admin
operator|=
name|conn
operator|.
name|getAdmin
argument_list|()
expr_stmt|;
name|zkw
operator|=
operator|new
name|ZKWatcher
argument_list|(
name|conf
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getOperationTimeout
parameter_list|()
block|{
return|return
name|admin
operator|.
name|getOperationTimeout
argument_list|()
return|;
block|}
specifier|public
name|int
name|getSyncWaitTimeout
parameter_list|()
block|{
return|return
name|admin
operator|.
name|getSyncWaitTimeout
argument_list|()
return|;
block|}
specifier|public
name|void
name|abort
parameter_list|(
name|String
name|why
parameter_list|,
name|Throwable
name|e
parameter_list|)
block|{
name|admin
operator|.
name|abort
argument_list|(
name|why
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isAborted
parameter_list|()
block|{
return|return
name|admin
operator|.
name|isAborted
argument_list|()
return|;
block|}
specifier|public
name|Connection
name|getConnection
parameter_list|()
block|{
return|return
name|admin
operator|.
name|getConnection
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|tableExists
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|tableExists
argument_list|(
name|tableName
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|TableDescriptor
argument_list|>
name|listTableDescriptors
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|listTableDescriptors
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|TableDescriptor
argument_list|>
name|listTableDescriptors
parameter_list|(
name|boolean
name|includeSysTables
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|listTableDescriptors
argument_list|(
name|includeSysTables
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|TableDescriptor
argument_list|>
name|listTableDescriptors
parameter_list|(
name|Pattern
name|pattern
parameter_list|,
name|boolean
name|includeSysTables
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|listTableDescriptors
argument_list|(
name|pattern
argument_list|,
name|includeSysTables
argument_list|)
return|;
block|}
specifier|public
name|TableName
index|[]
name|listTableNames
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|listTableNames
argument_list|()
return|;
block|}
specifier|public
name|TableName
index|[]
name|listTableNames
parameter_list|(
name|Pattern
name|pattern
parameter_list|,
name|boolean
name|includeSysTables
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|listTableNames
argument_list|(
name|pattern
argument_list|,
name|includeSysTables
argument_list|)
return|;
block|}
specifier|public
name|TableDescriptor
name|getDescriptor
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|TableNotFoundException
throws|,
name|IOException
block|{
return|return
name|admin
operator|.
name|getDescriptor
argument_list|(
name|tableName
argument_list|)
return|;
block|}
specifier|public
name|void
name|createTable
parameter_list|(
name|TableDescriptor
name|desc
parameter_list|,
name|byte
index|[]
name|startKey
parameter_list|,
name|byte
index|[]
name|endKey
parameter_list|,
name|int
name|numRegions
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|createTable
argument_list|(
name|desc
argument_list|,
name|startKey
argument_list|,
name|endKey
argument_list|,
name|numRegions
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|createTableAsync
parameter_list|(
name|TableDescriptor
name|desc
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|createTableAsync
argument_list|(
name|desc
argument_list|)
return|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|createTableAsync
parameter_list|(
name|TableDescriptor
name|desc
parameter_list|,
name|byte
index|[]
index|[]
name|splitKeys
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|createTableAsync
argument_list|(
name|desc
argument_list|,
name|splitKeys
argument_list|)
return|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|deleteTableAsync
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|deleteTableAsync
argument_list|(
name|tableName
argument_list|)
return|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|truncateTableAsync
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|boolean
name|preserveSplits
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|truncateTableAsync
argument_list|(
name|tableName
argument_list|,
name|preserveSplits
argument_list|)
return|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|enableTableAsync
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|enableTableAsync
argument_list|(
name|tableName
argument_list|)
return|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|disableTableAsync
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|disableTableAsync
argument_list|(
name|tableName
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isTableEnabled
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|isTableEnabled
argument_list|(
name|tableName
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isTableDisabled
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|isTableDisabled
argument_list|(
name|tableName
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isTableAvailable
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|isTableAvailable
argument_list|(
name|tableName
argument_list|)
return|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|addColumnFamilyAsync
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|ColumnFamilyDescriptor
name|columnFamily
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|addColumnFamilyAsync
argument_list|(
name|tableName
argument_list|,
name|columnFamily
argument_list|)
return|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|deleteColumnFamilyAsync
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
name|columnFamily
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|deleteColumnFamilyAsync
argument_list|(
name|tableName
argument_list|,
name|columnFamily
argument_list|)
return|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|modifyColumnFamilyAsync
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|ColumnFamilyDescriptor
name|columnFamily
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|modifyColumnFamilyAsync
argument_list|(
name|tableName
argument_list|,
name|columnFamily
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|RegionInfo
argument_list|>
name|getRegions
parameter_list|(
name|ServerName
name|serverName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getRegions
argument_list|(
name|serverName
argument_list|)
return|;
block|}
specifier|public
name|void
name|flush
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|flush
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|flushRegion
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|flushRegion
argument_list|(
name|regionName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|flushRegionServer
parameter_list|(
name|ServerName
name|serverName
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|flushRegionServer
argument_list|(
name|serverName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|compact
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|compact
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|compactRegion
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|compactRegion
argument_list|(
name|regionName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|compact
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
name|columnFamily
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|compact
argument_list|(
name|tableName
argument_list|,
name|columnFamily
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|compactRegion
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|,
name|byte
index|[]
name|columnFamily
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|compactRegion
argument_list|(
name|regionName
argument_list|,
name|columnFamily
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|compact
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|CompactType
name|compactType
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|admin
operator|.
name|compact
argument_list|(
name|tableName
argument_list|,
name|compactType
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|compact
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
name|columnFamily
parameter_list|,
name|CompactType
name|compactType
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|admin
operator|.
name|compact
argument_list|(
name|tableName
argument_list|,
name|columnFamily
argument_list|,
name|compactType
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|majorCompact
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|majorCompact
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|majorCompactRegion
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|majorCompactRegion
argument_list|(
name|regionName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|majorCompact
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
name|columnFamily
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|majorCompact
argument_list|(
name|tableName
argument_list|,
name|columnFamily
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|majorCompactRegion
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|,
name|byte
index|[]
name|columnFamily
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|majorCompactRegion
argument_list|(
name|regionName
argument_list|,
name|columnFamily
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|majorCompact
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|CompactType
name|compactType
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|admin
operator|.
name|majorCompact
argument_list|(
name|tableName
argument_list|,
name|compactType
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|majorCompact
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
name|columnFamily
parameter_list|,
name|CompactType
name|compactType
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|admin
operator|.
name|majorCompact
argument_list|(
name|tableName
argument_list|,
name|columnFamily
argument_list|,
name|compactType
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Map
argument_list|<
name|ServerName
argument_list|,
name|Boolean
argument_list|>
name|compactionSwitch
parameter_list|(
name|boolean
name|switchState
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|serverNamesList
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|compactionSwitch
argument_list|(
name|switchState
argument_list|,
name|serverNamesList
argument_list|)
return|;
block|}
specifier|public
name|void
name|compactRegionServer
parameter_list|(
name|ServerName
name|serverName
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|compactRegionServer
argument_list|(
name|serverName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|majorCompactRegionServer
parameter_list|(
name|ServerName
name|serverName
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|majorCompactRegionServer
argument_list|(
name|serverName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|move
parameter_list|(
name|byte
index|[]
name|encodedRegionName
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|move
argument_list|(
name|encodedRegionName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|move
parameter_list|(
name|byte
index|[]
name|encodedRegionName
parameter_list|,
name|ServerName
name|destServerName
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|move
argument_list|(
name|encodedRegionName
argument_list|,
name|destServerName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|assign
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|assign
argument_list|(
name|regionName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|unassign
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|,
name|boolean
name|force
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|unassign
argument_list|(
name|regionName
argument_list|,
name|force
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|offline
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|offline
argument_list|(
name|regionName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|balancerSwitch
parameter_list|(
name|boolean
name|onOrOff
parameter_list|,
name|boolean
name|synchronous
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|balancerSwitch
argument_list|(
name|onOrOff
argument_list|,
name|synchronous
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|balance
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|balance
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|balance
parameter_list|(
name|boolean
name|force
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|balance
argument_list|(
name|force
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isBalancerEnabled
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|isBalancerEnabled
argument_list|()
return|;
block|}
specifier|public
name|CacheEvictionStats
name|clearBlockCache
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|clearBlockCache
argument_list|(
name|tableName
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|normalize
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|normalize
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isNormalizerEnabled
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|isNormalizerEnabled
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|normalizerSwitch
parameter_list|(
name|boolean
name|on
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|normalizerSwitch
argument_list|(
name|on
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|catalogJanitorSwitch
parameter_list|(
name|boolean
name|onOrOff
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|catalogJanitorSwitch
argument_list|(
name|onOrOff
argument_list|)
return|;
block|}
specifier|public
name|int
name|runCatalogJanitor
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|runCatalogJanitor
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isCatalogJanitorEnabled
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|isCatalogJanitorEnabled
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|cleanerChoreSwitch
parameter_list|(
name|boolean
name|onOrOff
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|cleanerChoreSwitch
argument_list|(
name|onOrOff
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|runCleanerChore
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|runCleanerChore
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isCleanerChoreEnabled
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|isCleanerChoreEnabled
argument_list|()
return|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|mergeRegionsAsync
parameter_list|(
name|byte
index|[]
index|[]
name|nameofRegionsToMerge
parameter_list|,
name|boolean
name|forcible
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|mergeRegionsAsync
argument_list|(
name|nameofRegionsToMerge
argument_list|,
name|forcible
argument_list|)
return|;
block|}
specifier|public
name|void
name|split
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|split
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|split
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
name|splitPoint
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|split
argument_list|(
name|tableName
argument_list|,
name|splitPoint
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|splitRegionAsync
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|splitRegionAsync
argument_list|(
name|regionName
argument_list|)
return|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|splitRegionAsync
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|,
name|byte
index|[]
name|splitPoint
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|splitRegionAsync
argument_list|(
name|regionName
argument_list|,
name|splitPoint
argument_list|)
return|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|modifyTableAsync
parameter_list|(
name|TableDescriptor
name|td
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|modifyTableAsync
argument_list|(
name|td
argument_list|)
return|;
block|}
specifier|public
name|void
name|shutdown
parameter_list|()
throws|throws
name|IOException
block|{
name|admin
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|stopMaster
parameter_list|()
throws|throws
name|IOException
block|{
name|admin
operator|.
name|stopMaster
argument_list|()
expr_stmt|;
block|}
specifier|public
name|boolean
name|isMasterInMaintenanceMode
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|isMasterInMaintenanceMode
argument_list|()
return|;
block|}
specifier|public
name|void
name|stopRegionServer
parameter_list|(
name|String
name|hostnamePort
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|stopRegionServer
argument_list|(
name|hostnamePort
argument_list|)
expr_stmt|;
block|}
specifier|public
name|ClusterMetrics
name|getClusterMetrics
parameter_list|(
name|EnumSet
argument_list|<
name|Option
argument_list|>
name|options
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getClusterMetrics
argument_list|(
name|options
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|RegionMetrics
argument_list|>
name|getRegionMetrics
parameter_list|(
name|ServerName
name|serverName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getRegionMetrics
argument_list|(
name|serverName
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|RegionMetrics
argument_list|>
name|getRegionMetrics
parameter_list|(
name|ServerName
name|serverName
parameter_list|,
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getRegionMetrics
argument_list|(
name|serverName
argument_list|,
name|tableName
argument_list|)
return|;
block|}
specifier|public
name|Configuration
name|getConfiguration
parameter_list|()
block|{
return|return
name|admin
operator|.
name|getConfiguration
argument_list|()
return|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|createNamespaceAsync
parameter_list|(
name|NamespaceDescriptor
name|descriptor
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|createNamespaceAsync
argument_list|(
name|descriptor
argument_list|)
return|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|modifyNamespaceAsync
parameter_list|(
name|NamespaceDescriptor
name|descriptor
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|modifyNamespaceAsync
argument_list|(
name|descriptor
argument_list|)
return|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|deleteNamespaceAsync
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|deleteNamespaceAsync
argument_list|(
name|name
argument_list|)
return|;
block|}
specifier|public
name|NamespaceDescriptor
name|getNamespaceDescriptor
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|NamespaceNotFoundException
throws|,
name|IOException
block|{
return|return
name|admin
operator|.
name|getNamespaceDescriptor
argument_list|(
name|name
argument_list|)
return|;
block|}
specifier|public
name|String
index|[]
name|listNamespaces
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|listNamespaces
argument_list|()
return|;
block|}
specifier|public
name|NamespaceDescriptor
index|[]
name|listNamespaceDescriptors
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|listNamespaceDescriptors
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|TableDescriptor
argument_list|>
name|listTableDescriptorsByNamespace
parameter_list|(
name|byte
index|[]
name|name
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|listTableDescriptorsByNamespace
argument_list|(
name|name
argument_list|)
return|;
block|}
specifier|public
name|TableName
index|[]
name|listTableNamesByNamespace
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|listTableNamesByNamespace
argument_list|(
name|name
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|RegionInfo
argument_list|>
name|getRegions
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getRegions
argument_list|(
name|tableName
argument_list|)
return|;
block|}
specifier|public
name|void
name|close
parameter_list|()
block|{
name|admin
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|TableDescriptor
argument_list|>
name|listTableDescriptors
parameter_list|(
name|List
argument_list|<
name|TableName
argument_list|>
name|tableNames
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|listTableDescriptors
argument_list|(
name|tableNames
argument_list|)
return|;
block|}
specifier|public
name|Future
argument_list|<
name|Boolean
argument_list|>
name|abortProcedureAsync
parameter_list|(
name|long
name|procId
parameter_list|,
name|boolean
name|mayInterruptIfRunning
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|abortProcedureAsync
argument_list|(
name|procId
argument_list|,
name|mayInterruptIfRunning
argument_list|)
return|;
block|}
specifier|public
name|String
name|getProcedures
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getProcedures
argument_list|()
return|;
block|}
specifier|public
name|String
name|getLocks
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getLocks
argument_list|()
return|;
block|}
specifier|public
name|void
name|rollWALWriter
parameter_list|(
name|ServerName
name|serverName
parameter_list|)
throws|throws
name|IOException
throws|,
name|FailedLogCloseException
block|{
name|admin
operator|.
name|rollWALWriter
argument_list|(
name|serverName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|CompactionState
name|getCompactionState
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getCompactionState
argument_list|(
name|tableName
argument_list|)
return|;
block|}
specifier|public
name|CompactionState
name|getCompactionState
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|CompactType
name|compactType
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getCompactionState
argument_list|(
name|tableName
argument_list|,
name|compactType
argument_list|)
return|;
block|}
specifier|public
name|CompactionState
name|getCompactionStateForRegion
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getCompactionStateForRegion
argument_list|(
name|regionName
argument_list|)
return|;
block|}
specifier|public
name|long
name|getLastMajorCompactionTimestamp
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getLastMajorCompactionTimestamp
argument_list|(
name|tableName
argument_list|)
return|;
block|}
specifier|public
name|long
name|getLastMajorCompactionTimestampForRegion
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getLastMajorCompactionTimestampForRegion
argument_list|(
name|regionName
argument_list|)
return|;
block|}
specifier|public
name|void
name|snapshot
parameter_list|(
name|SnapshotDescription
name|snapshot
parameter_list|)
throws|throws
name|IOException
throws|,
name|SnapshotCreationException
throws|,
name|IllegalArgumentException
block|{
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|snapshotAsync
parameter_list|(
name|SnapshotDescription
name|snapshot
parameter_list|)
throws|throws
name|IOException
throws|,
name|SnapshotCreationException
block|{
return|return
name|admin
operator|.
name|snapshotAsync
argument_list|(
name|snapshot
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isSnapshotFinished
parameter_list|(
name|SnapshotDescription
name|snapshot
parameter_list|)
throws|throws
name|IOException
throws|,
name|HBaseSnapshotException
throws|,
name|UnknownSnapshotException
block|{
return|return
name|admin
operator|.
name|isSnapshotFinished
argument_list|(
name|snapshot
argument_list|)
return|;
block|}
specifier|public
name|void
name|restoreSnapshot
parameter_list|(
name|String
name|snapshotName
parameter_list|)
throws|throws
name|IOException
throws|,
name|RestoreSnapshotException
block|{
name|admin
operator|.
name|restoreSnapshot
argument_list|(
name|snapshotName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|restoreSnapshot
parameter_list|(
name|String
name|snapshotName
parameter_list|,
name|boolean
name|takeFailSafeSnapshot
parameter_list|,
name|boolean
name|restoreAcl
parameter_list|)
throws|throws
name|IOException
throws|,
name|RestoreSnapshotException
block|{
name|admin
operator|.
name|restoreSnapshot
argument_list|(
name|snapshotName
argument_list|,
name|takeFailSafeSnapshot
argument_list|,
name|restoreAcl
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|cloneSnapshotAsync
parameter_list|(
name|String
name|snapshotName
parameter_list|,
name|TableName
name|tableName
parameter_list|,
name|boolean
name|restoreAcl
parameter_list|)
throws|throws
name|IOException
throws|,
name|TableExistsException
throws|,
name|RestoreSnapshotException
block|{
return|return
name|admin
operator|.
name|cloneSnapshotAsync
argument_list|(
name|snapshotName
argument_list|,
name|tableName
argument_list|,
name|restoreAcl
argument_list|)
return|;
block|}
specifier|public
name|void
name|execProcedure
parameter_list|(
name|String
name|signature
parameter_list|,
name|String
name|instance
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|props
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|execProcedure
argument_list|(
name|signature
argument_list|,
name|instance
argument_list|,
name|props
argument_list|)
expr_stmt|;
block|}
specifier|public
name|byte
index|[]
name|execProcedureWithReturn
parameter_list|(
name|String
name|signature
parameter_list|,
name|String
name|instance
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|props
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|execProcedureWithReturn
argument_list|(
name|signature
argument_list|,
name|instance
argument_list|,
name|props
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isProcedureFinished
parameter_list|(
name|String
name|signature
parameter_list|,
name|String
name|instance
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|props
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|isProcedureFinished
argument_list|(
name|signature
argument_list|,
name|instance
argument_list|,
name|props
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|SnapshotDescription
argument_list|>
name|listSnapshots
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|listSnapshots
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|SnapshotDescription
argument_list|>
name|listSnapshots
parameter_list|(
name|Pattern
name|pattern
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|listSnapshots
argument_list|(
name|pattern
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|SnapshotDescription
argument_list|>
name|listTableSnapshots
parameter_list|(
name|Pattern
name|tableNamePattern
parameter_list|,
name|Pattern
name|snapshotNamePattern
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|listTableSnapshots
argument_list|(
name|tableNamePattern
argument_list|,
name|snapshotNamePattern
argument_list|)
return|;
block|}
specifier|public
name|void
name|deleteSnapshot
parameter_list|(
name|String
name|snapshotName
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|deleteSnapshot
argument_list|(
name|snapshotName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|deleteSnapshots
parameter_list|(
name|Pattern
name|pattern
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|deleteSnapshots
argument_list|(
name|pattern
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|deleteTableSnapshots
parameter_list|(
name|Pattern
name|tableNamePattern
parameter_list|,
name|Pattern
name|snapshotNamePattern
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|deleteTableSnapshots
argument_list|(
name|tableNamePattern
argument_list|,
name|snapshotNamePattern
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setQuota
parameter_list|(
name|QuotaSettings
name|quota
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|setQuota
argument_list|(
name|quota
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|QuotaSettings
argument_list|>
name|getQuota
parameter_list|(
name|QuotaFilter
name|filter
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getQuota
argument_list|(
name|filter
argument_list|)
return|;
block|}
specifier|public
name|CoprocessorRpcChannel
name|coprocessorService
parameter_list|()
block|{
return|return
name|admin
operator|.
name|coprocessorService
argument_list|()
return|;
block|}
specifier|public
name|CoprocessorRpcChannel
name|coprocessorService
parameter_list|(
name|ServerName
name|serverName
parameter_list|)
block|{
return|return
name|admin
operator|.
name|coprocessorService
argument_list|(
name|serverName
argument_list|)
return|;
block|}
specifier|public
name|void
name|updateConfiguration
parameter_list|(
name|ServerName
name|server
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|updateConfiguration
argument_list|(
name|server
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|updateConfiguration
parameter_list|()
throws|throws
name|IOException
block|{
name|admin
operator|.
name|updateConfiguration
argument_list|()
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|SecurityCapability
argument_list|>
name|getSecurityCapabilities
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getSecurityCapabilities
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|splitSwitch
parameter_list|(
name|boolean
name|enabled
parameter_list|,
name|boolean
name|synchronous
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|splitSwitch
argument_list|(
name|enabled
argument_list|,
name|synchronous
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|mergeSwitch
parameter_list|(
name|boolean
name|enabled
parameter_list|,
name|boolean
name|synchronous
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|mergeSwitch
argument_list|(
name|enabled
argument_list|,
name|synchronous
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isSplitEnabled
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|isSplitEnabled
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isMergeEnabled
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|isMergeEnabled
argument_list|()
return|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|addReplicationPeerAsync
parameter_list|(
name|String
name|peerId
parameter_list|,
name|ReplicationPeerConfig
name|peerConfig
parameter_list|,
name|boolean
name|enabled
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|addReplicationPeerAsync
argument_list|(
name|peerId
argument_list|,
name|peerConfig
argument_list|,
name|enabled
argument_list|)
return|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|removeReplicationPeerAsync
parameter_list|(
name|String
name|peerId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|removeReplicationPeerAsync
argument_list|(
name|peerId
argument_list|)
return|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|enableReplicationPeerAsync
parameter_list|(
name|String
name|peerId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|enableReplicationPeerAsync
argument_list|(
name|peerId
argument_list|)
return|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|disableReplicationPeerAsync
parameter_list|(
name|String
name|peerId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|disableReplicationPeerAsync
argument_list|(
name|peerId
argument_list|)
return|;
block|}
specifier|public
name|ReplicationPeerConfig
name|getReplicationPeerConfig
parameter_list|(
name|String
name|peerId
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getReplicationPeerConfig
argument_list|(
name|peerId
argument_list|)
return|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|updateReplicationPeerConfigAsync
parameter_list|(
name|String
name|peerId
parameter_list|,
name|ReplicationPeerConfig
name|peerConfig
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|updateReplicationPeerConfigAsync
argument_list|(
name|peerId
argument_list|,
name|peerConfig
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|ReplicationPeerDescription
argument_list|>
name|listReplicationPeers
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|listReplicationPeers
argument_list|()
return|;
block|}
specifier|public
name|List
argument_list|<
name|ReplicationPeerDescription
argument_list|>
name|listReplicationPeers
parameter_list|(
name|Pattern
name|pattern
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|listReplicationPeers
argument_list|(
name|pattern
argument_list|)
return|;
block|}
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|transitReplicationPeerSyncReplicationStateAsync
parameter_list|(
name|String
name|peerId
parameter_list|,
name|SyncReplicationState
name|state
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|transitReplicationPeerSyncReplicationStateAsync
argument_list|(
name|peerId
argument_list|,
name|state
argument_list|)
return|;
block|}
specifier|public
name|void
name|decommissionRegionServers
parameter_list|(
name|List
argument_list|<
name|ServerName
argument_list|>
name|servers
parameter_list|,
name|boolean
name|offload
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|decommissionRegionServers
argument_list|(
name|servers
argument_list|,
name|offload
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|ServerName
argument_list|>
name|listDecommissionedRegionServers
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|listDecommissionedRegionServers
argument_list|()
return|;
block|}
specifier|public
name|void
name|recommissionRegionServer
parameter_list|(
name|ServerName
name|server
parameter_list|,
name|List
argument_list|<
name|byte
index|[]
argument_list|>
name|encodedRegionNames
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|recommissionRegionServer
argument_list|(
name|server
argument_list|,
name|encodedRegionNames
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|TableCFs
argument_list|>
name|listReplicatedTableCFs
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|listReplicatedTableCFs
argument_list|()
return|;
block|}
specifier|public
name|void
name|enableTableReplication
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|enableTableReplication
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|disableTableReplication
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|disableTableReplication
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|clearCompactionQueues
parameter_list|(
name|ServerName
name|serverName
parameter_list|,
name|Set
argument_list|<
name|String
argument_list|>
name|queues
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|admin
operator|.
name|clearCompactionQueues
argument_list|(
name|serverName
argument_list|,
name|queues
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|ServerName
argument_list|>
name|clearDeadServers
parameter_list|(
name|List
argument_list|<
name|ServerName
argument_list|>
name|servers
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|clearDeadServers
argument_list|(
name|servers
argument_list|)
return|;
block|}
specifier|public
name|void
name|cloneTableSchema
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|TableName
name|newTableName
parameter_list|,
name|boolean
name|preserveSplits
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|cloneTableSchema
argument_list|(
name|tableName
argument_list|,
name|newTableName
argument_list|,
name|preserveSplits
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|switchRpcThrottle
parameter_list|(
name|boolean
name|enable
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|switchRpcThrottle
argument_list|(
name|enable
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isRpcThrottleEnabled
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|isRpcThrottleEnabled
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|exceedThrottleQuotaSwitch
parameter_list|(
name|boolean
name|enable
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|exceedThrottleQuotaSwitch
argument_list|(
name|enable
argument_list|)
return|;
block|}
specifier|public
name|Map
argument_list|<
name|TableName
argument_list|,
name|Long
argument_list|>
name|getSpaceQuotaTableSizes
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getSpaceQuotaTableSizes
argument_list|()
return|;
block|}
specifier|public
name|Map
argument_list|<
name|TableName
argument_list|,
name|?
extends|extends
name|SpaceQuotaSnapshotView
argument_list|>
name|getRegionServerSpaceQuotaSnapshots
parameter_list|(
name|ServerName
name|serverName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getRegionServerSpaceQuotaSnapshots
argument_list|(
name|serverName
argument_list|)
return|;
block|}
specifier|public
name|SpaceQuotaSnapshotView
name|getCurrentSpaceQuotaSnapshot
parameter_list|(
name|String
name|namespace
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getCurrentSpaceQuotaSnapshot
argument_list|(
name|namespace
argument_list|)
return|;
block|}
specifier|public
name|SpaceQuotaSnapshotView
name|getCurrentSpaceQuotaSnapshot
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getCurrentSpaceQuotaSnapshot
argument_list|(
name|tableName
argument_list|)
return|;
block|}
specifier|public
name|void
name|grant
parameter_list|(
name|UserPermission
name|userPermission
parameter_list|,
name|boolean
name|mergeExistingPermissions
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|grant
argument_list|(
name|userPermission
argument_list|,
name|mergeExistingPermissions
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|revoke
parameter_list|(
name|UserPermission
name|userPermission
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|revoke
argument_list|(
name|userPermission
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|UserPermission
argument_list|>
name|getUserPermissions
parameter_list|(
name|GetUserPermissionsRequest
name|getUserPermissionsRequest
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getUserPermissions
argument_list|(
name|getUserPermissionsRequest
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|Boolean
argument_list|>
name|hasUserPermissions
parameter_list|(
name|String
name|userName
parameter_list|,
name|List
argument_list|<
name|Permission
argument_list|>
name|permissions
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|hasUserPermissions
argument_list|(
name|userName
argument_list|,
name|permissions
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|snapshotCleanupSwitch
parameter_list|(
name|boolean
name|on
parameter_list|,
name|boolean
name|synchronous
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|snapshotCleanupSwitch
argument_list|(
name|on
argument_list|,
name|synchronous
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|isSnapshotCleanupEnabled
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|isSnapshotCleanupEnabled
argument_list|()
return|;
block|}
specifier|public
name|void
name|addRSGroup
parameter_list|(
name|String
name|groupName
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|addRSGroup
argument_list|(
name|groupName
argument_list|)
expr_stmt|;
name|verify
argument_list|()
expr_stmt|;
block|}
specifier|public
name|RSGroupInfo
name|getRSGroup
parameter_list|(
name|String
name|groupName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getRSGroup
argument_list|(
name|groupName
argument_list|)
return|;
block|}
specifier|public
name|RSGroupInfo
name|getRSGroup
parameter_list|(
name|Address
name|hostPort
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getRSGroup
argument_list|(
name|hostPort
argument_list|)
return|;
block|}
specifier|public
name|RSGroupInfo
name|getRSGroup
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|getRSGroup
argument_list|(
name|tableName
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|RSGroupInfo
argument_list|>
name|listRSGroups
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|listRSGroups
argument_list|()
return|;
block|}
specifier|public
name|void
name|removeRSGroup
parameter_list|(
name|String
name|groupName
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|removeRSGroup
argument_list|(
name|groupName
argument_list|)
expr_stmt|;
name|verify
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|removeServersFromRSGroup
parameter_list|(
name|Set
argument_list|<
name|Address
argument_list|>
name|servers
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|removeServersFromRSGroup
argument_list|(
name|servers
argument_list|)
expr_stmt|;
name|verify
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|moveServersToRSGroup
parameter_list|(
name|Set
argument_list|<
name|Address
argument_list|>
name|servers
parameter_list|,
name|String
name|targetGroup
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|moveServersToRSGroup
argument_list|(
name|servers
argument_list|,
name|targetGroup
argument_list|)
expr_stmt|;
name|verify
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setRSGroup
parameter_list|(
name|Set
argument_list|<
name|TableName
argument_list|>
name|tables
parameter_list|,
name|String
name|groupName
parameter_list|)
throws|throws
name|IOException
block|{
name|admin
operator|.
name|setRSGroup
argument_list|(
name|tables
argument_list|,
name|groupName
argument_list|)
expr_stmt|;
name|verify
argument_list|()
expr_stmt|;
block|}
specifier|public
name|boolean
name|balanceRSGroup
parameter_list|(
name|String
name|groupName
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|admin
operator|.
name|balanceRSGroup
argument_list|(
name|groupName
argument_list|)
return|;
block|}
specifier|private
name|void
name|verify
parameter_list|()
throws|throws
name|IOException
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|RSGroupInfo
argument_list|>
name|groupMap
init|=
name|Maps
operator|.
name|newHashMap
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|RSGroupInfo
argument_list|>
name|zList
init|=
name|Sets
operator|.
name|newHashSet
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|TableDescriptor
argument_list|>
name|tds
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
try|try
init|(
name|Admin
name|admin
init|=
name|conn
operator|.
name|getAdmin
argument_list|()
init|)
block|{
name|tds
operator|.
name|addAll
argument_list|(
name|admin
operator|.
name|listTableDescriptors
argument_list|()
argument_list|)
expr_stmt|;
name|tds
operator|.
name|addAll
argument_list|(
name|admin
operator|.
name|listTableDescriptorsByNamespace
argument_list|(
name|NamespaceDescriptor
operator|.
name|SYSTEM_NAMESPACE_NAME
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|SortedSet
argument_list|<
name|Address
argument_list|>
name|lives
init|=
name|Sets
operator|.
name|newTreeSet
argument_list|()
decl_stmt|;
for|for
control|(
name|ServerName
name|sn
range|:
name|conn
operator|.
name|getAdmin
argument_list|()
operator|.
name|getClusterMetrics
argument_list|()
operator|.
name|getLiveServerMetrics
argument_list|()
operator|.
name|keySet
argument_list|()
control|)
block|{
name|lives
operator|.
name|add
argument_list|(
name|sn
operator|.
name|getAddress
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|ServerName
name|sn
range|:
name|conn
operator|.
name|getAdmin
argument_list|()
operator|.
name|listDecommissionedRegionServers
argument_list|()
control|)
block|{
name|lives
operator|.
name|remove
argument_list|(
name|sn
operator|.
name|getAddress
argument_list|()
argument_list|)
expr_stmt|;
block|}
try|try
init|(
name|Table
name|table
init|=
name|conn
operator|.
name|getTable
argument_list|(
name|RSGroupInfoManagerImpl
operator|.
name|RSGROUP_TABLE_NAME
argument_list|)
init|;
name|ResultScanner
name|scanner
operator|=
name|table
operator|.
name|getScanner
argument_list|(
operator|new
name|Scan
argument_list|()
argument_list|)
init|)
block|{
for|for
control|(
init|;
condition|;
control|)
block|{
name|Result
name|result
init|=
name|scanner
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|result
operator|==
literal|null
condition|)
block|{
break|break;
block|}
name|RSGroupProtos
operator|.
name|RSGroupInfo
name|proto
init|=
name|RSGroupProtos
operator|.
name|RSGroupInfo
operator|.
name|parseFrom
argument_list|(
name|result
operator|.
name|getValue
argument_list|(
name|RSGroupInfoManagerImpl
operator|.
name|META_FAMILY_BYTES
argument_list|,
name|RSGroupInfoManagerImpl
operator|.
name|META_QUALIFIER_BYTES
argument_list|)
argument_list|)
decl_stmt|;
name|RSGroupInfo
name|rsGroupInfo
init|=
name|ProtobufUtil
operator|.
name|toGroupInfo
argument_list|(
name|proto
argument_list|)
decl_stmt|;
name|groupMap
operator|.
name|put
argument_list|(
name|proto
operator|.
name|getName
argument_list|()
argument_list|,
name|RSGroupUtil
operator|.
name|fillTables
argument_list|(
name|rsGroupInfo
argument_list|,
name|tds
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Address
name|address
range|:
name|rsGroupInfo
operator|.
name|getServers
argument_list|()
control|)
block|{
name|lives
operator|.
name|remove
argument_list|(
name|address
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|SortedSet
argument_list|<
name|TableName
argument_list|>
name|tables
init|=
name|Sets
operator|.
name|newTreeSet
argument_list|()
decl_stmt|;
for|for
control|(
name|TableDescriptor
name|td
range|:
name|conn
operator|.
name|getAdmin
argument_list|()
operator|.
name|listTableDescriptors
argument_list|(
name|Pattern
operator|.
name|compile
argument_list|(
literal|".*"
argument_list|)
argument_list|,
literal|true
argument_list|)
control|)
block|{
name|String
name|groupName
init|=
name|td
operator|.
name|getRegionServerGroup
argument_list|()
operator|.
name|orElse
argument_list|(
name|RSGroupInfo
operator|.
name|DEFAULT_GROUP
argument_list|)
decl_stmt|;
if|if
condition|(
name|groupName
operator|.
name|equals
argument_list|(
name|RSGroupInfo
operator|.
name|DEFAULT_GROUP
argument_list|)
condition|)
block|{
name|tables
operator|.
name|add
argument_list|(
name|td
operator|.
name|getTableName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|groupMap
operator|.
name|put
argument_list|(
name|RSGroupInfo
operator|.
name|DEFAULT_GROUP
argument_list|,
operator|new
name|RSGroupInfo
argument_list|(
name|RSGroupInfo
operator|.
name|DEFAULT_GROUP
argument_list|,
name|lives
argument_list|,
name|tables
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Sets
operator|.
name|newHashSet
argument_list|(
name|groupMap
operator|.
name|values
argument_list|()
argument_list|)
argument_list|,
name|Sets
operator|.
name|newHashSet
argument_list|(
name|admin
operator|.
name|listRSGroups
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|String
name|groupBasePath
init|=
name|ZNodePaths
operator|.
name|joinZNode
argument_list|(
name|zkw
operator|.
name|getZNodePaths
argument_list|()
operator|.
name|baseZNode
argument_list|,
literal|"rsgroup"
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|znode
range|:
name|ZKUtil
operator|.
name|listChildrenNoWatch
argument_list|(
name|zkw
argument_list|,
name|groupBasePath
argument_list|)
control|)
block|{
name|byte
index|[]
name|data
init|=
name|ZKUtil
operator|.
name|getData
argument_list|(
name|zkw
argument_list|,
name|ZNodePaths
operator|.
name|joinZNode
argument_list|(
name|groupBasePath
argument_list|,
name|znode
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|data
operator|.
name|length
operator|>
literal|0
condition|)
block|{
name|ProtobufUtil
operator|.
name|expectPBMagicPrefix
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|ByteArrayInputStream
name|bis
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
argument_list|,
name|ProtobufUtil
operator|.
name|lengthOfPBMagic
argument_list|()
argument_list|,
name|data
operator|.
name|length
argument_list|)
decl_stmt|;
name|RSGroupInfo
name|rsGroupInfo
init|=
name|ProtobufUtil
operator|.
name|toGroupInfo
argument_list|(
name|RSGroupProtos
operator|.
name|RSGroupInfo
operator|.
name|parseFrom
argument_list|(
name|bis
argument_list|)
argument_list|)
decl_stmt|;
name|zList
operator|.
name|add
argument_list|(
name|RSGroupUtil
operator|.
name|fillTables
argument_list|(
name|rsGroupInfo
argument_list|,
name|tds
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|groupMap
operator|.
name|remove
argument_list|(
name|RSGroupInfo
operator|.
name|DEFAULT_GROUP
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|zList
operator|.
name|size
argument_list|()
argument_list|,
name|groupMap
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|RSGroupInfo
name|rsGroupInfo
range|:
name|zList
control|)
block|{
name|assertTrue
argument_list|(
name|groupMap
operator|.
name|get
argument_list|(
name|rsGroupInfo
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|equals
argument_list|(
name|rsGroupInfo
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|KeeperException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"ZK verification failed"
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|DeserializationException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"ZK verification failed"
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"ZK verification failed"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|SlowLogRecord
argument_list|>
name|getSlowLogResponses
parameter_list|(
name|Set
argument_list|<
name|ServerName
argument_list|>
name|serverNames
parameter_list|,
name|SlowLogQueryFilter
name|slowLogQueryFilter
parameter_list|)
throws|throws
name|IOException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|Boolean
argument_list|>
name|clearSlowLogResponses
parameter_list|(
name|Set
argument_list|<
name|ServerName
argument_list|>
name|serverNames
parameter_list|)
throws|throws
name|IOException
block|{
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

