begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more contributor license  * agreements. See the NOTICE file distributed with this work for additional information regarding  * copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with the License. You may  * obtain a copy of the License at  *   * http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software distributed under the  * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,  * either express or implied. See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|mapreduce
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|MapReduceTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|SmallTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Scan
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|LongWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|io
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapreduce
operator|.
name|Job
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_comment
comment|/**  * Test different variants of initTableMapperJob method  */
end_comment

begin_class
annotation|@
name|Category
argument_list|(
block|{
name|MapReduceTests
operator|.
name|class
block|,
name|SmallTests
operator|.
name|class
block|}
argument_list|)
specifier|public
class|class
name|TestTableMapReduceUtil
block|{
comment|/*    * initTableSnapshotMapperJob is tested in {@link TestTableSnapshotInputFormat} because    * the method depends on an online cluster.    */
annotation|@
name|Test
specifier|public
name|void
name|testInitTableMapperJob1
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|configuration
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|Job
name|job
init|=
operator|new
name|Job
argument_list|(
name|configuration
argument_list|,
literal|"tableName"
argument_list|)
decl_stmt|;
comment|// test
name|TableMapReduceUtil
operator|.
name|initTableMapperJob
argument_list|(
literal|"Table"
argument_list|,
operator|new
name|Scan
argument_list|()
argument_list|,
name|Import
operator|.
name|Importer
operator|.
name|class
argument_list|,
name|Text
operator|.
name|class
argument_list|,
name|Text
operator|.
name|class
argument_list|,
name|job
argument_list|,
literal|false
argument_list|,
name|WALInputFormat
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|WALInputFormat
operator|.
name|class
argument_list|,
name|job
operator|.
name|getInputFormatClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Import
operator|.
name|Importer
operator|.
name|class
argument_list|,
name|job
operator|.
name|getMapperClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|LongWritable
operator|.
name|class
argument_list|,
name|job
operator|.
name|getOutputKeyClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Text
operator|.
name|class
argument_list|,
name|job
operator|.
name|getOutputValueClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|job
operator|.
name|getCombinerClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Table"
argument_list|,
name|job
operator|.
name|getConfiguration
argument_list|()
operator|.
name|get
argument_list|(
name|TableInputFormat
operator|.
name|INPUT_TABLE
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInitTableMapperJob2
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|configuration
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|Job
name|job
init|=
operator|new
name|Job
argument_list|(
name|configuration
argument_list|,
literal|"tableName"
argument_list|)
decl_stmt|;
name|TableMapReduceUtil
operator|.
name|initTableMapperJob
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"Table"
argument_list|)
argument_list|,
operator|new
name|Scan
argument_list|()
argument_list|,
name|Import
operator|.
name|Importer
operator|.
name|class
argument_list|,
name|Text
operator|.
name|class
argument_list|,
name|Text
operator|.
name|class
argument_list|,
name|job
argument_list|,
literal|false
argument_list|,
name|WALInputFormat
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|WALInputFormat
operator|.
name|class
argument_list|,
name|job
operator|.
name|getInputFormatClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Import
operator|.
name|Importer
operator|.
name|class
argument_list|,
name|job
operator|.
name|getMapperClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|LongWritable
operator|.
name|class
argument_list|,
name|job
operator|.
name|getOutputKeyClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Text
operator|.
name|class
argument_list|,
name|job
operator|.
name|getOutputValueClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|job
operator|.
name|getCombinerClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Table"
argument_list|,
name|job
operator|.
name|getConfiguration
argument_list|()
operator|.
name|get
argument_list|(
name|TableInputFormat
operator|.
name|INPUT_TABLE
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInitTableMapperJob3
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|configuration
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|Job
name|job
init|=
operator|new
name|Job
argument_list|(
name|configuration
argument_list|,
literal|"tableName"
argument_list|)
decl_stmt|;
name|TableMapReduceUtil
operator|.
name|initTableMapperJob
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"Table"
argument_list|)
argument_list|,
operator|new
name|Scan
argument_list|()
argument_list|,
name|Import
operator|.
name|Importer
operator|.
name|class
argument_list|,
name|Text
operator|.
name|class
argument_list|,
name|Text
operator|.
name|class
argument_list|,
name|job
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TableInputFormat
operator|.
name|class
argument_list|,
name|job
operator|.
name|getInputFormatClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Import
operator|.
name|Importer
operator|.
name|class
argument_list|,
name|job
operator|.
name|getMapperClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|LongWritable
operator|.
name|class
argument_list|,
name|job
operator|.
name|getOutputKeyClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Text
operator|.
name|class
argument_list|,
name|job
operator|.
name|getOutputValueClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|job
operator|.
name|getCombinerClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Table"
argument_list|,
name|job
operator|.
name|getConfiguration
argument_list|()
operator|.
name|get
argument_list|(
name|TableInputFormat
operator|.
name|INPUT_TABLE
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInitTableMapperJob4
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|configuration
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|Job
name|job
init|=
operator|new
name|Job
argument_list|(
name|configuration
argument_list|,
literal|"tableName"
argument_list|)
decl_stmt|;
name|TableMapReduceUtil
operator|.
name|initTableMapperJob
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"Table"
argument_list|)
argument_list|,
operator|new
name|Scan
argument_list|()
argument_list|,
name|Import
operator|.
name|Importer
operator|.
name|class
argument_list|,
name|Text
operator|.
name|class
argument_list|,
name|Text
operator|.
name|class
argument_list|,
name|job
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TableInputFormat
operator|.
name|class
argument_list|,
name|job
operator|.
name|getInputFormatClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Import
operator|.
name|Importer
operator|.
name|class
argument_list|,
name|job
operator|.
name|getMapperClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|LongWritable
operator|.
name|class
argument_list|,
name|job
operator|.
name|getOutputKeyClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Text
operator|.
name|class
argument_list|,
name|job
operator|.
name|getOutputValueClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|job
operator|.
name|getCombinerClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Table"
argument_list|,
name|job
operator|.
name|getConfiguration
argument_list|()
operator|.
name|get
argument_list|(
name|TableInputFormat
operator|.
name|INPUT_TABLE
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

