begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
package|;
end_package

begin_comment
comment|/** * Licensed to the Apache Software Foundation (ASF) under one * or more contributor license agreements.  See the NOTICE file * distributed with this work for additional information * regarding copyright ownership.  The ASF licenses this file * to you under the Apache License, Version 2.0 (the * "License"); you may not use this file except in compliance * with the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HRegionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ServerName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|ProtobufUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|RegionServerStatusProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|RegionServerTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|SmallTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClientProtos
operator|.
name|MultiRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|RPCProtos
operator|.
name|RequestHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
import|;
end_import

begin_comment
comment|/**  * Basic test that qos function is sort of working; i.e. a change in method naming style  * over in pb doesn't break it.  */
end_comment

begin_class
annotation|@
name|Category
argument_list|(
block|{
name|RegionServerTests
operator|.
name|class
block|,
name|SmallTests
operator|.
name|class
block|}
argument_list|)
specifier|public
class|class
name|TestQosFunction
block|{
annotation|@
name|Test
specifier|public
name|void
name|testPriority
parameter_list|()
block|{
name|Configuration
name|conf
init|=
name|HBaseConfiguration
operator|.
name|create
argument_list|()
decl_stmt|;
name|RSRpcServices
name|rpcServices
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|RSRpcServices
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|rpcServices
operator|.
name|getConfiguration
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|AnnotationReadingPriorityFunction
name|qosFunction
init|=
operator|new
name|AnnotationReadingPriorityFunction
argument_list|(
name|rpcServices
argument_list|,
name|RSRpcServices
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// Set method name in pb style with the method name capitalized.
name|checkMethod
argument_list|(
literal|"ReplicateWALEntry"
argument_list|,
name|HConstants
operator|.
name|REPLICATION_QOS
argument_list|,
name|qosFunction
argument_list|)
expr_stmt|;
comment|// Set method name in pb style with the method name capitalized.
name|checkMethod
argument_list|(
literal|"OpenRegion"
argument_list|,
name|HConstants
operator|.
name|ADMIN_QOS
argument_list|,
name|qosFunction
argument_list|)
expr_stmt|;
comment|// Check multi works.
name|checkMethod
argument_list|(
literal|"Multi"
argument_list|,
name|HConstants
operator|.
name|NORMAL_QOS
argument_list|,
name|qosFunction
argument_list|,
name|MultiRequest
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRegionInTransition
parameter_list|()
block|{
name|Configuration
name|conf
init|=
name|HBaseConfiguration
operator|.
name|create
argument_list|()
decl_stmt|;
name|RSRpcServices
name|rpcServices
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|RSRpcServices
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|rpcServices
operator|.
name|getConfiguration
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|AnnotationReadingPriorityFunction
name|qosFunction
init|=
operator|new
name|AnnotationReadingPriorityFunction
argument_list|(
name|rpcServices
argument_list|,
name|RSRpcServices
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// Check ReportRegionInTransition
name|HBaseProtos
operator|.
name|RegionInfo
name|meta_ri
init|=
name|HRegionInfo
operator|.
name|convert
argument_list|(
name|HRegionInfo
operator|.
name|FIRST_META_REGIONINFO
argument_list|)
decl_stmt|;
name|HBaseProtos
operator|.
name|RegionInfo
name|normal_ri
init|=
name|HRegionInfo
operator|.
name|convert
argument_list|(
operator|new
name|HRegionInfo
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"test:table"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"a"
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"b"
argument_list|)
argument_list|,
literal|false
argument_list|)
argument_list|)
decl_stmt|;
name|RegionServerStatusProtos
operator|.
name|RegionStateTransition
name|metaTransition
init|=
name|RegionServerStatusProtos
operator|.
name|RegionStateTransition
operator|.
name|newBuilder
argument_list|()
operator|.
name|addRegionInfo
argument_list|(
name|meta_ri
argument_list|)
operator|.
name|setTransitionCode
argument_list|(
name|RegionServerStatusProtos
operator|.
name|RegionStateTransition
operator|.
name|TransitionCode
operator|.
name|CLOSED
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|RegionServerStatusProtos
operator|.
name|RegionStateTransition
name|normalTransition
init|=
name|RegionServerStatusProtos
operator|.
name|RegionStateTransition
operator|.
name|newBuilder
argument_list|()
operator|.
name|addRegionInfo
argument_list|(
name|normal_ri
argument_list|)
operator|.
name|setTransitionCode
argument_list|(
name|RegionServerStatusProtos
operator|.
name|RegionStateTransition
operator|.
name|TransitionCode
operator|.
name|CLOSED
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|RegionServerStatusProtos
operator|.
name|ReportRegionStateTransitionRequest
name|metaTransitionRequest
init|=
name|RegionServerStatusProtos
operator|.
name|ReportRegionStateTransitionRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setServer
argument_list|(
name|ProtobufUtil
operator|.
name|toServerName
argument_list|(
name|ServerName
operator|.
name|valueOf
argument_list|(
literal|"locahost:60020"
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|)
operator|.
name|addTransition
argument_list|(
name|normalTransition
argument_list|)
operator|.
name|addTransition
argument_list|(
name|metaTransition
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|RegionServerStatusProtos
operator|.
name|ReportRegionStateTransitionRequest
name|normalTransitionRequest
init|=
name|RegionServerStatusProtos
operator|.
name|ReportRegionStateTransitionRequest
operator|.
name|newBuilder
argument_list|()
operator|.
name|setServer
argument_list|(
name|ProtobufUtil
operator|.
name|toServerName
argument_list|(
name|ServerName
operator|.
name|valueOf
argument_list|(
literal|"locahost:60020"
argument_list|,
literal|100
argument_list|)
argument_list|)
argument_list|)
operator|.
name|addTransition
argument_list|(
name|normalTransition
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
specifier|final
name|String
name|reportFuncName
init|=
literal|"ReportRegionStateTransition"
decl_stmt|;
name|checkMethod
argument_list|(
name|reportFuncName
argument_list|,
name|HConstants
operator|.
name|SYSTEMTABLE_QOS
argument_list|,
name|qosFunction
argument_list|,
name|metaTransitionRequest
argument_list|)
expr_stmt|;
name|checkMethod
argument_list|(
name|reportFuncName
argument_list|,
name|HConstants
operator|.
name|NORMAL_QOS
argument_list|,
name|qosFunction
argument_list|,
name|normalTransitionRequest
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkMethod
parameter_list|(
specifier|final
name|String
name|methodName
parameter_list|,
specifier|final
name|int
name|expected
parameter_list|,
specifier|final
name|AnnotationReadingPriorityFunction
name|qosf
parameter_list|)
block|{
name|checkMethod
argument_list|(
name|methodName
argument_list|,
name|expected
argument_list|,
name|qosf
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|checkMethod
parameter_list|(
specifier|final
name|String
name|methodName
parameter_list|,
specifier|final
name|int
name|expected
parameter_list|,
specifier|final
name|AnnotationReadingPriorityFunction
name|qosf
parameter_list|,
specifier|final
name|Message
name|param
parameter_list|)
block|{
name|RequestHeader
operator|.
name|Builder
name|builder
init|=
name|RequestHeader
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setMethodName
argument_list|(
name|methodName
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|methodName
argument_list|,
name|expected
argument_list|,
name|qosf
operator|.
name|getPriority
argument_list|(
name|builder
operator|.
name|build
argument_list|()
argument_list|,
name|param
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

