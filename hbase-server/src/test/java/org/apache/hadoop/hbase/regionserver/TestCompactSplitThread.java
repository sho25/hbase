begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|throttle
operator|.
name|CompactionThroughputControllerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|throttle
operator|.
name|NoLimitThroughputController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|MediumTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
annotation|@
name|Category
argument_list|(
name|MediumTests
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestCompactSplitThread
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|TestCompactSplitThread
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|HBaseTestingUtility
name|TEST_UTIL
init|=
operator|new
name|HBaseTestingUtility
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|TableName
name|tableName
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|byte
index|[]
name|family
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"f"
argument_list|)
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testThreadPoolSizeTuning
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
name|TEST_UTIL
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|CompactSplitThread
operator|.
name|LARGE_COMPACTION_THREADS
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|CompactSplitThread
operator|.
name|SMALL_COMPACTION_THREADS
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|CompactSplitThread
operator|.
name|SPLIT_THREADS
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|CompactSplitThread
operator|.
name|MERGE_THREADS
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|TEST_UTIL
operator|.
name|startMiniCluster
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|Connection
name|conn
init|=
name|ConnectionFactory
operator|.
name|createConnection
argument_list|(
name|conf
argument_list|)
decl_stmt|;
try|try
block|{
name|HTableDescriptor
name|htd
init|=
operator|new
name|HTableDescriptor
argument_list|(
name|tableName
argument_list|)
decl_stmt|;
name|htd
operator|.
name|addFamily
argument_list|(
operator|new
name|HColumnDescriptor
argument_list|(
name|family
argument_list|)
argument_list|)
expr_stmt|;
name|htd
operator|.
name|setCompactionEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|TEST_UTIL
operator|.
name|getHBaseAdmin
argument_list|()
operator|.
name|createTable
argument_list|(
name|htd
argument_list|)
expr_stmt|;
name|TEST_UTIL
operator|.
name|waitTableAvailable
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
name|HRegionServer
name|regionServer
init|=
name|TEST_UTIL
operator|.
name|getRSForFirstRegionInTable
argument_list|(
name|tableName
argument_list|)
decl_stmt|;
comment|// check initial configuration of thread pool sizes
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|regionServer
operator|.
name|compactSplitThread
operator|.
name|getLargeCompactionThreadNum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|regionServer
operator|.
name|compactSplitThread
operator|.
name|getSmallCompactionThreadNum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|regionServer
operator|.
name|compactSplitThread
operator|.
name|getSplitThreadNum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|regionServer
operator|.
name|compactSplitThread
operator|.
name|getMergeThreadNum
argument_list|()
argument_list|)
expr_stmt|;
comment|// change bigger configurations and do online update
name|conf
operator|.
name|setInt
argument_list|(
name|CompactSplitThread
operator|.
name|LARGE_COMPACTION_THREADS
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|CompactSplitThread
operator|.
name|SMALL_COMPACTION_THREADS
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|CompactSplitThread
operator|.
name|SPLIT_THREADS
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|CompactSplitThread
operator|.
name|MERGE_THREADS
argument_list|,
literal|7
argument_list|)
expr_stmt|;
try|try
block|{
name|regionServer
operator|.
name|compactSplitThread
operator|.
name|onConfigurationChange
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|iae
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Update bigger configuration failed!"
argument_list|)
expr_stmt|;
block|}
comment|// check again after online update
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|regionServer
operator|.
name|compactSplitThread
operator|.
name|getLargeCompactionThreadNum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|regionServer
operator|.
name|compactSplitThread
operator|.
name|getSmallCompactionThreadNum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|regionServer
operator|.
name|compactSplitThread
operator|.
name|getSplitThreadNum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|regionServer
operator|.
name|compactSplitThread
operator|.
name|getMergeThreadNum
argument_list|()
argument_list|)
expr_stmt|;
comment|// change smaller configurations and do online update
name|conf
operator|.
name|setInt
argument_list|(
name|CompactSplitThread
operator|.
name|LARGE_COMPACTION_THREADS
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|CompactSplitThread
operator|.
name|SMALL_COMPACTION_THREADS
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|CompactSplitThread
operator|.
name|SPLIT_THREADS
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|conf
operator|.
name|setInt
argument_list|(
name|CompactSplitThread
operator|.
name|MERGE_THREADS
argument_list|,
literal|5
argument_list|)
expr_stmt|;
try|try
block|{
name|regionServer
operator|.
name|compactSplitThread
operator|.
name|onConfigurationChange
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|iae
parameter_list|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Update smaller configuration failed!"
argument_list|)
expr_stmt|;
block|}
comment|// check again after online update
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|regionServer
operator|.
name|compactSplitThread
operator|.
name|getLargeCompactionThreadNum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|regionServer
operator|.
name|compactSplitThread
operator|.
name|getSmallCompactionThreadNum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|regionServer
operator|.
name|compactSplitThread
operator|.
name|getSplitThreadNum
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|regionServer
operator|.
name|compactSplitThread
operator|.
name|getMergeThreadNum
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|conn
operator|.
name|close
argument_list|()
expr_stmt|;
name|TEST_UTIL
operator|.
name|shutdownMiniCluster
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

