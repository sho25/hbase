begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|RandomStringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseTestingUtility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HColumnDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Get
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Put
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|filter
operator|.
name|TimestampsFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|LargeTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|RegionServerTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
annotation|@
name|Category
argument_list|(
block|{
name|RegionServerTests
operator|.
name|class
block|,
name|LargeTests
operator|.
name|class
block|}
argument_list|)
specifier|public
class|class
name|TestTimestampFilterSeekHint
block|{
specifier|private
specifier|final
specifier|static
name|HBaseTestingUtility
name|TEST_UTIL
init|=
name|HBaseTestingUtility
operator|.
name|createLocalHTU
argument_list|()
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|RK
init|=
literal|"myRK"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|byte
index|[]
name|RK_BYTES
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
name|RK
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|FAMILY
init|=
literal|"D"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|byte
index|[]
name|FAMILY_BYTES
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
name|FAMILY
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|QUAL
init|=
literal|"0"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|byte
index|[]
name|QUAL_BYTES
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
name|QUAL
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|MAX_VERSIONS
init|=
literal|50000
decl_stmt|;
specifier|private
name|HRegion
name|region
decl_stmt|;
specifier|private
name|int
name|regionCount
init|=
literal|0
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testGetSeek
parameter_list|()
throws|throws
name|IOException
block|{
name|StoreFileScanner
operator|.
name|instrument
argument_list|()
expr_stmt|;
name|prepareRegion
argument_list|()
expr_stmt|;
name|Get
name|g
init|=
operator|new
name|Get
argument_list|(
name|RK_BYTES
argument_list|)
decl_stmt|;
specifier|final
name|TimestampsFilter
name|timestampsFilter
init|=
operator|new
name|TimestampsFilter
argument_list|(
name|ImmutableList
operator|.
name|of
argument_list|(
literal|5L
argument_list|)
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|g
operator|.
name|setFilter
argument_list|(
name|timestampsFilter
argument_list|)
expr_stmt|;
specifier|final
name|long
name|initialSeekCount
init|=
name|StoreFileScanner
operator|.
name|getSeekCount
argument_list|()
decl_stmt|;
name|region
operator|.
name|get
argument_list|(
name|g
argument_list|)
expr_stmt|;
specifier|final
name|long
name|finalSeekCount
init|=
name|StoreFileScanner
operator|.
name|getSeekCount
argument_list|()
decl_stmt|;
comment|/*       Make sure there's more than one.       Aka one seek to get to the row, and one to get to the time.     */
name|assertTrue
argument_list|(
name|finalSeekCount
operator|>=
name|initialSeekCount
operator|+
literal|3
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetDoesntSeekWithNoHint
parameter_list|()
throws|throws
name|IOException
block|{
name|StoreFileScanner
operator|.
name|instrument
argument_list|()
expr_stmt|;
name|prepareRegion
argument_list|()
expr_stmt|;
name|Get
name|g
init|=
operator|new
name|Get
argument_list|(
name|RK_BYTES
argument_list|)
decl_stmt|;
name|g
operator|.
name|setFilter
argument_list|(
operator|new
name|TimestampsFilter
argument_list|(
name|ImmutableList
operator|.
name|of
argument_list|(
literal|5L
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|long
name|initialSeekCount
init|=
name|StoreFileScanner
operator|.
name|getSeekCount
argument_list|()
decl_stmt|;
name|region
operator|.
name|get
argument_list|(
name|g
argument_list|)
expr_stmt|;
specifier|final
name|long
name|finalSeekCount
init|=
name|StoreFileScanner
operator|.
name|getSeekCount
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|finalSeekCount
operator|>=
name|initialSeekCount
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|finalSeekCount
operator|<
name|initialSeekCount
operator|+
literal|3
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|prepareRegion
parameter_list|()
throws|throws
name|IOException
block|{
name|region
operator|=
name|TEST_UTIL
operator|.
name|createTestRegion
argument_list|(
literal|"TestTimestampFilterSeekHint"
operator|+
name|regionCount
operator|++
argument_list|,
operator|new
name|HColumnDescriptor
argument_list|(
name|FAMILY
argument_list|)
operator|.
name|setBlocksize
argument_list|(
literal|1024
argument_list|)
operator|.
name|setMaxVersions
argument_list|(
name|MAX_VERSIONS
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|long
name|i
init|=
literal|0
init|;
name|i
operator|<
name|MAX_VERSIONS
operator|-
literal|2
condition|;
name|i
operator|++
control|)
block|{
name|Put
name|p
init|=
operator|new
name|Put
argument_list|(
name|RK_BYTES
argument_list|,
name|i
argument_list|)
decl_stmt|;
name|p
operator|.
name|addColumn
argument_list|(
name|FAMILY_BYTES
argument_list|,
name|QUAL_BYTES
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|RandomStringUtils
operator|.
name|randomAlphabetic
argument_list|(
literal|255
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|region
operator|.
name|put
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
name|region
operator|.
name|flush
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

