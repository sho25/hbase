begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|filter
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|KeyValueUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|FilterTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|SmallTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_class
annotation|@
name|Category
argument_list|(
block|{
name|FilterTests
operator|.
name|class
block|,
name|SmallTests
operator|.
name|class
block|}
argument_list|)
specifier|public
class|class
name|TestPrefixFilter
block|{
name|Filter
name|mainFilter
decl_stmt|;
specifier|static
specifier|final
name|char
name|FIRST_CHAR
init|=
literal|'a'
decl_stmt|;
specifier|static
specifier|final
name|char
name|LAST_CHAR
init|=
literal|'e'
decl_stmt|;
specifier|static
specifier|final
name|String
name|HOST_PREFIX
init|=
literal|"org.apache.site-"
decl_stmt|;
specifier|static
specifier|final
name|byte
index|[]
name|GOOD_BYTES
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"abc"
argument_list|)
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|mainFilter
operator|=
operator|new
name|PrefixFilter
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|HOST_PREFIX
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPrefixOnRow
parameter_list|()
throws|throws
name|Exception
block|{
name|prefixRowTests
argument_list|(
name|mainFilter
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPrefixOnRowInsideWhileMatchRow
parameter_list|()
throws|throws
name|Exception
block|{
name|prefixRowTests
argument_list|(
operator|new
name|WhileMatchFilter
argument_list|(
name|this
operator|.
name|mainFilter
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSerialization
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Decompose mainFilter to bytes.
name|byte
index|[]
name|buffer
init|=
name|mainFilter
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
comment|// Recompose filter.
name|Filter
name|newFilter
init|=
name|PrefixFilter
operator|.
name|parseFrom
argument_list|(
name|buffer
argument_list|)
decl_stmt|;
comment|// Ensure the serialization preserved the filter by running all test.
name|prefixRowTests
argument_list|(
name|newFilter
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|prefixRowTests
parameter_list|(
name|Filter
name|filter
parameter_list|)
throws|throws
name|Exception
block|{
name|prefixRowTests
argument_list|(
name|filter
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|prefixRowTests
parameter_list|(
name|Filter
name|filter
parameter_list|,
name|boolean
name|lastFilterAllRemaining
parameter_list|)
throws|throws
name|Exception
block|{
for|for
control|(
name|char
name|c
init|=
name|FIRST_CHAR
init|;
name|c
operator|<=
name|LAST_CHAR
condition|;
name|c
operator|++
control|)
block|{
name|byte
index|[]
name|t
init|=
name|createRow
argument_list|(
name|c
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
literal|"Failed with character "
operator|+
name|c
argument_list|,
name|filter
operator|.
name|filterRowKey
argument_list|(
name|KeyValueUtil
operator|.
name|createFirstOnRow
argument_list|(
name|t
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|filter
operator|.
name|filterAllRemaining
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|yahooSite
init|=
literal|"com.yahoo.www"
decl_stmt|;
name|byte
index|[]
name|yahooSiteBytes
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
name|yahooSite
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Failed with character "
operator|+
name|yahooSite
argument_list|,
name|filter
operator|.
name|filterRowKey
argument_list|(
name|KeyValueUtil
operator|.
name|createFirstOnRow
argument_list|(
name|yahooSiteBytes
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|filter
operator|.
name|filterAllRemaining
argument_list|()
argument_list|,
name|lastFilterAllRemaining
argument_list|)
expr_stmt|;
block|}
specifier|private
name|byte
index|[]
name|createRow
parameter_list|(
specifier|final
name|char
name|c
parameter_list|)
block|{
return|return
name|Bytes
operator|.
name|toBytes
argument_list|(
name|HOST_PREFIX
operator|+
name|Character
operator|.
name|toString
argument_list|(
name|c
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

