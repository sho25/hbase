begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|Coprocessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseTestingUtility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HColumnDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HTableDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|MiniHBaseCluster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|MetaTableAccessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Admin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Mutation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|HRegion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|HRegionServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|Region
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|RegionMergeTransactionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|RegionMergeTransactionImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|RegionServerCoprocessorHost
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|CoprocessorTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|MediumTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_comment
comment|/**  * Tests invocation of the {@link org.apache.hadoop.hbase.coprocessor.RegionServerObserver}  * interface hooks at all appropriate times during normal HMaster operations.  */
end_comment

begin_class
annotation|@
name|Category
argument_list|(
block|{
name|CoprocessorTests
operator|.
name|class
block|,
name|MediumTests
operator|.
name|class
block|}
argument_list|)
specifier|public
class|class
name|TestRegionServerObserver
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|TestRegionServerObserver
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/**    * Test verifies the hooks in regions merge.    * @throws Exception    */
annotation|@
name|Test
specifier|public
name|void
name|testCoprocessorHooksInRegionsMerge
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|int
name|NUM_MASTERS
init|=
literal|1
decl_stmt|;
specifier|final
name|int
name|NUM_RS
init|=
literal|1
decl_stmt|;
specifier|final
name|String
name|TABLENAME
init|=
literal|"testRegionServerObserver"
decl_stmt|;
specifier|final
name|String
name|TABLENAME2
init|=
literal|"testRegionServerObserver_2"
decl_stmt|;
specifier|final
name|byte
index|[]
name|FAM
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"fam"
argument_list|)
decl_stmt|;
comment|// Create config to use for this cluster
name|Configuration
name|conf
init|=
name|HBaseConfiguration
operator|.
name|create
argument_list|()
decl_stmt|;
name|conf
operator|.
name|setClass
argument_list|(
literal|"hbase.coprocessor.regionserver.classes"
argument_list|,
name|CPRegionServerObserver
operator|.
name|class
argument_list|,
name|RegionServerObserver
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Start the cluster
name|HBaseTestingUtility
name|TEST_UTIL
init|=
operator|new
name|HBaseTestingUtility
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|TEST_UTIL
operator|.
name|startMiniCluster
argument_list|(
name|NUM_MASTERS
argument_list|,
name|NUM_RS
argument_list|)
expr_stmt|;
name|Admin
name|admin
init|=
name|TEST_UTIL
operator|.
name|getHBaseAdmin
argument_list|()
decl_stmt|;
try|try
block|{
name|MiniHBaseCluster
name|cluster
init|=
name|TEST_UTIL
operator|.
name|getHBaseCluster
argument_list|()
decl_stmt|;
name|HRegionServer
name|regionServer
init|=
name|cluster
operator|.
name|getRegionServer
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|RegionServerCoprocessorHost
name|cpHost
init|=
name|regionServer
operator|.
name|getRegionServerCoprocessorHost
argument_list|()
decl_stmt|;
name|Coprocessor
name|coprocessor
init|=
name|cpHost
operator|.
name|findCoprocessor
argument_list|(
name|CPRegionServerObserver
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|CPRegionServerObserver
name|regionServerObserver
init|=
operator|(
name|CPRegionServerObserver
operator|)
name|coprocessor
decl_stmt|;
name|HTableDescriptor
name|desc
init|=
operator|new
name|HTableDescriptor
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|TABLENAME
argument_list|)
argument_list|)
decl_stmt|;
name|desc
operator|.
name|addFamily
argument_list|(
operator|new
name|HColumnDescriptor
argument_list|(
name|FAM
argument_list|)
argument_list|)
expr_stmt|;
name|admin
operator|.
name|createTable
argument_list|(
name|desc
argument_list|,
operator|new
name|byte
index|[]
index|[]
block|{
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"row"
argument_list|)
block|}
argument_list|)
expr_stmt|;
name|desc
operator|=
operator|new
name|HTableDescriptor
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|TABLENAME2
argument_list|)
argument_list|)
expr_stmt|;
name|desc
operator|.
name|addFamily
argument_list|(
operator|new
name|HColumnDescriptor
argument_list|(
name|FAM
argument_list|)
argument_list|)
expr_stmt|;
name|admin
operator|.
name|createTable
argument_list|(
name|desc
argument_list|,
operator|new
name|byte
index|[]
index|[]
block|{
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"row"
argument_list|)
block|}
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|regionServerObserver
operator|.
name|wasRegionMergeCalled
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Region
argument_list|>
name|regions
init|=
name|regionServer
operator|.
name|getOnlineRegions
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|TABLENAME
argument_list|)
argument_list|)
decl_stmt|;
name|admin
operator|.
name|mergeRegions
argument_list|(
name|regions
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getRegionInfo
argument_list|()
operator|.
name|getEncodedNameAsBytes
argument_list|()
argument_list|,
name|regions
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getRegionInfo
argument_list|()
operator|.
name|getEncodedNameAsBytes
argument_list|()
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|int
name|regionsCount
init|=
name|regionServer
operator|.
name|getOnlineRegions
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|TABLENAME
argument_list|)
argument_list|)
operator|.
name|size
argument_list|()
decl_stmt|;
while|while
condition|(
name|regionsCount
operator|!=
literal|1
condition|)
block|{
name|regionsCount
operator|=
name|regionServer
operator|.
name|getOnlineRegions
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|TABLENAME
argument_list|)
argument_list|)
operator|.
name|size
argument_list|()
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|1000
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|regionServerObserver
operator|.
name|wasRegionMergeCalled
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|regionServerObserver
operator|.
name|wasPreMergeCommit
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|regionServerObserver
operator|.
name|wasPostMergeCommit
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|regionsCount
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|regionServer
operator|.
name|getOnlineRegions
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|TABLENAME2
argument_list|)
argument_list|)
operator|.
name|size
argument_list|()
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|admin
operator|!=
literal|null
condition|)
name|admin
operator|.
name|close
argument_list|()
expr_stmt|;
name|TEST_UTIL
operator|.
name|shutdownMiniCluster
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
class|class
name|CPRegionServerObserver
extends|extends
name|BaseRegionServerObserver
block|{
specifier|private
name|RegionMergeTransactionImpl
name|rmt
init|=
literal|null
decl_stmt|;
specifier|private
name|HRegion
name|mergedRegion
init|=
literal|null
decl_stmt|;
specifier|private
name|boolean
name|preMergeCalled
decl_stmt|;
specifier|private
name|boolean
name|preMergeBeforePONRCalled
decl_stmt|;
specifier|private
name|boolean
name|preMergeAfterPONRCalled
decl_stmt|;
specifier|private
name|boolean
name|preRollBackMergeCalled
decl_stmt|;
specifier|private
name|boolean
name|postRollBackMergeCalled
decl_stmt|;
specifier|private
name|boolean
name|postMergeCalled
decl_stmt|;
specifier|public
name|void
name|resetStates
parameter_list|()
block|{
name|preMergeCalled
operator|=
literal|false
expr_stmt|;
name|preMergeBeforePONRCalled
operator|=
literal|false
expr_stmt|;
name|preMergeAfterPONRCalled
operator|=
literal|false
expr_stmt|;
name|preRollBackMergeCalled
operator|=
literal|false
expr_stmt|;
name|postRollBackMergeCalled
operator|=
literal|false
expr_stmt|;
name|postMergeCalled
operator|=
literal|false
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|preMerge
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionServerCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|,
name|Region
name|regionA
parameter_list|,
name|Region
name|regionB
parameter_list|)
throws|throws
name|IOException
block|{
name|preMergeCalled
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|preMergeCommit
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionServerCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|,
name|Region
name|regionA
parameter_list|,
name|Region
name|regionB
parameter_list|,
name|List
argument_list|<
name|Mutation
argument_list|>
name|metaEntries
parameter_list|)
throws|throws
name|IOException
block|{
name|preMergeBeforePONRCalled
operator|=
literal|true
expr_stmt|;
name|RegionServerCoprocessorEnvironment
name|environment
init|=
name|ctx
operator|.
name|getEnvironment
argument_list|()
decl_stmt|;
name|HRegionServer
name|rs
init|=
operator|(
name|HRegionServer
operator|)
name|environment
operator|.
name|getRegionServerServices
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Region
argument_list|>
name|onlineRegions
init|=
name|rs
operator|.
name|getOnlineRegions
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"testRegionServerObserver_2"
argument_list|)
argument_list|)
decl_stmt|;
name|rmt
operator|=
operator|(
name|RegionMergeTransactionImpl
operator|)
operator|new
name|RegionMergeTransactionFactory
argument_list|(
name|rs
operator|.
name|getConfiguration
argument_list|()
argument_list|)
operator|.
name|create
argument_list|(
name|onlineRegions
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|onlineRegions
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|rmt
operator|.
name|prepare
argument_list|(
name|rs
argument_list|)
condition|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"Prepare for the region merge of table "
operator|+
name|onlineRegions
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTableDesc
argument_list|()
operator|.
name|getNameAsString
argument_list|()
operator|+
literal|" failed. So returning null. "
argument_list|)
expr_stmt|;
name|ctx
operator|.
name|bypass
argument_list|()
expr_stmt|;
return|return;
block|}
name|mergedRegion
operator|=
name|rmt
operator|.
name|stepsBeforePONR
argument_list|(
name|rs
argument_list|,
name|rs
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|rmt
operator|.
name|prepareMutationsForMerge
argument_list|(
name|mergedRegion
operator|.
name|getRegionInfo
argument_list|()
argument_list|,
name|regionA
operator|.
name|getRegionInfo
argument_list|()
argument_list|,
name|regionB
operator|.
name|getRegionInfo
argument_list|()
argument_list|,
name|rs
operator|.
name|getServerName
argument_list|()
argument_list|,
name|metaEntries
argument_list|)
expr_stmt|;
name|MetaTableAccessor
operator|.
name|mutateMetaTable
argument_list|(
name|rs
operator|.
name|getConnection
argument_list|()
argument_list|,
name|metaEntries
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|postMergeCommit
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionServerCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|,
name|Region
name|regionA
parameter_list|,
name|Region
name|regionB
parameter_list|,
name|Region
name|mr
parameter_list|)
throws|throws
name|IOException
block|{
name|preMergeAfterPONRCalled
operator|=
literal|true
expr_stmt|;
name|RegionServerCoprocessorEnvironment
name|environment
init|=
name|ctx
operator|.
name|getEnvironment
argument_list|()
decl_stmt|;
name|HRegionServer
name|rs
init|=
operator|(
name|HRegionServer
operator|)
name|environment
operator|.
name|getRegionServerServices
argument_list|()
decl_stmt|;
name|rmt
operator|.
name|stepsAfterPONR
argument_list|(
name|rs
argument_list|,
name|rs
argument_list|,
name|this
operator|.
name|mergedRegion
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|preRollBackMerge
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionServerCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|,
name|Region
name|regionA
parameter_list|,
name|Region
name|regionB
parameter_list|)
throws|throws
name|IOException
block|{
name|preRollBackMergeCalled
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|postRollBackMerge
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionServerCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|,
name|Region
name|regionA
parameter_list|,
name|Region
name|regionB
parameter_list|)
throws|throws
name|IOException
block|{
name|postRollBackMergeCalled
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|postMerge
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionServerCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
name|Region
name|regionA
parameter_list|,
name|Region
name|regionB
parameter_list|,
name|Region
name|mergedRegion
parameter_list|)
throws|throws
name|IOException
block|{
name|postMergeCalled
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|boolean
name|wasPreMergeCalled
parameter_list|()
block|{
return|return
name|this
operator|.
name|preMergeCalled
return|;
block|}
specifier|public
name|boolean
name|wasPostMergeCalled
parameter_list|()
block|{
return|return
name|this
operator|.
name|postMergeCalled
return|;
block|}
specifier|public
name|boolean
name|wasPreMergeCommit
parameter_list|()
block|{
return|return
name|this
operator|.
name|preMergeBeforePONRCalled
return|;
block|}
specifier|public
name|boolean
name|wasPostMergeCommit
parameter_list|()
block|{
return|return
name|this
operator|.
name|preMergeAfterPONRCalled
return|;
block|}
specifier|public
name|boolean
name|wasPreRollBackMerge
parameter_list|()
block|{
return|return
name|this
operator|.
name|preRollBackMergeCalled
return|;
block|}
specifier|public
name|boolean
name|wasPostRollBackMerge
parameter_list|()
block|{
return|return
name|this
operator|.
name|postRollBackMergeCalled
return|;
block|}
specifier|public
name|boolean
name|wasRegionMergeCalled
parameter_list|()
block|{
return|return
name|this
operator|.
name|preMergeCalled
operator|&&
name|this
operator|.
name|postMergeCalled
return|;
block|}
block|}
block|}
end_class

end_unit

