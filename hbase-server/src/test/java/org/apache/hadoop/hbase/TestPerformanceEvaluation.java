begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|JsonGenerationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|JsonMappingException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|jackson
operator|.
name|map
operator|.
name|ObjectMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_class
annotation|@
name|Category
argument_list|(
name|SmallTests
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestPerformanceEvaluation
block|{
annotation|@
name|Test
specifier|public
name|void
name|testSerialization
parameter_list|()
throws|throws
name|JsonGenerationException
throws|,
name|JsonMappingException
throws|,
name|IOException
block|{
name|PerformanceEvaluation
operator|.
name|TestOptions
name|options
init|=
operator|new
name|PerformanceEvaluation
operator|.
name|TestOptions
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
operator|!
name|options
operator|.
name|isAutoFlush
argument_list|()
argument_list|)
expr_stmt|;
name|options
operator|.
name|setAutoFlush
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|ObjectMapper
name|mapper
init|=
operator|new
name|ObjectMapper
argument_list|()
decl_stmt|;
name|String
name|optionsString
init|=
name|mapper
operator|.
name|writeValueAsString
argument_list|(
name|options
argument_list|)
decl_stmt|;
name|PerformanceEvaluation
operator|.
name|TestOptions
name|optionsDeserialized
init|=
name|mapper
operator|.
name|readValue
argument_list|(
name|optionsString
argument_list|,
name|PerformanceEvaluation
operator|.
name|TestOptions
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|optionsDeserialized
operator|.
name|isAutoFlush
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

