begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|access
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|access
operator|.
name|Permission
operator|.
name|Action
operator|.
name|READ
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|access
operator|.
name|Permission
operator|.
name|Action
operator|.
name|WRITE
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivilegedExceptionAction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|AclEntryScope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|permission
operator|.
name|FsPermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseClassTestRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseTestingUtility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|NamespaceDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Admin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|ColumnFamilyDescriptorBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Put
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Scan
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|TableDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|TableDescriptorBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|TableSnapshotScanner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|CoprocessorHost
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|cleaner
operator|.
name|HFileCleaner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|User
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|LargeTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|SecurityTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|HFileArchiveUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|ClassRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
annotation|@
name|Category
argument_list|(
block|{
name|SecurityTests
operator|.
name|class
block|,
name|LargeTests
operator|.
name|class
block|}
argument_list|)
specifier|public
class|class
name|TestSnapshotScannerHDFSAclController
block|{
annotation|@
name|ClassRule
specifier|public
specifier|static
specifier|final
name|HBaseClassTestRule
name|CLASS_RULE
init|=
name|HBaseClassTestRule
operator|.
name|forClass
argument_list|(
name|TestSnapshotScannerHDFSAclController
operator|.
name|class
argument_list|)
decl_stmt|;
annotation|@
name|Rule
specifier|public
name|TestName
name|name
init|=
operator|new
name|TestName
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestSnapshotScannerHDFSAclController
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|UN_GRANT_USER
init|=
literal|"un_grant_user"
decl_stmt|;
specifier|private
specifier|static
name|HBaseTestingUtility
name|TEST_UTIL
init|=
operator|new
name|HBaseTestingUtility
argument_list|()
decl_stmt|;
specifier|private
specifier|static
name|Configuration
name|conf
init|=
name|TEST_UTIL
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
specifier|private
specifier|static
name|Admin
name|admin
init|=
literal|null
decl_stmt|;
specifier|private
specifier|static
name|FileSystem
name|fs
init|=
literal|null
decl_stmt|;
specifier|private
specifier|static
name|Path
name|rootDir
init|=
literal|null
decl_stmt|;
specifier|private
specifier|static
name|User
name|unGrantUser
init|=
literal|null
decl_stmt|;
specifier|private
specifier|static
name|SnapshotScannerHDFSAclHelper
name|helper
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|setupBeforeClass
parameter_list|()
throws|throws
name|Exception
block|{
comment|// enable hdfs acl and set umask to 027
name|conf
operator|.
name|setBoolean
argument_list|(
literal|"dfs.namenode.acls.enabled"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
literal|"fs.permissions.umask-mode"
argument_list|,
literal|"027"
argument_list|)
expr_stmt|;
comment|// enable hbase hdfs acl feature
name|conf
operator|.
name|setBoolean
argument_list|(
name|SnapshotScannerHDFSAclHelper
operator|.
name|USER_SCAN_SNAPSHOT_ENABLE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
comment|// enable secure
name|conf
operator|.
name|set
argument_list|(
name|User
operator|.
name|HBASE_SECURITY_CONF_KEY
argument_list|,
literal|"simple"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|SnapshotScannerHDFSAclHelper
operator|.
name|SNAPSHOT_RESTORE_TMP_DIR
argument_list|,
name|SnapshotScannerHDFSAclHelper
operator|.
name|SNAPSHOT_RESTORE_TMP_DIR_DEFAULT
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|enableSecurity
argument_list|(
name|conf
argument_list|)
expr_stmt|;
comment|// add SnapshotScannerHDFSAclController coprocessor
name|conf
operator|.
name|set
argument_list|(
name|CoprocessorHost
operator|.
name|MASTER_COPROCESSOR_CONF_KEY
argument_list|,
name|conf
operator|.
name|get
argument_list|(
name|CoprocessorHost
operator|.
name|MASTER_COPROCESSOR_CONF_KEY
argument_list|)
operator|+
literal|","
operator|+
name|SnapshotScannerHDFSAclController
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|// set hfile cleaner plugin
name|conf
operator|.
name|set
argument_list|(
name|HFileCleaner
operator|.
name|MASTER_HFILE_CLEANER_PLUGINS
argument_list|,
name|SnapshotScannerHDFSAclCleaner
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|TEST_UTIL
operator|.
name|startMiniCluster
argument_list|()
expr_stmt|;
name|admin
operator|=
name|TEST_UTIL
operator|.
name|getAdmin
argument_list|()
expr_stmt|;
name|rootDir
operator|=
name|TEST_UTIL
operator|.
name|getDefaultRootDirPath
argument_list|()
expr_stmt|;
name|fs
operator|=
name|rootDir
operator|.
name|getFileSystem
argument_list|(
name|conf
argument_list|)
expr_stmt|;
name|unGrantUser
operator|=
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
name|UN_GRANT_USER
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
expr_stmt|;
name|helper
operator|=
operator|new
name|SnapshotScannerHDFSAclHelper
argument_list|(
name|conf
argument_list|,
name|admin
operator|.
name|getConnection
argument_list|()
argument_list|)
expr_stmt|;
comment|// set hbase directory permission
name|FsPermission
name|commonDirectoryPermission
init|=
operator|new
name|FsPermission
argument_list|(
name|conf
operator|.
name|get
argument_list|(
name|SnapshotScannerHDFSAclHelper
operator|.
name|COMMON_DIRECTORY_PERMISSION
argument_list|,
name|SnapshotScannerHDFSAclHelper
operator|.
name|COMMON_DIRECTORY_PERMISSION_DEFAULT
argument_list|)
argument_list|)
decl_stmt|;
name|Path
name|path
init|=
name|rootDir
decl_stmt|;
while|while
condition|(
name|path
operator|!=
literal|null
condition|)
block|{
name|fs
operator|.
name|setPermission
argument_list|(
name|path
argument_list|,
name|commonDirectoryPermission
argument_list|)
expr_stmt|;
name|path
operator|=
name|path
operator|.
name|getParent
argument_list|()
expr_stmt|;
block|}
comment|// set restore directory permission
name|Path
name|restoreDir
init|=
operator|new
name|Path
argument_list|(
name|SnapshotScannerHDFSAclHelper
operator|.
name|SNAPSHOT_RESTORE_TMP_DIR_DEFAULT
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|fs
operator|.
name|exists
argument_list|(
name|restoreDir
argument_list|)
condition|)
block|{
name|fs
operator|.
name|mkdirs
argument_list|(
name|restoreDir
argument_list|)
expr_stmt|;
name|fs
operator|.
name|setPermission
argument_list|(
name|restoreDir
argument_list|,
operator|new
name|FsPermission
argument_list|(
name|conf
operator|.
name|get
argument_list|(
name|SnapshotScannerHDFSAclHelper
operator|.
name|SNAPSHOT_RESTORE_DIRECTORY_PERMISSION
argument_list|,
name|SnapshotScannerHDFSAclHelper
operator|.
name|SNAPSHOT_RESTORE_DIRECTORY_PERMISSION_DEFAULT
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|path
operator|=
name|restoreDir
operator|.
name|getParent
argument_list|()
expr_stmt|;
while|while
condition|(
name|path
operator|!=
literal|null
condition|)
block|{
name|fs
operator|.
name|setPermission
argument_list|(
name|path
argument_list|,
name|commonDirectoryPermission
argument_list|)
expr_stmt|;
name|path
operator|=
name|path
operator|.
name|getParent
argument_list|()
expr_stmt|;
block|}
name|SnapshotScannerHDFSAclController
name|coprocessor
init|=
name|TEST_UTIL
operator|.
name|getHBaseCluster
argument_list|()
operator|.
name|getMaster
argument_list|()
operator|.
name|getMasterCoprocessorHost
argument_list|()
operator|.
name|findCoprocessor
argument_list|(
name|SnapshotScannerHDFSAclController
operator|.
name|class
argument_list|)
decl_stmt|;
name|TEST_UTIL
operator|.
name|waitFor
argument_list|(
literal|1200000
argument_list|,
parameter_list|()
lambda|->
name|coprocessor
operator|.
name|checkInitialized
argument_list|(
literal|"check initialized"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|tearDownAfterClass
parameter_list|()
throws|throws
name|Exception
block|{
name|TEST_UTIL
operator|.
name|shutdownMiniCluster
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGrantGlobal
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|grantUserName
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|User
name|grantUser
init|=
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
name|grantUserName
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
decl_stmt|;
name|String
name|namespace1
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|String
name|namespace2
init|=
name|namespace1
operator|+
literal|"2"
decl_stmt|;
name|String
name|namespace3
init|=
name|namespace1
operator|+
literal|"3"
decl_stmt|;
name|TableName
name|table1
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace1
argument_list|,
literal|"t1"
argument_list|)
decl_stmt|;
name|TableName
name|table12
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace1
argument_list|,
literal|"t2"
argument_list|)
decl_stmt|;
name|TableName
name|table21
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace2
argument_list|,
literal|"t21"
argument_list|)
decl_stmt|;
name|TableName
name|table3
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace3
argument_list|,
literal|"t3"
argument_list|)
decl_stmt|;
name|TableName
name|table31
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace3
argument_list|,
literal|"t31"
argument_list|)
decl_stmt|;
name|String
name|snapshot1
init|=
name|namespace1
operator|+
literal|"t1"
decl_stmt|;
name|String
name|snapshot12
init|=
name|namespace1
operator|+
literal|"t12"
decl_stmt|;
name|String
name|snapshot2
init|=
name|namespace1
operator|+
literal|"t2"
decl_stmt|;
name|String
name|snapshot21
init|=
name|namespace2
operator|+
literal|"t21"
decl_stmt|;
name|String
name|snapshot3
init|=
name|namespace1
operator|+
literal|"t3"
decl_stmt|;
name|String
name|snapshot31
init|=
name|namespace1
operator|+
literal|"t31"
decl_stmt|;
name|TestHDFSAclHelper
operator|.
name|createTableAndPut
argument_list|(
name|TEST_UTIL
argument_list|,
name|table1
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot1
argument_list|,
name|table1
argument_list|)
expr_stmt|;
comment|// case 1: grant G(R) -> grant G(W) -> grant G(R)
name|SecureTestUtil
operator|.
name|grantGlobal
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot1
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|admin
operator|.
name|grant
argument_list|(
operator|new
name|UserPermission
argument_list|(
name|grantUserName
argument_list|,
name|Permission
operator|.
name|newBuilder
argument_list|()
operator|.
name|withActions
argument_list|(
name|WRITE
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot1
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|grantGlobal
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|grantGlobal
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot1
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot12
argument_list|,
name|table1
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot12
argument_list|,
literal|6
argument_list|)
expr_stmt|;
comment|// case 2: grant G(R),N(R) -> G(W)
name|admin
operator|.
name|grant
argument_list|(
operator|new
name|UserPermission
argument_list|(
name|grantUserName
argument_list|,
name|Permission
operator|.
name|newBuilder
argument_list|(
name|namespace1
argument_list|)
operator|.
name|withActions
argument_list|(
name|READ
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|grantGlobal
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
comment|// table in ns1
name|TestHDFSAclHelper
operator|.
name|createTableAndPut
argument_list|(
name|TEST_UTIL
argument_list|,
name|table12
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot2
argument_list|,
name|table12
argument_list|)
expr_stmt|;
comment|// table in ns2
name|TestHDFSAclHelper
operator|.
name|createTableAndPut
argument_list|(
name|TEST_UTIL
argument_list|,
name|table21
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot21
argument_list|,
name|table21
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot1
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot2
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot21
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// case 3: grant G(R),T(R) -> G(W)
name|SecureTestUtil
operator|.
name|grantGlobal
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|createTableAndPut
argument_list|(
name|TEST_UTIL
argument_list|,
name|table3
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot3
argument_list|,
name|table3
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|grantOnTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|table3
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|grantGlobal
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|createTableAndPut
argument_list|(
name|TEST_UTIL
argument_list|,
name|table31
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot31
argument_list|,
name|table31
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot31
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGrantNamespace
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|grantUserName
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|User
name|grantUser
init|=
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
name|grantUserName
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
decl_stmt|;
name|String
name|namespace
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|TableName
name|table
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace
argument_list|,
literal|"t1"
argument_list|)
decl_stmt|;
name|TableName
name|table2
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace
argument_list|,
literal|"t2"
argument_list|)
decl_stmt|;
name|TableName
name|table3
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace
argument_list|,
literal|"t3"
argument_list|)
decl_stmt|;
name|String
name|snapshot
init|=
name|namespace
operator|+
literal|"t1"
decl_stmt|;
name|String
name|snapshot2
init|=
name|namespace
operator|+
literal|"t2"
decl_stmt|;
name|String
name|snapshot3
init|=
name|namespace
operator|+
literal|"t3"
decl_stmt|;
name|TestHDFSAclHelper
operator|.
name|createTableAndPut
argument_list|(
name|TEST_UTIL
argument_list|,
name|table
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot
argument_list|,
name|table
argument_list|)
expr_stmt|;
comment|// case 1: grant N(R) -> grant N(W) -> grant N(R)
name|SecureTestUtil
operator|.
name|grantOnNamespace
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|namespace
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|createTableAndPut
argument_list|(
name|TEST_UTIL
argument_list|,
name|table3
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot3
argument_list|,
name|table3
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|unGrantUser
argument_list|,
name|snapshot
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|grantOnNamespace
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|namespace
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|grantOnNamespace
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|namespace
argument_list|,
name|READ
argument_list|)
expr_stmt|;
comment|// case 2: grant T(R) -> N(W)
name|SecureTestUtil
operator|.
name|grantOnNamespace
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|namespace
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|grantOnTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|table
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|grantOnNamespace
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|namespace
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|createTableAndPut
argument_list|(
name|TEST_UTIL
argument_list|,
name|table2
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot2
argument_list|,
name|table2
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot2
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|grantOnTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|table
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
comment|// case 3: grant G(R) -> N(W)
name|SecureTestUtil
operator|.
name|grantOnNamespace
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|namespace
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|grantGlobal
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|grantOnNamespace
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|namespace
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot2
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGrantTable
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|grantUserName
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|User
name|grantUser
init|=
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
name|grantUserName
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
decl_stmt|;
name|String
name|namespace
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|TableName
name|table
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace
argument_list|,
literal|"t1"
argument_list|)
decl_stmt|;
name|TableName
name|table2
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace
argument_list|,
literal|"t2"
argument_list|)
decl_stmt|;
name|String
name|snapshot
init|=
name|namespace
operator|+
literal|"t1"
decl_stmt|;
name|String
name|snapshot2
init|=
name|namespace
operator|+
literal|"t1-2"
decl_stmt|;
name|String
name|snapshot3
init|=
name|namespace
operator|+
literal|"t2"
decl_stmt|;
try|try
init|(
name|Table
name|t
init|=
name|TestHDFSAclHelper
operator|.
name|createTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|table
argument_list|)
init|)
block|{
name|TestHDFSAclHelper
operator|.
name|put
argument_list|(
name|t
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot
argument_list|,
name|table
argument_list|)
expr_stmt|;
comment|// table owner can scan table snapshot
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
literal|"owner"
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
argument_list|,
name|snapshot
argument_list|,
literal|6
argument_list|)
expr_stmt|;
comment|// case 1: grant table family(R)
name|SecureTestUtil
operator|.
name|grantOnTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|table
argument_list|,
name|TestHDFSAclHelper
operator|.
name|COLUMN1
argument_list|,
literal|null
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// case 2: grant T(R)
name|TestHDFSAclHelper
operator|.
name|grantOnTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|table
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|put2
argument_list|(
name|t
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot2
argument_list|,
name|table
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot2
argument_list|,
literal|10
argument_list|)
expr_stmt|;
block|}
comment|// create t2 and snapshot
name|TestHDFSAclHelper
operator|.
name|createTableAndPut
argument_list|(
name|TEST_UTIL
argument_list|,
name|table2
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot3
argument_list|,
name|table2
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot3
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// case 3: grant T(R) -> grant T(W) with merging existing permissions
name|TEST_UTIL
operator|.
name|getAdmin
argument_list|()
operator|.
name|grant
argument_list|(
operator|new
name|UserPermission
argument_list|(
name|grantUserName
argument_list|,
name|Permission
operator|.
name|newBuilder
argument_list|(
name|table
argument_list|)
operator|.
name|withActions
argument_list|(
name|WRITE
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot
argument_list|,
literal|6
argument_list|)
expr_stmt|;
comment|// case 4: grant T(R) -> grant T(W) without merging existing permissions
name|TestHDFSAclHelper
operator|.
name|grantOnTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|table
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot2
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRevokeGlobal
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|grantUserName
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|User
name|grantUser
init|=
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
name|grantUserName
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
decl_stmt|;
name|String
name|namespace
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|TableName
name|table1
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace
argument_list|,
literal|"t1"
argument_list|)
decl_stmt|;
name|TableName
name|table2
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace
argument_list|,
literal|"t2"
argument_list|)
decl_stmt|;
name|TableName
name|table3
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace
argument_list|,
literal|"t3"
argument_list|)
decl_stmt|;
name|String
name|snapshot1
init|=
name|namespace
operator|+
literal|"t1"
decl_stmt|;
name|String
name|snapshot2
init|=
name|namespace
operator|+
literal|"t2"
decl_stmt|;
name|String
name|snapshot3
init|=
name|namespace
operator|+
literal|"t3"
decl_stmt|;
name|TestHDFSAclHelper
operator|.
name|createTableAndPut
argument_list|(
name|TEST_UTIL
argument_list|,
name|table1
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot1
argument_list|,
name|table1
argument_list|)
expr_stmt|;
comment|// case 1: grant G(R) -> revoke G(R)
name|SecureTestUtil
operator|.
name|grantGlobal
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|revokeGlobal
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// case 2: grant G(R), grant N(R), grant T(R) -> revoke G(R)
name|SecureTestUtil
operator|.
name|grantGlobal
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|grantOnNamespace
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|namespace
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|grantOnTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|table1
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|revokeGlobal
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot1
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|createTableAndPut
argument_list|(
name|TEST_UTIL
argument_list|,
name|table2
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot2
argument_list|,
name|table2
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot2
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|revokeFromNamespace
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|namespace
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot2
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// case 3: grant G(R), grant T(R) -> revoke G(R)
name|SecureTestUtil
operator|.
name|grantGlobal
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|revokeGlobal
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot1
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot2
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|createTableAndPut
argument_list|(
name|TEST_UTIL
argument_list|,
name|table3
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot3
argument_list|,
name|table3
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot3
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRevokeNamespace
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|grantUserName
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|User
name|grantUser
init|=
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
name|grantUserName
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
decl_stmt|;
name|String
name|namespace
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|TableName
name|table1
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace
argument_list|,
literal|"t1"
argument_list|)
decl_stmt|;
name|TableName
name|table2
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace
argument_list|,
literal|"t2"
argument_list|)
decl_stmt|;
name|TableName
name|table3
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace
argument_list|,
literal|"t3"
argument_list|)
decl_stmt|;
name|TableName
name|table4
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace
argument_list|,
literal|"t4"
argument_list|)
decl_stmt|;
name|String
name|snapshot1
init|=
name|namespace
operator|+
literal|"t1"
decl_stmt|;
name|String
name|snapshot2
init|=
name|namespace
operator|+
literal|"t2"
decl_stmt|;
name|String
name|snapshot3
init|=
name|namespace
operator|+
literal|"t3"
decl_stmt|;
name|String
name|snapshot4
init|=
name|namespace
operator|+
literal|"t4"
decl_stmt|;
name|TestHDFSAclHelper
operator|.
name|createTableAndPut
argument_list|(
name|TEST_UTIL
argument_list|,
name|table1
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot1
argument_list|,
name|table1
argument_list|)
expr_stmt|;
comment|// case 1: grant N(R) -> revoke N(R)
name|SecureTestUtil
operator|.
name|grantOnNamespace
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|namespace
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|admin
operator|.
name|revoke
argument_list|(
operator|new
name|UserPermission
argument_list|(
name|grantUserName
argument_list|,
name|Permission
operator|.
name|newBuilder
argument_list|(
name|namespace
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|createTableAndPut
argument_list|(
name|TEST_UTIL
argument_list|,
name|table3
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot3
argument_list|,
name|table3
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot3
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// case 2: grant N(R), grant G(R) -> revoke N(R)
name|SecureTestUtil
operator|.
name|grantOnNamespace
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|namespace
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|grantGlobal
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|admin
operator|.
name|revoke
argument_list|(
operator|new
name|UserPermission
argument_list|(
name|grantUserName
argument_list|,
name|Permission
operator|.
name|newBuilder
argument_list|(
name|namespace
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|createTableAndPut
argument_list|(
name|TEST_UTIL
argument_list|,
name|table4
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot4
argument_list|,
name|table4
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot1
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot4
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|revokeGlobal
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|READ
argument_list|)
expr_stmt|;
comment|// case 3: grant N(R), grant T(R) -> revoke N(R)
name|SecureTestUtil
operator|.
name|grantOnNamespace
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|namespace
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|grantOnTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|table1
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|revokeFromNamespace
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|namespace
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot1
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|createTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|table2
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot2
argument_list|,
name|table2
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot2
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRevokeTable
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|grantUserName
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|User
name|grantUser
init|=
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
name|grantUserName
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
decl_stmt|;
name|String
name|namespace
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|TableName
name|table
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace
argument_list|,
literal|"t1"
argument_list|)
decl_stmt|;
name|String
name|snapshot
init|=
name|namespace
operator|+
literal|"t1"
decl_stmt|;
name|TestHDFSAclHelper
operator|.
name|createTableAndPut
argument_list|(
name|TEST_UTIL
argument_list|,
name|table
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot
argument_list|,
name|table
argument_list|)
expr_stmt|;
comment|// case 1: grant T(R) -> revoke table family
name|TestHDFSAclHelper
operator|.
name|grantOnTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|table
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|revokeFromTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|table
argument_list|,
name|TestHDFSAclHelper
operator|.
name|COLUMN1
argument_list|,
literal|null
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot
argument_list|,
literal|6
argument_list|)
expr_stmt|;
comment|// case 2: grant T(R) -> revoke T(R)
name|TestHDFSAclHelper
operator|.
name|grantOnTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|table
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|admin
operator|.
name|revoke
argument_list|(
operator|new
name|UserPermission
argument_list|(
name|grantUserName
argument_list|,
name|Permission
operator|.
name|newBuilder
argument_list|(
name|table
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// case 3: grant T(R), grant N(R) -> revoke T(R)
name|TestHDFSAclHelper
operator|.
name|grantOnTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|table
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|grantOnNamespace
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|namespace
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|admin
operator|.
name|revoke
argument_list|(
operator|new
name|UserPermission
argument_list|(
name|grantUserName
argument_list|,
name|Permission
operator|.
name|newBuilder
argument_list|(
name|table
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|revokeFromNamespace
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|namespace
argument_list|,
name|READ
argument_list|)
expr_stmt|;
comment|// case 4: grant T(R), grant G(R) -> revoke T(R)
name|TestHDFSAclHelper
operator|.
name|grantOnTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|table
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|grantGlobal
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|admin
operator|.
name|revoke
argument_list|(
operator|new
name|UserPermission
argument_list|(
name|grantUserName
argument_list|,
name|Permission
operator|.
name|newBuilder
argument_list|(
name|table
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|revokeGlobal
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTruncateTable
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|grantUserName
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|User
name|grantUser
init|=
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
name|grantUserName
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
decl_stmt|;
name|String
name|grantUserName2
init|=
name|grantUserName
operator|+
literal|"2"
decl_stmt|;
name|User
name|grantUser2
init|=
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
name|grantUserName2
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
decl_stmt|;
name|String
name|namespace
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|TableName
name|tableName
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace
argument_list|,
literal|"t1"
argument_list|)
decl_stmt|;
name|String
name|snapshot
init|=
name|namespace
operator|+
literal|"t1"
decl_stmt|;
name|String
name|snapshot2
init|=
name|namespace
operator|+
literal|"t1-2"
decl_stmt|;
try|try
init|(
name|Table
name|t
init|=
name|TestHDFSAclHelper
operator|.
name|createTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|tableName
argument_list|)
init|)
block|{
name|TestHDFSAclHelper
operator|.
name|put
argument_list|(
name|t
argument_list|)
expr_stmt|;
comment|// snapshot
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
comment|// grant user2 namespace permission
name|SecureTestUtil
operator|.
name|grantOnNamespace
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName2
argument_list|,
name|namespace
argument_list|,
name|READ
argument_list|)
expr_stmt|;
comment|// grant user table permission
name|TestHDFSAclHelper
operator|.
name|grantOnTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|tableName
argument_list|,
name|READ
argument_list|)
expr_stmt|;
comment|// truncate table
name|admin
operator|.
name|disableTable
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
name|admin
operator|.
name|truncateTable
argument_list|(
name|tableName
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|put2
argument_list|(
name|t
argument_list|)
expr_stmt|;
comment|// snapshot
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot2
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser2
argument_list|,
name|snapshot
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot2
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser2
argument_list|,
name|snapshot2
argument_list|,
literal|9
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRestoreSnapshot
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|grantUserName
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|User
name|grantUser
init|=
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
name|grantUserName
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
decl_stmt|;
name|String
name|namespace
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|TableName
name|table
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace
argument_list|,
literal|"t1"
argument_list|)
decl_stmt|;
name|String
name|snapshot
init|=
name|namespace
operator|+
literal|"t1"
decl_stmt|;
name|String
name|snapshot2
init|=
name|namespace
operator|+
literal|"t1-2"
decl_stmt|;
name|String
name|snapshot3
init|=
name|namespace
operator|+
literal|"t1-3"
decl_stmt|;
try|try
init|(
name|Table
name|t
init|=
name|TestHDFSAclHelper
operator|.
name|createTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|table
argument_list|)
init|)
block|{
name|TestHDFSAclHelper
operator|.
name|put
argument_list|(
name|t
argument_list|)
expr_stmt|;
comment|// grant t1, snapshot
name|TestHDFSAclHelper
operator|.
name|grantOnTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|table
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot
argument_list|,
name|table
argument_list|)
expr_stmt|;
comment|// delete
name|admin
operator|.
name|disableTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|admin
operator|.
name|deleteTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// restore snapshot and restore acl
name|admin
operator|.
name|restoreSnapshot
argument_list|(
name|snapshot
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|put2
argument_list|(
name|t
argument_list|)
expr_stmt|;
comment|// snapshot
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot2
argument_list|,
name|table
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot2
argument_list|,
literal|10
argument_list|)
expr_stmt|;
comment|// delete
name|admin
operator|.
name|disableTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|admin
operator|.
name|deleteTable
argument_list|(
name|table
argument_list|)
expr_stmt|;
comment|// restore snapshot and skip restore acl
name|admin
operator|.
name|restoreSnapshot
argument_list|(
name|snapshot
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot3
argument_list|,
name|table
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot2
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot3
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeleteTable
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|namespace
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|String
name|grantUserName1
init|=
name|namespace
operator|+
literal|"1"
decl_stmt|;
name|String
name|grantUserName2
init|=
name|namespace
operator|+
literal|"2"
decl_stmt|;
name|String
name|grantUserName3
init|=
name|namespace
operator|+
literal|"3"
decl_stmt|;
name|User
name|grantUser1
init|=
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
name|grantUserName1
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
decl_stmt|;
name|User
name|grantUser2
init|=
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
name|grantUserName2
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
decl_stmt|;
name|User
name|grantUser3
init|=
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
name|grantUserName3
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
decl_stmt|;
name|TableName
name|tableName1
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace
argument_list|,
literal|"t1"
argument_list|)
decl_stmt|;
name|TableName
name|tableName2
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace
argument_list|,
literal|"t2"
argument_list|)
decl_stmt|;
name|String
name|snapshot1
init|=
name|namespace
operator|+
literal|"t1"
decl_stmt|;
name|String
name|snapshot2
init|=
name|namespace
operator|+
literal|"t2"
decl_stmt|;
try|try
init|(
name|Table
name|t
init|=
name|TestHDFSAclHelper
operator|.
name|createTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|tableName1
argument_list|)
init|;
name|Table
name|t2
operator|=
name|TestHDFSAclHelper
operator|.
name|createTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|tableName2
argument_list|)
init|)
block|{
name|TestHDFSAclHelper
operator|.
name|put
argument_list|(
name|t
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|put
argument_list|(
name|t2
argument_list|)
expr_stmt|;
comment|// snapshot
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot1
argument_list|,
name|tableName1
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot2
argument_list|,
name|tableName2
argument_list|)
expr_stmt|;
comment|// grant user table permission
name|TestHDFSAclHelper
operator|.
name|grantOnTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName1
argument_list|,
name|tableName1
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|grantOnTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName2
argument_list|,
name|tableName2
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|grantOnNamespace
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName3
argument_list|,
name|namespace
argument_list|,
name|READ
argument_list|)
expr_stmt|;
comment|// delete table
name|admin
operator|.
name|disableTable
argument_list|(
name|tableName1
argument_list|)
expr_stmt|;
name|admin
operator|.
name|deleteTable
argument_list|(
name|tableName1
argument_list|)
expr_stmt|;
comment|// grantUser2 and grantUser3 should have data/ns acl
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser1
argument_list|,
name|snapshot1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser2
argument_list|,
name|snapshot2
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser3
argument_list|,
name|snapshot2
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeleteNamespace
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|grantUserName
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|User
name|grantUser
init|=
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
name|grantUserName
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
decl_stmt|;
name|String
name|namespace
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|TableName
name|tableName
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace
argument_list|,
literal|"t1"
argument_list|)
decl_stmt|;
name|String
name|snapshot
init|=
name|namespace
operator|+
literal|"t1"
decl_stmt|;
try|try
init|(
name|Table
name|t
init|=
name|TestHDFSAclHelper
operator|.
name|createTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|tableName
argument_list|)
init|)
block|{
name|TestHDFSAclHelper
operator|.
name|put
argument_list|(
name|t
argument_list|)
expr_stmt|;
comment|// snapshot
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
comment|// grant user2 namespace permission
name|SecureTestUtil
operator|.
name|grantOnNamespace
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|namespace
argument_list|,
name|READ
argument_list|)
expr_stmt|;
comment|// truncate table
name|admin
operator|.
name|disableTable
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
name|admin
operator|.
name|deleteTable
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
comment|// snapshot
name|admin
operator|.
name|deleteNamespace
argument_list|(
name|namespace
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCleanArchiveTableDir
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|grantUserName
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|User
name|grantUser
init|=
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
name|grantUserName
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
decl_stmt|;
name|String
name|namespace
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|TableName
name|table
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace
argument_list|,
literal|"t1"
argument_list|)
decl_stmt|;
name|String
name|snapshot
init|=
name|namespace
operator|+
literal|"t1"
decl_stmt|;
name|TestHDFSAclHelper
operator|.
name|createTableAndPut
argument_list|(
name|TEST_UTIL
argument_list|,
name|table
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot
argument_list|,
name|table
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|grantOnTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|table
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot
argument_list|,
literal|6
argument_list|)
expr_stmt|;
comment|// HFileCleaner will not delete archive table directory even if it's a empty directory
name|HFileCleaner
name|cleaner
init|=
name|TEST_UTIL
operator|.
name|getHBaseCluster
argument_list|()
operator|.
name|getMaster
argument_list|()
operator|.
name|getHFileCleaner
argument_list|()
decl_stmt|;
name|cleaner
operator|.
name|choreForTesting
argument_list|()
expr_stmt|;
name|Path
name|archiveTableDir
init|=
name|HFileArchiveUtil
operator|.
name|getTableArchivePath
argument_list|(
name|rootDir
argument_list|,
name|table
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|fs
operator|.
name|exists
argument_list|(
name|archiveTableDir
argument_list|)
argument_list|)
expr_stmt|;
comment|// Check SnapshotScannerHDFSAclCleaner method
name|assertTrue
argument_list|(
name|SnapshotScannerHDFSAclCleaner
operator|.
name|isArchiveTableDir
argument_list|(
name|archiveTableDir
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|SnapshotScannerHDFSAclCleaner
operator|.
name|isArchiveNamespaceDir
argument_list|(
name|archiveTableDir
operator|.
name|getParent
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|SnapshotScannerHDFSAclCleaner
operator|.
name|isArchiveDataDir
argument_list|(
name|archiveTableDir
operator|.
name|getParent
argument_list|()
operator|.
name|getParent
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|SnapshotScannerHDFSAclCleaner
operator|.
name|isArchiveDataDir
argument_list|(
name|archiveTableDir
operator|.
name|getParent
argument_list|()
operator|.
name|getParent
argument_list|()
operator|.
name|getParent
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGrantMobTable
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|grantUserName
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|User
name|grantUser
init|=
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
name|grantUserName
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
decl_stmt|;
name|String
name|namespace
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|TableName
name|table
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace
argument_list|,
literal|"t1"
argument_list|)
decl_stmt|;
name|String
name|snapshot
init|=
name|namespace
operator|+
literal|"t1"
decl_stmt|;
try|try
init|(
name|Table
name|t
init|=
name|TestHDFSAclHelper
operator|.
name|createMobTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|table
argument_list|)
init|)
block|{
name|TestHDFSAclHelper
operator|.
name|put
argument_list|(
name|t
argument_list|)
expr_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot
argument_list|,
name|table
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|grantOnTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUserName
argument_list|,
name|table
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|grantUser
argument_list|,
name|snapshot
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testModifyTable
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|namespace
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|TableName
name|table
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace
argument_list|,
literal|"t1"
argument_list|)
decl_stmt|;
name|String
name|snapshot
init|=
name|namespace
operator|+
literal|"t1"
decl_stmt|;
name|TableName
name|table2
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|namespace
argument_list|,
literal|"t2"
argument_list|)
decl_stmt|;
name|String
name|tableUserName
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|User
name|tableUser
init|=
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
name|tableUserName
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
decl_stmt|;
name|String
name|tableUserName2
init|=
name|tableUserName
operator|+
literal|"2"
decl_stmt|;
name|User
name|tableUser2
init|=
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
name|tableUserName2
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
decl_stmt|;
name|String
name|tableUserName3
init|=
name|tableUserName
operator|+
literal|"3"
decl_stmt|;
name|User
name|tableUser3
init|=
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
name|tableUserName3
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
decl_stmt|;
name|String
name|nsUserName
init|=
name|tableUserName
operator|+
literal|"-ns"
decl_stmt|;
name|User
name|nsUser
init|=
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
name|nsUserName
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
decl_stmt|;
name|String
name|globalUserName
init|=
name|tableUserName
operator|+
literal|"-global"
decl_stmt|;
name|User
name|globalUser
init|=
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
name|globalUserName
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
decl_stmt|;
name|String
name|globalUserName2
init|=
name|tableUserName
operator|+
literal|"-global-2"
decl_stmt|;
name|User
name|globalUser2
init|=
name|User
operator|.
name|createUserForTesting
argument_list|(
name|conf
argument_list|,
name|globalUserName2
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
decl_stmt|;
name|SecureTestUtil
operator|.
name|grantGlobal
argument_list|(
name|TEST_UTIL
argument_list|,
name|globalUserName
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|createNamespace
argument_list|(
name|TEST_UTIL
argument_list|,
name|namespace
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|grantOnNamespace
argument_list|(
name|TEST_UTIL
argument_list|,
name|nsUserName
argument_list|,
name|namespace
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TableDescriptor
name|td
init|=
name|TestHDFSAclHelper
operator|.
name|createUserScanSnapshotDisabledTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|table
argument_list|)
decl_stmt|;
name|admin
operator|.
name|snapshot
argument_list|(
name|snapshot
argument_list|,
name|table
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|grantGlobal
argument_list|(
name|TEST_UTIL
argument_list|,
name|globalUserName2
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|grantOnTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|tableUserName
argument_list|,
name|table
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|SecureTestUtil
operator|.
name|grantOnTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|tableUserName2
argument_list|,
name|table
argument_list|,
name|TestHDFSAclHelper
operator|.
name|COLUMN1
argument_list|,
literal|null
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|grantOnTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|tableUserName3
argument_list|,
name|table
argument_list|,
name|WRITE
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|tableUser
argument_list|,
name|snapshot
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|tableUser2
argument_list|,
name|snapshot
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|tableUser3
argument_list|,
name|snapshot
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|nsUser
argument_list|,
name|snapshot
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// Global permission is set before table is created, the acl is inherited
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|globalUser
argument_list|,
name|snapshot
argument_list|,
literal|6
argument_list|)
expr_stmt|;
comment|// Global permission is set after table is created, the table dir acl is skip
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|globalUser2
argument_list|,
name|snapshot
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
comment|// enable user scan snapshot
name|admin
operator|.
name|modifyTable
argument_list|(
name|TableDescriptorBuilder
operator|.
name|newBuilder
argument_list|(
name|td
argument_list|)
operator|.
name|setValue
argument_list|(
name|SnapshotScannerHDFSAclHelper
operator|.
name|USER_SCAN_SNAPSHOT_ENABLE
argument_list|,
literal|"true"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|tableUser
argument_list|,
name|snapshot
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|tableUser2
argument_list|,
name|snapshot
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|tableUser3
argument_list|,
name|snapshot
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|nsUser
argument_list|,
name|snapshot
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|globalUser
argument_list|,
name|snapshot
argument_list|,
literal|6
argument_list|)
expr_stmt|;
comment|// disable user scan snapshot
name|SecureTestUtil
operator|.
name|grantOnNamespace
argument_list|(
name|TEST_UTIL
argument_list|,
name|tableUserName2
argument_list|,
name|namespace
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|createTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|table2
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|grantOnTable
argument_list|(
name|TEST_UTIL
argument_list|,
name|tableUserName3
argument_list|,
name|table2
argument_list|,
name|READ
argument_list|)
expr_stmt|;
name|admin
operator|.
name|modifyTable
argument_list|(
name|TableDescriptorBuilder
operator|.
name|newBuilder
argument_list|(
name|td
argument_list|)
operator|.
name|setValue
argument_list|(
name|SnapshotScannerHDFSAclHelper
operator|.
name|USER_SCAN_SNAPSHOT_ENABLE
argument_list|,
literal|"false"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|tableUser
argument_list|,
name|snapshot
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|tableUser2
argument_list|,
name|snapshot
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|tableUser3
argument_list|,
name|snapshot
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|nsUser
argument_list|,
name|snapshot
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|globalUser
argument_list|,
name|snapshot
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|TestHDFSAclHelper
operator|.
name|canUserScanSnapshot
argument_list|(
name|TEST_UTIL
argument_list|,
name|globalUser2
argument_list|,
name|snapshot
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Path
argument_list|>
name|namespaceRootPaths
init|=
name|helper
operator|.
name|getNamespaceRootPaths
argument_list|(
name|namespace
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Path
argument_list|>
name|tableRootPaths
init|=
name|helper
operator|.
name|getTableRootPaths
argument_list|(
name|table
argument_list|,
literal|false
argument_list|)
decl_stmt|;
comment|// check access
for|for
control|(
name|Path
name|path
range|:
name|tableRootPaths
control|)
block|{
name|checkUserAclEntry
argument_list|(
name|path
argument_list|,
name|tableUserName
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|checkUserAclEntry
argument_list|(
name|path
argument_list|,
name|tableUserName2
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|checkUserAclEntry
argument_list|(
name|path
argument_list|,
name|tableUserName3
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|checkUserAclEntry
argument_list|(
name|path
argument_list|,
name|nsUserName
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|checkUserAclEntry
argument_list|(
name|path
argument_list|,
name|globalUserName
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|checkUserAclEntry
argument_list|(
name|path
argument_list|,
name|globalUserName2
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Path
name|path
range|:
name|namespaceRootPaths
control|)
block|{
name|checkUserAclEntry
argument_list|(
name|path
argument_list|,
name|tableUserName
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|checkUserAclEntry
argument_list|(
name|path
argument_list|,
name|tableUserName2
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|checkUserAclEntry
argument_list|(
name|path
argument_list|,
name|tableUserName3
argument_list|,
literal|true
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|checkUserAclEntry
argument_list|(
name|path
argument_list|,
name|nsUserName
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|checkUserAclEntry
argument_list|(
name|path
argument_list|,
name|globalUserName
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|checkUserAclEntry
argument_list|(
name|path
argument_list|,
name|globalUserName2
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|checkUserAclEntry
parameter_list|(
name|Path
name|path
parameter_list|,
name|String
name|userName
parameter_list|,
name|boolean
name|requireAccessAcl
parameter_list|,
name|boolean
name|requireDefaultAcl
parameter_list|)
throws|throws
name|IOException
block|{
name|boolean
name|accessAclEntry
init|=
literal|false
decl_stmt|;
name|boolean
name|defaultAclEntry
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|fs
operator|.
name|exists
argument_list|(
name|path
argument_list|)
condition|)
block|{
for|for
control|(
name|AclEntry
name|aclEntry
range|:
name|fs
operator|.
name|getAclStatus
argument_list|(
name|path
argument_list|)
operator|.
name|getEntries
argument_list|()
control|)
block|{
name|String
name|user
init|=
name|aclEntry
operator|.
name|getName
argument_list|()
decl_stmt|;
if|if
condition|(
name|user
operator|!=
literal|null
operator|&&
name|user
operator|.
name|equals
argument_list|(
name|userName
argument_list|)
condition|)
block|{
if|if
condition|(
name|aclEntry
operator|.
name|getScope
argument_list|()
operator|==
name|AclEntryScope
operator|.
name|DEFAULT
condition|)
block|{
name|defaultAclEntry
operator|=
literal|true
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|aclEntry
operator|.
name|getScope
argument_list|()
operator|==
name|AclEntryScope
operator|.
name|ACCESS
condition|)
block|{
name|accessAclEntry
operator|=
literal|true
expr_stmt|;
block|}
block|}
block|}
block|}
name|String
name|message
init|=
literal|"require user: "
operator|+
name|userName
operator|+
literal|", path: "
operator|+
name|path
operator|.
name|toString
argument_list|()
operator|+
literal|" acl"
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|message
argument_list|,
name|requireAccessAcl
argument_list|,
name|accessAclEntry
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|message
argument_list|,
name|requireDefaultAcl
argument_list|,
name|defaultAclEntry
argument_list|)
expr_stmt|;
block|}
block|}
end_class

begin_class
specifier|final
class|class
name|TestHDFSAclHelper
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TestHDFSAclHelper
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|TestHDFSAclHelper
parameter_list|()
block|{   }
specifier|static
name|void
name|grantOnTable
parameter_list|(
name|HBaseTestingUtility
name|util
parameter_list|,
name|String
name|user
parameter_list|,
name|TableName
name|tableName
parameter_list|,
name|Permission
operator|.
name|Action
modifier|...
name|actions
parameter_list|)
throws|throws
name|Exception
block|{
name|SecureTestUtil
operator|.
name|grantOnTable
argument_list|(
name|util
argument_list|,
name|user
argument_list|,
name|tableName
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|actions
argument_list|)
expr_stmt|;
block|}
specifier|static
name|void
name|createNamespace
parameter_list|(
name|HBaseTestingUtility
name|util
parameter_list|,
name|String
name|namespace
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|Arrays
operator|.
name|stream
argument_list|(
name|util
operator|.
name|getAdmin
argument_list|()
operator|.
name|listNamespaceDescriptors
argument_list|()
argument_list|)
operator|.
name|noneMatch
argument_list|(
name|ns
lambda|->
name|ns
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|namespace
argument_list|)
argument_list|)
condition|)
block|{
name|NamespaceDescriptor
name|namespaceDescriptor
operator|=
name|NamespaceDescriptor
operator|.
name|create
argument_list|(
name|namespace
argument_list|)
operator|.
name|build
argument_list|()
block|;
name|util
operator|.
name|getAdmin
argument_list|()
operator|.
name|createNamespace
argument_list|(
name|namespaceDescriptor
argument_list|)
empty_stmt|;
block|}
block|}
end_class

begin_function
specifier|static
name|Table
name|createTable
parameter_list|(
name|HBaseTestingUtility
name|util
parameter_list|,
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|createNamespace
argument_list|(
name|util
argument_list|,
name|tableName
operator|.
name|getNamespaceAsString
argument_list|()
argument_list|)
expr_stmt|;
name|TableDescriptor
name|td
init|=
name|getTableDescriptorBuilder
argument_list|(
name|util
argument_list|,
name|tableName
argument_list|)
operator|.
name|setValue
argument_list|(
name|SnapshotScannerHDFSAclHelper
operator|.
name|USER_SCAN_SNAPSHOT_ENABLE
argument_list|,
literal|"true"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|byte
index|[]
index|[]
name|splits
init|=
operator|new
name|byte
index|[]
index|[]
block|{
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"2"
argument_list|)
block|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"4"
argument_list|)
block|}
decl_stmt|;
return|return
name|util
operator|.
name|createTable
argument_list|(
name|td
argument_list|,
name|splits
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|Table
name|createMobTable
parameter_list|(
name|HBaseTestingUtility
name|util
parameter_list|,
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|createNamespace
argument_list|(
name|util
argument_list|,
name|tableName
operator|.
name|getNamespaceAsString
argument_list|()
argument_list|)
expr_stmt|;
name|TableDescriptor
name|td
init|=
name|TableDescriptorBuilder
operator|.
name|newBuilder
argument_list|(
name|tableName
argument_list|)
operator|.
name|setColumnFamily
argument_list|(
name|ColumnFamilyDescriptorBuilder
operator|.
name|newBuilder
argument_list|(
name|COLUMN1
argument_list|)
operator|.
name|setMobEnabled
argument_list|(
literal|true
argument_list|)
operator|.
name|setMobThreshold
argument_list|(
literal|0
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|setColumnFamily
argument_list|(
name|ColumnFamilyDescriptorBuilder
operator|.
name|newBuilder
argument_list|(
name|COLUMN2
argument_list|)
operator|.
name|setMobEnabled
argument_list|(
literal|true
argument_list|)
operator|.
name|setMobThreshold
argument_list|(
literal|0
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|setOwner
argument_list|(
name|User
operator|.
name|createUserForTesting
argument_list|(
name|util
operator|.
name|getConfiguration
argument_list|()
argument_list|,
literal|"owner"
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
argument_list|)
operator|.
name|setValue
argument_list|(
name|SnapshotScannerHDFSAclHelper
operator|.
name|USER_SCAN_SNAPSHOT_ENABLE
argument_list|,
literal|"true"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|byte
index|[]
index|[]
name|splits
init|=
operator|new
name|byte
index|[]
index|[]
block|{
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"2"
argument_list|)
block|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"4"
argument_list|)
block|}
decl_stmt|;
return|return
name|util
operator|.
name|createTable
argument_list|(
name|td
argument_list|,
name|splits
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|TableDescriptor
name|createUserScanSnapshotDisabledTable
parameter_list|(
name|HBaseTestingUtility
name|util
parameter_list|,
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|createNamespace
argument_list|(
name|util
argument_list|,
name|tableName
operator|.
name|getNamespaceAsString
argument_list|()
argument_list|)
expr_stmt|;
name|TableDescriptor
name|td
init|=
name|getTableDescriptorBuilder
argument_list|(
name|util
argument_list|,
name|tableName
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|byte
index|[]
index|[]
name|splits
init|=
operator|new
name|byte
index|[]
index|[]
block|{
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"2"
argument_list|)
block|,
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"4"
argument_list|)
block|}
decl_stmt|;
try|try
init|(
name|Table
name|t
init|=
name|util
operator|.
name|createTable
argument_list|(
name|td
argument_list|,
name|splits
argument_list|)
init|)
block|{
name|put
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
return|return
name|td
return|;
block|}
end_function

begin_function
specifier|private
specifier|static
name|TableDescriptorBuilder
name|getTableDescriptorBuilder
parameter_list|(
name|HBaseTestingUtility
name|util
parameter_list|,
name|TableName
name|tableName
parameter_list|)
block|{
return|return
name|TableDescriptorBuilder
operator|.
name|newBuilder
argument_list|(
name|tableName
argument_list|)
operator|.
name|setColumnFamily
argument_list|(
name|ColumnFamilyDescriptorBuilder
operator|.
name|newBuilder
argument_list|(
name|COLUMN1
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|setColumnFamily
argument_list|(
name|ColumnFamilyDescriptorBuilder
operator|.
name|newBuilder
argument_list|(
name|COLUMN2
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|setOwner
argument_list|(
name|User
operator|.
name|createUserForTesting
argument_list|(
name|util
operator|.
name|getConfiguration
argument_list|()
argument_list|,
literal|"owner"
argument_list|,
operator|new
name|String
index|[]
block|{}
argument_list|)
argument_list|)
return|;
block|}
end_function

begin_function
specifier|static
name|void
name|createTableAndPut
parameter_list|(
name|HBaseTestingUtility
name|util
parameter_list|,
name|TableName
name|tableNam
parameter_list|)
throws|throws
name|IOException
block|{
try|try
init|(
name|Table
name|t
init|=
name|createTable
argument_list|(
name|util
argument_list|,
name|tableNam
argument_list|)
init|)
block|{
name|put
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_decl_stmt
specifier|static
specifier|final
name|byte
index|[]
name|COLUMN1
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"A"
argument_list|)
decl_stmt|;
end_decl_stmt

begin_decl_stmt
specifier|static
specifier|final
name|byte
index|[]
name|COLUMN2
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"B"
argument_list|)
decl_stmt|;
end_decl_stmt

begin_function
specifier|static
name|void
name|put
parameter_list|(
name|Table
name|hTable
parameter_list|)
throws|throws
name|IOException
block|{
name|List
argument_list|<
name|Put
argument_list|>
name|puts
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|6
condition|;
name|i
operator|++
control|)
block|{
name|Put
name|put
init|=
operator|new
name|Put
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|put
operator|.
name|addColumn
argument_list|(
name|COLUMN1
argument_list|,
literal|null
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
name|put
operator|.
name|addColumn
argument_list|(
name|COLUMN2
argument_list|,
literal|null
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|i
operator|+
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|puts
operator|.
name|add
argument_list|(
name|put
argument_list|)
expr_stmt|;
block|}
name|hTable
operator|.
name|put
argument_list|(
name|puts
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|static
name|void
name|put2
parameter_list|(
name|Table
name|hTable
parameter_list|)
throws|throws
name|IOException
block|{
name|List
argument_list|<
name|Put
argument_list|>
name|puts
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|i
operator|==
literal|5
condition|)
block|{
continue|continue;
block|}
name|Put
name|put
init|=
operator|new
name|Put
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|i
argument_list|)
argument_list|)
decl_stmt|;
name|put
operator|.
name|addColumn
argument_list|(
name|COLUMN1
argument_list|,
literal|null
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|i
operator|+
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|put
operator|.
name|addColumn
argument_list|(
name|COLUMN2
argument_list|,
literal|null
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|i
operator|+
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|puts
operator|.
name|add
argument_list|(
name|put
argument_list|)
expr_stmt|;
block|}
name|hTable
operator|.
name|put
argument_list|(
name|puts
argument_list|)
expr_stmt|;
block|}
end_function

begin_comment
comment|/**    * Check if user is able to read expected rows from the specific snapshot    * @param user the specific user    * @param snapshot the snapshot to be scanned    * @param expectedRowCount expected row count read from snapshot, -1 if expects    *          AccessControlException    * @throws IOException user scan snapshot error    * @throws InterruptedException user scan snapshot error    */
end_comment

begin_function
specifier|static
name|void
name|canUserScanSnapshot
parameter_list|(
name|HBaseTestingUtility
name|util
parameter_list|,
name|User
name|user
parameter_list|,
name|String
name|snapshot
parameter_list|,
name|int
name|expectedRowCount
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|PrivilegedExceptionAction
argument_list|<
name|Void
argument_list|>
name|action
init|=
name|getScanSnapshotAction
argument_list|(
name|util
operator|.
name|getConfiguration
argument_list|()
argument_list|,
name|snapshot
argument_list|,
name|expectedRowCount
argument_list|)
decl_stmt|;
name|user
operator|.
name|runAs
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
specifier|private
specifier|static
name|PrivilegedExceptionAction
argument_list|<
name|Void
argument_list|>
name|getScanSnapshotAction
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|String
name|snapshotName
parameter_list|,
name|long
name|expectedRowCount
parameter_list|)
block|{
return|return
parameter_list|()
lambda|->
block|{
try|try
block|{
name|Path
name|restoreDir
init|=
operator|new
name|Path
argument_list|(
name|SnapshotScannerHDFSAclHelper
operator|.
name|SNAPSHOT_RESTORE_TMP_DIR_DEFAULT
argument_list|)
decl_stmt|;
name|Scan
name|scan
init|=
operator|new
name|Scan
argument_list|()
decl_stmt|;
name|TableSnapshotScanner
name|scanner
init|=
operator|new
name|TableSnapshotScanner
argument_list|(
name|conf
argument_list|,
name|restoreDir
argument_list|,
name|snapshotName
argument_list|,
name|scan
argument_list|)
decl_stmt|;
name|int
name|rowCount
init|=
literal|0
decl_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
name|Result
name|result
init|=
name|scanner
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|result
operator|==
literal|null
condition|)
block|{
break|break;
block|}
name|rowCount
operator|++
expr_stmt|;
block|}
name|scanner
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedRowCount
argument_list|,
name|rowCount
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Scan snapshot error, snapshot {}"
argument_list|,
name|snapshotName
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedRowCount
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
return|;
block|}
end_function

unit|}
end_unit

