begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HRegionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|SmallTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|HRegion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_comment
comment|/**  * Test that the utility works as expected  */
end_comment

begin_class
annotation|@
name|Category
argument_list|(
name|SmallTests
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestHFileArchiveUtil
block|{
annotation|@
name|Test
specifier|public
name|void
name|testGetTableArchivePath
parameter_list|()
block|{
name|assertNotNull
argument_list|(
name|HFileArchiveUtil
operator|.
name|getTableArchivePath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"table"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|HFileArchiveUtil
operator|.
name|getTableArchivePath
argument_list|(
operator|new
name|Path
argument_list|(
literal|"root"
argument_list|,
operator|new
name|Path
argument_list|(
literal|"table"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetArchivePath
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|conf
init|=
operator|new
name|Configuration
argument_list|()
decl_stmt|;
name|FSUtils
operator|.
name|setRootDir
argument_list|(
name|conf
argument_list|,
operator|new
name|Path
argument_list|(
literal|"root"
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|HFileArchiveUtil
operator|.
name|getArchivePath
argument_list|(
name|conf
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRegionArchiveDir
parameter_list|()
block|{
name|Path
name|tableDir
init|=
operator|new
name|Path
argument_list|(
literal|"table"
argument_list|)
decl_stmt|;
name|Path
name|regionDir
init|=
operator|new
name|Path
argument_list|(
literal|"region"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|HFileArchiveUtil
operator|.
name|getRegionArchiveDir
argument_list|(
literal|null
argument_list|,
name|tableDir
argument_list|,
name|regionDir
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGetStoreArchivePath
parameter_list|()
block|{
name|byte
index|[]
name|family
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"Family"
argument_list|)
decl_stmt|;
name|Path
name|tabledir
init|=
operator|new
name|Path
argument_list|(
literal|"table"
argument_list|)
decl_stmt|;
name|HRegionInfo
name|region
init|=
operator|new
name|HRegionInfo
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"table"
argument_list|)
argument_list|)
decl_stmt|;
name|Configuration
name|conf
init|=
literal|null
decl_stmt|;
name|assertNotNull
argument_list|(
name|HFileArchiveUtil
operator|.
name|getStoreArchivePath
argument_list|(
name|conf
argument_list|,
name|region
argument_list|,
name|tabledir
argument_list|,
name|family
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|HFileArchiveUtil
operator|.
name|getStoreArchivePath
argument_list|(
name|conf
argument_list|,
name|region
argument_list|,
name|tabledir
argument_list|,
name|family
argument_list|)
argument_list|)
expr_stmt|;
comment|// do a little mocking of a region to get the same results
name|HRegion
name|mockRegion
init|=
name|Mockito
operator|.
name|mock
argument_list|(
name|HRegion
operator|.
name|class
argument_list|)
decl_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockRegion
operator|.
name|getRegionInfo
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|region
argument_list|)
expr_stmt|;
name|Mockito
operator|.
name|when
argument_list|(
name|mockRegion
operator|.
name|getTableDir
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|tabledir
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|HFileArchiveUtil
operator|.
name|getStoreArchivePath
argument_list|(
literal|null
argument_list|,
name|mockRegion
argument_list|,
name|family
argument_list|)
argument_list|)
expr_stmt|;
name|conf
operator|=
operator|new
name|Configuration
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|HFileArchiveUtil
operator|.
name|getStoreArchivePath
argument_list|(
name|conf
argument_list|,
name|mockRegion
argument_list|,
name|family
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

