begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|compactions
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseTestingUtility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|SmallTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_class
annotation|@
name|Category
argument_list|(
name|SmallTests
operator|.
name|class
argument_list|)
specifier|public
class|class
name|TestPeakCompactionsThrottle
block|{
specifier|private
specifier|static
name|HBaseTestingUtility
name|testUtil
decl_stmt|;
specifier|private
name|Configuration
name|conf
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|setUpClass
parameter_list|()
block|{
name|testUtil
operator|=
operator|new
name|HBaseTestingUtility
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|conf
operator|=
name|testUtil
operator|.
name|getConfiguration
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSetPeakHourToTargetTime
parameter_list|()
throws|throws
name|IOException
block|{
name|conf
operator|.
name|set
argument_list|(
name|PeakCompactionsThrottle
operator|.
name|PEAK_START_HOUR
argument_list|,
literal|"0"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|PeakCompactionsThrottle
operator|.
name|PEAK_END_HOUR
argument_list|,
literal|"23"
argument_list|)
expr_stmt|;
name|PeakCompactionsThrottle
name|peakCompactionsThrottle
init|=
operator|new
name|PeakCompactionsThrottle
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|peakCompactionsThrottle
operator|.
name|startCompaction
argument_list|()
expr_stmt|;
name|long
name|numOfBytes
init|=
literal|60
operator|*
literal|1024
operator|*
literal|1024
decl_stmt|;
name|peakCompactionsThrottle
operator|.
name|throttle
argument_list|(
name|numOfBytes
argument_list|)
expr_stmt|;
name|peakCompactionsThrottle
operator|.
name|finishCompaction
argument_list|(
literal|"region"
argument_list|,
literal|"family"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|peakCompactionsThrottle
operator|.
name|getSleepNumber
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSetPeakHourOutsideCurrentSelection
parameter_list|()
throws|throws
name|IOException
block|{
name|conf
operator|.
name|set
argument_list|(
name|PeakCompactionsThrottle
operator|.
name|PEAK_START_HOUR
argument_list|,
literal|"-1"
argument_list|)
expr_stmt|;
name|conf
operator|.
name|set
argument_list|(
name|PeakCompactionsThrottle
operator|.
name|PEAK_END_HOUR
argument_list|,
literal|"-1"
argument_list|)
expr_stmt|;
name|PeakCompactionsThrottle
name|peakCompactionsThrottle
init|=
operator|new
name|PeakCompactionsThrottle
argument_list|(
name|conf
argument_list|)
decl_stmt|;
name|peakCompactionsThrottle
operator|.
name|startCompaction
argument_list|()
expr_stmt|;
name|long
name|numOfBytes
init|=
literal|30
operator|*
literal|1024
operator|*
literal|1024
decl_stmt|;
name|peakCompactionsThrottle
operator|.
name|throttle
argument_list|(
name|numOfBytes
argument_list|)
expr_stmt|;
name|peakCompactionsThrottle
operator|.
name|finishCompaction
argument_list|(
literal|"region"
argument_list|,
literal|"family"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|peakCompactionsThrottle
operator|.
name|getSleepNumber
argument_list|()
operator|==
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

