begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|visibility
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|SecurityTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|SmallTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|visibility
operator|.
name|expression
operator|.
name|ExpressionNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|visibility
operator|.
name|expression
operator|.
name|LeafExpressionNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|visibility
operator|.
name|expression
operator|.
name|NonLeafExpressionNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|visibility
operator|.
name|expression
operator|.
name|Operator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_class
annotation|@
name|Category
argument_list|(
block|{
name|SecurityTests
operator|.
name|class
block|,
name|SmallTests
operator|.
name|class
block|}
argument_list|)
specifier|public
class|class
name|TestExpressionExpander
block|{
annotation|@
name|Test
specifier|public
name|void
name|testPositiveCases
parameter_list|()
throws|throws
name|Exception
block|{
name|ExpressionExpander
name|expander
init|=
operator|new
name|ExpressionExpander
argument_list|()
decl_stmt|;
comment|// (!a) -> (!a)
name|NonLeafExpressionNode
name|exp1
init|=
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|NOT
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"a"
argument_list|)
argument_list|)
decl_stmt|;
name|ExpressionNode
name|result
init|=
name|expander
operator|.
name|expand
argument_list|(
name|exp1
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|result
operator|instanceof
name|NonLeafExpressionNode
argument_list|)
expr_stmt|;
name|NonLeafExpressionNode
name|nlResult
init|=
operator|(
name|NonLeafExpressionNode
operator|)
name|result
decl_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|NOT
argument_list|,
name|nlResult
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
comment|// (a | b) -> (a | b)
name|NonLeafExpressionNode
name|exp2
init|=
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"a"
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"b"
argument_list|)
argument_list|)
decl_stmt|;
name|result
operator|=
name|expander
operator|.
name|expand
argument_list|(
name|exp2
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|instanceof
name|NonLeafExpressionNode
argument_list|)
expr_stmt|;
name|nlResult
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|result
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
name|nlResult
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
comment|// (a& b) -> (a& b)
name|NonLeafExpressionNode
name|exp3
init|=
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"a"
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"b"
argument_list|)
argument_list|)
decl_stmt|;
name|result
operator|=
name|expander
operator|.
name|expand
argument_list|(
name|exp3
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|instanceof
name|NonLeafExpressionNode
argument_list|)
expr_stmt|;
name|nlResult
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|result
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|nlResult
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
comment|// ((a | b) | c) -> (a | b | c)
name|NonLeafExpressionNode
name|exp4
init|=
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"a"
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"b"
argument_list|)
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"c"
argument_list|)
argument_list|)
decl_stmt|;
name|result
operator|=
name|expander
operator|.
name|expand
argument_list|(
name|exp4
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|instanceof
name|NonLeafExpressionNode
argument_list|)
expr_stmt|;
name|nlResult
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|result
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
name|nlResult
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
comment|// ((a& b)& c) -> (a& b& c)
name|NonLeafExpressionNode
name|exp5
init|=
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"a"
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"b"
argument_list|)
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"c"
argument_list|)
argument_list|)
decl_stmt|;
name|result
operator|=
name|expander
operator|.
name|expand
argument_list|(
name|exp5
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|instanceof
name|NonLeafExpressionNode
argument_list|)
expr_stmt|;
name|nlResult
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|result
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|nlResult
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
comment|// (a | b)& c -> ((a& c) | (b& c))
name|NonLeafExpressionNode
name|exp6
init|=
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"a"
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"b"
argument_list|)
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"c"
argument_list|)
argument_list|)
decl_stmt|;
name|result
operator|=
name|expander
operator|.
name|expand
argument_list|(
name|exp6
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|instanceof
name|NonLeafExpressionNode
argument_list|)
expr_stmt|;
name|nlResult
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|result
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
name|nlResult
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|NonLeafExpressionNode
name|temp
init|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
comment|// (a& b) | c -> ((a& b) | c)
name|NonLeafExpressionNode
name|exp7
init|=
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"a"
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"b"
argument_list|)
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"c"
argument_list|)
argument_list|)
decl_stmt|;
name|result
operator|=
name|expander
operator|.
name|expand
argument_list|(
name|exp7
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|instanceof
name|NonLeafExpressionNode
argument_list|)
expr_stmt|;
name|nlResult
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|result
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
name|nlResult
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|nlResult
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|nlResult
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
comment|// ((a& b) | c)& d -> (((a& b)& d) | (c& d))
name|NonLeafExpressionNode
name|exp8
init|=
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|AND
argument_list|)
decl_stmt|;
name|exp8
operator|.
name|addChildExp
argument_list|(
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"a"
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"b"
argument_list|)
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"c"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|exp8
operator|.
name|addChildExp
argument_list|(
operator|new
name|LeafExpressionNode
argument_list|(
literal|"d"
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|=
name|expander
operator|.
name|expand
argument_list|(
name|exp8
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|instanceof
name|NonLeafExpressionNode
argument_list|)
expr_stmt|;
name|nlResult
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|result
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
name|nlResult
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
comment|// (a | b) | (c | d) -> (a | b | c | d)
name|NonLeafExpressionNode
name|exp9
init|=
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|OR
argument_list|)
decl_stmt|;
name|exp9
operator|.
name|addChildExp
argument_list|(
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"a"
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"b"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|exp9
operator|.
name|addChildExp
argument_list|(
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"c"
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"d"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|=
name|expander
operator|.
name|expand
argument_list|(
name|exp9
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|instanceof
name|NonLeafExpressionNode
argument_list|)
expr_stmt|;
name|nlResult
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|result
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
name|nlResult
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
comment|// (a& b)& (c& d) -> (a& b& c& d)
name|NonLeafExpressionNode
name|exp10
init|=
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|AND
argument_list|)
decl_stmt|;
name|exp10
operator|.
name|addChildExp
argument_list|(
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"a"
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"b"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|exp10
operator|.
name|addChildExp
argument_list|(
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"c"
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"d"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|=
name|expander
operator|.
name|expand
argument_list|(
name|exp10
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|instanceof
name|NonLeafExpressionNode
argument_list|)
expr_stmt|;
name|nlResult
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|result
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|nlResult
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
comment|// (a | b)& (c | d) -> ((a& c) | (a& d) | (b& c) | (b& d))
name|NonLeafExpressionNode
name|exp11
init|=
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|AND
argument_list|)
decl_stmt|;
name|exp11
operator|.
name|addChildExp
argument_list|(
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"a"
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"b"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|exp11
operator|.
name|addChildExp
argument_list|(
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"c"
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"d"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|=
name|expander
operator|.
name|expand
argument_list|(
name|exp11
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|instanceof
name|NonLeafExpressionNode
argument_list|)
expr_stmt|;
name|nlResult
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|result
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
name|nlResult
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
comment|// (((a | b) | c) | d)& e -> ((a& e) | (b& e) | (c& e) | (d& e))
name|NonLeafExpressionNode
name|exp12
init|=
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|AND
argument_list|)
decl_stmt|;
name|NonLeafExpressionNode
name|tempExp1
init|=
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"a"
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"b"
argument_list|)
argument_list|)
decl_stmt|;
name|NonLeafExpressionNode
name|tempExp2
init|=
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
name|tempExp1
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"c"
argument_list|)
argument_list|)
decl_stmt|;
name|NonLeafExpressionNode
name|tempExp3
init|=
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
name|tempExp2
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"d"
argument_list|)
argument_list|)
decl_stmt|;
name|exp12
operator|.
name|addChildExp
argument_list|(
name|tempExp3
argument_list|)
expr_stmt|;
name|exp12
operator|.
name|addChildExp
argument_list|(
operator|new
name|LeafExpressionNode
argument_list|(
literal|"e"
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|=
name|expander
operator|.
name|expand
argument_list|(
name|exp12
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|instanceof
name|NonLeafExpressionNode
argument_list|)
expr_stmt|;
name|nlResult
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|result
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
name|nlResult
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"e"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"e"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"e"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"e"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
comment|// (a | b | c)& d -> ((a& d) | (b& d) | (c& d))
name|NonLeafExpressionNode
name|exp13
init|=
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"a"
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"b"
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"c"
argument_list|)
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"d"
argument_list|)
argument_list|)
decl_stmt|;
name|result
operator|=
name|expander
operator|.
name|expand
argument_list|(
name|exp13
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|instanceof
name|NonLeafExpressionNode
argument_list|)
expr_stmt|;
name|nlResult
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|result
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
name|nlResult
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
comment|// ((a | b)& (c | d))& (e | f) -> (((a& c)& e) | ((a& c)& f) | ((a& d)& e) | ((a& d)&
comment|// f) | ((b& c)& e) | ((b& c)& f) | ((b& d)& e) | ((b& d)& f))
name|NonLeafExpressionNode
name|exp15
init|=
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|AND
argument_list|)
decl_stmt|;
name|NonLeafExpressionNode
name|temp1
init|=
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|AND
argument_list|)
decl_stmt|;
name|temp1
operator|.
name|addChildExp
argument_list|(
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"a"
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"b"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|temp1
operator|.
name|addChildExp
argument_list|(
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"c"
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"d"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|exp15
operator|.
name|addChildExp
argument_list|(
name|temp1
argument_list|)
expr_stmt|;
name|exp15
operator|.
name|addChildExp
argument_list|(
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"e"
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"f"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|=
name|expander
operator|.
name|expand
argument_list|(
name|exp15
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|instanceof
name|NonLeafExpressionNode
argument_list|)
expr_stmt|;
name|nlResult
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|result
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
name|nlResult
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|8
argument_list|,
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"e"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"f"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"e"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"f"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"e"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"f"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"e"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|7
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"f"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"d"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
comment|// !(a | b) -> ((!a)& (!b))
name|NonLeafExpressionNode
name|exp16
init|=
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|NOT
argument_list|,
operator|new
name|NonLeafExpressionNode
argument_list|(
name|Operator
operator|.
name|OR
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"a"
argument_list|)
argument_list|,
operator|new
name|LeafExpressionNode
argument_list|(
literal|"b"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|result
operator|=
name|expander
operator|.
name|expand
argument_list|(
name|exp16
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|result
operator|instanceof
name|NonLeafExpressionNode
argument_list|)
expr_stmt|;
name|nlResult
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|result
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|AND
argument_list|,
name|nlResult
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|NOT
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
name|temp
operator|=
operator|(
name|NonLeafExpressionNode
operator|)
name|nlResult
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Operator
operator|.
name|NOT
argument_list|,
name|temp
operator|.
name|getOperator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"b"
argument_list|,
operator|(
operator|(
name|LeafExpressionNode
operator|)
name|temp
operator|.
name|getChildExps
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getIdentifier
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

