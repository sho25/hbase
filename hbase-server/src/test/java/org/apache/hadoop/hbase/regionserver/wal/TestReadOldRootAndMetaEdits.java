begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|wal
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseTestingUtility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HRegionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|KeyValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|MediumTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|RegionServerTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|wal
operator|.
name|WAL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|wal
operator|.
name|WALFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|wal
operator|.
name|WALKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|wal
operator|.
name|WALProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_comment
comment|/**  * Tests to read old ROOT, Meta edits.  */
end_comment

begin_class
annotation|@
name|Category
argument_list|(
block|{
name|RegionServerTests
operator|.
name|class
block|,
name|MediumTests
operator|.
name|class
block|}
argument_list|)
specifier|public
class|class
name|TestReadOldRootAndMetaEdits
block|{
specifier|private
specifier|final
specifier|static
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|TestReadOldRootAndMetaEdits
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|HBaseTestingUtility
name|TEST_UTIL
init|=
operator|new
name|HBaseTestingUtility
argument_list|()
decl_stmt|;
specifier|private
specifier|static
name|Configuration
name|conf
decl_stmt|;
specifier|private
specifier|static
name|FileSystem
name|fs
decl_stmt|;
specifier|private
specifier|static
name|Path
name|dir
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|setupBeforeClass
parameter_list|()
throws|throws
name|Exception
block|{
name|conf
operator|=
name|TEST_UTIL
operator|.
name|getConfiguration
argument_list|()
expr_stmt|;
name|conf
operator|.
name|setClass
argument_list|(
literal|"hbase.regionserver.hlog.writer.impl"
argument_list|,
name|SequenceFileLogWriter
operator|.
name|class
argument_list|,
name|WALProvider
operator|.
name|Writer
operator|.
name|class
argument_list|)
expr_stmt|;
name|fs
operator|=
name|TEST_UTIL
operator|.
name|getTestFileSystem
argument_list|()
expr_stmt|;
name|dir
operator|=
operator|new
name|Path
argument_list|(
name|TEST_UTIL
operator|.
name|createRootDir
argument_list|()
argument_list|,
literal|"testReadOldRootAndMetaEdits"
argument_list|)
expr_stmt|;
name|fs
operator|.
name|mkdirs
argument_list|(
name|dir
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|tearDownAfterClass
parameter_list|()
throws|throws
name|Exception
block|{   }
comment|/**    * Inserts three waledits in the wal file, and reads them back. The first edit is of a regular    * table, second waledit is for the ROOT table (it will be ignored while reading),    * and last waledit is for the hbase:meta table, which will be linked to the new system:meta table.    * @throws IOException    */
annotation|@
name|Test
specifier|public
name|void
name|testReadOldRootAndMetaEdits
parameter_list|()
throws|throws
name|IOException
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"testReadOldRootAndMetaEdits"
argument_list|)
expr_stmt|;
comment|// kv list to be used for all WALEdits.
name|byte
index|[]
name|row
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"row"
argument_list|)
decl_stmt|;
name|KeyValue
name|kv
init|=
operator|new
name|KeyValue
argument_list|(
name|row
argument_list|,
name|row
argument_list|,
name|row
argument_list|,
name|row
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|KeyValue
argument_list|>
name|kvs
init|=
operator|new
name|ArrayList
argument_list|<
name|KeyValue
argument_list|>
argument_list|()
decl_stmt|;
name|kvs
operator|.
name|add
argument_list|(
name|kv
argument_list|)
expr_stmt|;
name|WALProvider
operator|.
name|Writer
name|writer
init|=
literal|null
decl_stmt|;
name|WAL
operator|.
name|Reader
name|reader
init|=
literal|null
decl_stmt|;
comment|// a regular table
name|TableName
name|t
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"t"
argument_list|)
decl_stmt|;
name|HRegionInfo
name|tRegionInfo
init|=
literal|null
decl_stmt|;
name|int
name|logCount
init|=
literal|0
decl_stmt|;
name|long
name|timestamp
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|Path
name|path
init|=
operator|new
name|Path
argument_list|(
name|dir
argument_list|,
literal|"t"
argument_list|)
decl_stmt|;
try|try
block|{
name|tRegionInfo
operator|=
operator|new
name|HRegionInfo
argument_list|(
name|t
argument_list|,
name|HConstants
operator|.
name|EMPTY_START_ROW
argument_list|,
name|HConstants
operator|.
name|EMPTY_END_ROW
argument_list|)
expr_stmt|;
name|WAL
operator|.
name|Entry
name|tEntry
init|=
name|createAEntry
argument_list|(
operator|new
name|HLogKey
argument_list|(
name|tRegionInfo
operator|.
name|getEncodedNameAsBytes
argument_list|()
argument_list|,
name|t
argument_list|,
operator|++
name|logCount
argument_list|,
name|timestamp
argument_list|,
name|HConstants
operator|.
name|DEFAULT_CLUSTER_ID
argument_list|)
argument_list|,
name|kvs
argument_list|)
decl_stmt|;
comment|// create a old root edit (-ROOT-).
name|WAL
operator|.
name|Entry
name|rootEntry
init|=
name|createAEntry
argument_list|(
operator|new
name|HLogKey
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|TableName
operator|.
name|OLD_ROOT_STR
argument_list|)
argument_list|,
name|TableName
operator|.
name|OLD_ROOT_TABLE_NAME
argument_list|,
operator|++
name|logCount
argument_list|,
name|timestamp
argument_list|,
name|HConstants
operator|.
name|DEFAULT_CLUSTER_ID
argument_list|)
argument_list|,
name|kvs
argument_list|)
decl_stmt|;
comment|// create a old meta edit (hbase:meta).
name|WAL
operator|.
name|Entry
name|oldMetaEntry
init|=
name|createAEntry
argument_list|(
operator|new
name|HLogKey
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|TableName
operator|.
name|OLD_META_STR
argument_list|)
argument_list|,
name|TableName
operator|.
name|OLD_META_TABLE_NAME
argument_list|,
operator|++
name|logCount
argument_list|,
name|timestamp
argument_list|,
name|HConstants
operator|.
name|DEFAULT_CLUSTER_ID
argument_list|)
argument_list|,
name|kvs
argument_list|)
decl_stmt|;
comment|// write above entries
name|writer
operator|=
name|WALFactory
operator|.
name|createWALWriter
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|writer
operator|.
name|append
argument_list|(
name|tEntry
argument_list|)
expr_stmt|;
name|writer
operator|.
name|append
argument_list|(
name|rootEntry
argument_list|)
expr_stmt|;
name|writer
operator|.
name|append
argument_list|(
name|oldMetaEntry
argument_list|)
expr_stmt|;
comment|// sync/close the writer
name|writer
operator|.
name|sync
argument_list|()
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
comment|// read the log and see things are okay.
name|reader
operator|=
name|WALFactory
operator|.
name|createReader
argument_list|(
name|fs
argument_list|,
name|path
argument_list|,
name|conf
argument_list|)
expr_stmt|;
name|WAL
operator|.
name|Entry
name|entry
init|=
name|reader
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|getTablename
argument_list|()
operator|.
name|equals
argument_list|(
name|t
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Bytes
operator|.
name|toString
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|getEncodedRegionName
argument_list|()
argument_list|)
argument_list|,
name|Bytes
operator|.
name|toString
argument_list|(
name|tRegionInfo
operator|.
name|getEncodedNameAsBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// read the ROOT waledit, but that will be ignored, and hbase:meta waledit will be read instead.
name|entry
operator|=
name|reader
operator|.
name|next
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
operator|.
name|getTablename
argument_list|()
argument_list|,
name|TableName
operator|.
name|META_TABLE_NAME
argument_list|)
expr_stmt|;
comment|// should reach end of log
name|assertNull
argument_list|(
name|reader
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|writer
operator|!=
literal|null
condition|)
block|{
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|reader
operator|!=
literal|null
condition|)
block|{
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
comment|/**    * Creates a WALEdit for the passed KeyValues and returns a WALProvider.Entry instance composed of    * the WALEdit and passed WALKey.    * @return WAL.Entry instance for the passed WALKey and KeyValues    */
specifier|private
name|WAL
operator|.
name|Entry
name|createAEntry
parameter_list|(
name|WALKey
name|walKey
parameter_list|,
name|List
argument_list|<
name|KeyValue
argument_list|>
name|kvs
parameter_list|)
block|{
name|WALEdit
name|edit
init|=
operator|new
name|WALEdit
argument_list|()
decl_stmt|;
for|for
control|(
name|KeyValue
name|kv
range|:
name|kvs
control|)
name|edit
operator|.
name|add
argument_list|(
name|kv
argument_list|)
expr_stmt|;
return|return
operator|new
name|WAL
operator|.
name|Entry
argument_list|(
name|walKey
argument_list|,
name|edit
argument_list|)
return|;
block|}
block|}
end_class

end_unit

