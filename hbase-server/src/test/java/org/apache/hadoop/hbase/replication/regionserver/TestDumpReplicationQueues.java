begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|replication
operator|.
name|regionserver
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseClassTestRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|ReplicationTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|SmallTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|zookeeper
operator|.
name|RecoverableZooKeeper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|zookeeper
operator|.
name|ZKWatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|zookeeper
operator|.
name|ZNodePaths
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|ClassRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_comment
comment|/**  * Tests for DumpReplicationQueues tool  */
end_comment

begin_class
annotation|@
name|Category
argument_list|(
block|{
name|ReplicationTests
operator|.
name|class
block|,
name|SmallTests
operator|.
name|class
block|}
argument_list|)
specifier|public
class|class
name|TestDumpReplicationQueues
block|{
annotation|@
name|ClassRule
specifier|public
specifier|static
specifier|final
name|HBaseClassTestRule
name|CLASS_RULE
init|=
name|HBaseClassTestRule
operator|.
name|forClass
argument_list|(
name|TestDumpReplicationQueues
operator|.
name|class
argument_list|)
decl_stmt|;
comment|/**    * Makes sure dumpQueues returns wals znodes ordered chronologically.    * @throws Exception if dumpqueues finds any error while handling list of znodes.    */
annotation|@
name|Test
specifier|public
name|void
name|testDumpReplicationReturnsWalSorted
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|config
init|=
name|HBaseConfiguration
operator|.
name|create
argument_list|()
decl_stmt|;
name|ZKWatcher
name|zkWatcherMock
init|=
name|mock
argument_list|(
name|ZKWatcher
operator|.
name|class
argument_list|)
decl_stmt|;
name|ZNodePaths
name|zNodePath
init|=
operator|new
name|ZNodePaths
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|RecoverableZooKeeper
name|recoverableZooKeeperMock
init|=
name|mock
argument_list|(
name|RecoverableZooKeeper
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|zkWatcherMock
operator|.
name|getRecoverableZooKeeper
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|recoverableZooKeeperMock
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|zkWatcherMock
operator|.
name|getZNodePaths
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|zNodePath
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|nodes
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|String
name|server
init|=
literal|"rs1,60030,"
operator|+
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|nodes
operator|.
name|add
argument_list|(
name|server
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|recoverableZooKeeperMock
operator|.
name|getChildren
argument_list|(
literal|"/hbase/rs"
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|nodes
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|recoverableZooKeeperMock
operator|.
name|getChildren
argument_list|(
literal|"/hbase/replication/rs"
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|nodes
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|queuesIds
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|queuesIds
operator|.
name|add
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|recoverableZooKeeperMock
operator|.
name|getChildren
argument_list|(
literal|"/hbase/replication/rs/"
operator|+
name|server
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|queuesIds
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|wals
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|wals
operator|.
name|add
argument_list|(
literal|"rs1%2C60964%2C1549394085556.1549394101427"
argument_list|)
expr_stmt|;
name|wals
operator|.
name|add
argument_list|(
literal|"rs1%2C60964%2C1549394085556.1549394101426"
argument_list|)
expr_stmt|;
name|wals
operator|.
name|add
argument_list|(
literal|"rs1%2C60964%2C1549394085556.1549394101428"
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|recoverableZooKeeperMock
operator|.
name|getChildren
argument_list|(
literal|"/hbase/replication/rs/"
operator|+
name|server
operator|+
literal|"/1"
argument_list|,
literal|null
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|wals
argument_list|)
expr_stmt|;
name|DumpReplicationQueues
name|dumpQueues
init|=
operator|new
name|DumpReplicationQueues
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|peerIds
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|peerIds
operator|.
name|add
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|dumpQueues
operator|.
name|setConf
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|String
name|dump
init|=
name|dumpQueues
operator|.
name|dumpQueues
argument_list|(
name|zkWatcherMock
argument_list|,
name|peerIds
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|String
index|[]
name|parsedDump
init|=
name|dump
operator|.
name|split
argument_list|(
literal|"Replication position for"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Parsed dump should have 4 parts."
argument_list|,
literal|4
argument_list|,
name|parsedDump
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"First wal should be rs1%2C60964%2C1549394085556.1549394101426, but got: "
operator|+
name|parsedDump
index|[
literal|1
index|]
argument_list|,
name|parsedDump
index|[
literal|1
index|]
operator|.
name|indexOf
argument_list|(
literal|"rs1%2C60964%2C1549394085556.1549394101426"
argument_list|)
operator|>=
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Second wal should be rs1%2C60964%2C1549394085556.1549394101427, but got: "
operator|+
name|parsedDump
index|[
literal|2
index|]
argument_list|,
name|parsedDump
index|[
literal|2
index|]
operator|.
name|indexOf
argument_list|(
literal|"rs1%2C60964%2C1549394085556.1549394101427"
argument_list|)
operator|>=
literal|0
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Third wal should be rs1%2C60964%2C1549394085556.1549394101428, but got: "
operator|+
name|parsedDump
index|[
literal|3
index|]
argument_list|,
name|parsedDump
index|[
literal|3
index|]
operator|.
name|indexOf
argument_list|(
literal|"rs1%2C60964%2C1549394085556.1549394101428"
argument_list|)
operator|>=
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

