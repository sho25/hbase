begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CompletableFuture
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CountDownLatch
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|atomic
operator|.
name|AtomicLong
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseClassTestRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|backoff
operator|.
name|ClientBackoffPolicy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|ClientTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|MediumTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|EnvironmentEdgeManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|FutureUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|ClassRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|io
operator|.
name|Closeables
import|;
end_import

begin_class
annotation|@
name|Category
argument_list|(
block|{
name|MediumTests
operator|.
name|class
block|,
name|ClientTests
operator|.
name|class
block|}
argument_list|)
specifier|public
class|class
name|TestAsyncClientPushback
extends|extends
name|ClientPushbackTestBase
block|{
annotation|@
name|ClassRule
specifier|public
specifier|static
specifier|final
name|HBaseClassTestRule
name|CLASS_RULE
init|=
name|HBaseClassTestRule
operator|.
name|forClass
argument_list|(
name|TestAsyncClientPushback
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|AsyncConnectionImpl
name|conn
decl_stmt|;
specifier|private
name|AsyncBufferedMutator
name|mutator
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|conn
operator|=
operator|(
name|AsyncConnectionImpl
operator|)
name|ConnectionFactory
operator|.
name|createAsyncConnection
argument_list|(
name|UTIL
operator|.
name|getConfiguration
argument_list|()
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
name|mutator
operator|=
name|conn
operator|.
name|getBufferedMutator
argument_list|(
name|tableName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|IOException
block|{
name|Closeables
operator|.
name|close
argument_list|(
name|mutator
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|Closeables
operator|.
name|close
argument_list|(
name|conn
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|ClientBackoffPolicy
name|getBackoffPolicy
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|conn
operator|.
name|getBackoffPolicy
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|protected
name|ServerStatisticTracker
name|getStatisticsTracker
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|conn
operator|.
name|getStatisticsTracker
argument_list|()
operator|.
name|get
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|protected
name|MetricsConnection
name|getConnectionMetrics
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|conn
operator|.
name|getConnectionMetrics
argument_list|()
operator|.
name|get
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|mutate
parameter_list|(
name|Put
name|put
parameter_list|)
throws|throws
name|IOException
block|{
name|CompletableFuture
argument_list|<
name|?
argument_list|>
name|future
init|=
name|mutator
operator|.
name|mutate
argument_list|(
name|put
argument_list|)
decl_stmt|;
name|mutator
operator|.
name|flush
argument_list|()
expr_stmt|;
name|future
operator|.
name|join
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|mutate
parameter_list|(
name|Put
name|put
parameter_list|,
name|AtomicLong
name|endTime
parameter_list|,
name|CountDownLatch
name|latch
parameter_list|)
throws|throws
name|IOException
block|{
name|FutureUtils
operator|.
name|addListener
argument_list|(
name|mutator
operator|.
name|mutate
argument_list|(
name|put
argument_list|)
argument_list|,
parameter_list|(
name|r
parameter_list|,
name|e
parameter_list|)
lambda|->
block|{
name|endTime
operator|.
name|set
argument_list|(
name|EnvironmentEdgeManager
operator|.
name|currentTime
argument_list|()
argument_list|)
expr_stmt|;
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
name|mutator
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|mutateRow
parameter_list|(
name|RowMutations
name|mutations
parameter_list|)
throws|throws
name|IOException
block|{
name|conn
operator|.
name|getTable
argument_list|(
name|tableName
argument_list|)
operator|.
name|mutateRow
argument_list|(
name|mutations
argument_list|)
operator|.
name|join
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

