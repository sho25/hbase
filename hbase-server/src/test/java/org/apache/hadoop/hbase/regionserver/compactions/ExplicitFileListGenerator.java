begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|compactions
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|HStoreFile
import|;
end_import

begin_comment
comment|/**  * Class to create list of mock storefiles of specified length.  * This is great for testing edge cases.  */
end_comment

begin_class
class|class
name|ExplicitFileListGenerator
extends|extends
name|StoreFileListGenerator
block|{
comment|/** The explicit files size lists to return. */
specifier|private
name|int
index|[]
index|[]
name|fileSizes
init|=
operator|new
name|int
index|[]
index|[]
block|{
block|{
literal|1000
block|,
literal|350
block|,
literal|200
block|,
literal|100
block|,
literal|20
block|,
literal|10
block|,
literal|10
block|}
block|,
block|{
literal|1000
block|,
literal|450
block|,
literal|200
block|,
literal|100
block|,
literal|20
block|,
literal|10
block|,
literal|10
block|}
block|,
block|{
literal|1000
block|,
literal|550
block|,
literal|200
block|,
literal|100
block|,
literal|20
block|,
literal|10
block|,
literal|10
block|}
block|,
block|{
literal|1000
block|,
literal|650
block|,
literal|200
block|,
literal|100
block|,
literal|20
block|,
literal|10
block|,
literal|10
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
literal|600
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
literal|600
block|,
literal|600
block|,
literal|600
block|,
literal|600
block|,
literal|600
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|}
block|,
block|{
literal|1
block|,
literal|1
block|,
literal|600
block|,
literal|600
block|,
literal|600
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|,
literal|1
block|}
block|,
block|{
literal|1000
block|,
literal|250
block|,
literal|25
block|,
literal|25
block|,
literal|25
block|,
literal|25
block|,
literal|25
block|,
literal|25
block|}
block|,
block|{
literal|25
block|,
literal|25
block|,
literal|25
block|,
literal|25
block|,
literal|25
block|,
literal|25
block|,
literal|500
block|}
block|,
block|{
literal|1000
block|,
literal|1000
block|,
literal|1000
block|,
literal|1000
block|,
literal|900
block|}
block|,
block|{
literal|107
block|,
literal|50
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|}
block|,
block|{
literal|2000
block|,
literal|107
block|,
literal|50
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|,
literal|10
block|}
block|,
block|{
literal|9
block|,
literal|8
block|,
literal|7
block|,
literal|6
block|,
literal|5
block|,
literal|4
block|,
literal|3
block|,
literal|2
block|,
literal|1
block|}
block|,
block|{
literal|11
block|,
literal|18
block|,
literal|9
block|,
literal|8
block|,
literal|7
block|,
literal|6
block|,
literal|5
block|,
literal|4
block|,
literal|3
block|,
literal|2
block|,
literal|1
block|}
block|,
block|{
literal|110
block|,
literal|18
block|,
literal|18
block|,
literal|18
block|,
literal|18
block|,
literal|9
block|,
literal|8
block|,
literal|7
block|,
literal|6
block|,
literal|5
block|,
literal|4
block|,
literal|3
block|,
literal|2
block|,
literal|1
block|}
block|,
block|{
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|4
block|,
literal|5
block|,
literal|6
block|,
literal|7
block|,
literal|8
block|,
literal|9
block|,
literal|10
block|,
literal|11
block|,
literal|12
block|,
literal|13
block|,
literal|15
block|}
block|}
decl_stmt|;
name|ExplicitFileListGenerator
parameter_list|()
block|{
name|super
argument_list|(
name|ExplicitFileListGenerator
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
specifier|final
name|Iterator
argument_list|<
name|List
argument_list|<
name|HStoreFile
argument_list|>
argument_list|>
name|iterator
parameter_list|()
block|{
return|return
operator|new
name|Iterator
argument_list|<
name|List
argument_list|<
name|HStoreFile
argument_list|>
argument_list|>
argument_list|()
block|{
specifier|private
name|int
name|nextIndex
init|=
literal|0
decl_stmt|;
annotation|@
name|Override
specifier|public
name|boolean
name|hasNext
parameter_list|()
block|{
return|return
name|nextIndex
operator|<
name|fileSizes
operator|.
name|length
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|HStoreFile
argument_list|>
name|next
parameter_list|()
block|{
name|List
argument_list|<
name|HStoreFile
argument_list|>
name|files
init|=
name|createStoreFileList
argument_list|(
name|fileSizes
index|[
name|nextIndex
index|]
argument_list|)
decl_stmt|;
name|nextIndex
operator|+=
literal|1
expr_stmt|;
return|return
name|files
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|remove
parameter_list|()
block|{       }
block|}
return|;
block|}
block|}
end_class

end_unit

