begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RpcCallback
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RpcController
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseClassTestRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|JMXListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|MasterCoprocessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|MasterObserver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|RegionCoprocessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|RegionObserver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AccessControlProtos
operator|.
name|AccessControlService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AccessControlProtos
operator|.
name|CheckPermissionsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AccessControlProtos
operator|.
name|CheckPermissionsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AccessControlProtos
operator|.
name|GetUserPermissionsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AccessControlProtos
operator|.
name|GetUserPermissionsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AccessControlProtos
operator|.
name|GrantRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AccessControlProtos
operator|.
name|GrantResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AccessControlProtos
operator|.
name|RevokeRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|AccessControlProtos
operator|.
name|RevokeResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|VisibilityLabelsProtos
operator|.
name|GetAuthsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|VisibilityLabelsProtos
operator|.
name|GetAuthsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|VisibilityLabelsProtos
operator|.
name|ListLabelsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|VisibilityLabelsProtos
operator|.
name|ListLabelsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|VisibilityLabelsProtos
operator|.
name|SetAuthsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|VisibilityLabelsProtos
operator|.
name|VisibilityLabelsRequest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|VisibilityLabelsProtos
operator|.
name|VisibilityLabelsResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|VisibilityLabelsProtos
operator|.
name|VisibilityLabelsService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|access
operator|.
name|AccessController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|visibility
operator|.
name|VisibilityController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|SmallTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|ClassRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_comment
comment|/**  * Tests that the MasterRpcServices is correctly searching for implementations of the  * Coprocessor Service and not just the "default" implementations of those services.  */
end_comment

begin_class
annotation|@
name|Category
argument_list|(
block|{
name|SmallTests
operator|.
name|class
block|}
argument_list|)
specifier|public
class|class
name|TestMasterCoprocessorServices
block|{
annotation|@
name|ClassRule
specifier|public
specifier|static
specifier|final
name|HBaseClassTestRule
name|CLASS_RULE
init|=
name|HBaseClassTestRule
operator|.
name|forClass
argument_list|(
name|TestMasterCoprocessorServices
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
class|class
name|MockAccessController
implements|implements
name|AccessControlService
operator|.
name|Interface
implements|,
name|MasterCoprocessor
implements|,
name|RegionCoprocessor
implements|,
name|MasterObserver
implements|,
name|RegionObserver
block|{
annotation|@
name|Override
specifier|public
name|void
name|grant
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|GrantRequest
name|request
parameter_list|,
name|RpcCallback
argument_list|<
name|GrantResponse
argument_list|>
name|done
parameter_list|)
block|{}
annotation|@
name|Override
specifier|public
name|void
name|revoke
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|RevokeRequest
name|request
parameter_list|,
name|RpcCallback
argument_list|<
name|RevokeResponse
argument_list|>
name|done
parameter_list|)
block|{}
annotation|@
name|Override
specifier|public
name|void
name|getUserPermissions
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|GetUserPermissionsRequest
name|request
parameter_list|,
name|RpcCallback
argument_list|<
name|GetUserPermissionsResponse
argument_list|>
name|done
parameter_list|)
block|{}
annotation|@
name|Override
specifier|public
name|void
name|checkPermissions
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|CheckPermissionsRequest
name|request
parameter_list|,
name|RpcCallback
argument_list|<
name|CheckPermissionsResponse
argument_list|>
name|done
parameter_list|)
block|{}
block|}
specifier|private
specifier|static
class|class
name|MockVisibilityController
implements|implements
name|VisibilityLabelsService
operator|.
name|Interface
implements|,
name|MasterCoprocessor
implements|,
name|RegionCoprocessor
implements|,
name|MasterObserver
implements|,
name|RegionObserver
block|{
annotation|@
name|Override
specifier|public
name|void
name|addLabels
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|VisibilityLabelsRequest
name|request
parameter_list|,
name|RpcCallback
argument_list|<
name|VisibilityLabelsResponse
argument_list|>
name|done
parameter_list|)
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|setAuths
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|SetAuthsRequest
name|request
parameter_list|,
name|RpcCallback
argument_list|<
name|VisibilityLabelsResponse
argument_list|>
name|done
parameter_list|)
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|clearAuths
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|SetAuthsRequest
name|request
parameter_list|,
name|RpcCallback
argument_list|<
name|VisibilityLabelsResponse
argument_list|>
name|done
parameter_list|)
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|getAuths
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|GetAuthsRequest
name|request
parameter_list|,
name|RpcCallback
argument_list|<
name|GetAuthsResponse
argument_list|>
name|done
parameter_list|)
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|listLabels
parameter_list|(
name|RpcController
name|controller
parameter_list|,
name|ListLabelsRequest
name|request
parameter_list|,
name|RpcCallback
argument_list|<
name|ListLabelsResponse
argument_list|>
name|done
parameter_list|)
block|{     }
block|}
specifier|private
name|MasterRpcServices
name|masterServices
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|masterServices
operator|=
name|mock
argument_list|(
name|MasterRpcServices
operator|.
name|class
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|masterServices
operator|.
name|hasAccessControlServiceCoprocessor
argument_list|(
name|any
argument_list|(
name|MasterCoprocessorHost
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenCallRealMethod
argument_list|()
expr_stmt|;
name|when
argument_list|(
name|masterServices
operator|.
name|hasVisibilityLabelsServiceCoprocessor
argument_list|(
name|any
argument_list|(
name|MasterCoprocessorHost
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenCallRealMethod
argument_list|()
expr_stmt|;
name|when
argument_list|(
name|masterServices
operator|.
name|checkCoprocessorWithService
argument_list|(
name|any
argument_list|(
name|List
operator|.
name|class
argument_list|)
argument_list|,
name|any
argument_list|(
name|Class
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenCallRealMethod
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAccessControlServices
parameter_list|()
block|{
name|MasterCoprocessor
name|defaultImpl
init|=
operator|new
name|AccessController
argument_list|()
decl_stmt|;
name|MasterCoprocessor
name|customImpl
init|=
operator|new
name|MockAccessController
argument_list|()
decl_stmt|;
name|MasterCoprocessor
name|unrelatedImpl
init|=
operator|new
name|JMXListener
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|masterServices
operator|.
name|checkCoprocessorWithService
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|defaultImpl
argument_list|)
argument_list|,
name|AccessControlService
operator|.
name|Interface
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|masterServices
operator|.
name|checkCoprocessorWithService
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|customImpl
argument_list|)
argument_list|,
name|AccessControlService
operator|.
name|Interface
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|masterServices
operator|.
name|checkCoprocessorWithService
argument_list|(
name|Collections
operator|.
name|emptyList
argument_list|()
argument_list|,
name|AccessControlService
operator|.
name|Interface
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|masterServices
operator|.
name|checkCoprocessorWithService
argument_list|(
literal|null
argument_list|,
name|AccessControlService
operator|.
name|Interface
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|masterServices
operator|.
name|checkCoprocessorWithService
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|unrelatedImpl
argument_list|)
argument_list|,
name|AccessControlService
operator|.
name|Interface
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|masterServices
operator|.
name|checkCoprocessorWithService
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|unrelatedImpl
argument_list|,
name|customImpl
argument_list|)
argument_list|,
name|AccessControlService
operator|.
name|Interface
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|masterServices
operator|.
name|checkCoprocessorWithService
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|unrelatedImpl
argument_list|,
name|defaultImpl
argument_list|)
argument_list|,
name|AccessControlService
operator|.
name|Interface
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testVisibilityLabelServices
parameter_list|()
block|{
name|MasterCoprocessor
name|defaultImpl
init|=
operator|new
name|VisibilityController
argument_list|()
decl_stmt|;
name|MasterCoprocessor
name|customImpl
init|=
operator|new
name|MockVisibilityController
argument_list|()
decl_stmt|;
name|MasterCoprocessor
name|unrelatedImpl
init|=
operator|new
name|JMXListener
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|masterServices
operator|.
name|checkCoprocessorWithService
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|defaultImpl
argument_list|)
argument_list|,
name|VisibilityLabelsService
operator|.
name|Interface
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|masterServices
operator|.
name|checkCoprocessorWithService
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|customImpl
argument_list|)
argument_list|,
name|VisibilityLabelsService
operator|.
name|Interface
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|masterServices
operator|.
name|checkCoprocessorWithService
argument_list|(
name|Collections
operator|.
name|emptyList
argument_list|()
argument_list|,
name|VisibilityLabelsService
operator|.
name|Interface
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|masterServices
operator|.
name|checkCoprocessorWithService
argument_list|(
literal|null
argument_list|,
name|VisibilityLabelsService
operator|.
name|Interface
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|masterServices
operator|.
name|checkCoprocessorWithService
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|unrelatedImpl
argument_list|)
argument_list|,
name|VisibilityLabelsService
operator|.
name|Interface
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|masterServices
operator|.
name|checkCoprocessorWithService
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|unrelatedImpl
argument_list|,
name|customImpl
argument_list|)
argument_list|,
name|VisibilityLabelsService
operator|.
name|Interface
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|masterServices
operator|.
name|checkCoprocessorWithService
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|unrelatedImpl
argument_list|,
name|defaultImpl
argument_list|)
argument_list|,
name|VisibilityLabelsService
operator|.
name|Interface
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

