begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|quotas
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|Cell
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|CellScanner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseClassTestRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseTestingUtility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|NamespaceDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Delete
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Put
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|ResultScanner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|quotas
operator|.
name|SpaceQuotaSnapshot
operator|.
name|SpaceQuotaStatus
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|MasterTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|MediumTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|ClassRule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TestName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|HashMultimap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Multimap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnsafeByteOperations
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|ProtobufUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|QuotaProtos
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|QuotaProtos
operator|.
name|Quotas
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|shaded
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|QuotaProtos
operator|.
name|Throttle
import|;
end_import

begin_comment
comment|/**  * Test the quota table helpers (e.g. CRUD operations)  */
end_comment

begin_class
annotation|@
name|Category
argument_list|(
block|{
name|MasterTests
operator|.
name|class
block|,
name|MediumTests
operator|.
name|class
block|}
argument_list|)
specifier|public
class|class
name|TestQuotaTableUtil
block|{
annotation|@
name|ClassRule
specifier|public
specifier|static
specifier|final
name|HBaseClassTestRule
name|CLASS_RULE
init|=
name|HBaseClassTestRule
operator|.
name|forClass
argument_list|(
name|TestQuotaTableUtil
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|HBaseTestingUtility
name|TEST_UTIL
init|=
operator|new
name|HBaseTestingUtility
argument_list|()
decl_stmt|;
specifier|private
name|Connection
name|connection
decl_stmt|;
specifier|private
name|int
name|tableNameCounter
decl_stmt|;
annotation|@
name|Rule
specifier|public
name|TestName
name|testName
init|=
operator|new
name|TestName
argument_list|()
decl_stmt|;
annotation|@
name|Rule
specifier|public
name|TestName
name|name
init|=
operator|new
name|TestName
argument_list|()
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|setUpBeforeClass
parameter_list|()
throws|throws
name|Exception
block|{
name|TEST_UTIL
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setBoolean
argument_list|(
name|QuotaUtil
operator|.
name|QUOTA_CONF_KEY
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|TEST_UTIL
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setInt
argument_list|(
name|QuotaCache
operator|.
name|REFRESH_CONF_KEY
argument_list|,
literal|2000
argument_list|)
expr_stmt|;
name|TEST_UTIL
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setInt
argument_list|(
literal|"hbase.hstore.compactionThreshold"
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|TEST_UTIL
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setInt
argument_list|(
literal|"hbase.regionserver.msginterval"
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|TEST_UTIL
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setInt
argument_list|(
literal|"hbase.client.pause"
argument_list|,
literal|250
argument_list|)
expr_stmt|;
name|TEST_UTIL
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setInt
argument_list|(
name|HConstants
operator|.
name|HBASE_CLIENT_RETRIES_NUMBER
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|TEST_UTIL
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setBoolean
argument_list|(
literal|"hbase.master.enabletable.roundrobin"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|TEST_UTIL
operator|.
name|startMiniCluster
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|TEST_UTIL
operator|.
name|waitTableAvailable
argument_list|(
name|QuotaTableUtil
operator|.
name|QUOTA_TABLE_NAME
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|tearDownAfterClass
parameter_list|()
throws|throws
name|Exception
block|{
name|TEST_UTIL
operator|.
name|shutdownMiniCluster
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|IOException
block|{
name|this
operator|.
name|connection
operator|=
name|ConnectionFactory
operator|.
name|createConnection
argument_list|(
name|TEST_UTIL
operator|.
name|getConfiguration
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|tableNameCounter
operator|=
literal|0
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|after
parameter_list|()
throws|throws
name|IOException
block|{
name|this
operator|.
name|connection
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeleteSnapshots
parameter_list|()
throws|throws
name|Exception
block|{
name|TableName
name|tn
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
try|try
init|(
name|Table
name|t
init|=
name|connection
operator|.
name|getTable
argument_list|(
name|QuotaTableUtil
operator|.
name|QUOTA_TABLE_NAME
argument_list|)
init|)
block|{
name|Quotas
name|quota
init|=
name|Quotas
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSpace
argument_list|(
name|QuotaProtos
operator|.
name|SpaceQuota
operator|.
name|newBuilder
argument_list|()
operator|.
name|setSoftLimit
argument_list|(
literal|7L
argument_list|)
operator|.
name|setViolationPolicy
argument_list|(
name|QuotaProtos
operator|.
name|SpaceViolationPolicy
operator|.
name|NO_WRITES
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|QuotaUtil
operator|.
name|addTableQuota
argument_list|(
name|connection
argument_list|,
name|tn
argument_list|,
name|quota
argument_list|)
expr_stmt|;
name|String
name|snapshotName
init|=
name|name
operator|.
name|getMethodName
argument_list|()
operator|+
literal|"_snapshot"
decl_stmt|;
name|t
operator|.
name|put
argument_list|(
name|QuotaTableUtil
operator|.
name|createPutForSnapshotSize
argument_list|(
name|tn
argument_list|,
name|snapshotName
argument_list|,
literal|3L
argument_list|)
argument_list|)
expr_stmt|;
name|t
operator|.
name|put
argument_list|(
name|QuotaTableUtil
operator|.
name|createPutForSnapshotSize
argument_list|(
name|tn
argument_list|,
name|snapshotName
argument_list|,
literal|5L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|QuotaTableUtil
operator|.
name|getObservedSnapshotSizes
argument_list|(
name|connection
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Delete
argument_list|>
name|deletes
init|=
name|QuotaTableUtil
operator|.
name|createDeletesForExistingTableSnapshotSizes
argument_list|(
name|connection
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|deletes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|t
operator|.
name|delete
argument_list|(
name|deletes
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|QuotaTableUtil
operator|.
name|getObservedSnapshotSizes
argument_list|(
name|connection
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|ns
init|=
name|name
operator|.
name|getMethodName
argument_list|()
decl_stmt|;
name|t
operator|.
name|put
argument_list|(
name|QuotaTableUtil
operator|.
name|createPutForNamespaceSnapshotSize
argument_list|(
name|ns
argument_list|,
literal|5L
argument_list|)
argument_list|)
expr_stmt|;
name|t
operator|.
name|put
argument_list|(
name|QuotaTableUtil
operator|.
name|createPutForNamespaceSnapshotSize
argument_list|(
name|ns
argument_list|,
literal|3L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3L
argument_list|,
name|QuotaTableUtil
operator|.
name|getNamespaceSnapshotSize
argument_list|(
name|connection
argument_list|,
name|ns
argument_list|)
argument_list|)
expr_stmt|;
name|deletes
operator|=
name|QuotaTableUtil
operator|.
name|createDeletesForExistingNamespaceSnapshotSizes
argument_list|(
name|connection
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|deletes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|t
operator|.
name|delete
argument_list|(
name|deletes
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0L
argument_list|,
name|QuotaTableUtil
operator|.
name|getNamespaceSnapshotSize
argument_list|(
name|connection
argument_list|,
name|ns
argument_list|)
argument_list|)
expr_stmt|;
name|t
operator|.
name|put
argument_list|(
name|QuotaTableUtil
operator|.
name|createPutForSnapshotSize
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"t1"
argument_list|)
argument_list|,
literal|"s1"
argument_list|,
literal|3L
argument_list|)
argument_list|)
expr_stmt|;
name|t
operator|.
name|put
argument_list|(
name|QuotaTableUtil
operator|.
name|createPutForSnapshotSize
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"t2"
argument_list|)
argument_list|,
literal|"s2"
argument_list|,
literal|3L
argument_list|)
argument_list|)
expr_stmt|;
name|t
operator|.
name|put
argument_list|(
name|QuotaTableUtil
operator|.
name|createPutForSnapshotSize
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"t3"
argument_list|)
argument_list|,
literal|"s3"
argument_list|,
literal|3L
argument_list|)
argument_list|)
expr_stmt|;
name|t
operator|.
name|put
argument_list|(
name|QuotaTableUtil
operator|.
name|createPutForSnapshotSize
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"t4"
argument_list|)
argument_list|,
literal|"s4"
argument_list|,
literal|3L
argument_list|)
argument_list|)
expr_stmt|;
name|t
operator|.
name|put
argument_list|(
name|QuotaTableUtil
operator|.
name|createPutForSnapshotSize
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"t1"
argument_list|)
argument_list|,
literal|"s5"
argument_list|,
literal|3L
argument_list|)
argument_list|)
expr_stmt|;
name|t
operator|.
name|put
argument_list|(
name|QuotaTableUtil
operator|.
name|createPutForNamespaceSnapshotSize
argument_list|(
literal|"ns1"
argument_list|,
literal|3L
argument_list|)
argument_list|)
expr_stmt|;
name|t
operator|.
name|put
argument_list|(
name|QuotaTableUtil
operator|.
name|createPutForNamespaceSnapshotSize
argument_list|(
literal|"ns2"
argument_list|,
literal|3L
argument_list|)
argument_list|)
expr_stmt|;
name|t
operator|.
name|put
argument_list|(
name|QuotaTableUtil
operator|.
name|createPutForNamespaceSnapshotSize
argument_list|(
literal|"ns3"
argument_list|,
literal|3L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|QuotaTableUtil
operator|.
name|getTableSnapshots
argument_list|(
name|connection
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|QuotaTableUtil
operator|.
name|getNamespaceSnapshots
argument_list|(
name|connection
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Multimap
argument_list|<
name|TableName
argument_list|,
name|String
argument_list|>
name|tableSnapshotEntriesToRemove
init|=
name|HashMultimap
operator|.
name|create
argument_list|()
decl_stmt|;
name|tableSnapshotEntriesToRemove
operator|.
name|put
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"t1"
argument_list|)
argument_list|,
literal|"s1"
argument_list|)
expr_stmt|;
name|tableSnapshotEntriesToRemove
operator|.
name|put
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"t3"
argument_list|)
argument_list|,
literal|"s3"
argument_list|)
expr_stmt|;
name|tableSnapshotEntriesToRemove
operator|.
name|put
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"t4"
argument_list|)
argument_list|,
literal|"s4"
argument_list|)
expr_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|namespaceSnapshotEntriesToRemove
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|namespaceSnapshotEntriesToRemove
operator|.
name|add
argument_list|(
literal|"ns2"
argument_list|)
expr_stmt|;
name|namespaceSnapshotEntriesToRemove
operator|.
name|add
argument_list|(
literal|"ns1"
argument_list|)
expr_stmt|;
name|deletes
operator|=
name|QuotaTableUtil
operator|.
name|createDeletesForExistingTableSnapshotSizes
argument_list|(
name|tableSnapshotEntriesToRemove
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|deletes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|deletes
operator|=
name|QuotaTableUtil
operator|.
name|createDeletesForExistingNamespaceSnapshotSizes
argument_list|(
name|namespaceSnapshotEntriesToRemove
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|deletes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTableQuotaUtil
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|TableName
name|tableName
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
name|Quotas
name|quota
init|=
name|Quotas
operator|.
name|newBuilder
argument_list|()
operator|.
name|setThrottle
argument_list|(
name|Throttle
operator|.
name|newBuilder
argument_list|()
operator|.
name|setReqNum
argument_list|(
name|ProtobufUtil
operator|.
name|toTimedQuota
argument_list|(
literal|1000
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|,
name|QuotaScope
operator|.
name|MACHINE
argument_list|)
argument_list|)
operator|.
name|setWriteNum
argument_list|(
name|ProtobufUtil
operator|.
name|toTimedQuota
argument_list|(
literal|600
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|,
name|QuotaScope
operator|.
name|MACHINE
argument_list|)
argument_list|)
operator|.
name|setReadSize
argument_list|(
name|ProtobufUtil
operator|.
name|toTimedQuota
argument_list|(
literal|8192
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|,
name|QuotaScope
operator|.
name|MACHINE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// Add user quota and verify it
name|QuotaUtil
operator|.
name|addTableQuota
argument_list|(
name|this
operator|.
name|connection
argument_list|,
name|tableName
argument_list|,
name|quota
argument_list|)
expr_stmt|;
name|Quotas
name|resQuota
init|=
name|QuotaUtil
operator|.
name|getTableQuota
argument_list|(
name|this
operator|.
name|connection
argument_list|,
name|tableName
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|quota
argument_list|,
name|resQuota
argument_list|)
expr_stmt|;
comment|// Remove user quota and verify it
name|QuotaUtil
operator|.
name|deleteTableQuota
argument_list|(
name|this
operator|.
name|connection
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
name|resQuota
operator|=
name|QuotaUtil
operator|.
name|getTableQuota
argument_list|(
name|this
operator|.
name|connection
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|resQuota
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNamespaceQuotaUtil
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|namespace
init|=
literal|"testNamespaceQuotaUtilNS"
decl_stmt|;
name|Quotas
name|quota
init|=
name|Quotas
operator|.
name|newBuilder
argument_list|()
operator|.
name|setThrottle
argument_list|(
name|Throttle
operator|.
name|newBuilder
argument_list|()
operator|.
name|setReqNum
argument_list|(
name|ProtobufUtil
operator|.
name|toTimedQuota
argument_list|(
literal|1000
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|,
name|QuotaScope
operator|.
name|MACHINE
argument_list|)
argument_list|)
operator|.
name|setWriteNum
argument_list|(
name|ProtobufUtil
operator|.
name|toTimedQuota
argument_list|(
literal|600
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|,
name|QuotaScope
operator|.
name|MACHINE
argument_list|)
argument_list|)
operator|.
name|setReadSize
argument_list|(
name|ProtobufUtil
operator|.
name|toTimedQuota
argument_list|(
literal|8192
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|,
name|QuotaScope
operator|.
name|MACHINE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// Add user quota and verify it
name|QuotaUtil
operator|.
name|addNamespaceQuota
argument_list|(
name|this
operator|.
name|connection
argument_list|,
name|namespace
argument_list|,
name|quota
argument_list|)
expr_stmt|;
name|Quotas
name|resQuota
init|=
name|QuotaUtil
operator|.
name|getNamespaceQuota
argument_list|(
name|this
operator|.
name|connection
argument_list|,
name|namespace
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|quota
argument_list|,
name|resQuota
argument_list|)
expr_stmt|;
comment|// Remove user quota and verify it
name|QuotaUtil
operator|.
name|deleteNamespaceQuota
argument_list|(
name|this
operator|.
name|connection
argument_list|,
name|namespace
argument_list|)
expr_stmt|;
name|resQuota
operator|=
name|QuotaUtil
operator|.
name|getNamespaceQuota
argument_list|(
name|this
operator|.
name|connection
argument_list|,
name|namespace
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|resQuota
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUserQuotaUtil
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|TableName
name|tableName
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|name
operator|.
name|getMethodName
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|String
name|namespace
init|=
literal|"testNS"
decl_stmt|;
specifier|final
name|String
name|user
init|=
literal|"testUser"
decl_stmt|;
name|Quotas
name|quotaNamespace
init|=
name|Quotas
operator|.
name|newBuilder
argument_list|()
operator|.
name|setThrottle
argument_list|(
name|Throttle
operator|.
name|newBuilder
argument_list|()
operator|.
name|setReqNum
argument_list|(
name|ProtobufUtil
operator|.
name|toTimedQuota
argument_list|(
literal|50000
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|,
name|QuotaScope
operator|.
name|MACHINE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Quotas
name|quotaTable
init|=
name|Quotas
operator|.
name|newBuilder
argument_list|()
operator|.
name|setThrottle
argument_list|(
name|Throttle
operator|.
name|newBuilder
argument_list|()
operator|.
name|setReqNum
argument_list|(
name|ProtobufUtil
operator|.
name|toTimedQuota
argument_list|(
literal|1000
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|,
name|QuotaScope
operator|.
name|MACHINE
argument_list|)
argument_list|)
operator|.
name|setWriteNum
argument_list|(
name|ProtobufUtil
operator|.
name|toTimedQuota
argument_list|(
literal|600
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|,
name|QuotaScope
operator|.
name|MACHINE
argument_list|)
argument_list|)
operator|.
name|setReadSize
argument_list|(
name|ProtobufUtil
operator|.
name|toTimedQuota
argument_list|(
literal|10000
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|,
name|QuotaScope
operator|.
name|MACHINE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Quotas
name|quota
init|=
name|Quotas
operator|.
name|newBuilder
argument_list|()
operator|.
name|setThrottle
argument_list|(
name|Throttle
operator|.
name|newBuilder
argument_list|()
operator|.
name|setReqSize
argument_list|(
name|ProtobufUtil
operator|.
name|toTimedQuota
argument_list|(
literal|8192
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|,
name|QuotaScope
operator|.
name|MACHINE
argument_list|)
argument_list|)
operator|.
name|setWriteSize
argument_list|(
name|ProtobufUtil
operator|.
name|toTimedQuota
argument_list|(
literal|4096
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|,
name|QuotaScope
operator|.
name|MACHINE
argument_list|)
argument_list|)
operator|.
name|setReadNum
argument_list|(
name|ProtobufUtil
operator|.
name|toTimedQuota
argument_list|(
literal|1000
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|,
name|QuotaScope
operator|.
name|MACHINE
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|// Add user global quota
name|QuotaUtil
operator|.
name|addUserQuota
argument_list|(
name|this
operator|.
name|connection
argument_list|,
name|user
argument_list|,
name|quota
argument_list|)
expr_stmt|;
name|Quotas
name|resQuota
init|=
name|QuotaUtil
operator|.
name|getUserQuota
argument_list|(
name|this
operator|.
name|connection
argument_list|,
name|user
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|quota
argument_list|,
name|resQuota
argument_list|)
expr_stmt|;
comment|// Add user quota for table
name|QuotaUtil
operator|.
name|addUserQuota
argument_list|(
name|this
operator|.
name|connection
argument_list|,
name|user
argument_list|,
name|tableName
argument_list|,
name|quotaTable
argument_list|)
expr_stmt|;
name|Quotas
name|resQuotaTable
init|=
name|QuotaUtil
operator|.
name|getUserQuota
argument_list|(
name|this
operator|.
name|connection
argument_list|,
name|user
argument_list|,
name|tableName
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|quotaTable
argument_list|,
name|resQuotaTable
argument_list|)
expr_stmt|;
comment|// Add user quota for namespace
name|QuotaUtil
operator|.
name|addUserQuota
argument_list|(
name|this
operator|.
name|connection
argument_list|,
name|user
argument_list|,
name|namespace
argument_list|,
name|quotaNamespace
argument_list|)
expr_stmt|;
name|Quotas
name|resQuotaNS
init|=
name|QuotaUtil
operator|.
name|getUserQuota
argument_list|(
name|this
operator|.
name|connection
argument_list|,
name|user
argument_list|,
name|namespace
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|quotaNamespace
argument_list|,
name|resQuotaNS
argument_list|)
expr_stmt|;
comment|// Delete user global quota
name|QuotaUtil
operator|.
name|deleteUserQuota
argument_list|(
name|this
operator|.
name|connection
argument_list|,
name|user
argument_list|)
expr_stmt|;
name|resQuota
operator|=
name|QuotaUtil
operator|.
name|getUserQuota
argument_list|(
name|this
operator|.
name|connection
argument_list|,
name|user
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|resQuota
argument_list|)
expr_stmt|;
comment|// Delete user quota for table
name|QuotaUtil
operator|.
name|deleteUserQuota
argument_list|(
name|this
operator|.
name|connection
argument_list|,
name|user
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
name|resQuotaTable
operator|=
name|QuotaUtil
operator|.
name|getUserQuota
argument_list|(
name|this
operator|.
name|connection
argument_list|,
name|user
argument_list|,
name|tableName
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|resQuotaTable
argument_list|)
expr_stmt|;
comment|// Delete user quota for namespace
name|QuotaUtil
operator|.
name|deleteUserQuota
argument_list|(
name|this
operator|.
name|connection
argument_list|,
name|user
argument_list|,
name|namespace
argument_list|)
expr_stmt|;
name|resQuotaNS
operator|=
name|QuotaUtil
operator|.
name|getUserQuota
argument_list|(
name|this
operator|.
name|connection
argument_list|,
name|user
argument_list|,
name|namespace
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|resQuotaNS
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSerDeViolationPolicies
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|TableName
name|tn1
init|=
name|getUniqueTableName
argument_list|()
decl_stmt|;
specifier|final
name|SpaceQuotaSnapshot
name|snapshot1
init|=
operator|new
name|SpaceQuotaSnapshot
argument_list|(
operator|new
name|SpaceQuotaStatus
argument_list|(
name|SpaceViolationPolicy
operator|.
name|DISABLE
argument_list|)
argument_list|,
literal|512L
argument_list|,
literal|1024L
argument_list|)
decl_stmt|;
specifier|final
name|TableName
name|tn2
init|=
name|getUniqueTableName
argument_list|()
decl_stmt|;
specifier|final
name|SpaceQuotaSnapshot
name|snapshot2
init|=
operator|new
name|SpaceQuotaSnapshot
argument_list|(
operator|new
name|SpaceQuotaStatus
argument_list|(
name|SpaceViolationPolicy
operator|.
name|NO_INSERTS
argument_list|)
argument_list|,
literal|512L
argument_list|,
literal|1024L
argument_list|)
decl_stmt|;
specifier|final
name|TableName
name|tn3
init|=
name|getUniqueTableName
argument_list|()
decl_stmt|;
specifier|final
name|SpaceQuotaSnapshot
name|snapshot3
init|=
operator|new
name|SpaceQuotaSnapshot
argument_list|(
operator|new
name|SpaceQuotaStatus
argument_list|(
name|SpaceViolationPolicy
operator|.
name|NO_WRITES
argument_list|)
argument_list|,
literal|512L
argument_list|,
literal|1024L
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Put
argument_list|>
name|puts
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|puts
operator|.
name|add
argument_list|(
name|QuotaTableUtil
operator|.
name|createPutForSpaceSnapshot
argument_list|(
name|tn1
argument_list|,
name|snapshot1
argument_list|)
argument_list|)
expr_stmt|;
name|puts
operator|.
name|add
argument_list|(
name|QuotaTableUtil
operator|.
name|createPutForSpaceSnapshot
argument_list|(
name|tn2
argument_list|,
name|snapshot2
argument_list|)
argument_list|)
expr_stmt|;
name|puts
operator|.
name|add
argument_list|(
name|QuotaTableUtil
operator|.
name|createPutForSpaceSnapshot
argument_list|(
name|tn3
argument_list|,
name|snapshot3
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|TableName
argument_list|,
name|SpaceQuotaSnapshot
argument_list|>
name|expectedPolicies
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|expectedPolicies
operator|.
name|put
argument_list|(
name|tn1
argument_list|,
name|snapshot1
argument_list|)
expr_stmt|;
name|expectedPolicies
operator|.
name|put
argument_list|(
name|tn2
argument_list|,
name|snapshot2
argument_list|)
expr_stmt|;
name|expectedPolicies
operator|.
name|put
argument_list|(
name|tn3
argument_list|,
name|snapshot3
argument_list|)
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|TableName
argument_list|,
name|SpaceQuotaSnapshot
argument_list|>
name|actualPolicies
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
try|try
init|(
name|Table
name|quotaTable
init|=
name|connection
operator|.
name|getTable
argument_list|(
name|QuotaUtil
operator|.
name|QUOTA_TABLE_NAME
argument_list|)
init|)
block|{
name|quotaTable
operator|.
name|put
argument_list|(
name|puts
argument_list|)
expr_stmt|;
name|ResultScanner
name|scanner
init|=
name|quotaTable
operator|.
name|getScanner
argument_list|(
name|QuotaTableUtil
operator|.
name|makeQuotaSnapshotScan
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|Result
name|r
range|:
name|scanner
control|)
block|{
name|QuotaTableUtil
operator|.
name|extractQuotaSnapshot
argument_list|(
name|r
argument_list|,
name|actualPolicies
argument_list|)
expr_stmt|;
block|}
name|scanner
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|expectedPolicies
argument_list|,
name|actualPolicies
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSerdeTableSnapshotSizes
parameter_list|()
throws|throws
name|Exception
block|{
name|TableName
name|tn1
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"tn1"
argument_list|)
decl_stmt|;
name|TableName
name|tn2
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"tn2"
argument_list|)
decl_stmt|;
try|try
init|(
name|Table
name|quotaTable
init|=
name|connection
operator|.
name|getTable
argument_list|(
name|QuotaTableUtil
operator|.
name|QUOTA_TABLE_NAME
argument_list|)
init|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
name|i
operator|++
control|)
block|{
name|Put
name|p
init|=
name|QuotaTableUtil
operator|.
name|createPutForSnapshotSize
argument_list|(
name|tn1
argument_list|,
literal|"tn1snap"
operator|+
name|i
argument_list|,
literal|1024L
operator|*
operator|(
literal|1
operator|+
name|i
operator|)
argument_list|)
decl_stmt|;
name|quotaTable
operator|.
name|put
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
name|i
operator|++
control|)
block|{
name|Put
name|p
init|=
name|QuotaTableUtil
operator|.
name|createPutForSnapshotSize
argument_list|(
name|tn2
argument_list|,
literal|"tn2snap"
operator|+
name|i
argument_list|,
literal|2048L
operator|*
operator|(
literal|1
operator|+
name|i
operator|)
argument_list|)
decl_stmt|;
name|quotaTable
operator|.
name|put
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
name|verifyTableSnapshotSize
argument_list|(
name|quotaTable
argument_list|,
name|tn1
argument_list|,
literal|"tn1snap0"
argument_list|,
literal|1024L
argument_list|)
expr_stmt|;
name|verifyTableSnapshotSize
argument_list|(
name|quotaTable
argument_list|,
name|tn1
argument_list|,
literal|"tn1snap1"
argument_list|,
literal|2048L
argument_list|)
expr_stmt|;
name|verifyTableSnapshotSize
argument_list|(
name|quotaTable
argument_list|,
name|tn1
argument_list|,
literal|"tn1snap2"
argument_list|,
literal|3072L
argument_list|)
expr_stmt|;
name|verifyTableSnapshotSize
argument_list|(
name|quotaTable
argument_list|,
name|tn2
argument_list|,
literal|"tn2snap0"
argument_list|,
literal|2048L
argument_list|)
expr_stmt|;
name|verifyTableSnapshotSize
argument_list|(
name|quotaTable
argument_list|,
name|tn2
argument_list|,
literal|"tn2snap1"
argument_list|,
literal|4096L
argument_list|)
expr_stmt|;
name|verifyTableSnapshotSize
argument_list|(
name|quotaTable
argument_list|,
name|tn2
argument_list|,
literal|"tn2snap2"
argument_list|,
literal|6144L
argument_list|)
expr_stmt|;
name|cleanUpSnapshotSizes
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadNamespaceSnapshotSizes
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|ns1
init|=
literal|"ns1"
decl_stmt|;
name|String
name|ns2
init|=
literal|"ns2"
decl_stmt|;
name|String
name|defaultNs
init|=
name|NamespaceDescriptor
operator|.
name|DEFAULT_NAMESPACE_NAME_STR
decl_stmt|;
try|try
init|(
name|Table
name|quotaTable
init|=
name|connection
operator|.
name|getTable
argument_list|(
name|QuotaTableUtil
operator|.
name|QUOTA_TABLE_NAME
argument_list|)
init|)
block|{
name|quotaTable
operator|.
name|put
argument_list|(
name|QuotaTableUtil
operator|.
name|createPutForNamespaceSnapshotSize
argument_list|(
name|ns1
argument_list|,
literal|1024L
argument_list|)
argument_list|)
expr_stmt|;
name|quotaTable
operator|.
name|put
argument_list|(
name|QuotaTableUtil
operator|.
name|createPutForNamespaceSnapshotSize
argument_list|(
name|ns2
argument_list|,
literal|2048L
argument_list|)
argument_list|)
expr_stmt|;
name|quotaTable
operator|.
name|put
argument_list|(
name|QuotaTableUtil
operator|.
name|createPutForNamespaceSnapshotSize
argument_list|(
name|defaultNs
argument_list|,
literal|8192L
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1024L
argument_list|,
name|QuotaTableUtil
operator|.
name|getNamespaceSnapshotSize
argument_list|(
name|connection
argument_list|,
name|ns1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2048L
argument_list|,
name|QuotaTableUtil
operator|.
name|getNamespaceSnapshotSize
argument_list|(
name|connection
argument_list|,
name|ns2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|8192L
argument_list|,
name|QuotaTableUtil
operator|.
name|getNamespaceSnapshotSize
argument_list|(
name|connection
argument_list|,
name|defaultNs
argument_list|)
argument_list|)
expr_stmt|;
name|cleanUpSnapshotSizes
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|TableName
name|getUniqueTableName
parameter_list|()
block|{
return|return
name|TableName
operator|.
name|valueOf
argument_list|(
name|testName
operator|.
name|getMethodName
argument_list|()
operator|+
literal|"_"
operator|+
name|tableNameCounter
operator|++
argument_list|)
return|;
block|}
specifier|private
name|void
name|verifyTableSnapshotSize
parameter_list|(
name|Table
name|quotaTable
parameter_list|,
name|TableName
name|tn
parameter_list|,
name|String
name|snapshotName
parameter_list|,
name|long
name|expectedSize
parameter_list|)
throws|throws
name|IOException
block|{
name|Result
name|r
init|=
name|quotaTable
operator|.
name|get
argument_list|(
name|QuotaTableUtil
operator|.
name|makeGetForSnapshotSize
argument_list|(
name|tn
argument_list|,
name|snapshotName
argument_list|)
argument_list|)
decl_stmt|;
name|CellScanner
name|cs
init|=
name|r
operator|.
name|cellScanner
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|cs
operator|.
name|advance
argument_list|()
argument_list|)
expr_stmt|;
name|Cell
name|c
init|=
name|cs
operator|.
name|current
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedSize
argument_list|,
name|QuotaProtos
operator|.
name|SpaceQuotaSnapshot
operator|.
name|parseFrom
argument_list|(
name|UnsafeByteOperations
operator|.
name|unsafeWrap
argument_list|(
name|c
operator|.
name|getValueArray
argument_list|()
argument_list|,
name|c
operator|.
name|getValueOffset
argument_list|()
argument_list|,
name|c
operator|.
name|getValueLength
argument_list|()
argument_list|)
argument_list|)
operator|.
name|getQuotaUsage
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|cs
operator|.
name|advance
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|cleanUpSnapshotSizes
parameter_list|()
throws|throws
name|IOException
block|{
try|try
init|(
name|Table
name|t
init|=
name|connection
operator|.
name|getTable
argument_list|(
name|QuotaTableUtil
operator|.
name|QUOTA_TABLE_NAME
argument_list|)
init|)
block|{
name|QuotaTableUtil
operator|.
name|createDeletesForExistingTableSnapshotSizes
argument_list|(
name|connection
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Delete
argument_list|>
name|deletes
init|=
name|QuotaTableUtil
operator|.
name|createDeletesForExistingNamespaceSnapshotSizes
argument_list|(
name|connection
argument_list|)
decl_stmt|;
name|deletes
operator|.
name|addAll
argument_list|(
name|QuotaTableUtil
operator|.
name|createDeletesForExistingTableSnapshotSizes
argument_list|(
name|connection
argument_list|)
argument_list|)
expr_stmt|;
name|t
operator|.
name|delete
argument_list|(
name|deletes
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

