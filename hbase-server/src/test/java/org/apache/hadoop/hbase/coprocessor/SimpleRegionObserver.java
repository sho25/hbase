begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright 2010 The Apache Software Foundation  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertArrayEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|NavigableSet
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|KeyValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Get
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Put
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Delete
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Increment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Scan
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|HRegion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|InternalScanner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|KeyValueScanner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|RegionScanner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|ScanType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|Store
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|StoreFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|wal
operator|.
name|WALEdit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Pair
import|;
end_import

begin_comment
comment|/**  * A sample region observer that tests the RegionObserver interface.  * It works with TestRegionObserverInterface to provide the test case.  */
end_comment

begin_class
specifier|public
class|class
name|SimpleRegionObserver
extends|extends
name|BaseRegionObserver
block|{
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|TestRegionObserverInterface
operator|.
name|class
argument_list|)
decl_stmt|;
name|boolean
name|beforeDelete
init|=
literal|true
decl_stmt|;
name|boolean
name|scannerOpened
init|=
literal|false
decl_stmt|;
name|boolean
name|hadPreOpen
decl_stmt|;
name|boolean
name|hadPostOpen
decl_stmt|;
name|boolean
name|hadPreClose
decl_stmt|;
name|boolean
name|hadPostClose
decl_stmt|;
name|boolean
name|hadPreFlush
decl_stmt|;
name|boolean
name|hadPreFlushScannerOpen
decl_stmt|;
name|boolean
name|hadPostFlush
decl_stmt|;
name|boolean
name|hadPreSplit
decl_stmt|;
name|boolean
name|hadPostSplit
decl_stmt|;
name|boolean
name|hadPreCompactSelect
decl_stmt|;
name|boolean
name|hadPostCompactSelect
decl_stmt|;
name|boolean
name|hadPreCompactScanner
decl_stmt|;
name|boolean
name|hadPreCompact
decl_stmt|;
name|boolean
name|hadPostCompact
decl_stmt|;
name|boolean
name|hadPreGet
init|=
literal|false
decl_stmt|;
name|boolean
name|hadPostGet
init|=
literal|false
decl_stmt|;
name|boolean
name|hadPrePut
init|=
literal|false
decl_stmt|;
name|boolean
name|hadPostPut
init|=
literal|false
decl_stmt|;
name|boolean
name|hadPreDeleted
init|=
literal|false
decl_stmt|;
name|boolean
name|hadPostDeleted
init|=
literal|false
decl_stmt|;
name|boolean
name|hadPreGetClosestRowBefore
init|=
literal|false
decl_stmt|;
name|boolean
name|hadPostGetClosestRowBefore
init|=
literal|false
decl_stmt|;
name|boolean
name|hadPreIncrement
init|=
literal|false
decl_stmt|;
name|boolean
name|hadPostIncrement
init|=
literal|false
decl_stmt|;
name|boolean
name|hadPreWALRestored
init|=
literal|false
decl_stmt|;
name|boolean
name|hadPostWALRestored
init|=
literal|false
decl_stmt|;
name|boolean
name|hadPreScannerNext
init|=
literal|false
decl_stmt|;
name|boolean
name|hadPostScannerNext
init|=
literal|false
decl_stmt|;
name|boolean
name|hadPreScannerClose
init|=
literal|false
decl_stmt|;
name|boolean
name|hadPostScannerClose
init|=
literal|false
decl_stmt|;
name|boolean
name|hadPreScannerOpen
init|=
literal|false
decl_stmt|;
name|boolean
name|hadPreStoreScannerOpen
init|=
literal|false
decl_stmt|;
name|boolean
name|hadPostScannerOpen
init|=
literal|false
decl_stmt|;
name|boolean
name|hadPreBulkLoadHFile
init|=
literal|false
decl_stmt|;
name|boolean
name|hadPostBulkLoadHFile
init|=
literal|false
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|preOpen
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|)
block|{
name|hadPreOpen
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|postOpen
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|)
block|{
name|hadPostOpen
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|boolean
name|wasOpened
parameter_list|()
block|{
return|return
name|hadPreOpen
operator|&&
name|hadPostOpen
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|preClose
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
name|boolean
name|abortRequested
parameter_list|)
block|{
name|hadPreClose
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|postClose
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
name|boolean
name|abortRequested
parameter_list|)
block|{
name|hadPostClose
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|boolean
name|wasClosed
parameter_list|()
block|{
return|return
name|hadPreClose
operator|&&
name|hadPostClose
return|;
block|}
annotation|@
name|Override
specifier|public
name|InternalScanner
name|preFlush
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
name|Store
name|store
parameter_list|,
name|InternalScanner
name|scanner
parameter_list|)
block|{
name|hadPreFlush
operator|=
literal|true
expr_stmt|;
return|return
name|scanner
return|;
block|}
annotation|@
name|Override
specifier|public
name|InternalScanner
name|preFlushScannerOpen
parameter_list|(
specifier|final
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
name|Store
name|store
parameter_list|,
name|KeyValueScanner
name|memstoreScanner
parameter_list|,
name|InternalScanner
name|s
parameter_list|)
throws|throws
name|IOException
block|{
name|hadPreFlushScannerOpen
operator|=
literal|true
expr_stmt|;
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|postFlush
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
name|Store
name|store
parameter_list|,
name|StoreFile
name|resultFile
parameter_list|)
block|{
name|hadPostFlush
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|boolean
name|wasFlushed
parameter_list|()
block|{
return|return
name|hadPreFlush
operator|&&
name|hadPostFlush
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|preSplit
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|)
block|{
name|hadPreSplit
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|postSplit
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
name|HRegion
name|l
parameter_list|,
name|HRegion
name|r
parameter_list|)
block|{
name|hadPostSplit
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|boolean
name|wasSplit
parameter_list|()
block|{
return|return
name|hadPreSplit
operator|&&
name|hadPostSplit
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|preCompactSelection
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
name|Store
name|store
parameter_list|,
name|List
argument_list|<
name|StoreFile
argument_list|>
name|candidates
parameter_list|)
block|{
name|hadPreCompactSelect
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|postCompactSelection
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
name|Store
name|store
parameter_list|,
name|ImmutableList
argument_list|<
name|StoreFile
argument_list|>
name|selected
parameter_list|)
block|{
name|hadPostCompactSelect
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|InternalScanner
name|preCompact
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|e
parameter_list|,
name|Store
name|store
parameter_list|,
name|InternalScanner
name|scanner
parameter_list|)
block|{
name|hadPreCompact
operator|=
literal|true
expr_stmt|;
return|return
name|scanner
return|;
block|}
annotation|@
name|Override
specifier|public
name|InternalScanner
name|preCompactScannerOpen
parameter_list|(
specifier|final
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
name|Store
name|store
parameter_list|,
name|List
argument_list|<
name|?
extends|extends
name|KeyValueScanner
argument_list|>
name|scanners
parameter_list|,
name|ScanType
name|scanType
parameter_list|,
name|long
name|earliestPutTs
parameter_list|,
name|InternalScanner
name|s
parameter_list|)
throws|throws
name|IOException
block|{
name|hadPreCompactScanner
operator|=
literal|true
expr_stmt|;
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|postCompact
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|e
parameter_list|,
name|Store
name|store
parameter_list|,
name|StoreFile
name|resultFile
parameter_list|)
block|{
name|hadPostCompact
operator|=
literal|true
expr_stmt|;
block|}
specifier|public
name|boolean
name|wasCompacted
parameter_list|()
block|{
return|return
name|hadPreCompact
operator|&&
name|hadPostCompact
return|;
block|}
annotation|@
name|Override
specifier|public
name|RegionScanner
name|preScannerOpen
parameter_list|(
specifier|final
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
specifier|final
name|Scan
name|scan
parameter_list|,
specifier|final
name|RegionScanner
name|s
parameter_list|)
throws|throws
name|IOException
block|{
name|hadPreScannerOpen
operator|=
literal|true
expr_stmt|;
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|KeyValueScanner
name|preStoreScannerOpen
parameter_list|(
specifier|final
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
specifier|final
name|Store
name|store
parameter_list|,
specifier|final
name|Scan
name|scan
parameter_list|,
specifier|final
name|NavigableSet
argument_list|<
name|byte
index|[]
argument_list|>
name|targetCols
parameter_list|,
specifier|final
name|KeyValueScanner
name|s
parameter_list|)
throws|throws
name|IOException
block|{
name|hadPreStoreScannerOpen
operator|=
literal|true
expr_stmt|;
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|RegionScanner
name|postScannerOpen
parameter_list|(
specifier|final
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
specifier|final
name|Scan
name|scan
parameter_list|,
specifier|final
name|RegionScanner
name|s
parameter_list|)
throws|throws
name|IOException
block|{
name|hadPostScannerOpen
operator|=
literal|true
expr_stmt|;
return|return
name|s
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|preScannerNext
parameter_list|(
specifier|final
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
specifier|final
name|InternalScanner
name|s
parameter_list|,
specifier|final
name|List
argument_list|<
name|Result
argument_list|>
name|results
parameter_list|,
specifier|final
name|int
name|limit
parameter_list|,
specifier|final
name|boolean
name|hasMore
parameter_list|)
throws|throws
name|IOException
block|{
name|hadPreScannerNext
operator|=
literal|true
expr_stmt|;
return|return
name|hasMore
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|postScannerNext
parameter_list|(
specifier|final
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
specifier|final
name|InternalScanner
name|s
parameter_list|,
specifier|final
name|List
argument_list|<
name|Result
argument_list|>
name|results
parameter_list|,
specifier|final
name|int
name|limit
parameter_list|,
specifier|final
name|boolean
name|hasMore
parameter_list|)
throws|throws
name|IOException
block|{
name|hadPostScannerNext
operator|=
literal|true
expr_stmt|;
return|return
name|hasMore
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|preScannerClose
parameter_list|(
specifier|final
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
specifier|final
name|InternalScanner
name|s
parameter_list|)
throws|throws
name|IOException
block|{
name|hadPreScannerClose
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|postScannerClose
parameter_list|(
specifier|final
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
specifier|final
name|InternalScanner
name|s
parameter_list|)
throws|throws
name|IOException
block|{
name|hadPostScannerClose
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|preGet
parameter_list|(
specifier|final
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
specifier|final
name|Get
name|get
parameter_list|,
specifier|final
name|List
argument_list|<
name|KeyValue
argument_list|>
name|results
parameter_list|)
throws|throws
name|IOException
block|{
name|RegionCoprocessorEnvironment
name|e
init|=
name|c
operator|.
name|getEnvironment
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|e
operator|.
name|getRegion
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|get
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|results
argument_list|)
expr_stmt|;
name|hadPreGet
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|postGet
parameter_list|(
specifier|final
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
specifier|final
name|Get
name|get
parameter_list|,
specifier|final
name|List
argument_list|<
name|KeyValue
argument_list|>
name|results
parameter_list|)
block|{
name|RegionCoprocessorEnvironment
name|e
init|=
name|c
operator|.
name|getEnvironment
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|e
operator|.
name|getRegion
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|get
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|results
argument_list|)
expr_stmt|;
if|if
condition|(
name|Arrays
operator|.
name|equals
argument_list|(
name|e
operator|.
name|getRegion
argument_list|()
operator|.
name|getTableDesc
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|TestRegionObserverInterface
operator|.
name|TEST_TABLE
argument_list|)
condition|)
block|{
name|boolean
name|foundA
init|=
literal|false
decl_stmt|;
name|boolean
name|foundB
init|=
literal|false
decl_stmt|;
name|boolean
name|foundC
init|=
literal|false
decl_stmt|;
for|for
control|(
name|KeyValue
name|kv
range|:
name|results
control|)
block|{
if|if
condition|(
name|Bytes
operator|.
name|equals
argument_list|(
name|kv
operator|.
name|getFamily
argument_list|()
argument_list|,
name|TestRegionObserverInterface
operator|.
name|A
argument_list|)
condition|)
block|{
name|foundA
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|Bytes
operator|.
name|equals
argument_list|(
name|kv
operator|.
name|getFamily
argument_list|()
argument_list|,
name|TestRegionObserverInterface
operator|.
name|B
argument_list|)
condition|)
block|{
name|foundB
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|Bytes
operator|.
name|equals
argument_list|(
name|kv
operator|.
name|getFamily
argument_list|()
argument_list|,
name|TestRegionObserverInterface
operator|.
name|C
argument_list|)
condition|)
block|{
name|foundC
operator|=
literal|true
expr_stmt|;
block|}
block|}
name|assertTrue
argument_list|(
name|foundA
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|foundB
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|foundC
argument_list|)
expr_stmt|;
block|}
name|hadPostGet
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|prePut
parameter_list|(
specifier|final
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
specifier|final
name|Put
name|put
parameter_list|,
specifier|final
name|WALEdit
name|edit
parameter_list|,
specifier|final
name|boolean
name|writeToWAL
parameter_list|)
throws|throws
name|IOException
block|{
name|Map
argument_list|<
name|byte
index|[]
argument_list|,
name|List
argument_list|<
name|KeyValue
argument_list|>
argument_list|>
name|familyMap
init|=
name|put
operator|.
name|getFamilyMap
argument_list|()
decl_stmt|;
name|RegionCoprocessorEnvironment
name|e
init|=
name|c
operator|.
name|getEnvironment
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|e
operator|.
name|getRegion
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|familyMap
argument_list|)
expr_stmt|;
if|if
condition|(
name|Arrays
operator|.
name|equals
argument_list|(
name|e
operator|.
name|getRegion
argument_list|()
operator|.
name|getTableDesc
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|TestRegionObserverInterface
operator|.
name|TEST_TABLE
argument_list|)
condition|)
block|{
name|List
argument_list|<
name|KeyValue
argument_list|>
name|kvs
init|=
name|familyMap
operator|.
name|get
argument_list|(
name|TestRegionObserverInterface
operator|.
name|A
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|kvs
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|kvs
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Bytes
operator|.
name|equals
argument_list|(
name|kvs
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getQualifier
argument_list|()
argument_list|,
name|TestRegionObserverInterface
operator|.
name|A
argument_list|)
argument_list|)
expr_stmt|;
name|kvs
operator|=
name|familyMap
operator|.
name|get
argument_list|(
name|TestRegionObserverInterface
operator|.
name|B
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|kvs
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|kvs
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Bytes
operator|.
name|equals
argument_list|(
name|kvs
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getQualifier
argument_list|()
argument_list|,
name|TestRegionObserverInterface
operator|.
name|B
argument_list|)
argument_list|)
expr_stmt|;
name|kvs
operator|=
name|familyMap
operator|.
name|get
argument_list|(
name|TestRegionObserverInterface
operator|.
name|C
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|kvs
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|kvs
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Bytes
operator|.
name|equals
argument_list|(
name|kvs
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getQualifier
argument_list|()
argument_list|,
name|TestRegionObserverInterface
operator|.
name|C
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|hadPrePut
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|postPut
parameter_list|(
specifier|final
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
specifier|final
name|Put
name|put
parameter_list|,
specifier|final
name|WALEdit
name|edit
parameter_list|,
specifier|final
name|boolean
name|writeToWAL
parameter_list|)
throws|throws
name|IOException
block|{
name|Map
argument_list|<
name|byte
index|[]
argument_list|,
name|List
argument_list|<
name|KeyValue
argument_list|>
argument_list|>
name|familyMap
init|=
name|put
operator|.
name|getFamilyMap
argument_list|()
decl_stmt|;
name|RegionCoprocessorEnvironment
name|e
init|=
name|c
operator|.
name|getEnvironment
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|e
operator|.
name|getRegion
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|familyMap
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|KeyValue
argument_list|>
name|kvs
init|=
name|familyMap
operator|.
name|get
argument_list|(
name|TestRegionObserverInterface
operator|.
name|A
argument_list|)
decl_stmt|;
if|if
condition|(
name|Arrays
operator|.
name|equals
argument_list|(
name|e
operator|.
name|getRegion
argument_list|()
operator|.
name|getTableDesc
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|TestRegionObserverInterface
operator|.
name|TEST_TABLE
argument_list|)
condition|)
block|{
name|assertNotNull
argument_list|(
name|kvs
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|kvs
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Bytes
operator|.
name|equals
argument_list|(
name|kvs
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getQualifier
argument_list|()
argument_list|,
name|TestRegionObserverInterface
operator|.
name|A
argument_list|)
argument_list|)
expr_stmt|;
name|kvs
operator|=
name|familyMap
operator|.
name|get
argument_list|(
name|TestRegionObserverInterface
operator|.
name|B
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|kvs
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|kvs
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Bytes
operator|.
name|equals
argument_list|(
name|kvs
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getQualifier
argument_list|()
argument_list|,
name|TestRegionObserverInterface
operator|.
name|B
argument_list|)
argument_list|)
expr_stmt|;
name|kvs
operator|=
name|familyMap
operator|.
name|get
argument_list|(
name|TestRegionObserverInterface
operator|.
name|C
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|kvs
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|kvs
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|Bytes
operator|.
name|equals
argument_list|(
name|kvs
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getQualifier
argument_list|()
argument_list|,
name|TestRegionObserverInterface
operator|.
name|C
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|hadPostPut
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|preDelete
parameter_list|(
specifier|final
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
specifier|final
name|Delete
name|delete
parameter_list|,
specifier|final
name|WALEdit
name|edit
parameter_list|,
specifier|final
name|boolean
name|writeToWAL
parameter_list|)
throws|throws
name|IOException
block|{
name|Map
argument_list|<
name|byte
index|[]
argument_list|,
name|List
argument_list|<
name|KeyValue
argument_list|>
argument_list|>
name|familyMap
init|=
name|delete
operator|.
name|getFamilyMap
argument_list|()
decl_stmt|;
name|RegionCoprocessorEnvironment
name|e
init|=
name|c
operator|.
name|getEnvironment
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|e
operator|.
name|getRegion
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|familyMap
argument_list|)
expr_stmt|;
if|if
condition|(
name|beforeDelete
condition|)
block|{
name|hadPreDeleted
operator|=
literal|true
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|postDelete
parameter_list|(
specifier|final
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
specifier|final
name|Delete
name|delete
parameter_list|,
specifier|final
name|WALEdit
name|edit
parameter_list|,
specifier|final
name|boolean
name|writeToWAL
parameter_list|)
throws|throws
name|IOException
block|{
name|Map
argument_list|<
name|byte
index|[]
argument_list|,
name|List
argument_list|<
name|KeyValue
argument_list|>
argument_list|>
name|familyMap
init|=
name|delete
operator|.
name|getFamilyMap
argument_list|()
decl_stmt|;
name|RegionCoprocessorEnvironment
name|e
init|=
name|c
operator|.
name|getEnvironment
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|e
operator|.
name|getRegion
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|familyMap
argument_list|)
expr_stmt|;
name|beforeDelete
operator|=
literal|false
expr_stmt|;
name|hadPostDeleted
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|preGetClosestRowBefore
parameter_list|(
specifier|final
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
specifier|final
name|byte
index|[]
name|row
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|,
specifier|final
name|Result
name|result
parameter_list|)
throws|throws
name|IOException
block|{
name|RegionCoprocessorEnvironment
name|e
init|=
name|c
operator|.
name|getEnvironment
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|e
operator|.
name|getRegion
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
if|if
condition|(
name|beforeDelete
condition|)
block|{
name|hadPreGetClosestRowBefore
operator|=
literal|true
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|postGetClosestRowBefore
parameter_list|(
specifier|final
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
specifier|final
name|byte
index|[]
name|row
parameter_list|,
specifier|final
name|byte
index|[]
name|family
parameter_list|,
specifier|final
name|Result
name|result
parameter_list|)
throws|throws
name|IOException
block|{
name|RegionCoprocessorEnvironment
name|e
init|=
name|c
operator|.
name|getEnvironment
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|e
operator|.
name|getRegion
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|hadPostGetClosestRowBefore
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Result
name|preIncrement
parameter_list|(
specifier|final
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
specifier|final
name|Increment
name|increment
parameter_list|)
throws|throws
name|IOException
block|{
name|hadPreIncrement
operator|=
literal|true
expr_stmt|;
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|Result
name|postIncrement
parameter_list|(
specifier|final
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|c
parameter_list|,
specifier|final
name|Increment
name|increment
parameter_list|,
specifier|final
name|Result
name|result
parameter_list|)
throws|throws
name|IOException
block|{
name|hadPostIncrement
operator|=
literal|true
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|preBulkLoadHFile
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|,
name|List
argument_list|<
name|Pair
argument_list|<
name|byte
index|[]
argument_list|,
name|String
argument_list|>
argument_list|>
name|familyPaths
parameter_list|)
throws|throws
name|IOException
block|{
name|RegionCoprocessorEnvironment
name|e
init|=
name|ctx
operator|.
name|getEnvironment
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|e
operator|.
name|getRegion
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|Arrays
operator|.
name|equals
argument_list|(
name|e
operator|.
name|getRegion
argument_list|()
operator|.
name|getTableDesc
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|TestRegionObserverInterface
operator|.
name|TEST_TABLE
argument_list|)
condition|)
block|{
name|assertNotNull
argument_list|(
name|familyPaths
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|familyPaths
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
name|familyPaths
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getFirst
argument_list|()
argument_list|,
name|TestRegionObserverInterface
operator|.
name|A
argument_list|)
expr_stmt|;
name|String
name|familyPath
init|=
name|familyPaths
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getSecond
argument_list|()
decl_stmt|;
name|String
name|familyName
init|=
name|Bytes
operator|.
name|toString
argument_list|(
name|TestRegionObserverInterface
operator|.
name|A
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|familyPath
operator|.
name|substring
argument_list|(
name|familyPath
operator|.
name|length
argument_list|()
operator|-
name|familyName
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|,
literal|"/"
operator|+
name|familyName
argument_list|)
expr_stmt|;
block|}
name|hadPreBulkLoadHFile
operator|=
literal|true
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|postBulkLoadHFile
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|ctx
parameter_list|,
name|List
argument_list|<
name|Pair
argument_list|<
name|byte
index|[]
argument_list|,
name|String
argument_list|>
argument_list|>
name|familyPaths
parameter_list|,
name|boolean
name|hasLoaded
parameter_list|)
throws|throws
name|IOException
block|{
name|RegionCoprocessorEnvironment
name|e
init|=
name|ctx
operator|.
name|getEnvironment
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|e
operator|.
name|getRegion
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|Arrays
operator|.
name|equals
argument_list|(
name|e
operator|.
name|getRegion
argument_list|()
operator|.
name|getTableDesc
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|TestRegionObserverInterface
operator|.
name|TEST_TABLE
argument_list|)
condition|)
block|{
name|assertNotNull
argument_list|(
name|familyPaths
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|familyPaths
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
name|familyPaths
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getFirst
argument_list|()
argument_list|,
name|TestRegionObserverInterface
operator|.
name|A
argument_list|)
expr_stmt|;
name|String
name|familyPath
init|=
name|familyPaths
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getSecond
argument_list|()
decl_stmt|;
name|String
name|familyName
init|=
name|Bytes
operator|.
name|toString
argument_list|(
name|TestRegionObserverInterface
operator|.
name|A
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|familyPath
operator|.
name|substring
argument_list|(
name|familyPath
operator|.
name|length
argument_list|()
operator|-
name|familyName
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|,
literal|"/"
operator|+
name|familyName
argument_list|)
expr_stmt|;
block|}
name|hadPostBulkLoadHFile
operator|=
literal|true
expr_stmt|;
return|return
name|hasLoaded
return|;
block|}
specifier|public
name|boolean
name|hadPreGet
parameter_list|()
block|{
return|return
name|hadPreGet
return|;
block|}
specifier|public
name|boolean
name|hadPostGet
parameter_list|()
block|{
return|return
name|hadPostGet
return|;
block|}
specifier|public
name|boolean
name|hadPrePut
parameter_list|()
block|{
return|return
name|hadPrePut
return|;
block|}
specifier|public
name|boolean
name|hadPostPut
parameter_list|()
block|{
return|return
name|hadPostPut
return|;
block|}
specifier|public
name|boolean
name|hadDelete
parameter_list|()
block|{
return|return
operator|!
name|beforeDelete
return|;
block|}
specifier|public
name|boolean
name|hadPreIncrement
parameter_list|()
block|{
return|return
name|hadPreIncrement
return|;
block|}
specifier|public
name|boolean
name|hadPostIncrement
parameter_list|()
block|{
return|return
name|hadPostIncrement
return|;
block|}
specifier|public
name|boolean
name|hadPreWALRestored
parameter_list|()
block|{
return|return
name|hadPreWALRestored
return|;
block|}
specifier|public
name|boolean
name|hadPostWALRestored
parameter_list|()
block|{
return|return
name|hadPostWALRestored
return|;
block|}
specifier|public
name|boolean
name|wasScannerNextCalled
parameter_list|()
block|{
return|return
name|hadPreScannerNext
operator|&&
name|hadPostScannerNext
return|;
block|}
specifier|public
name|boolean
name|wasScannerCloseCalled
parameter_list|()
block|{
return|return
name|hadPreScannerClose
operator|&&
name|hadPostScannerClose
return|;
block|}
specifier|public
name|boolean
name|wasScannerOpenCalled
parameter_list|()
block|{
return|return
name|hadPreScannerOpen
operator|&&
name|hadPostScannerOpen
return|;
block|}
specifier|public
name|boolean
name|hadDeleted
parameter_list|()
block|{
return|return
name|hadPreDeleted
operator|&&
name|hadPostDeleted
return|;
block|}
specifier|public
name|boolean
name|hadPostBulkLoadHFile
parameter_list|()
block|{
return|return
name|hadPostBulkLoadHFile
return|;
block|}
specifier|public
name|boolean
name|hadPreBulkLoadHFile
parameter_list|()
block|{
return|return
name|hadPreBulkLoadHFile
return|;
block|}
block|}
end_class

end_unit

