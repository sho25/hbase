begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|test
operator|.
name|LoadTestKVGenerator
import|;
end_import

begin_comment
comment|/**  * A load test data generator for MOB  */
end_comment

begin_class
specifier|public
class|class
name|LoadTestDataGeneratorWithMOB
extends|extends
name|MultiThreadedAction
operator|.
name|DefaultDataGenerator
block|{
specifier|private
name|byte
index|[]
name|mobColumnFamily
decl_stmt|;
specifier|private
name|LoadTestKVGenerator
name|mobKvGenerator
decl_stmt|;
specifier|public
name|LoadTestDataGeneratorWithMOB
parameter_list|(
name|int
name|minValueSize
parameter_list|,
name|int
name|maxValueSize
parameter_list|,
name|int
name|minColumnsPerKey
parameter_list|,
name|int
name|maxColumnsPerKey
parameter_list|,
name|byte
index|[]
modifier|...
name|columnFamilies
parameter_list|)
block|{
name|super
argument_list|(
name|minValueSize
argument_list|,
name|maxValueSize
argument_list|,
name|minColumnsPerKey
argument_list|,
name|maxColumnsPerKey
argument_list|,
name|columnFamilies
argument_list|)
expr_stmt|;
block|}
specifier|public
name|LoadTestDataGeneratorWithMOB
parameter_list|(
name|byte
index|[]
modifier|...
name|columnFamilies
parameter_list|)
block|{
name|super
argument_list|(
name|columnFamilies
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|initialize
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|super
operator|.
name|initialize
argument_list|(
name|args
argument_list|)
expr_stmt|;
if|if
condition|(
name|args
operator|.
name|length
operator|!=
literal|3
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"LoadTestDataGeneratorWithMOB can have 3 arguments."
operator|+
literal|"1st argument is a column family, the 2nd argument "
operator|+
literal|"is the minimum mob data size and the 3rd argument "
operator|+
literal|"is the maximum mob data size."
argument_list|)
throw|;
block|}
name|String
name|mobColumnFamily
init|=
name|args
index|[
literal|0
index|]
decl_stmt|;
name|int
name|minMobDataSize
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|args
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|int
name|maxMobDataSize
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|args
index|[
literal|2
index|]
argument_list|)
decl_stmt|;
name|configureMob
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|mobColumnFamily
argument_list|)
argument_list|,
name|minMobDataSize
argument_list|,
name|maxMobDataSize
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|configureMob
parameter_list|(
name|byte
index|[]
name|mobColumnFamily
parameter_list|,
name|int
name|minMobDataSize
parameter_list|,
name|int
name|maxMobDataSize
parameter_list|)
block|{
name|this
operator|.
name|mobColumnFamily
operator|=
name|mobColumnFamily
expr_stmt|;
name|mobKvGenerator
operator|=
operator|new
name|LoadTestKVGenerator
argument_list|(
name|minMobDataSize
argument_list|,
name|maxMobDataSize
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|byte
index|[]
name|generateValue
parameter_list|(
name|byte
index|[]
name|rowKey
parameter_list|,
name|byte
index|[]
name|cf
parameter_list|,
name|byte
index|[]
name|column
parameter_list|)
block|{
if|if
condition|(
name|Arrays
operator|.
name|equals
argument_list|(
name|cf
argument_list|,
name|mobColumnFamily
argument_list|)
condition|)
return|return
name|mobKvGenerator
operator|.
name|generateRandomSizeValue
argument_list|(
name|rowKey
argument_list|,
name|cf
argument_list|,
name|column
argument_list|)
return|;
return|return
name|super
operator|.
name|generateValue
argument_list|(
name|rowKey
argument_list|,
name|cf
argument_list|,
name|column
argument_list|)
return|;
block|}
block|}
end_class

end_unit

