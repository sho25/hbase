begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|mapred
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseTestingUtility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|LargeTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|testclassification
operator|.
name|MapReduceTests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Put
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Result
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|io
operator|.
name|ImmutableBytesWritable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|JobConf
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|MapReduceBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|OutputCollector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|Reporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|mapred
operator|.
name|RunningJob
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableMap
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|ImmutableSet
import|;
end_import

begin_class
annotation|@
name|Category
argument_list|(
block|{
name|MapReduceTests
operator|.
name|class
block|,
name|LargeTests
operator|.
name|class
block|}
argument_list|)
specifier|public
class|class
name|TestTableMapReduceUtil
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOG
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|TestTableMapReduceUtil
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|Table
name|presidentsTable
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TABLE_NAME
init|=
literal|"People"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|byte
index|[]
name|COLUMN_FAMILY
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"info"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|byte
index|[]
name|COLUMN_QUALIFIER
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"name"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|ImmutableSet
argument_list|<
name|String
argument_list|>
name|presidentsRowKeys
init|=
name|ImmutableSet
operator|.
name|of
argument_list|(
literal|"president1"
argument_list|,
literal|"president2"
argument_list|,
literal|"president3"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|Iterator
argument_list|<
name|String
argument_list|>
name|presidentNames
init|=
name|ImmutableSet
operator|.
name|of
argument_list|(
literal|"John F. Kennedy"
argument_list|,
literal|"George W. Bush"
argument_list|,
literal|"Barack Obama"
argument_list|)
operator|.
name|iterator
argument_list|()
decl_stmt|;
specifier|private
specifier|static
name|ImmutableSet
argument_list|<
name|String
argument_list|>
name|actorsRowKeys
init|=
name|ImmutableSet
operator|.
name|of
argument_list|(
literal|"actor1"
argument_list|,
literal|"actor2"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|Iterator
argument_list|<
name|String
argument_list|>
name|actorNames
init|=
name|ImmutableSet
operator|.
name|of
argument_list|(
literal|"Jack Nicholson"
argument_list|,
literal|"Martin Freeman"
argument_list|)
operator|.
name|iterator
argument_list|()
decl_stmt|;
specifier|private
specifier|static
name|String
name|PRESIDENT_PATTERN
init|=
literal|"president"
decl_stmt|;
specifier|private
specifier|static
name|String
name|ACTOR_PATTERN
init|=
literal|"actor"
decl_stmt|;
specifier|private
specifier|static
name|ImmutableMap
argument_list|<
name|String
argument_list|,
name|ImmutableSet
argument_list|<
name|String
argument_list|>
argument_list|>
name|relation
init|=
name|ImmutableMap
operator|.
name|of
argument_list|(
name|PRESIDENT_PATTERN
argument_list|,
name|presidentsRowKeys
argument_list|,
name|ACTOR_PATTERN
argument_list|,
name|actorsRowKeys
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|HBaseTestingUtility
name|UTIL
init|=
operator|new
name|HBaseTestingUtility
argument_list|()
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|beforeClass
parameter_list|()
throws|throws
name|Exception
block|{
name|UTIL
operator|.
name|startMiniCluster
argument_list|()
expr_stmt|;
name|presidentsTable
operator|=
name|createAndFillTable
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
name|TABLE_NAME
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|afterClass
parameter_list|()
throws|throws
name|Exception
block|{
name|UTIL
operator|.
name|shutdownMiniCluster
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|IOException
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"before"
argument_list|)
expr_stmt|;
name|UTIL
operator|.
name|ensureSomeRegionServersAvailable
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"before done"
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|Table
name|createAndFillTable
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|Table
name|table
init|=
name|UTIL
operator|.
name|createTable
argument_list|(
name|tableName
argument_list|,
name|COLUMN_FAMILY
argument_list|)
decl_stmt|;
name|createPutCommand
argument_list|(
name|table
argument_list|)
expr_stmt|;
return|return
name|table
return|;
block|}
specifier|private
specifier|static
name|void
name|createPutCommand
parameter_list|(
name|Table
name|table
parameter_list|)
throws|throws
name|IOException
block|{
for|for
control|(
name|String
name|president
range|:
name|presidentsRowKeys
control|)
block|{
if|if
condition|(
name|presidentNames
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Put
name|p
init|=
operator|new
name|Put
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|president
argument_list|)
argument_list|)
decl_stmt|;
name|p
operator|.
name|addColumn
argument_list|(
name|COLUMN_FAMILY
argument_list|,
name|COLUMN_QUALIFIER
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|presidentNames
operator|.
name|next
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|put
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|String
name|actor
range|:
name|actorsRowKeys
control|)
block|{
if|if
condition|(
name|actorNames
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Put
name|p
init|=
operator|new
name|Put
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|actor
argument_list|)
argument_list|)
decl_stmt|;
name|p
operator|.
name|addColumn
argument_list|(
name|COLUMN_FAMILY
argument_list|,
name|COLUMN_QUALIFIER
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|actorNames
operator|.
name|next
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|put
argument_list|(
name|p
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|/**    * Check what the given number of reduce tasks for the given job configuration    * does not exceed the number of regions for the given table.    */
annotation|@
name|Test
specifier|public
name|void
name|shouldNumberOfReduceTaskNotExceedNumberOfRegionsForGivenTable
parameter_list|()
throws|throws
name|IOException
block|{
name|Assert
operator|.
name|assertNotNull
argument_list|(
name|presidentsTable
argument_list|)
expr_stmt|;
name|Configuration
name|cfg
init|=
name|UTIL
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|JobConf
name|jobConf
init|=
operator|new
name|JobConf
argument_list|(
name|cfg
argument_list|)
decl_stmt|;
name|TableMapReduceUtil
operator|.
name|setNumReduceTasks
argument_list|(
name|TABLE_NAME
argument_list|,
name|jobConf
argument_list|)
expr_stmt|;
name|TableMapReduceUtil
operator|.
name|limitNumReduceTasks
argument_list|(
name|TABLE_NAME
argument_list|,
name|jobConf
argument_list|)
expr_stmt|;
name|TableMapReduceUtil
operator|.
name|setScannerCaching
argument_list|(
name|jobConf
argument_list|,
literal|100
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|jobConf
operator|.
name|getNumReduceTasks
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|100
argument_list|,
name|jobConf
operator|.
name|getInt
argument_list|(
literal|"hbase.client.scanner.caching"
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|jobConf
operator|.
name|setNumReduceTasks
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|TableMapReduceUtil
operator|.
name|setNumMapTasks
argument_list|(
name|TABLE_NAME
argument_list|,
name|jobConf
argument_list|)
expr_stmt|;
name|TableMapReduceUtil
operator|.
name|limitNumReduceTasks
argument_list|(
name|TABLE_NAME
argument_list|,
name|jobConf
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|jobConf
operator|.
name|getNumReduceTasks
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|shouldNumberOfMapTaskNotExceedNumberOfRegionsForGivenTable
parameter_list|()
throws|throws
name|IOException
block|{
name|Configuration
name|cfg
init|=
name|UTIL
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|JobConf
name|jobConf
init|=
operator|new
name|JobConf
argument_list|(
name|cfg
argument_list|)
decl_stmt|;
name|TableMapReduceUtil
operator|.
name|setNumReduceTasks
argument_list|(
name|TABLE_NAME
argument_list|,
name|jobConf
argument_list|)
expr_stmt|;
name|TableMapReduceUtil
operator|.
name|limitNumMapTasks
argument_list|(
name|TABLE_NAME
argument_list|,
name|jobConf
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|jobConf
operator|.
name|getNumMapTasks
argument_list|()
argument_list|)
expr_stmt|;
name|jobConf
operator|.
name|setNumMapTasks
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|TableMapReduceUtil
operator|.
name|setNumMapTasks
argument_list|(
name|TABLE_NAME
argument_list|,
name|jobConf
argument_list|)
expr_stmt|;
name|TableMapReduceUtil
operator|.
name|limitNumMapTasks
argument_list|(
name|TABLE_NAME
argument_list|,
name|jobConf
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|jobConf
operator|.
name|getNumMapTasks
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
specifier|public
name|void
name|shoudBeValidMapReduceEvaluation
parameter_list|()
throws|throws
name|Exception
block|{
name|Configuration
name|cfg
init|=
name|UTIL
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|JobConf
name|jobConf
init|=
operator|new
name|JobConf
argument_list|(
name|cfg
argument_list|)
decl_stmt|;
try|try
block|{
name|jobConf
operator|.
name|setJobName
argument_list|(
literal|"process row task"
argument_list|)
expr_stmt|;
name|jobConf
operator|.
name|setNumReduceTasks
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|TableMapReduceUtil
operator|.
name|initTableMapJob
argument_list|(
name|TABLE_NAME
argument_list|,
operator|new
name|String
argument_list|(
name|COLUMN_FAMILY
argument_list|)
argument_list|,
name|ClassificatorMapper
operator|.
name|class
argument_list|,
name|ImmutableBytesWritable
operator|.
name|class
argument_list|,
name|Put
operator|.
name|class
argument_list|,
name|jobConf
argument_list|)
expr_stmt|;
name|TableMapReduceUtil
operator|.
name|initTableReduceJob
argument_list|(
name|TABLE_NAME
argument_list|,
name|ClassificatorRowReduce
operator|.
name|class
argument_list|,
name|jobConf
argument_list|)
expr_stmt|;
name|RunningJob
name|job
init|=
name|JobClient
operator|.
name|runJob
argument_list|(
name|jobConf
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|job
operator|.
name|isSuccessful
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|jobConf
operator|!=
literal|null
condition|)
name|FileUtil
operator|.
name|fullyDelete
argument_list|(
operator|new
name|File
argument_list|(
name|jobConf
operator|.
name|get
argument_list|(
literal|"hadoop.tmp.dir"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
specifier|public
name|void
name|shoudBeValidMapReduceWithPartitionerEvaluation
parameter_list|()
throws|throws
name|IOException
block|{
name|Configuration
name|cfg
init|=
name|UTIL
operator|.
name|getConfiguration
argument_list|()
decl_stmt|;
name|JobConf
name|jobConf
init|=
operator|new
name|JobConf
argument_list|(
name|cfg
argument_list|)
decl_stmt|;
try|try
block|{
name|jobConf
operator|.
name|setJobName
argument_list|(
literal|"process row task"
argument_list|)
expr_stmt|;
name|jobConf
operator|.
name|setNumReduceTasks
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|TableMapReduceUtil
operator|.
name|initTableMapJob
argument_list|(
name|TABLE_NAME
argument_list|,
operator|new
name|String
argument_list|(
name|COLUMN_FAMILY
argument_list|)
argument_list|,
name|ClassificatorMapper
operator|.
name|class
argument_list|,
name|ImmutableBytesWritable
operator|.
name|class
argument_list|,
name|Put
operator|.
name|class
argument_list|,
name|jobConf
argument_list|)
expr_stmt|;
name|TableMapReduceUtil
operator|.
name|initTableReduceJob
argument_list|(
name|TABLE_NAME
argument_list|,
name|ClassificatorRowReduce
operator|.
name|class
argument_list|,
name|jobConf
argument_list|,
name|HRegionPartitioner
operator|.
name|class
argument_list|)
expr_stmt|;
name|RunningJob
name|job
init|=
name|JobClient
operator|.
name|runJob
argument_list|(
name|jobConf
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|job
operator|.
name|isSuccessful
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|jobConf
operator|!=
literal|null
condition|)
name|FileUtil
operator|.
name|fullyDelete
argument_list|(
operator|new
name|File
argument_list|(
name|jobConf
operator|.
name|get
argument_list|(
literal|"hadoop.tmp.dir"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
specifier|static
class|class
name|ClassificatorRowReduce
extends|extends
name|MapReduceBase
implements|implements
name|TableReduce
argument_list|<
name|ImmutableBytesWritable
argument_list|,
name|Put
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|void
name|reduce
parameter_list|(
name|ImmutableBytesWritable
name|key
parameter_list|,
name|Iterator
argument_list|<
name|Put
argument_list|>
name|values
parameter_list|,
name|OutputCollector
argument_list|<
name|ImmutableBytesWritable
argument_list|,
name|Put
argument_list|>
name|output
parameter_list|,
name|Reporter
name|reporter
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|strKey
init|=
name|Bytes
operator|.
name|toString
argument_list|(
name|key
operator|.
name|get
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Put
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<
name|Put
argument_list|>
argument_list|()
decl_stmt|;
while|while
condition|(
name|values
operator|.
name|hasNext
argument_list|()
condition|)
name|result
operator|.
name|add
argument_list|(
name|values
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|relation
operator|.
name|keySet
argument_list|()
operator|.
name|contains
argument_list|(
name|strKey
argument_list|)
condition|)
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|set
init|=
name|relation
operator|.
name|get
argument_list|(
name|strKey
argument_list|)
decl_stmt|;
if|if
condition|(
name|set
operator|!=
literal|null
condition|)
block|{
name|assertEquals
argument_list|(
name|set
operator|.
name|size
argument_list|()
argument_list|,
name|result
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|throwAccertionError
argument_list|(
literal|"Test infrastructure error: set is null"
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|throwAccertionError
argument_list|(
literal|"Test infrastructure error: key not found in map"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|throwAccertionError
parameter_list|(
name|String
name|errorMessage
parameter_list|)
throws|throws
name|AssertionError
block|{
throw|throw
operator|new
name|AssertionError
argument_list|(
name|errorMessage
argument_list|)
throw|;
block|}
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
specifier|static
class|class
name|ClassificatorMapper
extends|extends
name|MapReduceBase
implements|implements
name|TableMap
argument_list|<
name|ImmutableBytesWritable
argument_list|,
name|Put
argument_list|>
block|{
annotation|@
name|Override
specifier|public
name|void
name|map
parameter_list|(
name|ImmutableBytesWritable
name|row
parameter_list|,
name|Result
name|result
parameter_list|,
name|OutputCollector
argument_list|<
name|ImmutableBytesWritable
argument_list|,
name|Put
argument_list|>
name|outCollector
parameter_list|,
name|Reporter
name|reporter
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|rowKey
init|=
name|Bytes
operator|.
name|toString
argument_list|(
name|result
operator|.
name|getRow
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|ImmutableBytesWritable
name|pKey
init|=
operator|new
name|ImmutableBytesWritable
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|PRESIDENT_PATTERN
argument_list|)
argument_list|)
decl_stmt|;
specifier|final
name|ImmutableBytesWritable
name|aKey
init|=
operator|new
name|ImmutableBytesWritable
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|ACTOR_PATTERN
argument_list|)
argument_list|)
decl_stmt|;
name|ImmutableBytesWritable
name|outKey
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|rowKey
operator|.
name|startsWith
argument_list|(
name|PRESIDENT_PATTERN
argument_list|)
condition|)
block|{
name|outKey
operator|=
name|pKey
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|rowKey
operator|.
name|startsWith
argument_list|(
name|ACTOR_PATTERN
argument_list|)
condition|)
block|{
name|outKey
operator|=
name|aKey
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|AssertionError
argument_list|(
literal|"unexpected rowKey"
argument_list|)
throw|;
block|}
name|String
name|name
init|=
name|Bytes
operator|.
name|toString
argument_list|(
name|result
operator|.
name|getValue
argument_list|(
name|COLUMN_FAMILY
argument_list|,
name|COLUMN_QUALIFIER
argument_list|)
argument_list|)
decl_stmt|;
name|outCollector
operator|.
name|collect
argument_list|(
name|outKey
argument_list|,
operator|new
name|Put
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"rowKey2"
argument_list|)
argument_list|)
operator|.
name|addColumn
argument_list|(
name|COLUMN_FAMILY
argument_list|,
name|COLUMN_QUALIFIER
argument_list|,
name|Bytes
operator|.
name|toBytes
argument_list|(
name|name
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

