begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|Cell
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|CellComparator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|KeyValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|CollectionBackedScanner
import|;
end_import

begin_comment
comment|/**  * A fixture that implements and presents a KeyValueScanner.  * It takes a list of key/values which is then sorted according  * to the provided comparator, and then the whole thing pretends  * to be a store file scanner.  */
end_comment

begin_class
specifier|public
class|class
name|KeyValueScanFixture
extends|extends
name|CollectionBackedScanner
block|{
specifier|public
name|KeyValueScanFixture
parameter_list|(
name|CellComparator
name|comparator
parameter_list|,
name|Cell
modifier|...
name|cells
parameter_list|)
block|{
name|super
argument_list|(
name|comparator
argument_list|,
name|cells
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|List
argument_list|<
name|KeyValueScanner
argument_list|>
name|scanFixture
parameter_list|(
name|KeyValue
index|[]
modifier|...
name|kvArrays
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|KeyValueScanner
argument_list|>
name|scanners
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|KeyValue
index|[]
name|kvs
range|:
name|kvArrays
control|)
block|{
name|scanners
operator|.
name|add
argument_list|(
operator|new
name|KeyValueScanFixture
argument_list|(
name|CellComparator
operator|.
name|COMPARATOR
argument_list|,
name|kvs
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|scanners
return|;
block|}
block|}
end_class

end_unit

