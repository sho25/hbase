begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|procedure2
operator|.
name|store
operator|.
name|wal
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FSDataOutputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|fs
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|procedure2
operator|.
name|ProcedureTestingUtility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|procedure2
operator|.
name|store
operator|.
name|LeaseRecovery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|procedure2
operator|.
name|store
operator|.
name|ProcedureStorePerformanceEvaluation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|cli
operator|.
name|CommandLine
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|cli
operator|.
name|Option
import|;
end_import

begin_class
specifier|public
class|class
name|ProcedureWALPerformanceEvaluation
extends|extends
name|ProcedureStorePerformanceEvaluation
argument_list|<
name|WALProcedureStore
argument_list|>
block|{
comment|// Command line options and defaults.
specifier|public
specifier|static
name|int
name|DEFAULT_NUM_WALS
init|=
literal|0
decl_stmt|;
specifier|public
specifier|static
name|Option
name|NUM_WALS_OPTION
init|=
operator|new
name|Option
argument_list|(
literal|"wals"
argument_list|,
literal|true
argument_list|,
literal|"Number of WALs to write. If -ve or 0, uses "
operator|+
name|WALProcedureStore
operator|.
name|ROLL_THRESHOLD_CONF_KEY
operator|+
literal|" conf to roll the logs. Default: "
operator|+
name|DEFAULT_NUM_WALS
argument_list|)
decl_stmt|;
specifier|private
name|long
name|numProcsPerWal
init|=
name|Long
operator|.
name|MAX_VALUE
decl_stmt|;
comment|// never roll wall based on this value.
specifier|private
name|int
name|numWals
decl_stmt|;
comment|// Non-default configurations.
specifier|private
name|void
name|setupConf
parameter_list|()
block|{
name|conf
operator|.
name|setBoolean
argument_list|(
name|WALProcedureStore
operator|.
name|USE_HSYNC_CONF_KEY
argument_list|,
literal|"hsync"
operator|.
name|equals
argument_list|(
name|syncType
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|numWals
operator|>
literal|0
condition|)
block|{
name|conf
operator|.
name|setLong
argument_list|(
name|WALProcedureStore
operator|.
name|ROLL_THRESHOLD_CONF_KEY
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|)
expr_stmt|;
name|numProcsPerWal
operator|=
name|numProcs
operator|/
name|numWals
expr_stmt|;
block|}
block|}
comment|/**    * Processes and validates command line options.    */
annotation|@
name|Override
specifier|public
name|void
name|processOptions
parameter_list|(
name|CommandLine
name|cmd
parameter_list|)
block|{
name|super
operator|.
name|processOptions
argument_list|(
name|cmd
argument_list|)
expr_stmt|;
name|numWals
operator|=
name|getOptionAsInt
argument_list|(
name|cmd
argument_list|,
name|NUM_WALS_OPTION
operator|.
name|getOpt
argument_list|()
argument_list|,
name|DEFAULT_NUM_WALS
argument_list|)
expr_stmt|;
name|setupConf
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addOptions
parameter_list|()
block|{
name|super
operator|.
name|addOptions
argument_list|()
expr_stmt|;
name|addOption
argument_list|(
name|NUM_WALS_OPTION
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|WALProcedureStore
name|createProcedureStore
parameter_list|(
name|Path
name|storeDir
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
literal|"nosync"
operator|.
name|equals
argument_list|(
name|syncType
argument_list|)
condition|)
block|{
return|return
operator|new
name|NoSyncWalProcedureStore
argument_list|(
name|conf
argument_list|,
name|storeDir
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|ProcedureTestingUtility
operator|.
name|createWalStore
argument_list|(
name|conf
argument_list|,
name|storeDir
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|printRawFormatResult
parameter_list|(
name|long
name|timeTakenNs
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"RESULT [%s=%s, %s=%s, %s=%s, %s=%s, %s=%s, "
operator|+
literal|"total_time_ms=%s]"
argument_list|,
name|NUM_PROCS_OPTION
operator|.
name|getOpt
argument_list|()
argument_list|,
name|numProcs
argument_list|,
name|STATE_SIZE_OPTION
operator|.
name|getOpt
argument_list|()
argument_list|,
name|stateSize
argument_list|,
name|SYNC_OPTION
operator|.
name|getOpt
argument_list|()
argument_list|,
name|syncType
argument_list|,
name|NUM_THREADS_OPTION
operator|.
name|getOpt
argument_list|()
argument_list|,
name|numThreads
argument_list|,
name|NUM_WALS_OPTION
operator|.
name|getOpt
argument_list|()
argument_list|,
name|numWals
argument_list|,
name|timeTakenNs
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|preWrite
parameter_list|(
name|long
name|procId
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|procId
operator|>
literal|0
operator|&&
name|procId
operator|%
name|numProcsPerWal
operator|==
literal|0
condition|)
block|{
name|store
operator|.
name|rollWriterForTesting
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Starting new log : "
operator|+
name|store
operator|.
name|getActiveLogs
argument_list|()
operator|.
name|get
argument_list|(
name|store
operator|.
name|getActiveLogs
argument_list|()
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|///////////////////////////////
comment|// HELPER CLASSES
comment|///////////////////////////////
specifier|private
specifier|static
class|class
name|NoSyncWalProcedureStore
extends|extends
name|WALProcedureStore
block|{
specifier|public
name|NoSyncWalProcedureStore
parameter_list|(
specifier|final
name|Configuration
name|conf
parameter_list|,
specifier|final
name|Path
name|logDir
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|conf
argument_list|,
name|logDir
argument_list|,
literal|null
argument_list|,
operator|new
name|LeaseRecovery
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|recoverFileLease
parameter_list|(
name|FileSystem
name|fs
parameter_list|,
name|Path
name|path
parameter_list|)
throws|throws
name|IOException
block|{
comment|// no-op
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|syncStream
parameter_list|(
name|FSDataOutputStream
name|stream
parameter_list|)
block|{
comment|// no-op
block|}
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|IOException
block|{
name|ProcedureWALPerformanceEvaluation
name|tool
init|=
operator|new
name|ProcedureWALPerformanceEvaluation
argument_list|()
decl_stmt|;
name|tool
operator|.
name|setConf
argument_list|(
name|HBaseConfiguration
operator|.
name|create
argument_list|()
argument_list|)
expr_stmt|;
name|tool
operator|.
name|run
argument_list|(
name|args
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

