begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|thrift
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|thrift
operator|.
name|Constants
operator|.
name|INFOPORT_OPTION
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HBaseTestingUtility
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|thrift
operator|.
name|ThriftMetrics
operator|.
name|ThriftServerType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Joiner
import|;
end_import

begin_class
specifier|public
class|class
name|HBaseThriftTestingUtility
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|HBaseThriftTestingUtility
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|Thread
name|thriftServerThread
decl_stmt|;
specifier|private
specifier|volatile
name|Exception
name|thriftServerException
decl_stmt|;
specifier|private
name|ThriftServer
name|thriftServer
decl_stmt|;
specifier|private
name|int
name|port
decl_stmt|;
specifier|public
name|int
name|getServerPort
parameter_list|()
block|{
return|return
name|port
return|;
block|}
comment|/**    * start thrift server    * @param conf configuration    * @param type the type of thrift server    * @throws Exception When starting the thrift server fails.    */
specifier|public
name|void
name|startThriftServer
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|ThriftServerType
name|type
parameter_list|)
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|port
operator|=
name|HBaseTestingUtility
operator|.
name|randomFreePort
argument_list|()
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"-"
operator|+
name|Constants
operator|.
name|PORT_OPTION
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|port
argument_list|)
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"-"
operator|+
name|INFOPORT_OPTION
argument_list|)
expr_stmt|;
name|int
name|infoPort
init|=
name|HBaseTestingUtility
operator|.
name|randomFreePort
argument_list|()
decl_stmt|;
name|args
operator|.
name|add
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|infoPort
argument_list|)
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Starting Thrift Server {} on port: {} "
argument_list|,
name|type
argument_list|,
name|port
argument_list|)
expr_stmt|;
name|thriftServer
operator|=
name|createThriftServer
argument_list|(
name|conf
argument_list|,
name|type
argument_list|)
expr_stmt|;
name|startThriftServerThread
argument_list|(
name|args
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
name|args
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
expr_stmt|;
comment|// wait up to 10s for the server to start
name|waitForThriftServer
argument_list|()
expr_stmt|;
name|LOG
operator|.
name|info
argument_list|(
literal|"Started Thrift Server {} on port {}"
argument_list|,
name|type
argument_list|,
name|port
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|startThriftServerThread
parameter_list|(
specifier|final
name|String
index|[]
name|args
parameter_list|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Starting HBase Thrift server with command line: "
operator|+
name|Joiner
operator|.
name|on
argument_list|(
literal|" "
argument_list|)
operator|.
name|join
argument_list|(
name|args
argument_list|)
argument_list|)
expr_stmt|;
name|thriftServerException
operator|=
literal|null
expr_stmt|;
name|thriftServerThread
operator|=
operator|new
name|Thread
argument_list|(
parameter_list|()
lambda|->
block|{
try|try
block|{
name|thriftServer
operator|.
name|run
argument_list|(
name|args
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|thriftServerException
operator|=
name|e
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|thriftServerThread
operator|.
name|setName
argument_list|(
name|ThriftServer
operator|.
name|class
operator|.
name|getSimpleName
argument_list|()
argument_list|)
expr_stmt|;
name|thriftServerThread
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
comment|/**    * create a new thrift server    * @param conf configuration    * @param type the type of thrift server    * @return the instance of ThriftServer    */
specifier|private
name|ThriftServer
name|createThriftServer
parameter_list|(
name|Configuration
name|conf
parameter_list|,
name|ThriftServerType
name|type
parameter_list|)
block|{
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|ONE
case|:
return|return
operator|new
name|ThriftServer
argument_list|(
name|conf
argument_list|)
return|;
case|case
name|TWO
case|:
return|return
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|thrift2
operator|.
name|ThriftServer
argument_list|(
name|conf
argument_list|)
return|;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Unknown type: "
operator|+
name|type
argument_list|)
throw|;
block|}
block|}
specifier|private
name|void
name|waitForThriftServer
parameter_list|()
throws|throws
name|Exception
block|{
name|boolean
name|isServing
init|=
literal|false
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|i
operator|++
operator|<
literal|100
condition|)
block|{
if|if
condition|(
name|thriftServer
operator|.
name|tserver
operator|==
literal|null
condition|)
block|{
name|Thread
operator|.
name|sleep
argument_list|(
literal|100
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|isServing
operator|=
literal|true
expr_stmt|;
break|break;
block|}
block|}
if|if
condition|(
operator|!
name|isServing
condition|)
block|{
if|if
condition|(
name|thriftServer
operator|!=
literal|null
condition|)
block|{
name|thriftServer
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Failed to start thrift server "
argument_list|)
throw|;
block|}
block|}
specifier|public
name|void
name|stopThriftServer
parameter_list|()
throws|throws
name|Exception
block|{
name|LOG
operator|.
name|debug
argument_list|(
literal|"Stopping Thrift Server"
argument_list|)
expr_stmt|;
name|thriftServer
operator|.
name|stop
argument_list|()
expr_stmt|;
name|thriftServerThread
operator|.
name|join
argument_list|()
expr_stmt|;
if|if
condition|(
name|thriftServerException
operator|!=
literal|null
condition|)
block|{
name|LOG
operator|.
name|error
argument_list|(
literal|"HBase Thrift server threw an exception "
argument_list|,
name|thriftServerException
argument_list|)
expr_stmt|;
throw|throw
operator|new
name|Exception
argument_list|(
name|thriftServerException
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

