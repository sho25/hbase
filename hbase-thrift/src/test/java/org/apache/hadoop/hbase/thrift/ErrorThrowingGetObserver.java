begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|thrift
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|CallQueueTooBigException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|Cell
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|DoNotRetryIOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|MultiActionResultTooLarge
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|NotServingRegionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|RegionTooBusyException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|UnknownScannerException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Get
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|BaseRegionObserver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|ObserverContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|coprocessor
operator|.
name|RegionCoprocessorEnvironment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|exceptions
operator|.
name|FailedSanityCheckException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|exceptions
operator|.
name|OutOfOrderScannerNextException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|exceptions
operator|.
name|RegionMovedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|exceptions
operator|.
name|ScannerResetException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|metrics
operator|.
name|ExceptionTrackingSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Simple test coprocessor for injecting exceptions on Get requests.  */
end_comment

begin_class
specifier|public
class|class
name|ErrorThrowingGetObserver
extends|extends
name|BaseRegionObserver
block|{
specifier|public
specifier|static
specifier|final
name|String
name|SHOULD_ERROR_ATTRIBUTE
init|=
literal|"error"
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|preGetOp
parameter_list|(
name|ObserverContext
argument_list|<
name|RegionCoprocessorEnvironment
argument_list|>
name|e
parameter_list|,
name|Get
name|get
parameter_list|,
name|List
argument_list|<
name|Cell
argument_list|>
name|results
parameter_list|)
throws|throws
name|IOException
block|{
name|byte
index|[]
name|errorType
init|=
name|get
operator|.
name|getAttribute
argument_list|(
name|SHOULD_ERROR_ATTRIBUTE
argument_list|)
decl_stmt|;
if|if
condition|(
name|errorType
operator|!=
literal|null
condition|)
block|{
name|ErrorType
name|type
init|=
name|ErrorType
operator|.
name|valueOf
argument_list|(
name|Bytes
operator|.
name|toString
argument_list|(
name|errorType
argument_list|)
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|CALL_QUEUE_TOO_BIG
case|:
throw|throw
operator|new
name|CallQueueTooBigException
argument_list|(
literal|"Failing for test"
argument_list|)
throw|;
case|case
name|MULTI_ACTION_RESULT_TOO_LARGE
case|:
throw|throw
operator|new
name|MultiActionResultTooLarge
argument_list|(
literal|"Failing for test"
argument_list|)
throw|;
case|case
name|FAILED_SANITY_CHECK
case|:
throw|throw
operator|new
name|FailedSanityCheckException
argument_list|(
literal|"Failing for test"
argument_list|)
throw|;
case|case
name|NOT_SERVING_REGION
case|:
throw|throw
operator|new
name|NotServingRegionException
argument_list|(
literal|"Failing for test"
argument_list|)
throw|;
case|case
name|REGION_MOVED
case|:
throw|throw
operator|new
name|RegionMovedException
argument_list|(
name|e
operator|.
name|getEnvironment
argument_list|()
operator|.
name|getRegionServerServices
argument_list|()
operator|.
name|getServerName
argument_list|()
argument_list|,
literal|1
argument_list|)
throw|;
case|case
name|SCANNER_RESET
case|:
throw|throw
operator|new
name|ScannerResetException
argument_list|(
literal|"Failing for test"
argument_list|)
throw|;
case|case
name|UNKNOWN_SCANNER
case|:
throw|throw
operator|new
name|UnknownScannerException
argument_list|(
literal|"Failing for test"
argument_list|)
throw|;
case|case
name|REGION_TOO_BUSY
case|:
throw|throw
operator|new
name|RegionTooBusyException
argument_list|(
literal|"Failing for test"
argument_list|)
throw|;
case|case
name|OUT_OF_ORDER_SCANNER_NEXT
case|:
throw|throw
operator|new
name|OutOfOrderScannerNextException
argument_list|(
literal|"Failing for test"
argument_list|)
throw|;
default|default:
throw|throw
operator|new
name|DoNotRetryIOException
argument_list|(
literal|"Failing for test"
argument_list|)
throw|;
block|}
block|}
name|super
operator|.
name|preGetOp
argument_list|(
name|e
argument_list|,
name|get
argument_list|,
name|results
argument_list|)
expr_stmt|;
block|}
specifier|public
enum|enum
name|ErrorType
block|{
name|CALL_QUEUE_TOO_BIG
parameter_list|(
name|ExceptionTrackingSource
operator|.
name|EXCEPTIONS_CALL_QUEUE_TOO_BIG
parameter_list|)
operator|,
constructor|MULTI_ACTION_RESULT_TOO_LARGE(ExceptionTrackingSource.EXCEPTIONS_MULTI_TOO_LARGE_NAME
block|)
enum|,
name|FAILED_SANITY_CHECK
parameter_list|(
name|ExceptionTrackingSource
operator|.
name|EXCEPTIONS_SANITY_NAME
parameter_list|)
operator|,
constructor|NOT_SERVING_REGION(ExceptionTrackingSource.EXCEPTIONS_NSRE_NAME
block|)
operator|,
name|REGION_MOVED
argument_list|(
name|ExceptionTrackingSource
operator|.
name|EXCEPTIONS_MOVED_NAME
argument_list|)
operator|,
name|SCANNER_RESET
argument_list|(
name|ExceptionTrackingSource
operator|.
name|EXCEPTIONS_SCANNER_RESET_NAME
argument_list|)
operator|,
name|UNKNOWN_SCANNER
argument_list|(
name|ExceptionTrackingSource
operator|.
name|EXCEPTIONS_UNKNOWN_NAME
argument_list|)
operator|,
name|REGION_TOO_BUSY
argument_list|(
name|ExceptionTrackingSource
operator|.
name|EXCEPTIONS_BUSY_NAME
argument_list|)
operator|,
name|OUT_OF_ORDER_SCANNER_NEXT
argument_list|(
name|ExceptionTrackingSource
operator|.
name|EXCEPTIONS_OOO_NAME
argument_list|)
expr_stmt|;
end_class

begin_decl_stmt
specifier|private
specifier|final
name|String
name|metricName
decl_stmt|;
end_decl_stmt

begin_expr_stmt
name|ErrorType
argument_list|(
name|String
name|metricName
argument_list|)
block|{
name|this
operator|.
name|metricName
operator|=
name|metricName
block|;     }
specifier|public
name|String
name|getMetricName
argument_list|()
block|{
return|return
name|metricName
return|;
block|}
end_expr_stmt

unit|} }
end_unit

