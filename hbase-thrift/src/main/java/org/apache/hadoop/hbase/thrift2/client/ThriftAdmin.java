begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|thrift2
operator|.
name|client
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|ByteBuffer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Future
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|NotImplementedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|CacheEvictionStats
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ClusterMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HRegionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HTableDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|NamespaceDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|NamespaceNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|RegionMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ServerName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Admin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|ColumnFamilyDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|CompactType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|CompactionState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|RegionInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|SnapshotDescription
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|SnapshotType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|TableDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|replication
operator|.
name|TableCFs
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|security
operator|.
name|SecurityCapability
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ipc
operator|.
name|CoprocessorRpcChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|quotas
operator|.
name|QuotaFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|quotas
operator|.
name|QuotaRetriever
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|quotas
operator|.
name|QuotaSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|quotas
operator|.
name|SpaceQuotaSnapshot
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|replication
operator|.
name|ReplicationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|replication
operator|.
name|ReplicationPeerConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|replication
operator|.
name|ReplicationPeerDescription
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|replication
operator|.
name|SyncReplicationState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|security
operator|.
name|access
operator|.
name|UserPermission
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|thrift2
operator|.
name|ThriftUtilities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|thrift2
operator|.
name|generated
operator|.
name|TColumnFamilyDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|thrift2
operator|.
name|generated
operator|.
name|THBaseService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|thrift2
operator|.
name|generated
operator|.
name|TNamespaceDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|thrift2
operator|.
name|generated
operator|.
name|TTableDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|thrift2
operator|.
name|generated
operator|.
name|TTableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Pair
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|TException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|thrift
operator|.
name|transport
operator|.
name|TTransport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|ThriftAdmin
implements|implements
name|Admin
block|{
specifier|private
name|THBaseService
operator|.
name|Client
name|client
decl_stmt|;
specifier|private
name|TTransport
name|transport
decl_stmt|;
specifier|private
name|int
name|operationTimeout
decl_stmt|;
specifier|private
name|Configuration
name|conf
decl_stmt|;
specifier|public
name|ThriftAdmin
parameter_list|(
name|THBaseService
operator|.
name|Client
name|client
parameter_list|,
name|TTransport
name|tTransport
parameter_list|,
name|Configuration
name|conf
parameter_list|)
block|{
name|this
operator|.
name|client
operator|=
name|client
expr_stmt|;
name|this
operator|.
name|transport
operator|=
name|tTransport
expr_stmt|;
name|this
operator|.
name|operationTimeout
operator|=
name|conf
operator|.
name|getInt
argument_list|(
name|HConstants
operator|.
name|HBASE_CLIENT_OPERATION_TIMEOUT
argument_list|,
name|HConstants
operator|.
name|DEFAULT_HBASE_CLIENT_OPERATION_TIMEOUT
argument_list|)
expr_stmt|;
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getOperationTimeout
parameter_list|()
block|{
return|return
name|operationTimeout
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|abort
parameter_list|(
name|String
name|why
parameter_list|,
name|Throwable
name|e
parameter_list|)
block|{    }
annotation|@
name|Override
specifier|public
name|boolean
name|isAborted
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|IOException
block|{
name|transport
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Configuration
name|getConfiguration
parameter_list|()
block|{
return|return
name|conf
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|tableExists
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|TTableName
name|tTableName
init|=
name|ThriftUtilities
operator|.
name|tableNameFromHBase
argument_list|(
name|tableName
argument_list|)
decl_stmt|;
try|try
block|{
return|return
name|client
operator|.
name|tableExists
argument_list|(
name|tTableName
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Connection
name|getConnection
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getConnection not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|HTableDescriptor
index|[]
name|listTables
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|listTables
argument_list|(
operator|(
name|String
operator|)
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|TableDescriptor
argument_list|>
name|listTableDescriptors
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|listTableDescriptors
argument_list|(
operator|(
name|Pattern
operator|)
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HTableDescriptor
index|[]
name|listTables
parameter_list|(
name|Pattern
name|pattern
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|regex
init|=
operator|(
name|pattern
operator|==
literal|null
condition|?
literal|null
else|:
name|pattern
operator|.
name|toString
argument_list|()
operator|)
decl_stmt|;
return|return
name|listTables
argument_list|(
name|regex
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|TableDescriptor
argument_list|>
name|listTableDescriptors
parameter_list|(
name|Pattern
name|pattern
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|listTableDescriptors
argument_list|(
name|pattern
argument_list|,
literal|false
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HTableDescriptor
index|[]
name|listTables
parameter_list|(
name|String
name|regex
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|listTables
argument_list|(
name|regex
argument_list|,
literal|false
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|HTableDescriptor
index|[]
name|listTables
parameter_list|(
name|Pattern
name|pattern
parameter_list|,
name|boolean
name|includeSysTables
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|regex
init|=
operator|(
name|pattern
operator|==
literal|null
condition|?
literal|null
else|:
name|pattern
operator|.
name|toString
argument_list|()
operator|)
decl_stmt|;
return|return
name|listTables
argument_list|(
name|regex
argument_list|,
name|includeSysTables
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|TableDescriptor
argument_list|>
name|listTableDescriptors
parameter_list|(
name|Pattern
name|pattern
parameter_list|,
name|boolean
name|includeSysTables
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|String
name|regex
init|=
operator|(
name|pattern
operator|==
literal|null
condition|?
literal|null
else|:
name|pattern
operator|.
name|toString
argument_list|()
operator|)
decl_stmt|;
name|List
argument_list|<
name|TTableDescriptor
argument_list|>
name|tTableDescriptors
init|=
name|client
operator|.
name|getTableDescriptorsByPattern
argument_list|(
name|regex
argument_list|,
name|includeSysTables
argument_list|)
decl_stmt|;
return|return
name|ThriftUtilities
operator|.
name|tableDescriptorsFromThrift
argument_list|(
name|tTableDescriptors
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|HTableDescriptor
index|[]
name|listTables
parameter_list|(
name|String
name|regex
parameter_list|,
name|boolean
name|includeSysTables
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|List
argument_list|<
name|TTableDescriptor
argument_list|>
name|tTableDescriptors
init|=
name|client
operator|.
name|getTableDescriptorsByPattern
argument_list|(
name|regex
argument_list|,
name|includeSysTables
argument_list|)
decl_stmt|;
return|return
name|ThriftUtilities
operator|.
name|hTableDescriptorsFromThrift
argument_list|(
name|tTableDescriptors
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|TableName
index|[]
name|listTableNames
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|listTableNames
argument_list|(
operator|(
name|String
operator|)
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|TableName
index|[]
name|listTableNames
parameter_list|(
name|Pattern
name|pattern
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|listTableNames
argument_list|(
name|pattern
argument_list|,
literal|false
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|TableName
index|[]
name|listTableNames
parameter_list|(
name|String
name|regex
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|listTableNames
argument_list|(
name|regex
argument_list|,
literal|false
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|TableName
index|[]
name|listTableNames
parameter_list|(
name|Pattern
name|pattern
parameter_list|,
name|boolean
name|includeSysTables
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|regex
init|=
operator|(
name|pattern
operator|==
literal|null
condition|?
literal|null
else|:
name|pattern
operator|.
name|toString
argument_list|()
operator|)
decl_stmt|;
return|return
name|listTableNames
argument_list|(
name|regex
argument_list|,
name|includeSysTables
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|TableName
index|[]
name|listTableNames
parameter_list|(
name|String
name|regex
parameter_list|,
name|boolean
name|includeSysTables
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|List
argument_list|<
name|TTableName
argument_list|>
name|tTableNames
init|=
name|client
operator|.
name|getTableNamesByPattern
argument_list|(
name|regex
argument_list|,
name|includeSysTables
argument_list|)
decl_stmt|;
return|return
name|ThriftUtilities
operator|.
name|tableNamesArrayFromThrift
argument_list|(
name|tTableNames
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|HTableDescriptor
name|getTableDescriptor
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|TableNotFoundException
throws|,
name|IOException
block|{
name|TTableName
name|tTableName
init|=
name|ThriftUtilities
operator|.
name|tableNameFromHBase
argument_list|(
name|tableName
argument_list|)
decl_stmt|;
try|try
block|{
name|TTableDescriptor
name|tTableDescriptor
init|=
name|client
operator|.
name|getTableDescriptor
argument_list|(
name|tTableName
argument_list|)
decl_stmt|;
return|return
name|ThriftUtilities
operator|.
name|hTableDescriptorFromThrift
argument_list|(
name|tTableDescriptor
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|TableDescriptor
name|getDescriptor
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|TableNotFoundException
throws|,
name|IOException
block|{
name|TTableName
name|tTableName
init|=
name|ThriftUtilities
operator|.
name|tableNameFromHBase
argument_list|(
name|tableName
argument_list|)
decl_stmt|;
try|try
block|{
name|TTableDescriptor
name|tTableDescriptor
init|=
name|client
operator|.
name|getTableDescriptor
argument_list|(
name|tTableName
argument_list|)
decl_stmt|;
return|return
name|ThriftUtilities
operator|.
name|tableDescriptorFromThrift
argument_list|(
name|tTableDescriptor
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|HTableDescriptor
index|[]
name|listTableDescriptorsByNamespace
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|List
argument_list|<
name|TTableDescriptor
argument_list|>
name|tTableDescriptors
init|=
name|client
operator|.
name|getTableDescriptorsByNamespace
argument_list|(
name|name
argument_list|)
decl_stmt|;
return|return
name|ThriftUtilities
operator|.
name|hTableDescriptorsFromThrift
argument_list|(
name|tTableDescriptors
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|TableDescriptor
argument_list|>
name|listTableDescriptorsByNamespace
parameter_list|(
name|byte
index|[]
name|name
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|List
argument_list|<
name|TTableDescriptor
argument_list|>
name|tTableDescriptors
init|=
name|client
operator|.
name|getTableDescriptorsByNamespace
argument_list|(
name|Bytes
operator|.
name|toString
argument_list|(
name|name
argument_list|)
argument_list|)
decl_stmt|;
return|return
name|ThriftUtilities
operator|.
name|tableDescriptorsFromThrift
argument_list|(
name|tTableDescriptors
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|TableName
index|[]
name|listTableNamesByNamespace
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|List
argument_list|<
name|TTableName
argument_list|>
name|tTableNames
init|=
name|client
operator|.
name|getTableNamesByNamespace
argument_list|(
name|name
argument_list|)
decl_stmt|;
return|return
name|ThriftUtilities
operator|.
name|tableNamesArrayFromThrift
argument_list|(
name|tTableNames
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|createTable
parameter_list|(
name|TableDescriptor
name|desc
parameter_list|)
throws|throws
name|IOException
block|{
name|createTable
argument_list|(
name|desc
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|createTable
parameter_list|(
name|TableDescriptor
name|desc
parameter_list|,
name|byte
index|[]
name|startKey
parameter_list|,
name|byte
index|[]
name|endKey
parameter_list|,
name|int
name|numRegions
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|numRegions
operator|<
literal|3
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Must create at least three regions"
argument_list|)
throw|;
block|}
elseif|else
if|if
condition|(
name|Bytes
operator|.
name|compareTo
argument_list|(
name|startKey
argument_list|,
name|endKey
argument_list|)
operator|>=
literal|0
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Start key must be smaller than end key"
argument_list|)
throw|;
block|}
if|if
condition|(
name|numRegions
operator|==
literal|3
condition|)
block|{
name|createTable
argument_list|(
name|desc
argument_list|,
operator|new
name|byte
index|[]
index|[]
block|{
name|startKey
block|,
name|endKey
block|}
argument_list|)
expr_stmt|;
return|return;
block|}
name|byte
index|[]
index|[]
name|splitKeys
init|=
name|Bytes
operator|.
name|split
argument_list|(
name|startKey
argument_list|,
name|endKey
argument_list|,
name|numRegions
operator|-
literal|3
argument_list|)
decl_stmt|;
if|if
condition|(
name|splitKeys
operator|==
literal|null
operator|||
name|splitKeys
operator|.
name|length
operator|!=
name|numRegions
operator|-
literal|1
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Unable to split key range into enough regions"
argument_list|)
throw|;
block|}
name|createTable
argument_list|(
name|desc
argument_list|,
name|splitKeys
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|createTable
parameter_list|(
name|TableDescriptor
name|desc
parameter_list|,
name|byte
index|[]
index|[]
name|splitKeys
parameter_list|)
throws|throws
name|IOException
block|{
name|TTableDescriptor
name|tTableDescriptor
init|=
name|ThriftUtilities
operator|.
name|tableDescriptorFromHBase
argument_list|(
name|desc
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ByteBuffer
argument_list|>
name|splitKeyInBuffer
init|=
name|ThriftUtilities
operator|.
name|splitKeyFromHBase
argument_list|(
name|splitKeys
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|createTable
argument_list|(
name|tTableDescriptor
argument_list|,
name|splitKeyInBuffer
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|deleteTable
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|TTableName
name|tTableName
init|=
name|ThriftUtilities
operator|.
name|tableNameFromHBase
argument_list|(
name|tableName
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|deleteTable
argument_list|(
name|tTableName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|truncateTable
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|boolean
name|preserveSplits
parameter_list|)
throws|throws
name|IOException
block|{
name|TTableName
name|tTableName
init|=
name|ThriftUtilities
operator|.
name|tableNameFromHBase
argument_list|(
name|tableName
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|truncateTable
argument_list|(
name|tTableName
argument_list|,
name|preserveSplits
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|enableTable
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|TTableName
name|tTableName
init|=
name|ThriftUtilities
operator|.
name|tableNameFromHBase
argument_list|(
name|tableName
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|enableTable
argument_list|(
name|tTableName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|disableTable
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|TTableName
name|tTableName
init|=
name|ThriftUtilities
operator|.
name|tableNameFromHBase
argument_list|(
name|tableName
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|disableTable
argument_list|(
name|tTableName
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isTableEnabled
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|TTableName
name|tTableName
init|=
name|ThriftUtilities
operator|.
name|tableNameFromHBase
argument_list|(
name|tableName
argument_list|)
decl_stmt|;
try|try
block|{
return|return
name|client
operator|.
name|isTableEnabled
argument_list|(
name|tTableName
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isTableDisabled
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|TTableName
name|tTableName
init|=
name|ThriftUtilities
operator|.
name|tableNameFromHBase
argument_list|(
name|tableName
argument_list|)
decl_stmt|;
try|try
block|{
return|return
name|client
operator|.
name|isTableDisabled
argument_list|(
name|tTableName
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isTableAvailable
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
name|TTableName
name|tTableName
init|=
name|ThriftUtilities
operator|.
name|tableNameFromHBase
argument_list|(
name|tableName
argument_list|)
decl_stmt|;
try|try
block|{
return|return
name|client
operator|.
name|isTableAvailable
argument_list|(
name|tTableName
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isTableAvailable
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
index|[]
name|splitKeys
parameter_list|)
throws|throws
name|IOException
block|{
name|TTableName
name|tTableName
init|=
name|ThriftUtilities
operator|.
name|tableNameFromHBase
argument_list|(
name|tableName
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|ByteBuffer
argument_list|>
name|splitKeyInBuffer
init|=
name|ThriftUtilities
operator|.
name|splitKeyFromHBase
argument_list|(
name|splitKeys
argument_list|)
decl_stmt|;
try|try
block|{
return|return
name|client
operator|.
name|isTableAvailableWithSplit
argument_list|(
name|tTableName
argument_list|,
name|splitKeyInBuffer
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|addColumnFamily
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|ColumnFamilyDescriptor
name|columnFamily
parameter_list|)
throws|throws
name|IOException
block|{
name|TTableName
name|tTableName
init|=
name|ThriftUtilities
operator|.
name|tableNameFromHBase
argument_list|(
name|tableName
argument_list|)
decl_stmt|;
name|TColumnFamilyDescriptor
name|tColumnFamilyDescriptor
init|=
name|ThriftUtilities
operator|.
name|columnFamilyDescriptorFromHBase
argument_list|(
name|columnFamily
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|addColumnFamily
argument_list|(
name|tTableName
argument_list|,
name|tColumnFamilyDescriptor
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|deleteColumn
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
name|columnFamily
parameter_list|)
throws|throws
name|IOException
block|{
name|deleteColumnFamily
argument_list|(
name|tableName
argument_list|,
name|columnFamily
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|deleteColumnFamily
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
name|columnFamily
parameter_list|)
throws|throws
name|IOException
block|{
name|TTableName
name|tTableName
init|=
name|ThriftUtilities
operator|.
name|tableNameFromHBase
argument_list|(
name|tableName
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|deleteColumnFamily
argument_list|(
name|tTableName
argument_list|,
name|ByteBuffer
operator|.
name|wrap
argument_list|(
name|columnFamily
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|modifyColumnFamily
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|ColumnFamilyDescriptor
name|columnFamily
parameter_list|)
throws|throws
name|IOException
block|{
name|TTableName
name|tTableName
init|=
name|ThriftUtilities
operator|.
name|tableNameFromHBase
argument_list|(
name|tableName
argument_list|)
decl_stmt|;
name|TColumnFamilyDescriptor
name|tColumnFamilyDescriptor
init|=
name|ThriftUtilities
operator|.
name|columnFamilyDescriptorFromHBase
argument_list|(
name|columnFamily
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|modifyColumnFamily
argument_list|(
name|tTableName
argument_list|,
name|tColumnFamilyDescriptor
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|modifyTable
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|TableDescriptor
name|td
parameter_list|)
throws|throws
name|IOException
block|{
name|modifyTable
argument_list|(
name|td
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|modifyTable
parameter_list|(
name|TableDescriptor
name|td
parameter_list|)
throws|throws
name|IOException
block|{
name|TTableDescriptor
name|tTableDescriptor
init|=
name|ThriftUtilities
operator|.
name|tableDescriptorFromHBase
argument_list|(
name|td
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|modifyTable
argument_list|(
name|tTableDescriptor
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|modifyNamespace
parameter_list|(
name|NamespaceDescriptor
name|descriptor
parameter_list|)
throws|throws
name|IOException
block|{
name|TNamespaceDescriptor
name|tNamespaceDescriptor
init|=
name|ThriftUtilities
operator|.
name|namespaceDescriptorFromHBase
argument_list|(
name|descriptor
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|modifyNamespace
argument_list|(
name|tNamespaceDescriptor
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|deleteNamespace
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
try|try
block|{
name|client
operator|.
name|deleteNamespace
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|NamespaceDescriptor
name|getNamespaceDescriptor
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|NamespaceNotFoundException
throws|,
name|IOException
block|{
try|try
block|{
name|TNamespaceDescriptor
name|tNamespaceDescriptor
init|=
name|client
operator|.
name|getNamespaceDescriptor
argument_list|(
name|name
argument_list|)
decl_stmt|;
return|return
name|ThriftUtilities
operator|.
name|namespaceDescriptorFromThrift
argument_list|(
name|tNamespaceDescriptor
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|NamespaceDescriptor
index|[]
name|listNamespaceDescriptors
parameter_list|()
throws|throws
name|IOException
block|{
try|try
block|{
name|List
argument_list|<
name|TNamespaceDescriptor
argument_list|>
name|tNamespaceDescriptors
init|=
name|client
operator|.
name|listNamespaceDescriptors
argument_list|()
decl_stmt|;
return|return
name|ThriftUtilities
operator|.
name|namespaceDescriptorsFromThrift
argument_list|(
name|tNamespaceDescriptors
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|createNamespace
parameter_list|(
name|NamespaceDescriptor
name|descriptor
parameter_list|)
throws|throws
name|IOException
block|{
name|TNamespaceDescriptor
name|tNamespaceDescriptor
init|=
name|ThriftUtilities
operator|.
name|namespaceDescriptorFromHBase
argument_list|(
name|descriptor
argument_list|)
decl_stmt|;
try|try
block|{
name|client
operator|.
name|createNamespace
argument_list|(
name|tNamespaceDescriptor
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|TException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|switchRpcThrottle
parameter_list|(
name|boolean
name|enable
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"switchRpcThrottle by pattern not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isRpcThrottleEnabled
parameter_list|()
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"isRpcThrottleEnabled by pattern not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|HTableDescriptor
index|[]
name|disableTables
parameter_list|(
name|String
name|regex
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"disableTables by pattern not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|HTableDescriptor
index|[]
name|disableTables
parameter_list|(
name|Pattern
name|pattern
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"disableTables by pattern not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|HTableDescriptor
index|[]
name|enableTables
parameter_list|(
name|String
name|regex
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"enableTables by pattern not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|HTableDescriptor
index|[]
name|enableTables
parameter_list|(
name|Pattern
name|pattern
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"enableTables by pattern not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|HTableDescriptor
index|[]
name|deleteTables
parameter_list|(
name|String
name|regex
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"deleteTables by pattern not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|HTableDescriptor
index|[]
name|deleteTables
parameter_list|(
name|Pattern
name|pattern
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"deleteTables by pattern not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|HTableDescriptor
index|[]
name|getTableDescriptorsByTableName
parameter_list|(
name|List
argument_list|<
name|TableName
argument_list|>
name|tableNames
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getTableDescriptorsByTableName not supported in ThriftAdmin"
operator|+
literal|", use getDescriptor to get descriptors one by one"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|TableDescriptor
argument_list|>
name|listTableDescriptors
parameter_list|(
name|List
argument_list|<
name|TableName
argument_list|>
name|tableNames
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"listTableDescriptors not supported in ThriftAdmin"
operator|+
literal|", use getDescriptor to get descriptors one by one"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|HTableDescriptor
index|[]
name|getTableDescriptors
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|names
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getTableDescriptors not supported in ThriftAdmin"
operator|+
literal|", use getDescriptor to get descriptors one by one"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|closeRegion
parameter_list|(
name|String
name|regionname
parameter_list|,
name|String
name|serverName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"closeRegion not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|closeRegion
parameter_list|(
name|byte
index|[]
name|regionname
parameter_list|,
name|String
name|serverName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"closeRegion not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|closeRegionWithEncodedRegionName
parameter_list|(
name|String
name|encodedRegionName
parameter_list|,
name|String
name|serverName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"closeRegionWithEncodedRegionName not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|closeRegion
parameter_list|(
name|ServerName
name|sn
parameter_list|,
name|HRegionInfo
name|hri
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"closeRegion not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|HRegionInfo
argument_list|>
name|getOnlineRegions
parameter_list|(
name|ServerName
name|sn
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getOnlineRegions not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|RegionInfo
argument_list|>
name|getRegions
parameter_list|(
name|ServerName
name|serverName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getRegions not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|flush
parameter_list|(
name|TableName
name|tableName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"flush not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|flushRegion
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"flushRegion not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|flushRegionServer
parameter_list|(
name|ServerName
name|serverName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"flushRegionServer not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|compact
parameter_list|(
name|TableName
name|tableName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"compact not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|compactRegion
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"compactRegion not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|compact
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
name|columnFamily
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"compact not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|compactRegion
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|,
name|byte
index|[]
name|columnFamily
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"compactRegion not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|compact
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|CompactType
name|compactType
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"compact not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|compact
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
name|columnFamily
parameter_list|,
name|CompactType
name|compactType
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"compact not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|majorCompact
parameter_list|(
name|TableName
name|tableName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"majorCompact not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|majorCompactRegion
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"majorCompactRegion not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|majorCompact
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
name|columnFamily
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"majorCompact not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|majorCompactRegion
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|,
name|byte
index|[]
name|columnFamily
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"majorCompactRegion not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|majorCompact
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|CompactType
name|compactType
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"majorCompact not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|majorCompact
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
name|columnFamily
parameter_list|,
name|CompactType
name|compactType
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"majorCompact not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|ServerName
argument_list|,
name|Boolean
argument_list|>
name|compactionSwitch
parameter_list|(
name|boolean
name|switchState
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|serverNamesList
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"compactionSwitch not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|compactRegionServer
parameter_list|(
name|ServerName
name|serverName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"compactRegionServer not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|majorCompactRegionServer
parameter_list|(
name|ServerName
name|serverName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"majorCompactRegionServer not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|move
parameter_list|(
name|byte
index|[]
name|encodedRegionName
parameter_list|,
name|byte
index|[]
name|destServerName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"move not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|assign
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"assign not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unassign
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|,
name|boolean
name|force
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"unassign not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|offline
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"offline not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|balancerSwitch
parameter_list|(
name|boolean
name|onOrOff
parameter_list|,
name|boolean
name|synchronous
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"balancerSwitch not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|balance
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"balance not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|balance
parameter_list|(
name|boolean
name|force
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"balance not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isBalancerEnabled
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"isBalancerEnabled not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|CacheEvictionStats
name|clearBlockCache
parameter_list|(
name|TableName
name|tableName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"clearBlockCache not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|normalize
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"normalize not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isNormalizerEnabled
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"isNormalizerEnabled not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|normalizerSwitch
parameter_list|(
name|boolean
name|on
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"normalizerSwitch not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|catalogJanitorSwitch
parameter_list|(
name|boolean
name|onOrOff
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"catalogJanitorSwitch not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|runCatalogJanitor
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"runCatalogJanitor not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isCatalogJanitorEnabled
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"isCatalogJanitorEnabled not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|cleanerChoreSwitch
parameter_list|(
name|boolean
name|onOrOff
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"cleanerChoreSwitch not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|runCleanerChore
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"runCleanerChore not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isCleanerChoreEnabled
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"isCleanerChoreEnabled not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|mergeRegions
parameter_list|(
name|byte
index|[]
name|nameOfRegionA
parameter_list|,
name|byte
index|[]
name|nameOfRegionB
parameter_list|,
name|boolean
name|forcible
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"mergeRegions not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|mergeRegionsAsync
parameter_list|(
name|byte
index|[]
name|nameOfRegionA
parameter_list|,
name|byte
index|[]
name|nameOfRegionB
parameter_list|,
name|boolean
name|forcible
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"mergeRegionsAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|mergeRegionsAsync
parameter_list|(
name|byte
index|[]
index|[]
name|nameofRegionsToMerge
parameter_list|,
name|boolean
name|forcible
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"mergeRegionsAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|split
parameter_list|(
name|TableName
name|tableName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"split not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|splitRegion
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"splitRegion not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|split
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
name|splitPoint
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"split not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|splitRegion
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|,
name|byte
index|[]
name|splitPoint
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"splitRegion not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|splitRegionAsync
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|,
name|byte
index|[]
name|splitPoint
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"splitRegionAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|modifyTableAsync
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|TableDescriptor
name|td
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"modifyTableAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|modifyTableAsync
parameter_list|(
name|TableDescriptor
name|td
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"modifyTableAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|shutdown
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"shutdown not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|stopMaster
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"stopMaster not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isMasterInMaintenanceMode
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"isMasterInMaintenanceMode not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|stopRegionServer
parameter_list|(
name|String
name|hostnamePort
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"stopRegionServer not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|ClusterMetrics
name|getClusterMetrics
parameter_list|(
name|EnumSet
argument_list|<
name|ClusterMetrics
operator|.
name|Option
argument_list|>
name|options
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getClusterMetrics not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|RegionMetrics
argument_list|>
name|getRegionMetrics
parameter_list|(
name|ServerName
name|serverName
parameter_list|,
name|TableName
name|tableName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getRegionMetrics not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|createNamespaceAsync
parameter_list|(
name|NamespaceDescriptor
name|descriptor
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"createNamespaceAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|modifyNamespaceAsync
parameter_list|(
name|NamespaceDescriptor
name|descriptor
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"modifyNamespaceAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|HRegionInfo
argument_list|>
name|getTableRegions
parameter_list|(
name|TableName
name|tableName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getTableRegions not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|RegionInfo
argument_list|>
name|getRegions
parameter_list|(
name|TableName
name|tableName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getRegions not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|abortProcedure
parameter_list|(
name|long
name|procId
parameter_list|,
name|boolean
name|mayInterruptIfRunning
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"abortProcedure not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Boolean
argument_list|>
name|abortProcedureAsync
parameter_list|(
name|long
name|procId
parameter_list|,
name|boolean
name|mayInterruptIfRunning
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"abortProcedureAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getProcedures
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getProcedures not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getLocks
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getLocks not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|rollWALWriter
parameter_list|(
name|ServerName
name|serverName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"rollWALWriter not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|CompactionState
name|getCompactionState
parameter_list|(
name|TableName
name|tableName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getCompactionState not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|CompactionState
name|getCompactionState
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|CompactType
name|compactType
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getCompactionState not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|CompactionState
name|getCompactionStateForRegion
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getCompactionStateForRegion not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getLastMajorCompactionTimestamp
parameter_list|(
name|TableName
name|tableName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getLastMajorCompactionTimestamp not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|long
name|getLastMajorCompactionTimestampForRegion
parameter_list|(
name|byte
index|[]
name|regionName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getLastMajorCompactionTimestampForRegion not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|snapshot
parameter_list|(
name|String
name|snapshotName
parameter_list|,
name|TableName
name|tableName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"snapshot not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|snapshot
parameter_list|(
name|byte
index|[]
name|snapshotName
parameter_list|,
name|TableName
name|tableName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"snapshot not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|snapshot
parameter_list|(
name|String
name|snapshotName
parameter_list|,
name|TableName
name|tableName
parameter_list|,
name|SnapshotType
name|type
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"snapshot not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|snapshot
parameter_list|(
name|SnapshotDescription
name|snapshot
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"snapshot not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|snapshotAsync
parameter_list|(
name|SnapshotDescription
name|snapshot
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"snapshotAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isSnapshotFinished
parameter_list|(
name|SnapshotDescription
name|snapshot
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"isSnapshotFinished not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|restoreSnapshot
parameter_list|(
name|byte
index|[]
name|snapshotName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"restoreSnapshot not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|restoreSnapshot
parameter_list|(
name|String
name|snapshotName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"restoreSnapshot not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|restoreSnapshotAsync
parameter_list|(
name|String
name|snapshotName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"restoreSnapshotAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|restoreSnapshot
parameter_list|(
name|byte
index|[]
name|snapshotName
parameter_list|,
name|boolean
name|takeFailSafeSnapshot
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"restoreSnapshot not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|restoreSnapshot
parameter_list|(
name|String
name|snapshotName
parameter_list|,
name|boolean
name|takeFailSafeSnapshot
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"restoreSnapshot not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|restoreSnapshot
parameter_list|(
name|String
name|snapshotName
parameter_list|,
name|boolean
name|takeFailSafeSnapshot
parameter_list|,
name|boolean
name|restoreAcl
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"restoreSnapshot not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|cloneSnapshot
parameter_list|(
name|byte
index|[]
name|snapshotName
parameter_list|,
name|TableName
name|tableName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"cloneSnapshot not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|cloneSnapshot
parameter_list|(
name|String
name|snapshotName
parameter_list|,
name|TableName
name|tableName
parameter_list|,
name|boolean
name|restoreAcl
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"cloneSnapshot not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|cloneSnapshot
parameter_list|(
name|String
name|snapshotName
parameter_list|,
name|TableName
name|tableName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"cloneSnapshot not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|cloneSnapshotAsync
parameter_list|(
name|String
name|snapshotName
parameter_list|,
name|TableName
name|tableName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"cloneSnapshotAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|execProcedure
parameter_list|(
name|String
name|signature
parameter_list|,
name|String
name|instance
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|props
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"execProcedure not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|byte
index|[]
name|execProcedureWithReturn
parameter_list|(
name|String
name|signature
parameter_list|,
name|String
name|instance
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|props
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"execProcedureWithReturn not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isProcedureFinished
parameter_list|(
name|String
name|signature
parameter_list|,
name|String
name|instance
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|props
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"isProcedureFinished not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|SnapshotDescription
argument_list|>
name|listSnapshots
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"listSnapshots not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|SnapshotDescription
argument_list|>
name|listSnapshots
parameter_list|(
name|String
name|regex
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"listSnapshots not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|SnapshotDescription
argument_list|>
name|listSnapshots
parameter_list|(
name|Pattern
name|pattern
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"listSnapshots not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|SnapshotDescription
argument_list|>
name|listTableSnapshots
parameter_list|(
name|String
name|tableNameRegex
parameter_list|,
name|String
name|snapshotNameRegex
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"listTableSnapshots not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|SnapshotDescription
argument_list|>
name|listTableSnapshots
parameter_list|(
name|Pattern
name|tableNamePattern
parameter_list|,
name|Pattern
name|snapshotNamePattern
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"listTableSnapshots not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|deleteSnapshot
parameter_list|(
name|byte
index|[]
name|snapshotName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"deleteSnapshot not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|deleteSnapshot
parameter_list|(
name|String
name|snapshotName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"deleteSnapshot not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|deleteSnapshots
parameter_list|(
name|String
name|regex
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"deleteSnapshots not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|deleteSnapshots
parameter_list|(
name|Pattern
name|pattern
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"deleteSnapshots not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|deleteTableSnapshots
parameter_list|(
name|String
name|tableNameRegex
parameter_list|,
name|String
name|snapshotNameRegex
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"deleteTableSnapshots not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|deleteTableSnapshots
parameter_list|(
name|Pattern
name|tableNamePattern
parameter_list|,
name|Pattern
name|snapshotNamePattern
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"deleteTableSnapshots not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setQuota
parameter_list|(
name|QuotaSettings
name|quota
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"setQuota not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|QuotaRetriever
name|getQuotaRetriever
parameter_list|(
name|QuotaFilter
name|filter
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getQuotaRetriever not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|QuotaSettings
argument_list|>
name|getQuota
parameter_list|(
name|QuotaFilter
name|filter
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getQuota not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|CoprocessorRpcChannel
name|coprocessorService
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"coprocessorService not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|CoprocessorRpcChannel
name|coprocessorService
parameter_list|(
name|ServerName
name|serverName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"coprocessorService not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateConfiguration
parameter_list|(
name|ServerName
name|server
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"updateConfiguration not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateConfiguration
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"updateConfiguration not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|SecurityCapability
argument_list|>
name|getSecurityCapabilities
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getSecurityCapabilities not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|splitSwitch
parameter_list|(
name|boolean
name|enabled
parameter_list|,
name|boolean
name|synchronous
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"splitSwitch not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|mergeSwitch
parameter_list|(
name|boolean
name|enabled
parameter_list|,
name|boolean
name|synchronous
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"mergeSwitch not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isSplitEnabled
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"isSplitEnabled not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isMergeEnabled
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"isMergeEnabled not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addReplicationPeer
parameter_list|(
name|String
name|peerId
parameter_list|,
name|ReplicationPeerConfig
name|peerConfig
parameter_list|,
name|boolean
name|enabled
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"addReplicationPeer not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|addReplicationPeerAsync
parameter_list|(
name|String
name|peerId
parameter_list|,
name|ReplicationPeerConfig
name|peerConfig
parameter_list|,
name|boolean
name|enabled
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"addReplicationPeerAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|removeReplicationPeer
parameter_list|(
name|String
name|peerId
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"removeReplicationPeer not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|removeReplicationPeerAsync
parameter_list|(
name|String
name|peerId
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"removeReplicationPeerAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|enableReplicationPeer
parameter_list|(
name|String
name|peerId
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"enableReplicationPeer not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|enableReplicationPeerAsync
parameter_list|(
name|String
name|peerId
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"enableReplicationPeerAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|disableReplicationPeer
parameter_list|(
name|String
name|peerId
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"disableReplicationPeer not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|disableReplicationPeerAsync
parameter_list|(
name|String
name|peerId
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"disableReplicationPeerAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|ReplicationPeerConfig
name|getReplicationPeerConfig
parameter_list|(
name|String
name|peerId
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getReplicationPeerConfig not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateReplicationPeerConfig
parameter_list|(
name|String
name|peerId
parameter_list|,
name|ReplicationPeerConfig
name|peerConfig
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"updateReplicationPeerConfig not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|updateReplicationPeerConfigAsync
parameter_list|(
name|String
name|peerId
parameter_list|,
name|ReplicationPeerConfig
name|peerConfig
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"updateReplicationPeerConfigAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|appendReplicationPeerTableCFs
parameter_list|(
name|String
name|id
parameter_list|,
name|Map
argument_list|<
name|TableName
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|tableCfs
parameter_list|)
throws|throws
name|ReplicationException
throws|,
name|IOException
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"appendReplicationPeerTableCFs not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|removeReplicationPeerTableCFs
parameter_list|(
name|String
name|id
parameter_list|,
name|Map
argument_list|<
name|TableName
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|tableCfs
parameter_list|)
throws|throws
name|ReplicationException
throws|,
name|IOException
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"removeReplicationPeerTableCFs not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|ReplicationPeerDescription
argument_list|>
name|listReplicationPeers
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"listReplicationPeers not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|ReplicationPeerDescription
argument_list|>
name|listReplicationPeers
parameter_list|(
name|Pattern
name|pattern
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"listReplicationPeers not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|transitReplicationPeerSyncReplicationState
parameter_list|(
name|String
name|peerId
parameter_list|,
name|SyncReplicationState
name|state
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"transitReplicationPeerSyncReplicationState not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|transitReplicationPeerSyncReplicationStateAsync
parameter_list|(
name|String
name|peerId
parameter_list|,
name|SyncReplicationState
name|state
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"transitReplicationPeerSyncReplicationStateAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|decommissionRegionServers
parameter_list|(
name|List
argument_list|<
name|ServerName
argument_list|>
name|servers
parameter_list|,
name|boolean
name|offload
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"decommissionRegionServers not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|ServerName
argument_list|>
name|listDecommissionedRegionServers
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"listDecommissionedRegionServers not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|recommissionRegionServer
parameter_list|(
name|ServerName
name|server
parameter_list|,
name|List
argument_list|<
name|byte
index|[]
argument_list|>
name|encodedRegionNames
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"recommissionRegionServer not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|TableCFs
argument_list|>
name|listReplicatedTableCFs
parameter_list|()
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"listReplicatedTableCFs not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|enableTableReplication
parameter_list|(
name|TableName
name|tableName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"enableTableReplication not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|disableTableReplication
parameter_list|(
name|TableName
name|tableName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"disableTableReplication not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|clearCompactionQueues
parameter_list|(
name|ServerName
name|serverName
parameter_list|,
name|Set
argument_list|<
name|String
argument_list|>
name|queues
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"clearCompactionQueues not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|ServerName
argument_list|>
name|clearDeadServers
parameter_list|(
name|List
argument_list|<
name|ServerName
argument_list|>
name|servers
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"clearDeadServers not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|cloneTableSchema
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|TableName
name|newTableName
parameter_list|,
name|boolean
name|preserveSplits
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"cloneTableSchema not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|createTableAsync
parameter_list|(
name|TableDescriptor
name|desc
parameter_list|,
name|byte
index|[]
index|[]
name|splitKeys
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"createTableAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|deleteTableAsync
parameter_list|(
name|TableName
name|tableName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"deleteTableAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|truncateTableAsync
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|boolean
name|preserveSplits
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"truncateTableAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|enableTableAsync
parameter_list|(
name|TableName
name|tableName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"enableTableAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|disableTableAsync
parameter_list|(
name|TableName
name|tableName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"disableTableAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Pair
argument_list|<
name|Integer
argument_list|,
name|Integer
argument_list|>
name|getAlterStatus
parameter_list|(
name|TableName
name|tableName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getAlterStatus not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Pair
argument_list|<
name|Integer
argument_list|,
name|Integer
argument_list|>
name|getAlterStatus
parameter_list|(
name|byte
index|[]
name|tableName
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getAlterStatus not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|deleteColumnFamilyAsync
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|byte
index|[]
name|columnFamily
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"deleteColumnFamilyAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|addColumnFamilyAsync
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|ColumnFamilyDescriptor
name|columnFamily
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"addColumnFamilyAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|modifyColumnFamilyAsync
parameter_list|(
name|TableName
name|tableName
parameter_list|,
name|ColumnFamilyDescriptor
name|columnFamily
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"modifyColumnFamilyAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Future
argument_list|<
name|Void
argument_list|>
name|deleteNamespaceAsync
parameter_list|(
name|String
name|name
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"deleteNamespaceAsync not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|TableName
argument_list|,
name|Long
argument_list|>
name|getSpaceQuotaTableSizes
parameter_list|()
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getSpaceQuotaTableSizes not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|TableName
argument_list|,
name|SpaceQuotaSnapshot
argument_list|>
name|getRegionServerSpaceQuotaSnapshots
parameter_list|(
name|ServerName
name|serverName
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getRegionServerSpaceQuotaSnapshots not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|SpaceQuotaSnapshot
name|getCurrentSpaceQuotaSnapshot
parameter_list|(
name|String
name|namespace
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getCurrentSpaceQuotaSnapshot not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|SpaceQuotaSnapshot
name|getCurrentSpaceQuotaSnapshot
parameter_list|(
name|TableName
name|tableName
parameter_list|)
throws|throws
name|IOException
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"getCurrentSpaceQuotaSnapshot not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|grant
parameter_list|(
name|UserPermission
name|userPermission
parameter_list|,
name|boolean
name|mergeExistingPermissions
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"grant not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|revoke
parameter_list|(
name|UserPermission
name|userPermission
parameter_list|)
block|{
throw|throw
operator|new
name|NotImplementedException
argument_list|(
literal|"revoke not supported in ThriftAdmin"
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

