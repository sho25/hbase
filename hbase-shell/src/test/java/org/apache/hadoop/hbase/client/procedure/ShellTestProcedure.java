begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|procedure
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|procedure
operator|.
name|TableProcedureInterface
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|procedure2
operator|.
name|Procedure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|procedure2
operator|.
name|ProcedureStateSerializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|procedure2
operator|.
name|ProcedureSuspendedException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|procedure2
operator|.
name|ProcedureYieldException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|StringValue
import|;
end_import

begin_class
specifier|public
class|class
name|ShellTestProcedure
extends|extends
name|Procedure
argument_list|<
name|Object
argument_list|>
implements|implements
name|TableProcedureInterface
block|{
specifier|private
name|String
name|tableNameString
decl_stmt|;
specifier|public
name|ShellTestProcedure
parameter_list|()
block|{   }
specifier|public
name|ShellTestProcedure
parameter_list|(
name|String
name|tableNameString
parameter_list|)
block|{
name|setTableNameString
argument_list|(
name|tableNameString
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getTableNameString
parameter_list|()
block|{
return|return
name|tableNameString
return|;
block|}
specifier|public
name|void
name|setTableNameString
parameter_list|(
name|String
name|tableNameString
parameter_list|)
block|{
name|this
operator|.
name|tableNameString
operator|=
name|tableNameString
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|TableName
name|getTableName
parameter_list|()
block|{
return|return
name|TableName
operator|.
name|valueOf
argument_list|(
name|tableNameString
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|TableOperationType
name|getTableOperationType
parameter_list|()
block|{
return|return
name|TableOperationType
operator|.
name|EDIT
return|;
block|}
annotation|@
name|Override
specifier|protected
name|Procedure
argument_list|<
name|Object
argument_list|>
index|[]
name|execute
parameter_list|(
name|Object
name|env
parameter_list|)
throws|throws
name|ProcedureYieldException
throws|,
name|ProcedureSuspendedException
throws|,
name|InterruptedException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|rollback
parameter_list|(
name|Object
name|env
parameter_list|)
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{   }
annotation|@
name|Override
specifier|protected
name|boolean
name|abort
parameter_list|(
name|Object
name|env
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|serializeStateData
parameter_list|(
name|ProcedureStateSerializer
name|serializer
parameter_list|)
throws|throws
name|IOException
block|{
name|StringValue
name|message
init|=
name|StringValue
operator|.
name|newBuilder
argument_list|()
operator|.
name|setValue
argument_list|(
name|tableNameString
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|serializer
operator|.
name|serialize
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|deserializeStateData
parameter_list|(
name|ProcedureStateSerializer
name|serializer
parameter_list|)
throws|throws
name|IOException
block|{
name|StringValue
name|message
init|=
name|serializer
operator|.
name|deserialize
argument_list|(
name|StringValue
operator|.
name|class
argument_list|)
decl_stmt|;
name|tableNameString
operator|=
name|message
operator|.
name|getValue
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

