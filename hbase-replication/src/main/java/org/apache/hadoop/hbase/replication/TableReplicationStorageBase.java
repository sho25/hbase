begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|replication
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|HConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|NamespaceDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ServerName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|ColumnFamilyDescriptorBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|ConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|TableDescriptorBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|regionserver
operator|.
name|BloomType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|zookeeper
operator|.
name|ZKWatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hbase
operator|.
name|thirdparty
operator|.
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|annotations
operator|.
name|VisibleForTesting
import|;
end_import

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|TableReplicationStorageBase
block|{
specifier|protected
specifier|final
name|ZKWatcher
name|zookeeper
decl_stmt|;
specifier|protected
specifier|final
name|Configuration
name|conf
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|TableName
name|REPLICATION_TABLE
init|=
name|TableName
operator|.
name|valueOf
argument_list|(
name|NamespaceDescriptor
operator|.
name|SYSTEM_NAMESPACE_NAME_STR
argument_list|,
literal|"replication"
argument_list|)
decl_stmt|;
comment|// Peer family, the row key would be peer id.
specifier|public
specifier|static
specifier|final
name|byte
index|[]
name|FAMILY_PEER
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"peer"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|byte
index|[]
name|QUALIFIER_PEER_CONFIG
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"config"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|byte
index|[]
name|QUALIFIER_PEER_STATE
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"state"
argument_list|)
decl_stmt|;
comment|// Region server state family, the row key would be name of region server.
specifier|public
specifier|static
specifier|final
name|byte
index|[]
name|FAMILY_RS_STATE
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"rs_state"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|byte
index|[]
name|QUALIFIER_STATE_ENABLED
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"enabled"
argument_list|)
decl_stmt|;
comment|// Queue and wal family, the row key would be name of region server.
specifier|public
specifier|static
specifier|final
name|byte
index|[]
name|FAMILY_QUEUE
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"queue"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|byte
index|[]
name|FAMILY_WAL
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"wal"
argument_list|)
decl_stmt|;
comment|// HFile-Refs family, the row key would be peer id.
specifier|public
specifier|static
specifier|final
name|byte
index|[]
name|FAMILY_HFILE_REFS
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"hfile-refs"
argument_list|)
decl_stmt|;
comment|// Region family, the row key would be peer id.
specifier|public
specifier|static
specifier|final
name|byte
index|[]
name|FAMILY_REGIONS
init|=
name|Bytes
operator|.
name|toBytes
argument_list|(
literal|"regions"
argument_list|)
decl_stmt|;
specifier|private
name|Connection
name|connection
decl_stmt|;
specifier|protected
specifier|static
name|byte
index|[]
name|getServerNameRowKey
parameter_list|(
name|ServerName
name|serverName
parameter_list|)
block|{
return|return
name|Bytes
operator|.
name|toBytes
argument_list|(
name|serverName
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
specifier|protected
specifier|static
name|byte
index|[]
name|getRegionQualifier
parameter_list|(
name|String
name|encodedRegionName
parameter_list|)
block|{
return|return
name|Bytes
operator|.
name|toBytes
argument_list|(
name|encodedRegionName
argument_list|)
return|;
block|}
annotation|@
name|VisibleForTesting
specifier|public
specifier|static
name|TableDescriptorBuilder
name|createReplicationTableDescBuilder
parameter_list|(
specifier|final
name|Configuration
name|conf
parameter_list|)
throws|throws
name|IOException
block|{
name|int
name|metaMaxVersion
init|=
name|conf
operator|.
name|getInt
argument_list|(
name|HConstants
operator|.
name|HBASE_META_VERSIONS
argument_list|,
name|HConstants
operator|.
name|DEFAULT_HBASE_META_VERSIONS
argument_list|)
decl_stmt|;
name|int
name|metaBlockSize
init|=
name|conf
operator|.
name|getInt
argument_list|(
name|HConstants
operator|.
name|HBASE_META_BLOCK_SIZE
argument_list|,
name|HConstants
operator|.
name|DEFAULT_HBASE_META_BLOCK_SIZE
argument_list|)
decl_stmt|;
return|return
name|TableDescriptorBuilder
operator|.
name|newBuilder
argument_list|(
name|REPLICATION_TABLE
argument_list|)
operator|.
name|addColumnFamily
argument_list|(
name|ColumnFamilyDescriptorBuilder
operator|.
name|newBuilder
argument_list|(
name|FAMILY_PEER
argument_list|)
operator|.
name|setMaxVersions
argument_list|(
name|metaMaxVersion
argument_list|)
operator|.
name|setInMemory
argument_list|(
literal|true
argument_list|)
operator|.
name|setBlocksize
argument_list|(
name|metaBlockSize
argument_list|)
operator|.
name|setScope
argument_list|(
name|HConstants
operator|.
name|REPLICATION_SCOPE_LOCAL
argument_list|)
operator|.
name|setBloomFilterType
argument_list|(
name|BloomType
operator|.
name|NONE
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addColumnFamily
argument_list|(
name|ColumnFamilyDescriptorBuilder
operator|.
name|newBuilder
argument_list|(
name|FAMILY_RS_STATE
argument_list|)
operator|.
name|setMaxVersions
argument_list|(
name|metaMaxVersion
argument_list|)
operator|.
name|setInMemory
argument_list|(
literal|true
argument_list|)
operator|.
name|setBlocksize
argument_list|(
name|metaBlockSize
argument_list|)
operator|.
name|setScope
argument_list|(
name|HConstants
operator|.
name|REPLICATION_SCOPE_LOCAL
argument_list|)
operator|.
name|setBloomFilterType
argument_list|(
name|BloomType
operator|.
name|NONE
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addColumnFamily
argument_list|(
name|ColumnFamilyDescriptorBuilder
operator|.
name|newBuilder
argument_list|(
name|FAMILY_QUEUE
argument_list|)
operator|.
name|setMaxVersions
argument_list|(
name|metaMaxVersion
argument_list|)
operator|.
name|setInMemory
argument_list|(
literal|true
argument_list|)
operator|.
name|setBlocksize
argument_list|(
name|metaBlockSize
argument_list|)
operator|.
name|setScope
argument_list|(
name|HConstants
operator|.
name|REPLICATION_SCOPE_LOCAL
argument_list|)
operator|.
name|setBloomFilterType
argument_list|(
name|BloomType
operator|.
name|NONE
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addColumnFamily
argument_list|(
name|ColumnFamilyDescriptorBuilder
operator|.
name|newBuilder
argument_list|(
name|FAMILY_WAL
argument_list|)
operator|.
name|setMaxVersions
argument_list|(
name|HConstants
operator|.
name|ALL_VERSIONS
argument_list|)
operator|.
name|setInMemory
argument_list|(
literal|true
argument_list|)
operator|.
name|setBlocksize
argument_list|(
name|metaBlockSize
argument_list|)
operator|.
name|setScope
argument_list|(
name|HConstants
operator|.
name|REPLICATION_SCOPE_LOCAL
argument_list|)
operator|.
name|setBloomFilterType
argument_list|(
name|BloomType
operator|.
name|NONE
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addColumnFamily
argument_list|(
name|ColumnFamilyDescriptorBuilder
operator|.
name|newBuilder
argument_list|(
name|FAMILY_REGIONS
argument_list|)
operator|.
name|setMaxVersions
argument_list|(
name|metaMaxVersion
argument_list|)
operator|.
name|setInMemory
argument_list|(
literal|true
argument_list|)
operator|.
name|setBlocksize
argument_list|(
name|metaBlockSize
argument_list|)
operator|.
name|setScope
argument_list|(
name|HConstants
operator|.
name|REPLICATION_SCOPE_LOCAL
argument_list|)
operator|.
name|setBloomFilterType
argument_list|(
name|BloomType
operator|.
name|NONE
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|addColumnFamily
argument_list|(
name|ColumnFamilyDescriptorBuilder
operator|.
name|newBuilder
argument_list|(
name|FAMILY_HFILE_REFS
argument_list|)
operator|.
name|setMaxVersions
argument_list|(
name|metaMaxVersion
argument_list|)
operator|.
name|setInMemory
argument_list|(
literal|true
argument_list|)
operator|.
name|setBlocksize
argument_list|(
name|metaBlockSize
argument_list|)
operator|.
name|setScope
argument_list|(
name|HConstants
operator|.
name|REPLICATION_SCOPE_LOCAL
argument_list|)
operator|.
name|setBloomFilterType
argument_list|(
name|BloomType
operator|.
name|NONE
argument_list|)
operator|.
name|build
argument_list|()
argument_list|)
return|;
block|}
specifier|protected
name|TableReplicationStorageBase
parameter_list|(
name|ZKWatcher
name|zookeeper
parameter_list|,
name|Configuration
name|conf
parameter_list|)
throws|throws
name|IOException
block|{
name|this
operator|.
name|zookeeper
operator|=
name|zookeeper
expr_stmt|;
name|this
operator|.
name|conf
operator|=
name|conf
expr_stmt|;
name|this
operator|.
name|connection
operator|=
name|ConnectionFactory
operator|.
name|createConnection
argument_list|(
name|conf
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|Table
name|getReplicationMetaTable
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|this
operator|.
name|connection
operator|.
name|getTable
argument_list|(
name|REPLICATION_TABLE
argument_list|)
return|;
block|}
block|}
end_class

end_unit

