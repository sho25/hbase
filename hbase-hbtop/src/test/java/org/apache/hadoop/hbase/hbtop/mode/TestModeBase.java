begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|hbtop
operator|.
name|mode
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|hbtop
operator|.
name|Record
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|hbtop
operator|.
name|TestUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|TestModeBase
block|{
annotation|@
name|Test
specifier|public
name|void
name|testGetRecords
parameter_list|()
block|{
name|List
argument_list|<
name|Record
argument_list|>
name|records
init|=
name|getMode
argument_list|()
operator|.
name|getRecords
argument_list|(
name|TestUtils
operator|.
name|createDummyClusterMetrics
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertRecords
argument_list|(
name|records
argument_list|)
expr_stmt|;
block|}
specifier|protected
specifier|abstract
name|Mode
name|getMode
parameter_list|()
function_decl|;
specifier|protected
specifier|abstract
name|void
name|assertRecords
parameter_list|(
name|List
argument_list|<
name|Record
argument_list|>
name|records
parameter_list|)
function_decl|;
annotation|@
name|Test
specifier|public
name|void
name|testDrillDown
parameter_list|()
block|{
name|List
argument_list|<
name|Record
argument_list|>
name|records
init|=
name|getMode
argument_list|()
operator|.
name|getRecords
argument_list|(
name|TestUtils
operator|.
name|createDummyClusterMetrics
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
for|for
control|(
name|Record
name|record
range|:
name|records
control|)
block|{
name|assertDrillDown
argument_list|(
name|record
argument_list|,
name|getMode
argument_list|()
operator|.
name|drillDown
argument_list|(
name|record
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
specifier|abstract
name|void
name|assertDrillDown
parameter_list|(
name|Record
name|currentRecord
parameter_list|,
name|DrillDownInfo
name|drillDownInfo
parameter_list|)
function_decl|;
block|}
end_class

end_unit

