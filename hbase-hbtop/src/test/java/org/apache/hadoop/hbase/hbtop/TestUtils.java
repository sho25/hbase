begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|hbtop
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|is
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|time
operator|.
name|FastDateFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ClusterMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ClusterMetricsBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|RegionMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|RegionMetricsBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ServerMetrics
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ServerMetricsBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|ServerName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|Size
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|TableName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|client
operator|.
name|RegionInfoBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|hbtop
operator|.
name|field
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|hbtop
operator|.
name|screen
operator|.
name|top
operator|.
name|Summary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|master
operator|.
name|RegionState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|util
operator|.
name|Bytes
import|;
end_import

begin_class
specifier|public
specifier|final
class|class
name|TestUtils
block|{
specifier|private
name|TestUtils
parameter_list|()
block|{   }
specifier|public
specifier|static
name|ClusterMetrics
name|createDummyClusterMetrics
parameter_list|()
block|{
name|Map
argument_list|<
name|ServerName
argument_list|,
name|ServerMetrics
argument_list|>
name|serverMetricsMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
comment|// host1
name|List
argument_list|<
name|RegionMetrics
argument_list|>
name|regionMetricsList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|regionMetricsList
operator|.
name|add
argument_list|(
name|createRegionMetrics
argument_list|(
literal|"table1,,1.00000000000000000000000000000000."
argument_list|,
literal|100
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
operator|new
name|Size
argument_list|(
literal|100
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|200
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|1
argument_list|,
operator|new
name|Size
argument_list|(
literal|100
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|0.1f
argument_list|,
literal|100
argument_list|,
literal|100
argument_list|,
literal|"2019-07-22 00:00:00"
argument_list|)
argument_list|)
expr_stmt|;
name|regionMetricsList
operator|.
name|add
argument_list|(
name|createRegionMetrics
argument_list|(
literal|"table2,1,2.00000000000000000000000000000001."
argument_list|,
literal|200
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
operator|new
name|Size
argument_list|(
literal|200
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|400
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|2
argument_list|,
operator|new
name|Size
argument_list|(
literal|200
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|0.2f
argument_list|,
literal|50
argument_list|,
literal|200
argument_list|,
literal|"2019-07-22 00:00:01"
argument_list|)
argument_list|)
expr_stmt|;
name|regionMetricsList
operator|.
name|add
argument_list|(
name|createRegionMetrics
argument_list|(
literal|"namespace:table3,,3_0001.00000000000000000000000000000002."
argument_list|,
literal|300
argument_list|,
literal|150
argument_list|,
literal|300
argument_list|,
operator|new
name|Size
argument_list|(
literal|300
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|600
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|3
argument_list|,
operator|new
name|Size
argument_list|(
literal|300
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|0.3f
argument_list|,
literal|100
argument_list|,
literal|300
argument_list|,
literal|"2019-07-22 00:00:02"
argument_list|)
argument_list|)
expr_stmt|;
name|ServerName
name|host1
init|=
name|ServerName
operator|.
name|valueOf
argument_list|(
literal|"host1.apache.com"
argument_list|,
literal|1000
argument_list|,
literal|1
argument_list|)
decl_stmt|;
name|serverMetricsMap
operator|.
name|put
argument_list|(
name|host1
argument_list|,
name|createServerMetrics
argument_list|(
name|host1
argument_list|,
literal|100
argument_list|,
operator|new
name|Size
argument_list|(
literal|100
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|200
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|100
argument_list|,
name|regionMetricsList
argument_list|)
argument_list|)
expr_stmt|;
comment|// host2
name|regionMetricsList
operator|.
name|clear
argument_list|()
expr_stmt|;
name|regionMetricsList
operator|.
name|add
argument_list|(
name|createRegionMetrics
argument_list|(
literal|"table1,1,4.00000000000000000000000000000003."
argument_list|,
literal|100
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
operator|new
name|Size
argument_list|(
literal|100
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|200
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|1
argument_list|,
operator|new
name|Size
argument_list|(
literal|100
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|0.4f
argument_list|,
literal|50
argument_list|,
literal|100
argument_list|,
literal|"2019-07-22 00:00:03"
argument_list|)
argument_list|)
expr_stmt|;
name|regionMetricsList
operator|.
name|add
argument_list|(
name|createRegionMetrics
argument_list|(
literal|"table2,,5.00000000000000000000000000000004."
argument_list|,
literal|200
argument_list|,
literal|100
argument_list|,
literal|200
argument_list|,
operator|new
name|Size
argument_list|(
literal|200
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|400
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|2
argument_list|,
operator|new
name|Size
argument_list|(
literal|200
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|0.5f
argument_list|,
literal|150
argument_list|,
literal|200
argument_list|,
literal|"2019-07-22 00:00:04"
argument_list|)
argument_list|)
expr_stmt|;
name|regionMetricsList
operator|.
name|add
argument_list|(
name|createRegionMetrics
argument_list|(
literal|"namespace:table3,,6.00000000000000000000000000000005."
argument_list|,
literal|300
argument_list|,
literal|150
argument_list|,
literal|300
argument_list|,
operator|new
name|Size
argument_list|(
literal|300
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|600
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|3
argument_list|,
operator|new
name|Size
argument_list|(
literal|300
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|0.6f
argument_list|,
literal|200
argument_list|,
literal|300
argument_list|,
literal|"2019-07-22 00:00:05"
argument_list|)
argument_list|)
expr_stmt|;
name|ServerName
name|host2
init|=
name|ServerName
operator|.
name|valueOf
argument_list|(
literal|"host2.apache.com"
argument_list|,
literal|1001
argument_list|,
literal|2
argument_list|)
decl_stmt|;
name|serverMetricsMap
operator|.
name|put
argument_list|(
name|host2
argument_list|,
name|createServerMetrics
argument_list|(
name|host2
argument_list|,
literal|200
argument_list|,
operator|new
name|Size
argument_list|(
literal|16
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|GIGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|32
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|GIGABYTE
argument_list|)
argument_list|,
literal|200
argument_list|,
name|regionMetricsList
argument_list|)
argument_list|)
expr_stmt|;
name|ServerName
name|host3
init|=
name|ServerName
operator|.
name|valueOf
argument_list|(
literal|"host3.apache.com"
argument_list|,
literal|1002
argument_list|,
literal|3
argument_list|)
decl_stmt|;
return|return
name|ClusterMetricsBuilder
operator|.
name|newBuilder
argument_list|()
operator|.
name|setHBaseVersion
argument_list|(
literal|"3.0.0-SNAPSHOT"
argument_list|)
operator|.
name|setClusterId
argument_list|(
literal|"01234567-89ab-cdef-0123-456789abcdef"
argument_list|)
operator|.
name|setLiveServerMetrics
argument_list|(
name|serverMetricsMap
argument_list|)
operator|.
name|setDeadServerNames
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|host3
argument_list|)
argument_list|)
operator|.
name|setRegionsInTransition
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|RegionState
argument_list|(
name|RegionInfoBuilder
operator|.
name|newBuilder
argument_list|(
name|TableName
operator|.
name|valueOf
argument_list|(
literal|"table4"
argument_list|)
argument_list|)
operator|.
name|setStartKey
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|)
operator|.
name|setEndKey
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|)
operator|.
name|setOffline
argument_list|(
literal|true
argument_list|)
operator|.
name|setReplicaId
argument_list|(
literal|0
argument_list|)
operator|.
name|setRegionId
argument_list|(
literal|0
argument_list|)
operator|.
name|setSplit
argument_list|(
literal|false
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
name|RegionState
operator|.
name|State
operator|.
name|OFFLINE
argument_list|,
name|host3
argument_list|)
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|RegionMetrics
name|createRegionMetrics
parameter_list|(
name|String
name|regionName
parameter_list|,
name|long
name|readRequestCount
parameter_list|,
name|long
name|filteredReadRequestCount
parameter_list|,
name|long
name|writeRequestCount
parameter_list|,
name|Size
name|storeFileSize
parameter_list|,
name|Size
name|uncompressedStoreFileSize
parameter_list|,
name|int
name|storeFileCount
parameter_list|,
name|Size
name|memStoreSize
parameter_list|,
name|float
name|locality
parameter_list|,
name|long
name|compactedCellCount
parameter_list|,
name|long
name|compactingCellCount
parameter_list|,
name|String
name|lastMajorCompactionTime
parameter_list|)
block|{
name|FastDateFormat
name|df
init|=
name|FastDateFormat
operator|.
name|getInstance
argument_list|(
literal|"yyyy-MM-dd HH:mm:ss"
argument_list|)
decl_stmt|;
try|try
block|{
return|return
name|RegionMetricsBuilder
operator|.
name|newBuilder
argument_list|(
name|Bytes
operator|.
name|toBytes
argument_list|(
name|regionName
argument_list|)
argument_list|)
operator|.
name|setReadRequestCount
argument_list|(
name|readRequestCount
argument_list|)
operator|.
name|setFilteredReadRequestCount
argument_list|(
name|filteredReadRequestCount
argument_list|)
operator|.
name|setWriteRequestCount
argument_list|(
name|writeRequestCount
argument_list|)
operator|.
name|setStoreFileSize
argument_list|(
name|storeFileSize
argument_list|)
operator|.
name|setUncompressedStoreFileSize
argument_list|(
name|uncompressedStoreFileSize
argument_list|)
operator|.
name|setStoreFileCount
argument_list|(
name|storeFileCount
argument_list|)
operator|.
name|setMemStoreSize
argument_list|(
name|memStoreSize
argument_list|)
operator|.
name|setDataLocality
argument_list|(
name|locality
argument_list|)
operator|.
name|setCompactedCellCount
argument_list|(
name|compactedCellCount
argument_list|)
operator|.
name|setCompactingCellCount
argument_list|(
name|compactingCellCount
argument_list|)
operator|.
name|setLastMajorCompactionTimestamp
argument_list|(
name|df
operator|.
name|parse
argument_list|(
name|lastMajorCompactionTime
argument_list|)
operator|.
name|getTime
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|ParseException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
specifier|static
name|ServerMetrics
name|createServerMetrics
parameter_list|(
name|ServerName
name|serverName
parameter_list|,
name|long
name|reportTimestamp
parameter_list|,
name|Size
name|usedHeapSize
parameter_list|,
name|Size
name|maxHeapSize
parameter_list|,
name|long
name|requestCountPerSecond
parameter_list|,
name|List
argument_list|<
name|RegionMetrics
argument_list|>
name|regionMetricsList
parameter_list|)
block|{
return|return
name|ServerMetricsBuilder
operator|.
name|newBuilder
argument_list|(
name|serverName
argument_list|)
operator|.
name|setReportTimestamp
argument_list|(
name|reportTimestamp
argument_list|)
operator|.
name|setUsedHeapSize
argument_list|(
name|usedHeapSize
argument_list|)
operator|.
name|setMaxHeapSize
argument_list|(
name|maxHeapSize
argument_list|)
operator|.
name|setRequestCountPerSecond
argument_list|(
name|requestCountPerSecond
argument_list|)
operator|.
name|setRegionMetrics
argument_list|(
name|regionMetricsList
argument_list|)
operator|.
name|build
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|void
name|assertRecordsInRegionMode
parameter_list|(
name|List
argument_list|<
name|Record
argument_list|>
name|records
parameter_list|)
block|{
name|assertThat
argument_list|(
name|records
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Record
name|record
range|:
name|records
control|)
block|{
switch|switch
condition|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|REGION_NAME
argument_list|)
operator|.
name|asString
argument_list|()
condition|)
block|{
case|case
literal|"table1,,1.00000000000000000000000000000000."
case|:
name|assertRecordInRegionMode
argument_list|(
name|record
argument_list|,
literal|"default"
argument_list|,
literal|"1"
argument_list|,
literal|""
argument_list|,
literal|"table1"
argument_list|,
literal|"00000000000000000000000000000000"
argument_list|,
literal|"host1:1000"
argument_list|,
literal|"host1.apache.com,1000,1"
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
operator|new
name|Size
argument_list|(
literal|100
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|200
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|1
argument_list|,
operator|new
name|Size
argument_list|(
literal|100
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|0.1f
argument_list|,
literal|""
argument_list|,
literal|100L
argument_list|,
literal|100L
argument_list|,
literal|100f
argument_list|,
literal|"2019-07-22 00:00:00"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"table1,1,4.00000000000000000000000000000003."
case|:
name|assertRecordInRegionMode
argument_list|(
name|record
argument_list|,
literal|"default"
argument_list|,
literal|"4"
argument_list|,
literal|""
argument_list|,
literal|"table1"
argument_list|,
literal|"00000000000000000000000000000003"
argument_list|,
literal|"host2:1001"
argument_list|,
literal|"host2.apache.com,1001,2"
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
operator|new
name|Size
argument_list|(
literal|100
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|200
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|1
argument_list|,
operator|new
name|Size
argument_list|(
literal|100
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|0.4f
argument_list|,
literal|"1"
argument_list|,
literal|100L
argument_list|,
literal|50L
argument_list|,
literal|50f
argument_list|,
literal|"2019-07-22 00:00:03"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"table2,,5.00000000000000000000000000000004."
case|:
name|assertRecordInRegionMode
argument_list|(
name|record
argument_list|,
literal|"default"
argument_list|,
literal|"5"
argument_list|,
literal|""
argument_list|,
literal|"table2"
argument_list|,
literal|"00000000000000000000000000000004"
argument_list|,
literal|"host2:1001"
argument_list|,
literal|"host2.apache.com,1001,2"
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
operator|new
name|Size
argument_list|(
literal|200
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|400
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|2
argument_list|,
operator|new
name|Size
argument_list|(
literal|200
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|0.5f
argument_list|,
literal|""
argument_list|,
literal|200L
argument_list|,
literal|150L
argument_list|,
literal|75f
argument_list|,
literal|"2019-07-22 00:00:04"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"table2,1,2.00000000000000000000000000000001."
case|:
name|assertRecordInRegionMode
argument_list|(
name|record
argument_list|,
literal|"default"
argument_list|,
literal|"2"
argument_list|,
literal|""
argument_list|,
literal|"table2"
argument_list|,
literal|"00000000000000000000000000000001"
argument_list|,
literal|"host1:1000"
argument_list|,
literal|"host1.apache.com,1000,1"
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
operator|new
name|Size
argument_list|(
literal|200
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|400
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|2
argument_list|,
operator|new
name|Size
argument_list|(
literal|200
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|0.2f
argument_list|,
literal|"1"
argument_list|,
literal|200L
argument_list|,
literal|50L
argument_list|,
literal|25f
argument_list|,
literal|"2019-07-22 00:00:01"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"namespace:table3,,6.00000000000000000000000000000005."
case|:
name|assertRecordInRegionMode
argument_list|(
name|record
argument_list|,
literal|"namespace"
argument_list|,
literal|"6"
argument_list|,
literal|""
argument_list|,
literal|"table3"
argument_list|,
literal|"00000000000000000000000000000005"
argument_list|,
literal|"host2:1001"
argument_list|,
literal|"host2.apache.com,1001,2"
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
operator|new
name|Size
argument_list|(
literal|300
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|600
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|3
argument_list|,
operator|new
name|Size
argument_list|(
literal|300
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|0.6f
argument_list|,
literal|""
argument_list|,
literal|300L
argument_list|,
literal|200L
argument_list|,
literal|66.66667f
argument_list|,
literal|"2019-07-22 00:00:05"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"namespace:table3,,3_0001.00000000000000000000000000000002."
case|:
name|assertRecordInRegionMode
argument_list|(
name|record
argument_list|,
literal|"namespace"
argument_list|,
literal|"3"
argument_list|,
literal|"1"
argument_list|,
literal|"table3"
argument_list|,
literal|"00000000000000000000000000000002"
argument_list|,
literal|"host1:1000"
argument_list|,
literal|"host1.apache.com,1000,1"
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
operator|new
name|Size
argument_list|(
literal|300
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|600
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|3
argument_list|,
operator|new
name|Size
argument_list|(
literal|300
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|0.3f
argument_list|,
literal|""
argument_list|,
literal|300L
argument_list|,
literal|100L
argument_list|,
literal|33.333336f
argument_list|,
literal|"2019-07-22 00:00:02"
argument_list|)
expr_stmt|;
break|break;
default|default:
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|private
specifier|static
name|void
name|assertRecordInRegionMode
parameter_list|(
name|Record
name|record
parameter_list|,
name|String
name|namespace
parameter_list|,
name|String
name|startCode
parameter_list|,
name|String
name|replicaId
parameter_list|,
name|String
name|table
parameter_list|,
name|String
name|region
parameter_list|,
name|String
name|regionServer
parameter_list|,
name|String
name|longRegionServer
parameter_list|,
name|long
name|requestCountPerSecond
parameter_list|,
name|long
name|readRequestCountPerSecond
parameter_list|,
name|long
name|filteredReadRequestCountPerSecond
parameter_list|,
name|long
name|writeCountRequestPerSecond
parameter_list|,
name|Size
name|storeFileSize
parameter_list|,
name|Size
name|uncompressedStoreFileSize
parameter_list|,
name|int
name|numStoreFiles
parameter_list|,
name|Size
name|memStoreSize
parameter_list|,
name|float
name|Locality
parameter_list|,
name|String
name|startKey
parameter_list|,
name|long
name|compactingCellCount
parameter_list|,
name|long
name|compactedCellCount
parameter_list|,
name|float
name|compactionProgress
parameter_list|,
name|String
name|lastMajorCompactionTime
parameter_list|)
block|{
name|assertThat
argument_list|(
name|record
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|22
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|NAMESPACE
argument_list|)
operator|.
name|asString
argument_list|()
argument_list|,
name|is
argument_list|(
name|namespace
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|START_CODE
argument_list|)
operator|.
name|asString
argument_list|()
argument_list|,
name|is
argument_list|(
name|startCode
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|REPLICA_ID
argument_list|)
operator|.
name|asString
argument_list|()
argument_list|,
name|is
argument_list|(
name|replicaId
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|TABLE
argument_list|)
operator|.
name|asString
argument_list|()
argument_list|,
name|is
argument_list|(
name|table
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|REGION
argument_list|)
operator|.
name|asString
argument_list|()
argument_list|,
name|is
argument_list|(
name|region
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|REGION_SERVER
argument_list|)
operator|.
name|asString
argument_list|()
argument_list|,
name|is
argument_list|(
name|regionServer
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|LONG_REGION_SERVER
argument_list|)
operator|.
name|asString
argument_list|()
argument_list|,
name|is
argument_list|(
name|longRegionServer
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|REQUEST_COUNT_PER_SECOND
argument_list|)
operator|.
name|asLong
argument_list|()
argument_list|,
name|is
argument_list|(
name|requestCountPerSecond
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|READ_REQUEST_COUNT_PER_SECOND
argument_list|)
operator|.
name|asLong
argument_list|()
argument_list|,
name|is
argument_list|(
name|readRequestCountPerSecond
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|FILTERED_READ_REQUEST_COUNT_PER_SECOND
argument_list|)
operator|.
name|asLong
argument_list|()
argument_list|,
name|is
argument_list|(
name|filteredReadRequestCountPerSecond
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|WRITE_REQUEST_COUNT_PER_SECOND
argument_list|)
operator|.
name|asLong
argument_list|()
argument_list|,
name|is
argument_list|(
name|writeCountRequestPerSecond
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|STORE_FILE_SIZE
argument_list|)
operator|.
name|asSize
argument_list|()
argument_list|,
name|is
argument_list|(
name|storeFileSize
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|UNCOMPRESSED_STORE_FILE_SIZE
argument_list|)
operator|.
name|asSize
argument_list|()
argument_list|,
name|is
argument_list|(
name|uncompressedStoreFileSize
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|NUM_STORE_FILES
argument_list|)
operator|.
name|asInt
argument_list|()
argument_list|,
name|is
argument_list|(
name|numStoreFiles
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|MEM_STORE_SIZE
argument_list|)
operator|.
name|asSize
argument_list|()
argument_list|,
name|is
argument_list|(
name|memStoreSize
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|LOCALITY
argument_list|)
operator|.
name|asFloat
argument_list|()
argument_list|,
name|is
argument_list|(
name|Locality
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|START_KEY
argument_list|)
operator|.
name|asString
argument_list|()
argument_list|,
name|is
argument_list|(
name|startKey
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|COMPACTING_CELL_COUNT
argument_list|)
operator|.
name|asLong
argument_list|()
argument_list|,
name|is
argument_list|(
name|compactingCellCount
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|COMPACTED_CELL_COUNT
argument_list|)
operator|.
name|asLong
argument_list|()
argument_list|,
name|is
argument_list|(
name|compactedCellCount
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|COMPACTION_PROGRESS
argument_list|)
operator|.
name|asFloat
argument_list|()
argument_list|,
name|is
argument_list|(
name|compactionProgress
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|LAST_MAJOR_COMPACTION_TIME
argument_list|)
operator|.
name|asString
argument_list|()
argument_list|,
name|is
argument_list|(
name|lastMajorCompactionTime
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|assertRecordsInNamespaceMode
parameter_list|(
name|List
argument_list|<
name|Record
argument_list|>
name|records
parameter_list|)
block|{
name|assertThat
argument_list|(
name|records
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Record
name|record
range|:
name|records
control|)
block|{
switch|switch
condition|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|NAMESPACE
argument_list|)
operator|.
name|asString
argument_list|()
condition|)
block|{
case|case
literal|"default"
case|:
name|assertRecordInNamespaceMode
argument_list|(
name|record
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
operator|new
name|Size
argument_list|(
literal|600
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|1200
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|6
argument_list|,
operator|new
name|Size
argument_list|(
literal|600
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|4
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"namespace"
case|:
name|assertRecordInNamespaceMode
argument_list|(
name|record
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
operator|new
name|Size
argument_list|(
literal|600
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|1200
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|6
argument_list|,
operator|new
name|Size
argument_list|(
literal|600
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
break|break;
default|default:
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|private
specifier|static
name|void
name|assertRecordInNamespaceMode
parameter_list|(
name|Record
name|record
parameter_list|,
name|long
name|requestCountPerSecond
parameter_list|,
name|long
name|readRequestCountPerSecond
parameter_list|,
name|long
name|filteredReadRequestCountPerSecond
parameter_list|,
name|long
name|writeCountRequestPerSecond
parameter_list|,
name|Size
name|storeFileSize
parameter_list|,
name|Size
name|uncompressedStoreFileSize
parameter_list|,
name|int
name|numStoreFiles
parameter_list|,
name|Size
name|memStoreSize
parameter_list|,
name|int
name|regionCount
parameter_list|)
block|{
name|assertThat
argument_list|(
name|record
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|10
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|REQUEST_COUNT_PER_SECOND
argument_list|)
operator|.
name|asLong
argument_list|()
argument_list|,
name|is
argument_list|(
name|requestCountPerSecond
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|READ_REQUEST_COUNT_PER_SECOND
argument_list|)
operator|.
name|asLong
argument_list|()
argument_list|,
name|is
argument_list|(
name|readRequestCountPerSecond
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|FILTERED_READ_REQUEST_COUNT_PER_SECOND
argument_list|)
operator|.
name|asLong
argument_list|()
argument_list|,
name|is
argument_list|(
name|filteredReadRequestCountPerSecond
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|WRITE_REQUEST_COUNT_PER_SECOND
argument_list|)
operator|.
name|asLong
argument_list|()
argument_list|,
name|is
argument_list|(
name|writeCountRequestPerSecond
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|STORE_FILE_SIZE
argument_list|)
operator|.
name|asSize
argument_list|()
argument_list|,
name|is
argument_list|(
name|storeFileSize
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|UNCOMPRESSED_STORE_FILE_SIZE
argument_list|)
operator|.
name|asSize
argument_list|()
argument_list|,
name|is
argument_list|(
name|uncompressedStoreFileSize
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|NUM_STORE_FILES
argument_list|)
operator|.
name|asInt
argument_list|()
argument_list|,
name|is
argument_list|(
name|numStoreFiles
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|MEM_STORE_SIZE
argument_list|)
operator|.
name|asSize
argument_list|()
argument_list|,
name|is
argument_list|(
name|memStoreSize
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|REGION_COUNT
argument_list|)
operator|.
name|asInt
argument_list|()
argument_list|,
name|is
argument_list|(
name|regionCount
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|assertRecordsInTableMode
parameter_list|(
name|List
argument_list|<
name|Record
argument_list|>
name|records
parameter_list|)
block|{
name|assertThat
argument_list|(
name|records
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Record
name|record
range|:
name|records
control|)
block|{
name|String
name|tableName
init|=
name|String
operator|.
name|format
argument_list|(
literal|"%s:%s"
argument_list|,
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|NAMESPACE
argument_list|)
operator|.
name|asString
argument_list|()
argument_list|,
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|TABLE
argument_list|)
operator|.
name|asString
argument_list|()
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|tableName
condition|)
block|{
case|case
literal|"default:table1"
case|:
name|assertRecordInTableMode
argument_list|(
name|record
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
operator|new
name|Size
argument_list|(
literal|200
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|400
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|2
argument_list|,
operator|new
name|Size
argument_list|(
literal|200
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"default:table2"
case|:
name|assertRecordInTableMode
argument_list|(
name|record
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
operator|new
name|Size
argument_list|(
literal|400
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|800
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|4
argument_list|,
operator|new
name|Size
argument_list|(
literal|400
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"namespace:table3"
case|:
name|assertRecordInTableMode
argument_list|(
name|record
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
operator|new
name|Size
argument_list|(
literal|600
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|1200
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|6
argument_list|,
operator|new
name|Size
argument_list|(
literal|600
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|2
argument_list|)
expr_stmt|;
break|break;
default|default:
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|private
specifier|static
name|void
name|assertRecordInTableMode
parameter_list|(
name|Record
name|record
parameter_list|,
name|long
name|requestCountPerSecond
parameter_list|,
name|long
name|readRequestCountPerSecond
parameter_list|,
name|long
name|filteredReadRequestCountPerSecond
parameter_list|,
name|long
name|writeCountRequestPerSecond
parameter_list|,
name|Size
name|storeFileSize
parameter_list|,
name|Size
name|uncompressedStoreFileSize
parameter_list|,
name|int
name|numStoreFiles
parameter_list|,
name|Size
name|memStoreSize
parameter_list|,
name|int
name|regionCount
parameter_list|)
block|{
name|assertThat
argument_list|(
name|record
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|11
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|REQUEST_COUNT_PER_SECOND
argument_list|)
operator|.
name|asLong
argument_list|()
argument_list|,
name|is
argument_list|(
name|requestCountPerSecond
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|READ_REQUEST_COUNT_PER_SECOND
argument_list|)
operator|.
name|asLong
argument_list|()
argument_list|,
name|is
argument_list|(
name|readRequestCountPerSecond
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|FILTERED_READ_REQUEST_COUNT_PER_SECOND
argument_list|)
operator|.
name|asLong
argument_list|()
argument_list|,
name|is
argument_list|(
name|filteredReadRequestCountPerSecond
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|WRITE_REQUEST_COUNT_PER_SECOND
argument_list|)
operator|.
name|asLong
argument_list|()
argument_list|,
name|is
argument_list|(
name|writeCountRequestPerSecond
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|STORE_FILE_SIZE
argument_list|)
operator|.
name|asSize
argument_list|()
argument_list|,
name|is
argument_list|(
name|storeFileSize
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|UNCOMPRESSED_STORE_FILE_SIZE
argument_list|)
operator|.
name|asSize
argument_list|()
argument_list|,
name|is
argument_list|(
name|uncompressedStoreFileSize
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|NUM_STORE_FILES
argument_list|)
operator|.
name|asInt
argument_list|()
argument_list|,
name|is
argument_list|(
name|numStoreFiles
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|MEM_STORE_SIZE
argument_list|)
operator|.
name|asSize
argument_list|()
argument_list|,
name|is
argument_list|(
name|memStoreSize
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|REGION_COUNT
argument_list|)
operator|.
name|asInt
argument_list|()
argument_list|,
name|is
argument_list|(
name|regionCount
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|assertRecordsInRegionServerMode
parameter_list|(
name|List
argument_list|<
name|Record
argument_list|>
name|records
parameter_list|)
block|{
name|assertThat
argument_list|(
name|records
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Record
name|record
range|:
name|records
control|)
block|{
switch|switch
condition|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|REGION_SERVER
argument_list|)
operator|.
name|asString
argument_list|()
condition|)
block|{
case|case
literal|"host1:1000"
case|:
name|assertRecordInRegionServerMode
argument_list|(
name|record
argument_list|,
literal|"host1.apache.com,1000,1"
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
operator|new
name|Size
argument_list|(
literal|600
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|1200
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|6
argument_list|,
operator|new
name|Size
argument_list|(
literal|600
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|3
argument_list|,
operator|new
name|Size
argument_list|(
literal|100
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|200
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"host2:1001"
case|:
name|assertRecordInRegionServerMode
argument_list|(
name|record
argument_list|,
literal|"host2.apache.com,1001,2"
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
literal|0L
argument_list|,
operator|new
name|Size
argument_list|(
literal|600
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|1200
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|6
argument_list|,
operator|new
name|Size
argument_list|(
literal|600
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|MEGABYTE
argument_list|)
argument_list|,
literal|3
argument_list|,
operator|new
name|Size
argument_list|(
literal|16
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|GIGABYTE
argument_list|)
argument_list|,
operator|new
name|Size
argument_list|(
literal|32
argument_list|,
name|Size
operator|.
name|Unit
operator|.
name|GIGABYTE
argument_list|)
argument_list|)
expr_stmt|;
break|break;
default|default:
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|private
specifier|static
name|void
name|assertRecordInRegionServerMode
parameter_list|(
name|Record
name|record
parameter_list|,
name|String
name|longRegionServer
parameter_list|,
name|long
name|requestCountPerSecond
parameter_list|,
name|long
name|readRequestCountPerSecond
parameter_list|,
name|long
name|filteredReadRequestCountPerSecond
parameter_list|,
name|long
name|writeCountRequestPerSecond
parameter_list|,
name|Size
name|storeFileSize
parameter_list|,
name|Size
name|uncompressedStoreFileSize
parameter_list|,
name|int
name|numStoreFiles
parameter_list|,
name|Size
name|memStoreSize
parameter_list|,
name|int
name|regionCount
parameter_list|,
name|Size
name|usedHeapSize
parameter_list|,
name|Size
name|maxHeapSize
parameter_list|)
block|{
name|assertThat
argument_list|(
name|record
operator|.
name|size
argument_list|()
argument_list|,
name|is
argument_list|(
literal|13
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|LONG_REGION_SERVER
argument_list|)
operator|.
name|asString
argument_list|()
argument_list|,
name|is
argument_list|(
name|longRegionServer
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|REQUEST_COUNT_PER_SECOND
argument_list|)
operator|.
name|asLong
argument_list|()
argument_list|,
name|is
argument_list|(
name|requestCountPerSecond
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|READ_REQUEST_COUNT_PER_SECOND
argument_list|)
operator|.
name|asLong
argument_list|()
argument_list|,
name|is
argument_list|(
name|readRequestCountPerSecond
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|FILTERED_READ_REQUEST_COUNT_PER_SECOND
argument_list|)
operator|.
name|asLong
argument_list|()
argument_list|,
name|is
argument_list|(
name|filteredReadRequestCountPerSecond
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|WRITE_REQUEST_COUNT_PER_SECOND
argument_list|)
operator|.
name|asLong
argument_list|()
argument_list|,
name|is
argument_list|(
name|writeCountRequestPerSecond
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|STORE_FILE_SIZE
argument_list|)
operator|.
name|asSize
argument_list|()
argument_list|,
name|is
argument_list|(
name|storeFileSize
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|UNCOMPRESSED_STORE_FILE_SIZE
argument_list|)
operator|.
name|asSize
argument_list|()
argument_list|,
name|is
argument_list|(
name|uncompressedStoreFileSize
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|NUM_STORE_FILES
argument_list|)
operator|.
name|asInt
argument_list|()
argument_list|,
name|is
argument_list|(
name|numStoreFiles
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|MEM_STORE_SIZE
argument_list|)
operator|.
name|asSize
argument_list|()
argument_list|,
name|is
argument_list|(
name|memStoreSize
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|REGION_COUNT
argument_list|)
operator|.
name|asInt
argument_list|()
argument_list|,
name|is
argument_list|(
name|regionCount
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|USED_HEAP_SIZE
argument_list|)
operator|.
name|asSize
argument_list|()
argument_list|,
name|is
argument_list|(
name|usedHeapSize
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|record
operator|.
name|get
argument_list|(
name|Field
operator|.
name|MAX_HEAP_SIZE
argument_list|)
operator|.
name|asSize
argument_list|()
argument_list|,
name|is
argument_list|(
name|maxHeapSize
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|assertSummary
parameter_list|(
name|Summary
name|summary
parameter_list|)
block|{
name|assertThat
argument_list|(
name|summary
operator|.
name|getVersion
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"3.0.0-SNAPSHOT"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|summary
operator|.
name|getClusterId
argument_list|()
argument_list|,
name|is
argument_list|(
literal|"01234567-89ab-cdef-0123-456789abcdef"
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|summary
operator|.
name|getServers
argument_list|()
argument_list|,
name|is
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|summary
operator|.
name|getLiveServers
argument_list|()
argument_list|,
name|is
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|summary
operator|.
name|getDeadServers
argument_list|()
argument_list|,
name|is
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|summary
operator|.
name|getRegionCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|summary
operator|.
name|getRitCount
argument_list|()
argument_list|,
name|is
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|summary
operator|.
name|getAverageLoad
argument_list|()
argument_list|,
name|is
argument_list|(
literal|3.0
argument_list|)
argument_list|)
expr_stmt|;
name|assertThat
argument_list|(
name|summary
operator|.
name|getAggregateRequestPerSecond
argument_list|()
argument_list|,
name|is
argument_list|(
literal|300L
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

