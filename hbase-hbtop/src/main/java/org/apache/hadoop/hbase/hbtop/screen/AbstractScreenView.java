begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|hbtop
operator|.
name|screen
package|;
end_package

begin_import
import|import
name|edu
operator|.
name|umd
operator|.
name|cs
operator|.
name|findbugs
operator|.
name|annotations
operator|.
name|Nullable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|hbtop
operator|.
name|terminal
operator|.
name|KeyPress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|hbtop
operator|.
name|terminal
operator|.
name|Terminal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|hbtop
operator|.
name|terminal
operator|.
name|TerminalPrinter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|hbtop
operator|.
name|terminal
operator|.
name|TerminalSize
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_comment
comment|/**  * An abstract class for {@link ScreenView} that has the common useful methods and the default  * implementations for the abstract methods.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
specifier|abstract
class|class
name|AbstractScreenView
implements|implements
name|ScreenView
block|{
specifier|private
specifier|final
name|Screen
name|screen
decl_stmt|;
specifier|private
specifier|final
name|Terminal
name|terminal
decl_stmt|;
specifier|public
name|AbstractScreenView
parameter_list|(
name|Screen
name|screen
parameter_list|,
name|Terminal
name|terminal
parameter_list|)
block|{
name|this
operator|.
name|screen
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|screen
argument_list|)
expr_stmt|;
name|this
operator|.
name|terminal
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|terminal
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|init
parameter_list|()
block|{   }
annotation|@
name|Override
specifier|public
name|ScreenView
name|handleKeyPress
parameter_list|(
name|KeyPress
name|keyPress
parameter_list|)
block|{
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|ScreenView
name|handleTimer
parameter_list|()
block|{
return|return
name|this
return|;
block|}
specifier|protected
name|Screen
name|getScreen
parameter_list|()
block|{
return|return
name|screen
return|;
block|}
specifier|protected
name|Terminal
name|getTerminal
parameter_list|()
block|{
return|return
name|terminal
return|;
block|}
specifier|protected
name|void
name|setTimer
parameter_list|(
name|long
name|delay
parameter_list|)
block|{
name|screen
operator|.
name|setTimer
argument_list|(
name|delay
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|cancelTimer
parameter_list|()
block|{
name|screen
operator|.
name|cancelTimer
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|TerminalPrinter
name|getTerminalPrinter
parameter_list|(
name|int
name|startRow
parameter_list|)
block|{
return|return
name|terminal
operator|.
name|getTerminalPrinter
argument_list|(
name|startRow
argument_list|)
return|;
block|}
specifier|protected
name|TerminalSize
name|getTerminalSize
parameter_list|()
block|{
return|return
name|terminal
operator|.
name|getSize
argument_list|()
return|;
block|}
annotation|@
name|Nullable
specifier|protected
name|TerminalSize
name|doResizeIfNecessary
parameter_list|()
block|{
return|return
name|terminal
operator|.
name|doResizeIfNecessary
argument_list|()
return|;
block|}
specifier|public
name|void
name|clearTerminal
parameter_list|()
block|{
name|terminal
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|refreshTerminal
parameter_list|()
block|{
name|terminal
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|hideCursor
parameter_list|()
block|{
name|terminal
operator|.
name|hideCursor
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|setCursorPosition
parameter_list|(
name|int
name|column
parameter_list|,
name|int
name|row
parameter_list|)
block|{
name|terminal
operator|.
name|setCursorPosition
argument_list|(
name|column
argument_list|,
name|row
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

