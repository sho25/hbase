begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|hbtop
operator|.
name|terminal
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|hbtop
operator|.
name|terminal
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|hbtop
operator|.
name|terminal
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|hbtop
operator|.
name|terminal
operator|.
name|TerminalPrinter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_comment
comment|/**  * The implementation of the {@link TerminalPrinter} interface.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|TerminalPrinterImpl
implements|implements
name|TerminalPrinter
block|{
specifier|private
specifier|final
name|ScreenBuffer
name|screenBuffer
decl_stmt|;
specifier|private
name|int
name|row
decl_stmt|;
specifier|private
name|int
name|column
decl_stmt|;
specifier|private
specifier|final
name|Attributes
name|attributes
init|=
operator|new
name|Attributes
argument_list|()
decl_stmt|;
name|TerminalPrinterImpl
parameter_list|(
name|ScreenBuffer
name|screenBuffer
parameter_list|,
name|int
name|startRow
parameter_list|)
block|{
name|this
operator|.
name|screenBuffer
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|screenBuffer
argument_list|)
expr_stmt|;
name|this
operator|.
name|row
operator|=
name|startRow
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|TerminalPrinter
name|print
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|screenBuffer
operator|.
name|putString
argument_list|(
name|column
argument_list|,
name|row
argument_list|,
name|value
argument_list|,
name|attributes
argument_list|)
expr_stmt|;
name|column
operator|+=
name|value
operator|.
name|length
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|TerminalPrinter
name|startHighlight
parameter_list|()
block|{
name|attributes
operator|.
name|setForegroundColor
argument_list|(
name|Color
operator|.
name|BLACK
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|setBackgroundColor
argument_list|(
name|Color
operator|.
name|WHITE
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|TerminalPrinter
name|stopHighlight
parameter_list|()
block|{
name|attributes
operator|.
name|setForegroundColor
argument_list|(
name|Color
operator|.
name|WHITE
argument_list|)
expr_stmt|;
name|attributes
operator|.
name|setBackgroundColor
argument_list|(
name|Color
operator|.
name|BLACK
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|TerminalPrinter
name|startBold
parameter_list|()
block|{
name|attributes
operator|.
name|setBold
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|TerminalPrinter
name|stopBold
parameter_list|()
block|{
name|attributes
operator|.
name|setBold
argument_list|(
literal|false
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|endOfLine
parameter_list|()
block|{
name|screenBuffer
operator|.
name|endOfLine
argument_list|(
name|column
argument_list|,
name|row
argument_list|)
expr_stmt|;
name|row
operator|+=
literal|1
expr_stmt|;
name|column
operator|=
literal|0
expr_stmt|;
block|}
block|}
end_class

end_unit

