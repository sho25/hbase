begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|hbtop
operator|.
name|screen
operator|.
name|top
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|hbtop
operator|.
name|screen
operator|.
name|AbstractScreenView
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|hbtop
operator|.
name|screen
operator|.
name|Screen
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|hbtop
operator|.
name|screen
operator|.
name|ScreenView
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|hbtop
operator|.
name|terminal
operator|.
name|KeyPress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|hbtop
operator|.
name|terminal
operator|.
name|Terminal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_comment
comment|/**  * The message mode in the top screen.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|MessageModeScreenView
extends|extends
name|AbstractScreenView
block|{
specifier|private
specifier|final
name|int
name|row
decl_stmt|;
specifier|private
specifier|final
name|MessageModeScreenPresenter
name|messageModeScreenPresenter
decl_stmt|;
specifier|public
name|MessageModeScreenView
parameter_list|(
name|Screen
name|screen
parameter_list|,
name|Terminal
name|terminal
parameter_list|,
name|int
name|row
parameter_list|,
name|String
name|message
parameter_list|,
name|ScreenView
name|nextScreenView
parameter_list|)
block|{
name|super
argument_list|(
name|screen
argument_list|,
name|terminal
argument_list|)
expr_stmt|;
name|this
operator|.
name|row
operator|=
name|row
expr_stmt|;
name|this
operator|.
name|messageModeScreenPresenter
operator|=
operator|new
name|MessageModeScreenPresenter
argument_list|(
name|this
argument_list|,
name|message
argument_list|,
name|nextScreenView
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|init
parameter_list|()
block|{
name|messageModeScreenPresenter
operator|.
name|init
argument_list|()
expr_stmt|;
name|setTimer
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|ScreenView
name|handleTimer
parameter_list|()
block|{
return|return
name|messageModeScreenPresenter
operator|.
name|returnToNextScreen
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|ScreenView
name|handleKeyPress
parameter_list|(
name|KeyPress
name|keyPress
parameter_list|)
block|{
name|cancelTimer
argument_list|()
expr_stmt|;
return|return
name|messageModeScreenPresenter
operator|.
name|returnToNextScreen
argument_list|()
return|;
block|}
specifier|public
name|void
name|showMessage
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|getTerminalPrinter
argument_list|(
name|row
argument_list|)
operator|.
name|startHighlight
argument_list|()
operator|.
name|print
argument_list|(
literal|" "
argument_list|)
operator|.
name|print
argument_list|(
name|message
argument_list|)
operator|.
name|print
argument_list|(
literal|" "
argument_list|)
operator|.
name|stopHighlight
argument_list|()
operator|.
name|endOfLine
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

