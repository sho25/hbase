begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|hbtop
operator|.
name|mode
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|yetus
operator|.
name|audience
operator|.
name|InterfaceAudience
import|;
end_import

begin_comment
comment|/**  * Utility class for calculating request counts per second.  */
end_comment

begin_class
annotation|@
name|InterfaceAudience
operator|.
name|Private
specifier|public
class|class
name|RequestCountPerSecond
block|{
specifier|private
name|long
name|previousLastReportTimestamp
decl_stmt|;
specifier|private
name|long
name|previousReadRequestCount
decl_stmt|;
specifier|private
name|long
name|previousFilteredReadRequestCount
decl_stmt|;
specifier|private
name|long
name|previousWriteRequestCount
decl_stmt|;
specifier|private
name|long
name|readRequestCountPerSecond
decl_stmt|;
specifier|private
name|long
name|filteredReadRequestCountPerSecond
decl_stmt|;
specifier|private
name|long
name|writeRequestCountPerSecond
decl_stmt|;
specifier|public
name|void
name|refresh
parameter_list|(
name|long
name|lastReportTimestamp
parameter_list|,
name|long
name|readRequestCount
parameter_list|,
name|long
name|filteredReadRequestCount
parameter_list|,
name|long
name|writeRequestCount
parameter_list|)
block|{
if|if
condition|(
name|previousLastReportTimestamp
operator|==
literal|0
condition|)
block|{
name|previousLastReportTimestamp
operator|=
name|lastReportTimestamp
expr_stmt|;
name|previousReadRequestCount
operator|=
name|readRequestCount
expr_stmt|;
name|previousFilteredReadRequestCount
operator|=
name|filteredReadRequestCount
expr_stmt|;
name|previousWriteRequestCount
operator|=
name|writeRequestCount
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|previousLastReportTimestamp
operator|!=
name|lastReportTimestamp
condition|)
block|{
name|readRequestCountPerSecond
operator|=
operator|(
name|readRequestCount
operator|-
name|previousReadRequestCount
operator|)
operator|/
operator|(
operator|(
name|lastReportTimestamp
operator|-
name|previousLastReportTimestamp
operator|)
operator|/
literal|1000
operator|)
expr_stmt|;
name|filteredReadRequestCountPerSecond
operator|=
operator|(
name|filteredReadRequestCount
operator|-
name|previousFilteredReadRequestCount
operator|)
operator|/
operator|(
operator|(
name|lastReportTimestamp
operator|-
name|previousLastReportTimestamp
operator|)
operator|/
literal|1000
operator|)
expr_stmt|;
name|writeRequestCountPerSecond
operator|=
operator|(
name|writeRequestCount
operator|-
name|previousWriteRequestCount
operator|)
operator|/
operator|(
operator|(
name|lastReportTimestamp
operator|-
name|previousLastReportTimestamp
operator|)
operator|/
literal|1000
operator|)
expr_stmt|;
name|previousLastReportTimestamp
operator|=
name|lastReportTimestamp
expr_stmt|;
name|previousReadRequestCount
operator|=
name|readRequestCount
expr_stmt|;
name|previousFilteredReadRequestCount
operator|=
name|filteredReadRequestCount
expr_stmt|;
name|previousWriteRequestCount
operator|=
name|writeRequestCount
expr_stmt|;
block|}
block|}
specifier|public
name|long
name|getReadRequestCountPerSecond
parameter_list|()
block|{
return|return
name|readRequestCountPerSecond
operator|<
literal|0
condition|?
literal|0
else|:
name|readRequestCountPerSecond
return|;
block|}
specifier|public
name|long
name|getFilteredReadRequestCountPerSecond
parameter_list|()
block|{
return|return
name|filteredReadRequestCountPerSecond
operator|<
literal|0
condition|?
literal|0
else|:
name|filteredReadRequestCountPerSecond
return|;
block|}
specifier|public
name|long
name|getWriteRequestCountPerSecond
parameter_list|()
block|{
return|return
name|writeRequestCountPerSecond
operator|<
literal|0
condition|?
literal|0
else|:
name|writeRequestCountPerSecond
return|;
block|}
specifier|public
name|long
name|getRequestCountPerSecond
parameter_list|()
block|{
return|return
name|getReadRequestCountPerSecond
argument_list|()
operator|+
name|getWriteRequestCountPerSecond
argument_list|()
return|;
block|}
block|}
end_class

end_unit

