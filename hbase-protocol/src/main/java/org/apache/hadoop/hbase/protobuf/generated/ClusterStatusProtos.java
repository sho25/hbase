begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Generated by the protocol buffer compiler.  DO NOT EDIT!
end_comment

begin_comment
comment|// source: ClusterStatus.proto
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
package|;
end_package

begin_class
specifier|public
specifier|final
class|class
name|ClusterStatusProtos
block|{
specifier|private
name|ClusterStatusProtos
parameter_list|()
block|{}
specifier|public
specifier|static
name|void
name|registerAllExtensions
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistry
name|registry
parameter_list|)
block|{   }
specifier|public
interface|interface
name|RegionStateOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required .RegionInfo region_info = 1;
comment|/**      *<code>required .RegionInfo region_info = 1;</code>      */
name|boolean
name|hasRegionInfo
parameter_list|()
function_decl|;
comment|/**      *<code>required .RegionInfo region_info = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
name|getRegionInfo
parameter_list|()
function_decl|;
comment|/**      *<code>required .RegionInfo region_info = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfoOrBuilder
name|getRegionInfoOrBuilder
parameter_list|()
function_decl|;
comment|// required .RegionState.State state = 2;
comment|/**      *<code>required .RegionState.State state = 2;</code>      */
name|boolean
name|hasState
parameter_list|()
function_decl|;
comment|/**      *<code>required .RegionState.State state = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|State
name|getState
parameter_list|()
function_decl|;
comment|// optional uint64 stamp = 3;
comment|/**      *<code>optional uint64 stamp = 3;</code>      */
name|boolean
name|hasStamp
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint64 stamp = 3;</code>      */
name|long
name|getStamp
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code RegionState}    */
specifier|public
specifier|static
specifier|final
class|class
name|RegionState
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|RegionStateOrBuilder
block|{
comment|// Use RegionState.newBuilder() to construct.
specifier|private
name|RegionState
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|RegionState
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|RegionState
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|RegionState
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|RegionState
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|RegionState
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|regionInfo_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|regionInfo_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|regionInfo_
argument_list|)
expr_stmt|;
name|regionInfo_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|int
name|rawValue
init|=
name|input
operator|.
name|readEnum
argument_list|()
decl_stmt|;
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|State
name|value
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|State
operator|.
name|valueOf
argument_list|(
name|rawValue
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
name|unknownFields
operator|.
name|mergeVarintField
argument_list|(
literal|2
argument_list|,
name|rawValue
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|state_
operator|=
name|value
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|24
case|:
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|stamp_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_RegionState_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_RegionState_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|RegionState
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|RegionState
argument_list|>
argument_list|()
block|{
specifier|public
name|RegionState
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|RegionState
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|RegionState
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
comment|/**      * Protobuf enum {@code RegionState.State}      */
specifier|public
enum|enum
name|State
implements|implements
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ProtocolMessageEnum
block|{
comment|/**        *<code>OFFLINE = 0;</code>        *        *<pre>        * region is in an offline state        *</pre>        */
name|OFFLINE
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
block|,
comment|/**        *<code>PENDING_OPEN = 1;</code>        *        *<pre>        * sent rpc to server to open but has not begun        *</pre>        */
name|PENDING_OPEN
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
block|,
comment|/**        *<code>OPENING = 2;</code>        *        *<pre>        * server has begun to open but not yet done        *</pre>        */
name|OPENING
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
block|,
comment|/**        *<code>OPEN = 3;</code>        *        *<pre>        * server opened region and updated meta        *</pre>        */
name|OPEN
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
block|,
comment|/**        *<code>PENDING_CLOSE = 4;</code>        *        *<pre>        * sent rpc to server to close but has not begun        *</pre>        */
name|PENDING_CLOSE
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|)
block|,
comment|/**        *<code>CLOSING = 5;</code>        *        *<pre>        * server has begun to close but not yet done        *</pre>        */
name|CLOSING
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
block|,
comment|/**        *<code>CLOSED = 6;</code>        *        *<pre>        * server closed region and updated meta        *</pre>        */
name|CLOSED
argument_list|(
literal|6
argument_list|,
literal|6
argument_list|)
block|,
comment|/**        *<code>SPLITTING = 7;</code>        *        *<pre>        * server started split of a region        *</pre>        */
name|SPLITTING
argument_list|(
literal|7
argument_list|,
literal|7
argument_list|)
block|,
comment|/**        *<code>SPLIT = 8;</code>        *        *<pre>        * server completed split of a region        *</pre>        */
name|SPLIT
argument_list|(
literal|8
argument_list|,
literal|8
argument_list|)
block|,
comment|/**        *<code>FAILED_OPEN = 9;</code>        *        *<pre>        * failed to open, and won't retry any more        *</pre>        */
name|FAILED_OPEN
argument_list|(
literal|9
argument_list|,
literal|9
argument_list|)
block|,
comment|/**        *<code>FAILED_CLOSE = 10;</code>        *        *<pre>        * failed to close, and won't retry any more        *</pre>        */
name|FAILED_CLOSE
argument_list|(
literal|10
argument_list|,
literal|10
argument_list|)
block|,
comment|/**        *<code>MERGING = 11;</code>        *        *<pre>        * server started merge a region        *</pre>        */
name|MERGING
argument_list|(
literal|11
argument_list|,
literal|11
argument_list|)
block|,
comment|/**        *<code>MERGED = 12;</code>        *        *<pre>        * server completed merge of a region        *</pre>        */
name|MERGED
argument_list|(
literal|12
argument_list|,
literal|12
argument_list|)
block|,
comment|/**        *<code>SPLITTING_NEW = 13;</code>        *        *<pre>        * new region to be created when RS splits a parent        *</pre>        */
name|SPLITTING_NEW
argument_list|(
literal|13
argument_list|,
literal|13
argument_list|)
block|,
comment|/**        *<code>MERGING_NEW = 14;</code>        *        *<pre>        * region but hasn't be created yet, or master doesn't        * know it's already created        *</pre>        */
name|MERGING_NEW
argument_list|(
literal|14
argument_list|,
literal|14
argument_list|)
block|,       ;
comment|/**        *<code>OFFLINE = 0;</code>        *        *<pre>        * region is in an offline state        *</pre>        */
specifier|public
specifier|static
specifier|final
name|int
name|OFFLINE_VALUE
init|=
literal|0
decl_stmt|;
comment|/**        *<code>PENDING_OPEN = 1;</code>        *        *<pre>        * sent rpc to server to open but has not begun        *</pre>        */
specifier|public
specifier|static
specifier|final
name|int
name|PENDING_OPEN_VALUE
init|=
literal|1
decl_stmt|;
comment|/**        *<code>OPENING = 2;</code>        *        *<pre>        * server has begun to open but not yet done        *</pre>        */
specifier|public
specifier|static
specifier|final
name|int
name|OPENING_VALUE
init|=
literal|2
decl_stmt|;
comment|/**        *<code>OPEN = 3;</code>        *        *<pre>        * server opened region and updated meta        *</pre>        */
specifier|public
specifier|static
specifier|final
name|int
name|OPEN_VALUE
init|=
literal|3
decl_stmt|;
comment|/**        *<code>PENDING_CLOSE = 4;</code>        *        *<pre>        * sent rpc to server to close but has not begun        *</pre>        */
specifier|public
specifier|static
specifier|final
name|int
name|PENDING_CLOSE_VALUE
init|=
literal|4
decl_stmt|;
comment|/**        *<code>CLOSING = 5;</code>        *        *<pre>        * server has begun to close but not yet done        *</pre>        */
specifier|public
specifier|static
specifier|final
name|int
name|CLOSING_VALUE
init|=
literal|5
decl_stmt|;
comment|/**        *<code>CLOSED = 6;</code>        *        *<pre>        * server closed region and updated meta        *</pre>        */
specifier|public
specifier|static
specifier|final
name|int
name|CLOSED_VALUE
init|=
literal|6
decl_stmt|;
comment|/**        *<code>SPLITTING = 7;</code>        *        *<pre>        * server started split of a region        *</pre>        */
specifier|public
specifier|static
specifier|final
name|int
name|SPLITTING_VALUE
init|=
literal|7
decl_stmt|;
comment|/**        *<code>SPLIT = 8;</code>        *        *<pre>        * server completed split of a region        *</pre>        */
specifier|public
specifier|static
specifier|final
name|int
name|SPLIT_VALUE
init|=
literal|8
decl_stmt|;
comment|/**        *<code>FAILED_OPEN = 9;</code>        *        *<pre>        * failed to open, and won't retry any more        *</pre>        */
specifier|public
specifier|static
specifier|final
name|int
name|FAILED_OPEN_VALUE
init|=
literal|9
decl_stmt|;
comment|/**        *<code>FAILED_CLOSE = 10;</code>        *        *<pre>        * failed to close, and won't retry any more        *</pre>        */
specifier|public
specifier|static
specifier|final
name|int
name|FAILED_CLOSE_VALUE
init|=
literal|10
decl_stmt|;
comment|/**        *<code>MERGING = 11;</code>        *        *<pre>        * server started merge a region        *</pre>        */
specifier|public
specifier|static
specifier|final
name|int
name|MERGING_VALUE
init|=
literal|11
decl_stmt|;
comment|/**        *<code>MERGED = 12;</code>        *        *<pre>        * server completed merge of a region        *</pre>        */
specifier|public
specifier|static
specifier|final
name|int
name|MERGED_VALUE
init|=
literal|12
decl_stmt|;
comment|/**        *<code>SPLITTING_NEW = 13;</code>        *        *<pre>        * new region to be created when RS splits a parent        *</pre>        */
specifier|public
specifier|static
specifier|final
name|int
name|SPLITTING_NEW_VALUE
init|=
literal|13
decl_stmt|;
comment|/**        *<code>MERGING_NEW = 14;</code>        *        *<pre>        * region but hasn't be created yet, or master doesn't        * know it's already created        *</pre>        */
specifier|public
specifier|static
specifier|final
name|int
name|MERGING_NEW_VALUE
init|=
literal|14
decl_stmt|;
specifier|public
specifier|final
name|int
name|getNumber
parameter_list|()
block|{
return|return
name|value
return|;
block|}
specifier|public
specifier|static
name|State
name|valueOf
parameter_list|(
name|int
name|value
parameter_list|)
block|{
switch|switch
condition|(
name|value
condition|)
block|{
case|case
literal|0
case|:
return|return
name|OFFLINE
return|;
case|case
literal|1
case|:
return|return
name|PENDING_OPEN
return|;
case|case
literal|2
case|:
return|return
name|OPENING
return|;
case|case
literal|3
case|:
return|return
name|OPEN
return|;
case|case
literal|4
case|:
return|return
name|PENDING_CLOSE
return|;
case|case
literal|5
case|:
return|return
name|CLOSING
return|;
case|case
literal|6
case|:
return|return
name|CLOSED
return|;
case|case
literal|7
case|:
return|return
name|SPLITTING
return|;
case|case
literal|8
case|:
return|return
name|SPLIT
return|;
case|case
literal|9
case|:
return|return
name|FAILED_OPEN
return|;
case|case
literal|10
case|:
return|return
name|FAILED_CLOSE
return|;
case|case
literal|11
case|:
return|return
name|MERGING
return|;
case|case
literal|12
case|:
return|return
name|MERGED
return|;
case|case
literal|13
case|:
return|return
name|SPLITTING_NEW
return|;
case|case
literal|14
case|:
return|return
name|MERGING_NEW
return|;
default|default:
return|return
literal|null
return|;
block|}
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|State
argument_list|>
name|internalGetValueMap
parameter_list|()
block|{
return|return
name|internalValueMap
return|;
block|}
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|State
argument_list|>
name|internalValueMap
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Internal
operator|.
name|EnumLiteMap
argument_list|<
name|State
argument_list|>
argument_list|()
block|{
specifier|public
name|State
name|findValueByNumber
parameter_list|(
name|int
name|number
parameter_list|)
block|{
return|return
name|State
operator|.
name|valueOf
argument_list|(
name|number
argument_list|)
return|;
block|}
block|}
decl_stmt|;
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|getValueDescriptor
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|getDescriptor
argument_list|()
return|;
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|getDescriptor
argument_list|()
operator|.
name|getEnumTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
specifier|private
specifier|static
specifier|final
name|State
index|[]
name|VALUES
init|=
name|values
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|State
name|valueOf
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|EnumValueDescriptor
name|desc
parameter_list|)
block|{
if|if
condition|(
name|desc
operator|.
name|getType
argument_list|()
operator|!=
name|getDescriptor
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|java
operator|.
name|lang
operator|.
name|IllegalArgumentException
argument_list|(
literal|"EnumValueDescriptor is not for this type."
argument_list|)
throw|;
block|}
return|return
name|VALUES
index|[
name|desc
operator|.
name|getIndex
argument_list|()
index|]
return|;
block|}
specifier|private
specifier|final
name|int
name|index
decl_stmt|;
specifier|private
specifier|final
name|int
name|value
decl_stmt|;
specifier|private
name|State
parameter_list|(
name|int
name|index
parameter_list|,
name|int
name|value
parameter_list|)
block|{
name|this
operator|.
name|index
operator|=
name|index
expr_stmt|;
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(enum_scope:RegionState.State)
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required .RegionInfo region_info = 1;
specifier|public
specifier|static
specifier|final
name|int
name|REGION_INFO_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
name|regionInfo_
decl_stmt|;
comment|/**      *<code>required .RegionInfo region_info = 1;</code>      */
specifier|public
name|boolean
name|hasRegionInfo
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>required .RegionInfo region_info = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
name|getRegionInfo
parameter_list|()
block|{
return|return
name|regionInfo_
return|;
block|}
comment|/**      *<code>required .RegionInfo region_info = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfoOrBuilder
name|getRegionInfoOrBuilder
parameter_list|()
block|{
return|return
name|regionInfo_
return|;
block|}
comment|// required .RegionState.State state = 2;
specifier|public
specifier|static
specifier|final
name|int
name|STATE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|State
name|state_
decl_stmt|;
comment|/**      *<code>required .RegionState.State state = 2;</code>      */
specifier|public
name|boolean
name|hasState
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>required .RegionState.State state = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|State
name|getState
parameter_list|()
block|{
return|return
name|state_
return|;
block|}
comment|// optional uint64 stamp = 3;
specifier|public
specifier|static
specifier|final
name|int
name|STAMP_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|long
name|stamp_
decl_stmt|;
comment|/**      *<code>optional uint64 stamp = 3;</code>      */
specifier|public
name|boolean
name|hasStamp
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<code>optional uint64 stamp = 3;</code>      */
specifier|public
name|long
name|getStamp
parameter_list|()
block|{
return|return
name|stamp_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|regionInfo_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|state_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|State
operator|.
name|OFFLINE
expr_stmt|;
name|stamp_
operator|=
literal|0L
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasRegionInfo
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasState
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getRegionInfo
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|regionInfo_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeEnum
argument_list|(
literal|2
argument_list|,
name|state_
operator|.
name|getNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|3
argument_list|,
name|stamp_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|regionInfo_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeEnumSize
argument_list|(
literal|2
argument_list|,
name|state_
operator|.
name|getNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|3
argument_list|,
name|stamp_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasRegionInfo
argument_list|()
operator|==
name|other
operator|.
name|hasRegionInfo
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasRegionInfo
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getRegionInfo
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getRegionInfo
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasState
argument_list|()
operator|==
name|other
operator|.
name|hasState
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasState
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getState
argument_list|()
operator|==
name|other
operator|.
name|getState
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasStamp
argument_list|()
operator|==
name|other
operator|.
name|hasStamp
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasStamp
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getStamp
argument_list|()
operator|==
name|other
operator|.
name|getStamp
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getUnknownFields
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|private
name|int
name|memoizedHashCode
init|=
literal|0
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptorForType
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasRegionInfo
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|REGION_INFO_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getRegionInfo
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasState
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|STATE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashEnum
argument_list|(
name|getState
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasStamp
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|STAMP_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashLong
argument_list|(
name|getStamp
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|getUnknownFields
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code RegionState}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionStateOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_RegionState_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_RegionState_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.protobuf.generated.ClusterStatusProtos.RegionState.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getRegionInfoFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|regionInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|regionInfo_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionInfoBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|state_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|State
operator|.
name|OFFLINE
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|stamp_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_RegionState_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
if|if
condition|(
name|regionInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|regionInfo_
operator|=
name|regionInfo_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|regionInfo_
operator|=
name|regionInfoBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|state_
operator|=
name|state_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|stamp_
operator|=
name|stamp_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasRegionInfo
argument_list|()
condition|)
block|{
name|mergeRegionInfo
argument_list|(
name|other
operator|.
name|getRegionInfo
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasState
argument_list|()
condition|)
block|{
name|setState
argument_list|(
name|other
operator|.
name|getState
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasStamp
argument_list|()
condition|)
block|{
name|setStamp
argument_list|(
name|other
operator|.
name|getStamp
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasRegionInfo
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasState
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getRegionInfo
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required .RegionInfo region_info = 1;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
name|regionInfo_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfoOrBuilder
argument_list|>
name|regionInfoBuilder_
decl_stmt|;
comment|/**        *<code>required .RegionInfo region_info = 1;</code>        */
specifier|public
name|boolean
name|hasRegionInfo
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required .RegionInfo region_info = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
name|getRegionInfo
parameter_list|()
block|{
if|if
condition|(
name|regionInfoBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|regionInfo_
return|;
block|}
else|else
block|{
return|return
name|regionInfoBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>required .RegionInfo region_info = 1;</code>        */
specifier|public
name|Builder
name|setRegionInfo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
name|value
parameter_list|)
block|{
if|if
condition|(
name|regionInfoBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|regionInfo_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionInfoBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .RegionInfo region_info = 1;</code>        */
specifier|public
name|Builder
name|setRegionInfo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|regionInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|regionInfo_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionInfoBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .RegionInfo region_info = 1;</code>        */
specifier|public
name|Builder
name|mergeRegionInfo
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
name|value
parameter_list|)
block|{
if|if
condition|(
name|regionInfoBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
operator|&&
name|regionInfo_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|regionInfo_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
operator|.
name|newBuilder
argument_list|(
name|regionInfo_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionInfo_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionInfoBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .RegionInfo region_info = 1;</code>        */
specifier|public
name|Builder
name|clearRegionInfo
parameter_list|()
block|{
if|if
condition|(
name|regionInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|regionInfo_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionInfoBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .RegionInfo region_info = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
operator|.
name|Builder
name|getRegionInfoBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getRegionInfoFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>required .RegionInfo region_info = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfoOrBuilder
name|getRegionInfoOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|regionInfoBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|regionInfoBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|regionInfo_
return|;
block|}
block|}
comment|/**        *<code>required .RegionInfo region_info = 1;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfoOrBuilder
argument_list|>
name|getRegionInfoFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|regionInfoBuilder_
operator|==
literal|null
condition|)
block|{
name|regionInfoBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfo
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionInfoOrBuilder
argument_list|>
argument_list|(
name|regionInfo_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|regionInfo_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|regionInfoBuilder_
return|;
block|}
comment|// required .RegionState.State state = 2;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|State
name|state_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|State
operator|.
name|OFFLINE
decl_stmt|;
comment|/**        *<code>required .RegionState.State state = 2;</code>        */
specifier|public
name|boolean
name|hasState
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>required .RegionState.State state = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|State
name|getState
parameter_list|()
block|{
return|return
name|state_
return|;
block|}
comment|/**        *<code>required .RegionState.State state = 2;</code>        */
specifier|public
name|Builder
name|setState
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|State
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|state_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .RegionState.State state = 2;</code>        */
specifier|public
name|Builder
name|clearState
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|state_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|State
operator|.
name|OFFLINE
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint64 stamp = 3;
specifier|private
name|long
name|stamp_
decl_stmt|;
comment|/**        *<code>optional uint64 stamp = 3;</code>        */
specifier|public
name|boolean
name|hasStamp
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>optional uint64 stamp = 3;</code>        */
specifier|public
name|long
name|getStamp
parameter_list|()
block|{
return|return
name|stamp_
return|;
block|}
comment|/**        *<code>optional uint64 stamp = 3;</code>        */
specifier|public
name|Builder
name|setStamp
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|stamp_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint64 stamp = 3;</code>        */
specifier|public
name|Builder
name|clearStamp
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|stamp_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:RegionState)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|RegionState
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:RegionState)
block|}
specifier|public
interface|interface
name|RegionInTransitionOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required .RegionSpecifier spec = 1;
comment|/**      *<code>required .RegionSpecifier spec = 1;</code>      */
name|boolean
name|hasSpec
parameter_list|()
function_decl|;
comment|/**      *<code>required .RegionSpecifier spec = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
name|getSpec
parameter_list|()
function_decl|;
comment|/**      *<code>required .RegionSpecifier spec = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifierOrBuilder
name|getSpecOrBuilder
parameter_list|()
function_decl|;
comment|// required .RegionState region_state = 2;
comment|/**      *<code>required .RegionState region_state = 2;</code>      */
name|boolean
name|hasRegionState
parameter_list|()
function_decl|;
comment|/**      *<code>required .RegionState region_state = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|getRegionState
parameter_list|()
function_decl|;
comment|/**      *<code>required .RegionState region_state = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionStateOrBuilder
name|getRegionStateOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code RegionInTransition}    */
specifier|public
specifier|static
specifier|final
class|class
name|RegionInTransition
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|RegionInTransitionOrBuilder
block|{
comment|// Use RegionInTransition.newBuilder() to construct.
specifier|private
name|RegionInTransition
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|RegionInTransition
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|RegionInTransition
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|RegionInTransition
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|RegionInTransition
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|RegionInTransition
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|spec_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|spec_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|spec_
argument_list|)
expr_stmt|;
name|spec_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|regionState_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|regionState_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|regionState_
argument_list|)
expr_stmt|;
name|regionState_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_RegionInTransition_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_RegionInTransition_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|RegionInTransition
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|RegionInTransition
argument_list|>
argument_list|()
block|{
specifier|public
name|RegionInTransition
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|RegionInTransition
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|RegionInTransition
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required .RegionSpecifier spec = 1;
specifier|public
specifier|static
specifier|final
name|int
name|SPEC_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
name|spec_
decl_stmt|;
comment|/**      *<code>required .RegionSpecifier spec = 1;</code>      */
specifier|public
name|boolean
name|hasSpec
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>required .RegionSpecifier spec = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
name|getSpec
parameter_list|()
block|{
return|return
name|spec_
return|;
block|}
comment|/**      *<code>required .RegionSpecifier spec = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifierOrBuilder
name|getSpecOrBuilder
parameter_list|()
block|{
return|return
name|spec_
return|;
block|}
comment|// required .RegionState region_state = 2;
specifier|public
specifier|static
specifier|final
name|int
name|REGION_STATE_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|regionState_
decl_stmt|;
comment|/**      *<code>required .RegionState region_state = 2;</code>      */
specifier|public
name|boolean
name|hasRegionState
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>required .RegionState region_state = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|getRegionState
parameter_list|()
block|{
return|return
name|regionState_
return|;
block|}
comment|/**      *<code>required .RegionState region_state = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionStateOrBuilder
name|getRegionStateOrBuilder
parameter_list|()
block|{
return|return
name|regionState_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|spec_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|regionState_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasSpec
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasRegionState
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getSpec
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getRegionState
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|spec_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|regionState_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|spec_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|regionState_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasSpec
argument_list|()
operator|==
name|other
operator|.
name|hasSpec
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasSpec
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getSpec
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getSpec
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasRegionState
argument_list|()
operator|==
name|other
operator|.
name|hasRegionState
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasRegionState
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getRegionState
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getRegionState
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getUnknownFields
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|private
name|int
name|memoizedHashCode
init|=
literal|0
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptorForType
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasSpec
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|SPEC_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getSpec
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasRegionState
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|REGION_STATE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getRegionState
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|getUnknownFields
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code RegionInTransition}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransitionOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_RegionInTransition_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_RegionInTransition_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.protobuf.generated.ClusterStatusProtos.RegionInTransition.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getSpecFieldBuilder
argument_list|()
expr_stmt|;
name|getRegionStateFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|specBuilder_
operator|==
literal|null
condition|)
block|{
name|spec_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|specBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
if|if
condition|(
name|regionStateBuilder_
operator|==
literal|null
condition|)
block|{
name|regionState_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionStateBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_RegionInTransition_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
if|if
condition|(
name|specBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|spec_
operator|=
name|spec_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|spec_
operator|=
name|specBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
if|if
condition|(
name|regionStateBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|regionState_
operator|=
name|regionState_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|regionState_
operator|=
name|regionStateBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasSpec
argument_list|()
condition|)
block|{
name|mergeSpec
argument_list|(
name|other
operator|.
name|getSpec
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasRegionState
argument_list|()
condition|)
block|{
name|mergeRegionState
argument_list|(
name|other
operator|.
name|getRegionState
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasSpec
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasRegionState
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getSpec
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getRegionState
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required .RegionSpecifier spec = 1;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
name|spec_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifierOrBuilder
argument_list|>
name|specBuilder_
decl_stmt|;
comment|/**        *<code>required .RegionSpecifier spec = 1;</code>        */
specifier|public
name|boolean
name|hasSpec
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required .RegionSpecifier spec = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
name|getSpec
parameter_list|()
block|{
if|if
condition|(
name|specBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|spec_
return|;
block|}
else|else
block|{
return|return
name|specBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>required .RegionSpecifier spec = 1;</code>        */
specifier|public
name|Builder
name|setSpec
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
name|value
parameter_list|)
block|{
if|if
condition|(
name|specBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|spec_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|specBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .RegionSpecifier spec = 1;</code>        */
specifier|public
name|Builder
name|setSpec
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|specBuilder_
operator|==
literal|null
condition|)
block|{
name|spec_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|specBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .RegionSpecifier spec = 1;</code>        */
specifier|public
name|Builder
name|mergeSpec
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
name|value
parameter_list|)
block|{
if|if
condition|(
name|specBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
operator|&&
name|spec_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|spec_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|newBuilder
argument_list|(
name|spec_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|spec_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|specBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .RegionSpecifier spec = 1;</code>        */
specifier|public
name|Builder
name|clearSpec
parameter_list|()
block|{
if|if
condition|(
name|specBuilder_
operator|==
literal|null
condition|)
block|{
name|spec_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|specBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .RegionSpecifier spec = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|Builder
name|getSpecBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getSpecFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>required .RegionSpecifier spec = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifierOrBuilder
name|getSpecOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|specBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|specBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|spec_
return|;
block|}
block|}
comment|/**        *<code>required .RegionSpecifier spec = 1;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifierOrBuilder
argument_list|>
name|getSpecFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|specBuilder_
operator|==
literal|null
condition|)
block|{
name|specBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifierOrBuilder
argument_list|>
argument_list|(
name|spec_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|spec_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|specBuilder_
return|;
block|}
comment|// required .RegionState region_state = 2;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|regionState_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionStateOrBuilder
argument_list|>
name|regionStateBuilder_
decl_stmt|;
comment|/**        *<code>required .RegionState region_state = 2;</code>        */
specifier|public
name|boolean
name|hasRegionState
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>required .RegionState region_state = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|getRegionState
parameter_list|()
block|{
if|if
condition|(
name|regionStateBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|regionState_
return|;
block|}
else|else
block|{
return|return
name|regionStateBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>required .RegionState region_state = 2;</code>        */
specifier|public
name|Builder
name|setRegionState
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|value
parameter_list|)
block|{
if|if
condition|(
name|regionStateBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|regionState_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionStateBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .RegionState region_state = 2;</code>        */
specifier|public
name|Builder
name|setRegionState
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|regionStateBuilder_
operator|==
literal|null
condition|)
block|{
name|regionState_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionStateBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .RegionState region_state = 2;</code>        */
specifier|public
name|Builder
name|mergeRegionState
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
name|value
parameter_list|)
block|{
if|if
condition|(
name|regionStateBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
operator|&&
name|regionState_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|regionState_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|newBuilder
argument_list|(
name|regionState_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionState_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionStateBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .RegionState region_state = 2;</code>        */
specifier|public
name|Builder
name|clearRegionState
parameter_list|()
block|{
if|if
condition|(
name|regionStateBuilder_
operator|==
literal|null
condition|)
block|{
name|regionState_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionStateBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .RegionState region_state = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|Builder
name|getRegionStateBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getRegionStateFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>required .RegionState region_state = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionStateOrBuilder
name|getRegionStateOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|regionStateBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|regionStateBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|regionState_
return|;
block|}
block|}
comment|/**        *<code>required .RegionState region_state = 2;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionStateOrBuilder
argument_list|>
name|getRegionStateFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|regionStateBuilder_
operator|==
literal|null
condition|)
block|{
name|regionStateBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionState
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionStateOrBuilder
argument_list|>
argument_list|(
name|regionState_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|regionState_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|regionStateBuilder_
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:RegionInTransition)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|RegionInTransition
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:RegionInTransition)
block|}
specifier|public
interface|interface
name|RegionLoadOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required .RegionSpecifier region_specifier = 1;
comment|/**      *<code>required .RegionSpecifier region_specifier = 1;</code>      *      *<pre>      ** the region specifier       *</pre>      */
name|boolean
name|hasRegionSpecifier
parameter_list|()
function_decl|;
comment|/**      *<code>required .RegionSpecifier region_specifier = 1;</code>      *      *<pre>      ** the region specifier       *</pre>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
name|getRegionSpecifier
parameter_list|()
function_decl|;
comment|/**      *<code>required .RegionSpecifier region_specifier = 1;</code>      *      *<pre>      ** the region specifier       *</pre>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifierOrBuilder
name|getRegionSpecifierOrBuilder
parameter_list|()
function_decl|;
comment|// optional uint32 stores = 2;
comment|/**      *<code>optional uint32 stores = 2;</code>      *      *<pre>      ** the number of stores for the region       *</pre>      */
name|boolean
name|hasStores
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint32 stores = 2;</code>      *      *<pre>      ** the number of stores for the region       *</pre>      */
name|int
name|getStores
parameter_list|()
function_decl|;
comment|// optional uint32 storefiles = 3;
comment|/**      *<code>optional uint32 storefiles = 3;</code>      *      *<pre>      ** the number of storefiles for the region       *</pre>      */
name|boolean
name|hasStorefiles
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint32 storefiles = 3;</code>      *      *<pre>      ** the number of storefiles for the region       *</pre>      */
name|int
name|getStorefiles
parameter_list|()
function_decl|;
comment|// optional uint32 store_uncompressed_size_MB = 4;
comment|/**      *<code>optional uint32 store_uncompressed_size_MB = 4;</code>      *      *<pre>      ** the total size of the store files for the region, uncompressed, in MB       *</pre>      */
name|boolean
name|hasStoreUncompressedSizeMB
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint32 store_uncompressed_size_MB = 4;</code>      *      *<pre>      ** the total size of the store files for the region, uncompressed, in MB       *</pre>      */
name|int
name|getStoreUncompressedSizeMB
parameter_list|()
function_decl|;
comment|// optional uint32 storefile_size_MB = 5;
comment|/**      *<code>optional uint32 storefile_size_MB = 5;</code>      *      *<pre>      ** the current total size of the store files for the region, in MB       *</pre>      */
name|boolean
name|hasStorefileSizeMB
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint32 storefile_size_MB = 5;</code>      *      *<pre>      ** the current total size of the store files for the region, in MB       *</pre>      */
name|int
name|getStorefileSizeMB
parameter_list|()
function_decl|;
comment|// optional uint32 memstore_size_MB = 6;
comment|/**      *<code>optional uint32 memstore_size_MB = 6;</code>      *      *<pre>      ** the current size of the memstore for the region, in MB       *</pre>      */
name|boolean
name|hasMemstoreSizeMB
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint32 memstore_size_MB = 6;</code>      *      *<pre>      ** the current size of the memstore for the region, in MB       *</pre>      */
name|int
name|getMemstoreSizeMB
parameter_list|()
function_decl|;
comment|// optional uint32 storefile_index_size_MB = 7;
comment|/**      *<code>optional uint32 storefile_index_size_MB = 7;</code>      *      *<pre>      **      * The current total size of root-level store file indexes for the region,      * in MB. The same as {&#64;link #rootIndexSizeKB} but in MB.      *</pre>      */
name|boolean
name|hasStorefileIndexSizeMB
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint32 storefile_index_size_MB = 7;</code>      *      *<pre>      **      * The current total size of root-level store file indexes for the region,      * in MB. The same as {&#64;link #rootIndexSizeKB} but in MB.      *</pre>      */
name|int
name|getStorefileIndexSizeMB
parameter_list|()
function_decl|;
comment|// optional uint64 read_requests_count = 8;
comment|/**      *<code>optional uint64 read_requests_count = 8;</code>      *      *<pre>      ** the current total read requests made to region       *</pre>      */
name|boolean
name|hasReadRequestsCount
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint64 read_requests_count = 8;</code>      *      *<pre>      ** the current total read requests made to region       *</pre>      */
name|long
name|getReadRequestsCount
parameter_list|()
function_decl|;
comment|// optional uint64 write_requests_count = 9;
comment|/**      *<code>optional uint64 write_requests_count = 9;</code>      *      *<pre>      ** the current total write requests made to region       *</pre>      */
name|boolean
name|hasWriteRequestsCount
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint64 write_requests_count = 9;</code>      *      *<pre>      ** the current total write requests made to region       *</pre>      */
name|long
name|getWriteRequestsCount
parameter_list|()
function_decl|;
comment|// optional uint64 total_compacting_KVs = 10;
comment|/**      *<code>optional uint64 total_compacting_KVs = 10;</code>      *      *<pre>      ** the total compacting key values in currently running compaction       *</pre>      */
name|boolean
name|hasTotalCompactingKVs
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint64 total_compacting_KVs = 10;</code>      *      *<pre>      ** the total compacting key values in currently running compaction       *</pre>      */
name|long
name|getTotalCompactingKVs
parameter_list|()
function_decl|;
comment|// optional uint64 current_compacted_KVs = 11;
comment|/**      *<code>optional uint64 current_compacted_KVs = 11;</code>      *      *<pre>      ** the completed count of key values in currently running compaction       *</pre>      */
name|boolean
name|hasCurrentCompactedKVs
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint64 current_compacted_KVs = 11;</code>      *      *<pre>      ** the completed count of key values in currently running compaction       *</pre>      */
name|long
name|getCurrentCompactedKVs
parameter_list|()
function_decl|;
comment|// optional uint32 root_index_size_KB = 12;
comment|/**      *<code>optional uint32 root_index_size_KB = 12;</code>      *      *<pre>      ** The current total size of root-level indexes for the region, in KB.       *</pre>      */
name|boolean
name|hasRootIndexSizeKB
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint32 root_index_size_KB = 12;</code>      *      *<pre>      ** The current total size of root-level indexes for the region, in KB.       *</pre>      */
name|int
name|getRootIndexSizeKB
parameter_list|()
function_decl|;
comment|// optional uint32 total_static_index_size_KB = 13;
comment|/**      *<code>optional uint32 total_static_index_size_KB = 13;</code>      *      *<pre>      ** The total size of all index blocks, not just the root level, in KB.       *</pre>      */
name|boolean
name|hasTotalStaticIndexSizeKB
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint32 total_static_index_size_KB = 13;</code>      *      *<pre>      ** The total size of all index blocks, not just the root level, in KB.       *</pre>      */
name|int
name|getTotalStaticIndexSizeKB
parameter_list|()
function_decl|;
comment|// optional uint32 total_static_bloom_size_KB = 14;
comment|/**      *<code>optional uint32 total_static_bloom_size_KB = 14;</code>      *      *<pre>      **      * The total size of all Bloom filter blocks, not just loaded into the      * block cache, in KB.      *</pre>      */
name|boolean
name|hasTotalStaticBloomSizeKB
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint32 total_static_bloom_size_KB = 14;</code>      *      *<pre>      **      * The total size of all Bloom filter blocks, not just loaded into the      * block cache, in KB.      *</pre>      */
name|int
name|getTotalStaticBloomSizeKB
parameter_list|()
function_decl|;
comment|// optional uint64 complete_sequence_id = 15;
comment|/**      *<code>optional uint64 complete_sequence_id = 15;</code>      *      *<pre>      ** the most recent sequence Id from cache flush       *</pre>      */
name|boolean
name|hasCompleteSequenceId
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint64 complete_sequence_id = 15;</code>      *      *<pre>      ** the most recent sequence Id from cache flush       *</pre>      */
name|long
name|getCompleteSequenceId
parameter_list|()
function_decl|;
comment|// optional float data_locality = 16;
comment|/**      *<code>optional float data_locality = 16;</code>      *      *<pre>      ** The current data locality for region in the regionserver       *</pre>      */
name|boolean
name|hasDataLocality
parameter_list|()
function_decl|;
comment|/**      *<code>optional float data_locality = 16;</code>      *      *<pre>      ** The current data locality for region in the regionserver       *</pre>      */
name|float
name|getDataLocality
parameter_list|()
function_decl|;
comment|// optional uint64 last_major_compaction_ts = 17 [default = 0];
comment|/**      *<code>optional uint64 last_major_compaction_ts = 17 [default = 0];</code>      */
name|boolean
name|hasLastMajorCompactionTs
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint64 last_major_compaction_ts = 17 [default = 0];</code>      */
name|long
name|getLastMajorCompactionTs
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code RegionLoad}    */
specifier|public
specifier|static
specifier|final
class|class
name|RegionLoad
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|RegionLoadOrBuilder
block|{
comment|// Use RegionLoad.newBuilder() to construct.
specifier|private
name|RegionLoad
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|RegionLoad
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|RegionLoad
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|RegionLoad
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|RegionLoad
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|RegionLoad
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|regionSpecifier_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|regionSpecifier_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|regionSpecifier_
argument_list|)
expr_stmt|;
name|regionSpecifier_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|stores_
operator|=
name|input
operator|.
name|readUInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|24
case|:
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|storefiles_
operator|=
name|input
operator|.
name|readUInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|32
case|:
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|storeUncompressedSizeMB_
operator|=
name|input
operator|.
name|readUInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|40
case|:
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|storefileSizeMB_
operator|=
name|input
operator|.
name|readUInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|48
case|:
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|memstoreSizeMB_
operator|=
name|input
operator|.
name|readUInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|56
case|:
block|{
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|storefileIndexSizeMB_
operator|=
name|input
operator|.
name|readUInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|64
case|:
block|{
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
name|readRequestsCount_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|72
case|:
block|{
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
name|writeRequestsCount_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|80
case|:
block|{
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
name|totalCompactingKVs_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|88
case|:
block|{
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|currentCompactedKVs_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|96
case|:
block|{
name|bitField0_
operator||=
literal|0x00000800
expr_stmt|;
name|rootIndexSizeKB_
operator|=
name|input
operator|.
name|readUInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|104
case|:
block|{
name|bitField0_
operator||=
literal|0x00001000
expr_stmt|;
name|totalStaticIndexSizeKB_
operator|=
name|input
operator|.
name|readUInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|112
case|:
block|{
name|bitField0_
operator||=
literal|0x00002000
expr_stmt|;
name|totalStaticBloomSizeKB_
operator|=
name|input
operator|.
name|readUInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|120
case|:
block|{
name|bitField0_
operator||=
literal|0x00004000
expr_stmt|;
name|completeSequenceId_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|133
case|:
block|{
name|bitField0_
operator||=
literal|0x00008000
expr_stmt|;
name|dataLocality_
operator|=
name|input
operator|.
name|readFloat
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|136
case|:
block|{
name|bitField0_
operator||=
literal|0x00010000
expr_stmt|;
name|lastMajorCompactionTs_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_RegionLoad_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_RegionLoad_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|RegionLoad
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|RegionLoad
argument_list|>
argument_list|()
block|{
specifier|public
name|RegionLoad
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|RegionLoad
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|RegionLoad
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required .RegionSpecifier region_specifier = 1;
specifier|public
specifier|static
specifier|final
name|int
name|REGION_SPECIFIER_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
name|regionSpecifier_
decl_stmt|;
comment|/**      *<code>required .RegionSpecifier region_specifier = 1;</code>      *      *<pre>      ** the region specifier       *</pre>      */
specifier|public
name|boolean
name|hasRegionSpecifier
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>required .RegionSpecifier region_specifier = 1;</code>      *      *<pre>      ** the region specifier       *</pre>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
name|getRegionSpecifier
parameter_list|()
block|{
return|return
name|regionSpecifier_
return|;
block|}
comment|/**      *<code>required .RegionSpecifier region_specifier = 1;</code>      *      *<pre>      ** the region specifier       *</pre>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifierOrBuilder
name|getRegionSpecifierOrBuilder
parameter_list|()
block|{
return|return
name|regionSpecifier_
return|;
block|}
comment|// optional uint32 stores = 2;
specifier|public
specifier|static
specifier|final
name|int
name|STORES_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|int
name|stores_
decl_stmt|;
comment|/**      *<code>optional uint32 stores = 2;</code>      *      *<pre>      ** the number of stores for the region       *</pre>      */
specifier|public
name|boolean
name|hasStores
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>optional uint32 stores = 2;</code>      *      *<pre>      ** the number of stores for the region       *</pre>      */
specifier|public
name|int
name|getStores
parameter_list|()
block|{
return|return
name|stores_
return|;
block|}
comment|// optional uint32 storefiles = 3;
specifier|public
specifier|static
specifier|final
name|int
name|STOREFILES_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|int
name|storefiles_
decl_stmt|;
comment|/**      *<code>optional uint32 storefiles = 3;</code>      *      *<pre>      ** the number of storefiles for the region       *</pre>      */
specifier|public
name|boolean
name|hasStorefiles
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<code>optional uint32 storefiles = 3;</code>      *      *<pre>      ** the number of storefiles for the region       *</pre>      */
specifier|public
name|int
name|getStorefiles
parameter_list|()
block|{
return|return
name|storefiles_
return|;
block|}
comment|// optional uint32 store_uncompressed_size_MB = 4;
specifier|public
specifier|static
specifier|final
name|int
name|STORE_UNCOMPRESSED_SIZE_MB_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|int
name|storeUncompressedSizeMB_
decl_stmt|;
comment|/**      *<code>optional uint32 store_uncompressed_size_MB = 4;</code>      *      *<pre>      ** the total size of the store files for the region, uncompressed, in MB       *</pre>      */
specifier|public
name|boolean
name|hasStoreUncompressedSizeMB
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**      *<code>optional uint32 store_uncompressed_size_MB = 4;</code>      *      *<pre>      ** the total size of the store files for the region, uncompressed, in MB       *</pre>      */
specifier|public
name|int
name|getStoreUncompressedSizeMB
parameter_list|()
block|{
return|return
name|storeUncompressedSizeMB_
return|;
block|}
comment|// optional uint32 storefile_size_MB = 5;
specifier|public
specifier|static
specifier|final
name|int
name|STOREFILE_SIZE_MB_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|int
name|storefileSizeMB_
decl_stmt|;
comment|/**      *<code>optional uint32 storefile_size_MB = 5;</code>      *      *<pre>      ** the current total size of the store files for the region, in MB       *</pre>      */
specifier|public
name|boolean
name|hasStorefileSizeMB
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**      *<code>optional uint32 storefile_size_MB = 5;</code>      *      *<pre>      ** the current total size of the store files for the region, in MB       *</pre>      */
specifier|public
name|int
name|getStorefileSizeMB
parameter_list|()
block|{
return|return
name|storefileSizeMB_
return|;
block|}
comment|// optional uint32 memstore_size_MB = 6;
specifier|public
specifier|static
specifier|final
name|int
name|MEMSTORE_SIZE_MB_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|int
name|memstoreSizeMB_
decl_stmt|;
comment|/**      *<code>optional uint32 memstore_size_MB = 6;</code>      *      *<pre>      ** the current size of the memstore for the region, in MB       *</pre>      */
specifier|public
name|boolean
name|hasMemstoreSizeMB
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**      *<code>optional uint32 memstore_size_MB = 6;</code>      *      *<pre>      ** the current size of the memstore for the region, in MB       *</pre>      */
specifier|public
name|int
name|getMemstoreSizeMB
parameter_list|()
block|{
return|return
name|memstoreSizeMB_
return|;
block|}
comment|// optional uint32 storefile_index_size_MB = 7;
specifier|public
specifier|static
specifier|final
name|int
name|STOREFILE_INDEX_SIZE_MB_FIELD_NUMBER
init|=
literal|7
decl_stmt|;
specifier|private
name|int
name|storefileIndexSizeMB_
decl_stmt|;
comment|/**      *<code>optional uint32 storefile_index_size_MB = 7;</code>      *      *<pre>      **      * The current total size of root-level store file indexes for the region,      * in MB. The same as {&#64;link #rootIndexSizeKB} but in MB.      *</pre>      */
specifier|public
name|boolean
name|hasStorefileIndexSizeMB
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
return|;
block|}
comment|/**      *<code>optional uint32 storefile_index_size_MB = 7;</code>      *      *<pre>      **      * The current total size of root-level store file indexes for the region,      * in MB. The same as {&#64;link #rootIndexSizeKB} but in MB.      *</pre>      */
specifier|public
name|int
name|getStorefileIndexSizeMB
parameter_list|()
block|{
return|return
name|storefileIndexSizeMB_
return|;
block|}
comment|// optional uint64 read_requests_count = 8;
specifier|public
specifier|static
specifier|final
name|int
name|READ_REQUESTS_COUNT_FIELD_NUMBER
init|=
literal|8
decl_stmt|;
specifier|private
name|long
name|readRequestsCount_
decl_stmt|;
comment|/**      *<code>optional uint64 read_requests_count = 8;</code>      *      *<pre>      ** the current total read requests made to region       *</pre>      */
specifier|public
name|boolean
name|hasReadRequestsCount
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
return|;
block|}
comment|/**      *<code>optional uint64 read_requests_count = 8;</code>      *      *<pre>      ** the current total read requests made to region       *</pre>      */
specifier|public
name|long
name|getReadRequestsCount
parameter_list|()
block|{
return|return
name|readRequestsCount_
return|;
block|}
comment|// optional uint64 write_requests_count = 9;
specifier|public
specifier|static
specifier|final
name|int
name|WRITE_REQUESTS_COUNT_FIELD_NUMBER
init|=
literal|9
decl_stmt|;
specifier|private
name|long
name|writeRequestsCount_
decl_stmt|;
comment|/**      *<code>optional uint64 write_requests_count = 9;</code>      *      *<pre>      ** the current total write requests made to region       *</pre>      */
specifier|public
name|boolean
name|hasWriteRequestsCount
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
return|;
block|}
comment|/**      *<code>optional uint64 write_requests_count = 9;</code>      *      *<pre>      ** the current total write requests made to region       *</pre>      */
specifier|public
name|long
name|getWriteRequestsCount
parameter_list|()
block|{
return|return
name|writeRequestsCount_
return|;
block|}
comment|// optional uint64 total_compacting_KVs = 10;
specifier|public
specifier|static
specifier|final
name|int
name|TOTAL_COMPACTING_KVS_FIELD_NUMBER
init|=
literal|10
decl_stmt|;
specifier|private
name|long
name|totalCompactingKVs_
decl_stmt|;
comment|/**      *<code>optional uint64 total_compacting_KVs = 10;</code>      *      *<pre>      ** the total compacting key values in currently running compaction       *</pre>      */
specifier|public
name|boolean
name|hasTotalCompactingKVs
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
return|;
block|}
comment|/**      *<code>optional uint64 total_compacting_KVs = 10;</code>      *      *<pre>      ** the total compacting key values in currently running compaction       *</pre>      */
specifier|public
name|long
name|getTotalCompactingKVs
parameter_list|()
block|{
return|return
name|totalCompactingKVs_
return|;
block|}
comment|// optional uint64 current_compacted_KVs = 11;
specifier|public
specifier|static
specifier|final
name|int
name|CURRENT_COMPACTED_KVS_FIELD_NUMBER
init|=
literal|11
decl_stmt|;
specifier|private
name|long
name|currentCompactedKVs_
decl_stmt|;
comment|/**      *<code>optional uint64 current_compacted_KVs = 11;</code>      *      *<pre>      ** the completed count of key values in currently running compaction       *</pre>      */
specifier|public
name|boolean
name|hasCurrentCompactedKVs
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
return|;
block|}
comment|/**      *<code>optional uint64 current_compacted_KVs = 11;</code>      *      *<pre>      ** the completed count of key values in currently running compaction       *</pre>      */
specifier|public
name|long
name|getCurrentCompactedKVs
parameter_list|()
block|{
return|return
name|currentCompactedKVs_
return|;
block|}
comment|// optional uint32 root_index_size_KB = 12;
specifier|public
specifier|static
specifier|final
name|int
name|ROOT_INDEX_SIZE_KB_FIELD_NUMBER
init|=
literal|12
decl_stmt|;
specifier|private
name|int
name|rootIndexSizeKB_
decl_stmt|;
comment|/**      *<code>optional uint32 root_index_size_KB = 12;</code>      *      *<pre>      ** The current total size of root-level indexes for the region, in KB.       *</pre>      */
specifier|public
name|boolean
name|hasRootIndexSizeKB
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
return|;
block|}
comment|/**      *<code>optional uint32 root_index_size_KB = 12;</code>      *      *<pre>      ** The current total size of root-level indexes for the region, in KB.       *</pre>      */
specifier|public
name|int
name|getRootIndexSizeKB
parameter_list|()
block|{
return|return
name|rootIndexSizeKB_
return|;
block|}
comment|// optional uint32 total_static_index_size_KB = 13;
specifier|public
specifier|static
specifier|final
name|int
name|TOTAL_STATIC_INDEX_SIZE_KB_FIELD_NUMBER
init|=
literal|13
decl_stmt|;
specifier|private
name|int
name|totalStaticIndexSizeKB_
decl_stmt|;
comment|/**      *<code>optional uint32 total_static_index_size_KB = 13;</code>      *      *<pre>      ** The total size of all index blocks, not just the root level, in KB.       *</pre>      */
specifier|public
name|boolean
name|hasTotalStaticIndexSizeKB
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00001000
operator|)
operator|==
literal|0x00001000
operator|)
return|;
block|}
comment|/**      *<code>optional uint32 total_static_index_size_KB = 13;</code>      *      *<pre>      ** The total size of all index blocks, not just the root level, in KB.       *</pre>      */
specifier|public
name|int
name|getTotalStaticIndexSizeKB
parameter_list|()
block|{
return|return
name|totalStaticIndexSizeKB_
return|;
block|}
comment|// optional uint32 total_static_bloom_size_KB = 14;
specifier|public
specifier|static
specifier|final
name|int
name|TOTAL_STATIC_BLOOM_SIZE_KB_FIELD_NUMBER
init|=
literal|14
decl_stmt|;
specifier|private
name|int
name|totalStaticBloomSizeKB_
decl_stmt|;
comment|/**      *<code>optional uint32 total_static_bloom_size_KB = 14;</code>      *      *<pre>      **      * The total size of all Bloom filter blocks, not just loaded into the      * block cache, in KB.      *</pre>      */
specifier|public
name|boolean
name|hasTotalStaticBloomSizeKB
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00002000
operator|)
operator|==
literal|0x00002000
operator|)
return|;
block|}
comment|/**      *<code>optional uint32 total_static_bloom_size_KB = 14;</code>      *      *<pre>      **      * The total size of all Bloom filter blocks, not just loaded into the      * block cache, in KB.      *</pre>      */
specifier|public
name|int
name|getTotalStaticBloomSizeKB
parameter_list|()
block|{
return|return
name|totalStaticBloomSizeKB_
return|;
block|}
comment|// optional uint64 complete_sequence_id = 15;
specifier|public
specifier|static
specifier|final
name|int
name|COMPLETE_SEQUENCE_ID_FIELD_NUMBER
init|=
literal|15
decl_stmt|;
specifier|private
name|long
name|completeSequenceId_
decl_stmt|;
comment|/**      *<code>optional uint64 complete_sequence_id = 15;</code>      *      *<pre>      ** the most recent sequence Id from cache flush       *</pre>      */
specifier|public
name|boolean
name|hasCompleteSequenceId
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00004000
operator|)
operator|==
literal|0x00004000
operator|)
return|;
block|}
comment|/**      *<code>optional uint64 complete_sequence_id = 15;</code>      *      *<pre>      ** the most recent sequence Id from cache flush       *</pre>      */
specifier|public
name|long
name|getCompleteSequenceId
parameter_list|()
block|{
return|return
name|completeSequenceId_
return|;
block|}
comment|// optional float data_locality = 16;
specifier|public
specifier|static
specifier|final
name|int
name|DATA_LOCALITY_FIELD_NUMBER
init|=
literal|16
decl_stmt|;
specifier|private
name|float
name|dataLocality_
decl_stmt|;
comment|/**      *<code>optional float data_locality = 16;</code>      *      *<pre>      ** The current data locality for region in the regionserver       *</pre>      */
specifier|public
name|boolean
name|hasDataLocality
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00008000
operator|)
operator|==
literal|0x00008000
operator|)
return|;
block|}
comment|/**      *<code>optional float data_locality = 16;</code>      *      *<pre>      ** The current data locality for region in the regionserver       *</pre>      */
specifier|public
name|float
name|getDataLocality
parameter_list|()
block|{
return|return
name|dataLocality_
return|;
block|}
comment|// optional uint64 last_major_compaction_ts = 17 [default = 0];
specifier|public
specifier|static
specifier|final
name|int
name|LAST_MAJOR_COMPACTION_TS_FIELD_NUMBER
init|=
literal|17
decl_stmt|;
specifier|private
name|long
name|lastMajorCompactionTs_
decl_stmt|;
comment|/**      *<code>optional uint64 last_major_compaction_ts = 17 [default = 0];</code>      */
specifier|public
name|boolean
name|hasLastMajorCompactionTs
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00010000
operator|)
operator|==
literal|0x00010000
operator|)
return|;
block|}
comment|/**      *<code>optional uint64 last_major_compaction_ts = 17 [default = 0];</code>      */
specifier|public
name|long
name|getLastMajorCompactionTs
parameter_list|()
block|{
return|return
name|lastMajorCompactionTs_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|regionSpecifier_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|stores_
operator|=
literal|0
expr_stmt|;
name|storefiles_
operator|=
literal|0
expr_stmt|;
name|storeUncompressedSizeMB_
operator|=
literal|0
expr_stmt|;
name|storefileSizeMB_
operator|=
literal|0
expr_stmt|;
name|memstoreSizeMB_
operator|=
literal|0
expr_stmt|;
name|storefileIndexSizeMB_
operator|=
literal|0
expr_stmt|;
name|readRequestsCount_
operator|=
literal|0L
expr_stmt|;
name|writeRequestsCount_
operator|=
literal|0L
expr_stmt|;
name|totalCompactingKVs_
operator|=
literal|0L
expr_stmt|;
name|currentCompactedKVs_
operator|=
literal|0L
expr_stmt|;
name|rootIndexSizeKB_
operator|=
literal|0
expr_stmt|;
name|totalStaticIndexSizeKB_
operator|=
literal|0
expr_stmt|;
name|totalStaticBloomSizeKB_
operator|=
literal|0
expr_stmt|;
name|completeSequenceId_
operator|=
literal|0L
expr_stmt|;
name|dataLocality_
operator|=
literal|0F
expr_stmt|;
name|lastMajorCompactionTs_
operator|=
literal|0L
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasRegionSpecifier
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getRegionSpecifier
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|regionSpecifier_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt32
argument_list|(
literal|2
argument_list|,
name|stores_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt32
argument_list|(
literal|3
argument_list|,
name|storefiles_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt32
argument_list|(
literal|4
argument_list|,
name|storeUncompressedSizeMB_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt32
argument_list|(
literal|5
argument_list|,
name|storefileSizeMB_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt32
argument_list|(
literal|6
argument_list|,
name|memstoreSizeMB_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt32
argument_list|(
literal|7
argument_list|,
name|storefileIndexSizeMB_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|8
argument_list|,
name|readRequestsCount_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|9
argument_list|,
name|writeRequestsCount_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|10
argument_list|,
name|totalCompactingKVs_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|11
argument_list|,
name|currentCompactedKVs_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt32
argument_list|(
literal|12
argument_list|,
name|rootIndexSizeKB_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00001000
operator|)
operator|==
literal|0x00001000
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt32
argument_list|(
literal|13
argument_list|,
name|totalStaticIndexSizeKB_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00002000
operator|)
operator|==
literal|0x00002000
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt32
argument_list|(
literal|14
argument_list|,
name|totalStaticBloomSizeKB_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00004000
operator|)
operator|==
literal|0x00004000
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|15
argument_list|,
name|completeSequenceId_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00008000
operator|)
operator|==
literal|0x00008000
operator|)
condition|)
block|{
name|output
operator|.
name|writeFloat
argument_list|(
literal|16
argument_list|,
name|dataLocality_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00010000
operator|)
operator|==
literal|0x00010000
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|17
argument_list|,
name|lastMajorCompactionTs_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|regionSpecifier_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt32Size
argument_list|(
literal|2
argument_list|,
name|stores_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt32Size
argument_list|(
literal|3
argument_list|,
name|storefiles_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt32Size
argument_list|(
literal|4
argument_list|,
name|storeUncompressedSizeMB_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt32Size
argument_list|(
literal|5
argument_list|,
name|storefileSizeMB_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt32Size
argument_list|(
literal|6
argument_list|,
name|memstoreSizeMB_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt32Size
argument_list|(
literal|7
argument_list|,
name|storefileIndexSizeMB_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|8
argument_list|,
name|readRequestsCount_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|9
argument_list|,
name|writeRequestsCount_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|10
argument_list|,
name|totalCompactingKVs_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|11
argument_list|,
name|currentCompactedKVs_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt32Size
argument_list|(
literal|12
argument_list|,
name|rootIndexSizeKB_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00001000
operator|)
operator|==
literal|0x00001000
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt32Size
argument_list|(
literal|13
argument_list|,
name|totalStaticIndexSizeKB_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00002000
operator|)
operator|==
literal|0x00002000
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt32Size
argument_list|(
literal|14
argument_list|,
name|totalStaticBloomSizeKB_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00004000
operator|)
operator|==
literal|0x00004000
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|15
argument_list|,
name|completeSequenceId_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00008000
operator|)
operator|==
literal|0x00008000
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeFloatSize
argument_list|(
literal|16
argument_list|,
name|dataLocality_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00010000
operator|)
operator|==
literal|0x00010000
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|17
argument_list|,
name|lastMajorCompactionTs_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasRegionSpecifier
argument_list|()
operator|==
name|other
operator|.
name|hasRegionSpecifier
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasRegionSpecifier
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getRegionSpecifier
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getRegionSpecifier
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasStores
argument_list|()
operator|==
name|other
operator|.
name|hasStores
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasStores
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getStores
argument_list|()
operator|==
name|other
operator|.
name|getStores
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasStorefiles
argument_list|()
operator|==
name|other
operator|.
name|hasStorefiles
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasStorefiles
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getStorefiles
argument_list|()
operator|==
name|other
operator|.
name|getStorefiles
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasStoreUncompressedSizeMB
argument_list|()
operator|==
name|other
operator|.
name|hasStoreUncompressedSizeMB
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasStoreUncompressedSizeMB
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getStoreUncompressedSizeMB
argument_list|()
operator|==
name|other
operator|.
name|getStoreUncompressedSizeMB
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasStorefileSizeMB
argument_list|()
operator|==
name|other
operator|.
name|hasStorefileSizeMB
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasStorefileSizeMB
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getStorefileSizeMB
argument_list|()
operator|==
name|other
operator|.
name|getStorefileSizeMB
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasMemstoreSizeMB
argument_list|()
operator|==
name|other
operator|.
name|hasMemstoreSizeMB
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasMemstoreSizeMB
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getMemstoreSizeMB
argument_list|()
operator|==
name|other
operator|.
name|getMemstoreSizeMB
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasStorefileIndexSizeMB
argument_list|()
operator|==
name|other
operator|.
name|hasStorefileIndexSizeMB
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasStorefileIndexSizeMB
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getStorefileIndexSizeMB
argument_list|()
operator|==
name|other
operator|.
name|getStorefileIndexSizeMB
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasReadRequestsCount
argument_list|()
operator|==
name|other
operator|.
name|hasReadRequestsCount
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasReadRequestsCount
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getReadRequestsCount
argument_list|()
operator|==
name|other
operator|.
name|getReadRequestsCount
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasWriteRequestsCount
argument_list|()
operator|==
name|other
operator|.
name|hasWriteRequestsCount
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasWriteRequestsCount
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getWriteRequestsCount
argument_list|()
operator|==
name|other
operator|.
name|getWriteRequestsCount
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasTotalCompactingKVs
argument_list|()
operator|==
name|other
operator|.
name|hasTotalCompactingKVs
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasTotalCompactingKVs
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getTotalCompactingKVs
argument_list|()
operator|==
name|other
operator|.
name|getTotalCompactingKVs
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasCurrentCompactedKVs
argument_list|()
operator|==
name|other
operator|.
name|hasCurrentCompactedKVs
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasCurrentCompactedKVs
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getCurrentCompactedKVs
argument_list|()
operator|==
name|other
operator|.
name|getCurrentCompactedKVs
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasRootIndexSizeKB
argument_list|()
operator|==
name|other
operator|.
name|hasRootIndexSizeKB
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasRootIndexSizeKB
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getRootIndexSizeKB
argument_list|()
operator|==
name|other
operator|.
name|getRootIndexSizeKB
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasTotalStaticIndexSizeKB
argument_list|()
operator|==
name|other
operator|.
name|hasTotalStaticIndexSizeKB
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasTotalStaticIndexSizeKB
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getTotalStaticIndexSizeKB
argument_list|()
operator|==
name|other
operator|.
name|getTotalStaticIndexSizeKB
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasTotalStaticBloomSizeKB
argument_list|()
operator|==
name|other
operator|.
name|hasTotalStaticBloomSizeKB
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasTotalStaticBloomSizeKB
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getTotalStaticBloomSizeKB
argument_list|()
operator|==
name|other
operator|.
name|getTotalStaticBloomSizeKB
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasCompleteSequenceId
argument_list|()
operator|==
name|other
operator|.
name|hasCompleteSequenceId
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasCompleteSequenceId
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getCompleteSequenceId
argument_list|()
operator|==
name|other
operator|.
name|getCompleteSequenceId
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasDataLocality
argument_list|()
operator|==
name|other
operator|.
name|hasDataLocality
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasDataLocality
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|Float
operator|.
name|floatToIntBits
argument_list|(
name|getDataLocality
argument_list|()
argument_list|)
operator|==
name|Float
operator|.
name|floatToIntBits
argument_list|(
name|other
operator|.
name|getDataLocality
argument_list|()
argument_list|)
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasLastMajorCompactionTs
argument_list|()
operator|==
name|other
operator|.
name|hasLastMajorCompactionTs
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasLastMajorCompactionTs
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getLastMajorCompactionTs
argument_list|()
operator|==
name|other
operator|.
name|getLastMajorCompactionTs
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getUnknownFields
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|private
name|int
name|memoizedHashCode
init|=
literal|0
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptorForType
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasRegionSpecifier
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|REGION_SPECIFIER_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getRegionSpecifier
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasStores
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|STORES_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getStores
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasStorefiles
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|STOREFILES_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getStorefiles
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasStoreUncompressedSizeMB
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|STORE_UNCOMPRESSED_SIZE_MB_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getStoreUncompressedSizeMB
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasStorefileSizeMB
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|STOREFILE_SIZE_MB_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getStorefileSizeMB
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasMemstoreSizeMB
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|MEMSTORE_SIZE_MB_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getMemstoreSizeMB
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasStorefileIndexSizeMB
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|STOREFILE_INDEX_SIZE_MB_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getStorefileIndexSizeMB
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasReadRequestsCount
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|READ_REQUESTS_COUNT_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashLong
argument_list|(
name|getReadRequestsCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasWriteRequestsCount
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|WRITE_REQUESTS_COUNT_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashLong
argument_list|(
name|getWriteRequestsCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasTotalCompactingKVs
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|TOTAL_COMPACTING_KVS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashLong
argument_list|(
name|getTotalCompactingKVs
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasCurrentCompactedKVs
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|CURRENT_COMPACTED_KVS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashLong
argument_list|(
name|getCurrentCompactedKVs
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasRootIndexSizeKB
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|ROOT_INDEX_SIZE_KB_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getRootIndexSizeKB
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasTotalStaticIndexSizeKB
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|TOTAL_STATIC_INDEX_SIZE_KB_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getTotalStaticIndexSizeKB
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasTotalStaticBloomSizeKB
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|TOTAL_STATIC_BLOOM_SIZE_KB_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getTotalStaticBloomSizeKB
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasCompleteSequenceId
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|COMPLETE_SEQUENCE_ID_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashLong
argument_list|(
name|getCompleteSequenceId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasDataLocality
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|DATA_LOCALITY_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|Float
operator|.
name|floatToIntBits
argument_list|(
name|getDataLocality
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasLastMajorCompactionTs
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|LAST_MAJOR_COMPACTION_TS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashLong
argument_list|(
name|getLastMajorCompactionTs
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|getUnknownFields
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code RegionLoad}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoadOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_RegionLoad_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_RegionLoad_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.protobuf.generated.ClusterStatusProtos.RegionLoad.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getRegionSpecifierFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|regionSpecifierBuilder_
operator|==
literal|null
condition|)
block|{
name|regionSpecifier_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionSpecifierBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|stores_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|storefiles_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|storeUncompressedSizeMB_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|storefileSizeMB_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|memstoreSizeMB_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|storefileIndexSizeMB_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|readRequestsCount_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|writeRequestsCount_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
name|totalCompactingKVs_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
name|currentCompactedKVs_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000400
operator|)
expr_stmt|;
name|rootIndexSizeKB_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000800
operator|)
expr_stmt|;
name|totalStaticIndexSizeKB_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00001000
operator|)
expr_stmt|;
name|totalStaticBloomSizeKB_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00002000
operator|)
expr_stmt|;
name|completeSequenceId_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00004000
operator|)
expr_stmt|;
name|dataLocality_
operator|=
literal|0F
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00008000
operator|)
expr_stmt|;
name|lastMajorCompactionTs_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00010000
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_RegionLoad_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
if|if
condition|(
name|regionSpecifierBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|regionSpecifier_
operator|=
name|regionSpecifier_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|regionSpecifier_
operator|=
name|regionSpecifierBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|stores_
operator|=
name|stores_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|storefiles_
operator|=
name|storefiles_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|result
operator|.
name|storeUncompressedSizeMB_
operator|=
name|storeUncompressedSizeMB_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|result
operator|.
name|storefileSizeMB_
operator|=
name|storefileSizeMB_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
name|result
operator|.
name|memstoreSizeMB_
operator|=
name|memstoreSizeMB_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000040
expr_stmt|;
block|}
name|result
operator|.
name|storefileIndexSizeMB_
operator|=
name|storefileIndexSizeMB_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000080
expr_stmt|;
block|}
name|result
operator|.
name|readRequestsCount_
operator|=
name|readRequestsCount_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000100
expr_stmt|;
block|}
name|result
operator|.
name|writeRequestsCount_
operator|=
name|writeRequestsCount_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000200
expr_stmt|;
block|}
name|result
operator|.
name|totalCompactingKVs_
operator|=
name|totalCompactingKVs_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000400
expr_stmt|;
block|}
name|result
operator|.
name|currentCompactedKVs_
operator|=
name|currentCompactedKVs_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000800
expr_stmt|;
block|}
name|result
operator|.
name|rootIndexSizeKB_
operator|=
name|rootIndexSizeKB_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00001000
operator|)
operator|==
literal|0x00001000
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00001000
expr_stmt|;
block|}
name|result
operator|.
name|totalStaticIndexSizeKB_
operator|=
name|totalStaticIndexSizeKB_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00002000
operator|)
operator|==
literal|0x00002000
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00002000
expr_stmt|;
block|}
name|result
operator|.
name|totalStaticBloomSizeKB_
operator|=
name|totalStaticBloomSizeKB_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00004000
operator|)
operator|==
literal|0x00004000
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00004000
expr_stmt|;
block|}
name|result
operator|.
name|completeSequenceId_
operator|=
name|completeSequenceId_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00008000
operator|)
operator|==
literal|0x00008000
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00008000
expr_stmt|;
block|}
name|result
operator|.
name|dataLocality_
operator|=
name|dataLocality_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00010000
operator|)
operator|==
literal|0x00010000
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00010000
expr_stmt|;
block|}
name|result
operator|.
name|lastMajorCompactionTs_
operator|=
name|lastMajorCompactionTs_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasRegionSpecifier
argument_list|()
condition|)
block|{
name|mergeRegionSpecifier
argument_list|(
name|other
operator|.
name|getRegionSpecifier
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasStores
argument_list|()
condition|)
block|{
name|setStores
argument_list|(
name|other
operator|.
name|getStores
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasStorefiles
argument_list|()
condition|)
block|{
name|setStorefiles
argument_list|(
name|other
operator|.
name|getStorefiles
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasStoreUncompressedSizeMB
argument_list|()
condition|)
block|{
name|setStoreUncompressedSizeMB
argument_list|(
name|other
operator|.
name|getStoreUncompressedSizeMB
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasStorefileSizeMB
argument_list|()
condition|)
block|{
name|setStorefileSizeMB
argument_list|(
name|other
operator|.
name|getStorefileSizeMB
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasMemstoreSizeMB
argument_list|()
condition|)
block|{
name|setMemstoreSizeMB
argument_list|(
name|other
operator|.
name|getMemstoreSizeMB
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasStorefileIndexSizeMB
argument_list|()
condition|)
block|{
name|setStorefileIndexSizeMB
argument_list|(
name|other
operator|.
name|getStorefileIndexSizeMB
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasReadRequestsCount
argument_list|()
condition|)
block|{
name|setReadRequestsCount
argument_list|(
name|other
operator|.
name|getReadRequestsCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasWriteRequestsCount
argument_list|()
condition|)
block|{
name|setWriteRequestsCount
argument_list|(
name|other
operator|.
name|getWriteRequestsCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasTotalCompactingKVs
argument_list|()
condition|)
block|{
name|setTotalCompactingKVs
argument_list|(
name|other
operator|.
name|getTotalCompactingKVs
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasCurrentCompactedKVs
argument_list|()
condition|)
block|{
name|setCurrentCompactedKVs
argument_list|(
name|other
operator|.
name|getCurrentCompactedKVs
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasRootIndexSizeKB
argument_list|()
condition|)
block|{
name|setRootIndexSizeKB
argument_list|(
name|other
operator|.
name|getRootIndexSizeKB
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasTotalStaticIndexSizeKB
argument_list|()
condition|)
block|{
name|setTotalStaticIndexSizeKB
argument_list|(
name|other
operator|.
name|getTotalStaticIndexSizeKB
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasTotalStaticBloomSizeKB
argument_list|()
condition|)
block|{
name|setTotalStaticBloomSizeKB
argument_list|(
name|other
operator|.
name|getTotalStaticBloomSizeKB
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasCompleteSequenceId
argument_list|()
condition|)
block|{
name|setCompleteSequenceId
argument_list|(
name|other
operator|.
name|getCompleteSequenceId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasDataLocality
argument_list|()
condition|)
block|{
name|setDataLocality
argument_list|(
name|other
operator|.
name|getDataLocality
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasLastMajorCompactionTs
argument_list|()
condition|)
block|{
name|setLastMajorCompactionTs
argument_list|(
name|other
operator|.
name|getLastMajorCompactionTs
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasRegionSpecifier
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getRegionSpecifier
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required .RegionSpecifier region_specifier = 1;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
name|regionSpecifier_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifierOrBuilder
argument_list|>
name|regionSpecifierBuilder_
decl_stmt|;
comment|/**        *<code>required .RegionSpecifier region_specifier = 1;</code>        *        *<pre>        ** the region specifier         *</pre>        */
specifier|public
name|boolean
name|hasRegionSpecifier
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required .RegionSpecifier region_specifier = 1;</code>        *        *<pre>        ** the region specifier         *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
name|getRegionSpecifier
parameter_list|()
block|{
if|if
condition|(
name|regionSpecifierBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|regionSpecifier_
return|;
block|}
else|else
block|{
return|return
name|regionSpecifierBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>required .RegionSpecifier region_specifier = 1;</code>        *        *<pre>        ** the region specifier         *</pre>        */
specifier|public
name|Builder
name|setRegionSpecifier
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
name|value
parameter_list|)
block|{
if|if
condition|(
name|regionSpecifierBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|regionSpecifier_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionSpecifierBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .RegionSpecifier region_specifier = 1;</code>        *        *<pre>        ** the region specifier         *</pre>        */
specifier|public
name|Builder
name|setRegionSpecifier
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|regionSpecifierBuilder_
operator|==
literal|null
condition|)
block|{
name|regionSpecifier_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionSpecifierBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .RegionSpecifier region_specifier = 1;</code>        *        *<pre>        ** the region specifier         *</pre>        */
specifier|public
name|Builder
name|mergeRegionSpecifier
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
name|value
parameter_list|)
block|{
if|if
condition|(
name|regionSpecifierBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
operator|&&
name|regionSpecifier_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|regionSpecifier_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|newBuilder
argument_list|(
name|regionSpecifier_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionSpecifier_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionSpecifierBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .RegionSpecifier region_specifier = 1;</code>        *        *<pre>        ** the region specifier         *</pre>        */
specifier|public
name|Builder
name|clearRegionSpecifier
parameter_list|()
block|{
if|if
condition|(
name|regionSpecifierBuilder_
operator|==
literal|null
condition|)
block|{
name|regionSpecifier_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionSpecifierBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .RegionSpecifier region_specifier = 1;</code>        *        *<pre>        ** the region specifier         *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|Builder
name|getRegionSpecifierBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getRegionSpecifierFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>required .RegionSpecifier region_specifier = 1;</code>        *        *<pre>        ** the region specifier         *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifierOrBuilder
name|getRegionSpecifierOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|regionSpecifierBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|regionSpecifierBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|regionSpecifier_
return|;
block|}
block|}
comment|/**        *<code>required .RegionSpecifier region_specifier = 1;</code>        *        *<pre>        ** the region specifier         *</pre>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifierOrBuilder
argument_list|>
name|getRegionSpecifierFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|regionSpecifierBuilder_
operator|==
literal|null
condition|)
block|{
name|regionSpecifierBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifier
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|RegionSpecifierOrBuilder
argument_list|>
argument_list|(
name|regionSpecifier_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|regionSpecifier_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|regionSpecifierBuilder_
return|;
block|}
comment|// optional uint32 stores = 2;
specifier|private
name|int
name|stores_
decl_stmt|;
comment|/**        *<code>optional uint32 stores = 2;</code>        *        *<pre>        ** the number of stores for the region         *</pre>        */
specifier|public
name|boolean
name|hasStores
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional uint32 stores = 2;</code>        *        *<pre>        ** the number of stores for the region         *</pre>        */
specifier|public
name|int
name|getStores
parameter_list|()
block|{
return|return
name|stores_
return|;
block|}
comment|/**        *<code>optional uint32 stores = 2;</code>        *        *<pre>        ** the number of stores for the region         *</pre>        */
specifier|public
name|Builder
name|setStores
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|stores_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint32 stores = 2;</code>        *        *<pre>        ** the number of stores for the region         *</pre>        */
specifier|public
name|Builder
name|clearStores
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|stores_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint32 storefiles = 3;
specifier|private
name|int
name|storefiles_
decl_stmt|;
comment|/**        *<code>optional uint32 storefiles = 3;</code>        *        *<pre>        ** the number of storefiles for the region         *</pre>        */
specifier|public
name|boolean
name|hasStorefiles
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>optional uint32 storefiles = 3;</code>        *        *<pre>        ** the number of storefiles for the region         *</pre>        */
specifier|public
name|int
name|getStorefiles
parameter_list|()
block|{
return|return
name|storefiles_
return|;
block|}
comment|/**        *<code>optional uint32 storefiles = 3;</code>        *        *<pre>        ** the number of storefiles for the region         *</pre>        */
specifier|public
name|Builder
name|setStorefiles
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|storefiles_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint32 storefiles = 3;</code>        *        *<pre>        ** the number of storefiles for the region         *</pre>        */
specifier|public
name|Builder
name|clearStorefiles
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|storefiles_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint32 store_uncompressed_size_MB = 4;
specifier|private
name|int
name|storeUncompressedSizeMB_
decl_stmt|;
comment|/**        *<code>optional uint32 store_uncompressed_size_MB = 4;</code>        *        *<pre>        ** the total size of the store files for the region, uncompressed, in MB         *</pre>        */
specifier|public
name|boolean
name|hasStoreUncompressedSizeMB
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**        *<code>optional uint32 store_uncompressed_size_MB = 4;</code>        *        *<pre>        ** the total size of the store files for the region, uncompressed, in MB         *</pre>        */
specifier|public
name|int
name|getStoreUncompressedSizeMB
parameter_list|()
block|{
return|return
name|storeUncompressedSizeMB_
return|;
block|}
comment|/**        *<code>optional uint32 store_uncompressed_size_MB = 4;</code>        *        *<pre>        ** the total size of the store files for the region, uncompressed, in MB         *</pre>        */
specifier|public
name|Builder
name|setStoreUncompressedSizeMB
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|storeUncompressedSizeMB_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint32 store_uncompressed_size_MB = 4;</code>        *        *<pre>        ** the total size of the store files for the region, uncompressed, in MB         *</pre>        */
specifier|public
name|Builder
name|clearStoreUncompressedSizeMB
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|storeUncompressedSizeMB_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint32 storefile_size_MB = 5;
specifier|private
name|int
name|storefileSizeMB_
decl_stmt|;
comment|/**        *<code>optional uint32 storefile_size_MB = 5;</code>        *        *<pre>        ** the current total size of the store files for the region, in MB         *</pre>        */
specifier|public
name|boolean
name|hasStorefileSizeMB
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**        *<code>optional uint32 storefile_size_MB = 5;</code>        *        *<pre>        ** the current total size of the store files for the region, in MB         *</pre>        */
specifier|public
name|int
name|getStorefileSizeMB
parameter_list|()
block|{
return|return
name|storefileSizeMB_
return|;
block|}
comment|/**        *<code>optional uint32 storefile_size_MB = 5;</code>        *        *<pre>        ** the current total size of the store files for the region, in MB         *</pre>        */
specifier|public
name|Builder
name|setStorefileSizeMB
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|storefileSizeMB_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint32 storefile_size_MB = 5;</code>        *        *<pre>        ** the current total size of the store files for the region, in MB         *</pre>        */
specifier|public
name|Builder
name|clearStorefileSizeMB
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|storefileSizeMB_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint32 memstore_size_MB = 6;
specifier|private
name|int
name|memstoreSizeMB_
decl_stmt|;
comment|/**        *<code>optional uint32 memstore_size_MB = 6;</code>        *        *<pre>        ** the current size of the memstore for the region, in MB         *</pre>        */
specifier|public
name|boolean
name|hasMemstoreSizeMB
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**        *<code>optional uint32 memstore_size_MB = 6;</code>        *        *<pre>        ** the current size of the memstore for the region, in MB         *</pre>        */
specifier|public
name|int
name|getMemstoreSizeMB
parameter_list|()
block|{
return|return
name|memstoreSizeMB_
return|;
block|}
comment|/**        *<code>optional uint32 memstore_size_MB = 6;</code>        *        *<pre>        ** the current size of the memstore for the region, in MB         *</pre>        */
specifier|public
name|Builder
name|setMemstoreSizeMB
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|memstoreSizeMB_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint32 memstore_size_MB = 6;</code>        *        *<pre>        ** the current size of the memstore for the region, in MB         *</pre>        */
specifier|public
name|Builder
name|clearMemstoreSizeMB
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|memstoreSizeMB_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint32 storefile_index_size_MB = 7;
specifier|private
name|int
name|storefileIndexSizeMB_
decl_stmt|;
comment|/**        *<code>optional uint32 storefile_index_size_MB = 7;</code>        *        *<pre>        **        * The current total size of root-level store file indexes for the region,        * in MB. The same as {&#64;link #rootIndexSizeKB} but in MB.        *</pre>        */
specifier|public
name|boolean
name|hasStorefileIndexSizeMB
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
return|;
block|}
comment|/**        *<code>optional uint32 storefile_index_size_MB = 7;</code>        *        *<pre>        **        * The current total size of root-level store file indexes for the region,        * in MB. The same as {&#64;link #rootIndexSizeKB} but in MB.        *</pre>        */
specifier|public
name|int
name|getStorefileIndexSizeMB
parameter_list|()
block|{
return|return
name|storefileIndexSizeMB_
return|;
block|}
comment|/**        *<code>optional uint32 storefile_index_size_MB = 7;</code>        *        *<pre>        **        * The current total size of root-level store file indexes for the region,        * in MB. The same as {&#64;link #rootIndexSizeKB} but in MB.        *</pre>        */
specifier|public
name|Builder
name|setStorefileIndexSizeMB
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|storefileIndexSizeMB_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint32 storefile_index_size_MB = 7;</code>        *        *<pre>        **        * The current total size of root-level store file indexes for the region,        * in MB. The same as {&#64;link #rootIndexSizeKB} but in MB.        *</pre>        */
specifier|public
name|Builder
name|clearStorefileIndexSizeMB
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|storefileIndexSizeMB_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint64 read_requests_count = 8;
specifier|private
name|long
name|readRequestsCount_
decl_stmt|;
comment|/**        *<code>optional uint64 read_requests_count = 8;</code>        *        *<pre>        ** the current total read requests made to region         *</pre>        */
specifier|public
name|boolean
name|hasReadRequestsCount
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
return|;
block|}
comment|/**        *<code>optional uint64 read_requests_count = 8;</code>        *        *<pre>        ** the current total read requests made to region         *</pre>        */
specifier|public
name|long
name|getReadRequestsCount
parameter_list|()
block|{
return|return
name|readRequestsCount_
return|;
block|}
comment|/**        *<code>optional uint64 read_requests_count = 8;</code>        *        *<pre>        ** the current total read requests made to region         *</pre>        */
specifier|public
name|Builder
name|setReadRequestsCount
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
name|readRequestsCount_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint64 read_requests_count = 8;</code>        *        *<pre>        ** the current total read requests made to region         *</pre>        */
specifier|public
name|Builder
name|clearReadRequestsCount
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|readRequestsCount_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint64 write_requests_count = 9;
specifier|private
name|long
name|writeRequestsCount_
decl_stmt|;
comment|/**        *<code>optional uint64 write_requests_count = 9;</code>        *        *<pre>        ** the current total write requests made to region         *</pre>        */
specifier|public
name|boolean
name|hasWriteRequestsCount
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
return|;
block|}
comment|/**        *<code>optional uint64 write_requests_count = 9;</code>        *        *<pre>        ** the current total write requests made to region         *</pre>        */
specifier|public
name|long
name|getWriteRequestsCount
parameter_list|()
block|{
return|return
name|writeRequestsCount_
return|;
block|}
comment|/**        *<code>optional uint64 write_requests_count = 9;</code>        *        *<pre>        ** the current total write requests made to region         *</pre>        */
specifier|public
name|Builder
name|setWriteRequestsCount
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
name|writeRequestsCount_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint64 write_requests_count = 9;</code>        *        *<pre>        ** the current total write requests made to region         *</pre>        */
specifier|public
name|Builder
name|clearWriteRequestsCount
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
name|writeRequestsCount_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint64 total_compacting_KVs = 10;
specifier|private
name|long
name|totalCompactingKVs_
decl_stmt|;
comment|/**        *<code>optional uint64 total_compacting_KVs = 10;</code>        *        *<pre>        ** the total compacting key values in currently running compaction         *</pre>        */
specifier|public
name|boolean
name|hasTotalCompactingKVs
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
return|;
block|}
comment|/**        *<code>optional uint64 total_compacting_KVs = 10;</code>        *        *<pre>        ** the total compacting key values in currently running compaction         *</pre>        */
specifier|public
name|long
name|getTotalCompactingKVs
parameter_list|()
block|{
return|return
name|totalCompactingKVs_
return|;
block|}
comment|/**        *<code>optional uint64 total_compacting_KVs = 10;</code>        *        *<pre>        ** the total compacting key values in currently running compaction         *</pre>        */
specifier|public
name|Builder
name|setTotalCompactingKVs
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
name|totalCompactingKVs_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint64 total_compacting_KVs = 10;</code>        *        *<pre>        ** the total compacting key values in currently running compaction         *</pre>        */
specifier|public
name|Builder
name|clearTotalCompactingKVs
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
name|totalCompactingKVs_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint64 current_compacted_KVs = 11;
specifier|private
name|long
name|currentCompactedKVs_
decl_stmt|;
comment|/**        *<code>optional uint64 current_compacted_KVs = 11;</code>        *        *<pre>        ** the completed count of key values in currently running compaction         *</pre>        */
specifier|public
name|boolean
name|hasCurrentCompactedKVs
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
return|;
block|}
comment|/**        *<code>optional uint64 current_compacted_KVs = 11;</code>        *        *<pre>        ** the completed count of key values in currently running compaction         *</pre>        */
specifier|public
name|long
name|getCurrentCompactedKVs
parameter_list|()
block|{
return|return
name|currentCompactedKVs_
return|;
block|}
comment|/**        *<code>optional uint64 current_compacted_KVs = 11;</code>        *        *<pre>        ** the completed count of key values in currently running compaction         *</pre>        */
specifier|public
name|Builder
name|setCurrentCompactedKVs
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|currentCompactedKVs_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint64 current_compacted_KVs = 11;</code>        *        *<pre>        ** the completed count of key values in currently running compaction         *</pre>        */
specifier|public
name|Builder
name|clearCurrentCompactedKVs
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000400
operator|)
expr_stmt|;
name|currentCompactedKVs_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint32 root_index_size_KB = 12;
specifier|private
name|int
name|rootIndexSizeKB_
decl_stmt|;
comment|/**        *<code>optional uint32 root_index_size_KB = 12;</code>        *        *<pre>        ** The current total size of root-level indexes for the region, in KB.         *</pre>        */
specifier|public
name|boolean
name|hasRootIndexSizeKB
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
return|;
block|}
comment|/**        *<code>optional uint32 root_index_size_KB = 12;</code>        *        *<pre>        ** The current total size of root-level indexes for the region, in KB.         *</pre>        */
specifier|public
name|int
name|getRootIndexSizeKB
parameter_list|()
block|{
return|return
name|rootIndexSizeKB_
return|;
block|}
comment|/**        *<code>optional uint32 root_index_size_KB = 12;</code>        *        *<pre>        ** The current total size of root-level indexes for the region, in KB.         *</pre>        */
specifier|public
name|Builder
name|setRootIndexSizeKB
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000800
expr_stmt|;
name|rootIndexSizeKB_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint32 root_index_size_KB = 12;</code>        *        *<pre>        ** The current total size of root-level indexes for the region, in KB.         *</pre>        */
specifier|public
name|Builder
name|clearRootIndexSizeKB
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000800
operator|)
expr_stmt|;
name|rootIndexSizeKB_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint32 total_static_index_size_KB = 13;
specifier|private
name|int
name|totalStaticIndexSizeKB_
decl_stmt|;
comment|/**        *<code>optional uint32 total_static_index_size_KB = 13;</code>        *        *<pre>        ** The total size of all index blocks, not just the root level, in KB.         *</pre>        */
specifier|public
name|boolean
name|hasTotalStaticIndexSizeKB
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00001000
operator|)
operator|==
literal|0x00001000
operator|)
return|;
block|}
comment|/**        *<code>optional uint32 total_static_index_size_KB = 13;</code>        *        *<pre>        ** The total size of all index blocks, not just the root level, in KB.         *</pre>        */
specifier|public
name|int
name|getTotalStaticIndexSizeKB
parameter_list|()
block|{
return|return
name|totalStaticIndexSizeKB_
return|;
block|}
comment|/**        *<code>optional uint32 total_static_index_size_KB = 13;</code>        *        *<pre>        ** The total size of all index blocks, not just the root level, in KB.         *</pre>        */
specifier|public
name|Builder
name|setTotalStaticIndexSizeKB
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00001000
expr_stmt|;
name|totalStaticIndexSizeKB_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint32 total_static_index_size_KB = 13;</code>        *        *<pre>        ** The total size of all index blocks, not just the root level, in KB.         *</pre>        */
specifier|public
name|Builder
name|clearTotalStaticIndexSizeKB
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00001000
operator|)
expr_stmt|;
name|totalStaticIndexSizeKB_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint32 total_static_bloom_size_KB = 14;
specifier|private
name|int
name|totalStaticBloomSizeKB_
decl_stmt|;
comment|/**        *<code>optional uint32 total_static_bloom_size_KB = 14;</code>        *        *<pre>        **        * The total size of all Bloom filter blocks, not just loaded into the        * block cache, in KB.        *</pre>        */
specifier|public
name|boolean
name|hasTotalStaticBloomSizeKB
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00002000
operator|)
operator|==
literal|0x00002000
operator|)
return|;
block|}
comment|/**        *<code>optional uint32 total_static_bloom_size_KB = 14;</code>        *        *<pre>        **        * The total size of all Bloom filter blocks, not just loaded into the        * block cache, in KB.        *</pre>        */
specifier|public
name|int
name|getTotalStaticBloomSizeKB
parameter_list|()
block|{
return|return
name|totalStaticBloomSizeKB_
return|;
block|}
comment|/**        *<code>optional uint32 total_static_bloom_size_KB = 14;</code>        *        *<pre>        **        * The total size of all Bloom filter blocks, not just loaded into the        * block cache, in KB.        *</pre>        */
specifier|public
name|Builder
name|setTotalStaticBloomSizeKB
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00002000
expr_stmt|;
name|totalStaticBloomSizeKB_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint32 total_static_bloom_size_KB = 14;</code>        *        *<pre>        **        * The total size of all Bloom filter blocks, not just loaded into the        * block cache, in KB.        *</pre>        */
specifier|public
name|Builder
name|clearTotalStaticBloomSizeKB
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00002000
operator|)
expr_stmt|;
name|totalStaticBloomSizeKB_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint64 complete_sequence_id = 15;
specifier|private
name|long
name|completeSequenceId_
decl_stmt|;
comment|/**        *<code>optional uint64 complete_sequence_id = 15;</code>        *        *<pre>        ** the most recent sequence Id from cache flush         *</pre>        */
specifier|public
name|boolean
name|hasCompleteSequenceId
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00004000
operator|)
operator|==
literal|0x00004000
operator|)
return|;
block|}
comment|/**        *<code>optional uint64 complete_sequence_id = 15;</code>        *        *<pre>        ** the most recent sequence Id from cache flush         *</pre>        */
specifier|public
name|long
name|getCompleteSequenceId
parameter_list|()
block|{
return|return
name|completeSequenceId_
return|;
block|}
comment|/**        *<code>optional uint64 complete_sequence_id = 15;</code>        *        *<pre>        ** the most recent sequence Id from cache flush         *</pre>        */
specifier|public
name|Builder
name|setCompleteSequenceId
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00004000
expr_stmt|;
name|completeSequenceId_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint64 complete_sequence_id = 15;</code>        *        *<pre>        ** the most recent sequence Id from cache flush         *</pre>        */
specifier|public
name|Builder
name|clearCompleteSequenceId
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00004000
operator|)
expr_stmt|;
name|completeSequenceId_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional float data_locality = 16;
specifier|private
name|float
name|dataLocality_
decl_stmt|;
comment|/**        *<code>optional float data_locality = 16;</code>        *        *<pre>        ** The current data locality for region in the regionserver         *</pre>        */
specifier|public
name|boolean
name|hasDataLocality
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00008000
operator|)
operator|==
literal|0x00008000
operator|)
return|;
block|}
comment|/**        *<code>optional float data_locality = 16;</code>        *        *<pre>        ** The current data locality for region in the regionserver         *</pre>        */
specifier|public
name|float
name|getDataLocality
parameter_list|()
block|{
return|return
name|dataLocality_
return|;
block|}
comment|/**        *<code>optional float data_locality = 16;</code>        *        *<pre>        ** The current data locality for region in the regionserver         *</pre>        */
specifier|public
name|Builder
name|setDataLocality
parameter_list|(
name|float
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00008000
expr_stmt|;
name|dataLocality_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional float data_locality = 16;</code>        *        *<pre>        ** The current data locality for region in the regionserver         *</pre>        */
specifier|public
name|Builder
name|clearDataLocality
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00008000
operator|)
expr_stmt|;
name|dataLocality_
operator|=
literal|0F
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint64 last_major_compaction_ts = 17 [default = 0];
specifier|private
name|long
name|lastMajorCompactionTs_
decl_stmt|;
comment|/**        *<code>optional uint64 last_major_compaction_ts = 17 [default = 0];</code>        */
specifier|public
name|boolean
name|hasLastMajorCompactionTs
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00010000
operator|)
operator|==
literal|0x00010000
operator|)
return|;
block|}
comment|/**        *<code>optional uint64 last_major_compaction_ts = 17 [default = 0];</code>        */
specifier|public
name|long
name|getLastMajorCompactionTs
parameter_list|()
block|{
return|return
name|lastMajorCompactionTs_
return|;
block|}
comment|/**        *<code>optional uint64 last_major_compaction_ts = 17 [default = 0];</code>        */
specifier|public
name|Builder
name|setLastMajorCompactionTs
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00010000
expr_stmt|;
name|lastMajorCompactionTs_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint64 last_major_compaction_ts = 17 [default = 0];</code>        */
specifier|public
name|Builder
name|clearLastMajorCompactionTs
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00010000
operator|)
expr_stmt|;
name|lastMajorCompactionTs_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:RegionLoad)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|RegionLoad
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:RegionLoad)
block|}
specifier|public
interface|interface
name|ReplicationLoadSinkOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required uint64 ageOfLastAppliedOp = 1;
comment|/**      *<code>required uint64 ageOfLastAppliedOp = 1;</code>      */
name|boolean
name|hasAgeOfLastAppliedOp
parameter_list|()
function_decl|;
comment|/**      *<code>required uint64 ageOfLastAppliedOp = 1;</code>      */
name|long
name|getAgeOfLastAppliedOp
parameter_list|()
function_decl|;
comment|// required uint64 timeStampsOfLastAppliedOp = 2;
comment|/**      *<code>required uint64 timeStampsOfLastAppliedOp = 2;</code>      */
name|boolean
name|hasTimeStampsOfLastAppliedOp
parameter_list|()
function_decl|;
comment|/**      *<code>required uint64 timeStampsOfLastAppliedOp = 2;</code>      */
name|long
name|getTimeStampsOfLastAppliedOp
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code ReplicationLoadSink}    */
specifier|public
specifier|static
specifier|final
class|class
name|ReplicationLoadSink
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|ReplicationLoadSinkOrBuilder
block|{
comment|// Use ReplicationLoadSink.newBuilder() to construct.
specifier|private
name|ReplicationLoadSink
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|ReplicationLoadSink
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|ReplicationLoadSink
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|ReplicationLoadSink
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|ReplicationLoadSink
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|ReplicationLoadSink
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|8
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|ageOfLastAppliedOp_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|timeStampsOfLastAppliedOp_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_ReplicationLoadSink_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_ReplicationLoadSink_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ReplicationLoadSink
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|ReplicationLoadSink
argument_list|>
argument_list|()
block|{
specifier|public
name|ReplicationLoadSink
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|ReplicationLoadSink
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ReplicationLoadSink
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required uint64 ageOfLastAppliedOp = 1;
specifier|public
specifier|static
specifier|final
name|int
name|AGEOFLASTAPPLIEDOP_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|long
name|ageOfLastAppliedOp_
decl_stmt|;
comment|/**      *<code>required uint64 ageOfLastAppliedOp = 1;</code>      */
specifier|public
name|boolean
name|hasAgeOfLastAppliedOp
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>required uint64 ageOfLastAppliedOp = 1;</code>      */
specifier|public
name|long
name|getAgeOfLastAppliedOp
parameter_list|()
block|{
return|return
name|ageOfLastAppliedOp_
return|;
block|}
comment|// required uint64 timeStampsOfLastAppliedOp = 2;
specifier|public
specifier|static
specifier|final
name|int
name|TIMESTAMPSOFLASTAPPLIEDOP_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|long
name|timeStampsOfLastAppliedOp_
decl_stmt|;
comment|/**      *<code>required uint64 timeStampsOfLastAppliedOp = 2;</code>      */
specifier|public
name|boolean
name|hasTimeStampsOfLastAppliedOp
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>required uint64 timeStampsOfLastAppliedOp = 2;</code>      */
specifier|public
name|long
name|getTimeStampsOfLastAppliedOp
parameter_list|()
block|{
return|return
name|timeStampsOfLastAppliedOp_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|ageOfLastAppliedOp_
operator|=
literal|0L
expr_stmt|;
name|timeStampsOfLastAppliedOp_
operator|=
literal|0L
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasAgeOfLastAppliedOp
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasTimeStampsOfLastAppliedOp
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|1
argument_list|,
name|ageOfLastAppliedOp_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|2
argument_list|,
name|timeStampsOfLastAppliedOp_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|1
argument_list|,
name|ageOfLastAppliedOp_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|2
argument_list|,
name|timeStampsOfLastAppliedOp_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasAgeOfLastAppliedOp
argument_list|()
operator|==
name|other
operator|.
name|hasAgeOfLastAppliedOp
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasAgeOfLastAppliedOp
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getAgeOfLastAppliedOp
argument_list|()
operator|==
name|other
operator|.
name|getAgeOfLastAppliedOp
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasTimeStampsOfLastAppliedOp
argument_list|()
operator|==
name|other
operator|.
name|hasTimeStampsOfLastAppliedOp
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasTimeStampsOfLastAppliedOp
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getTimeStampsOfLastAppliedOp
argument_list|()
operator|==
name|other
operator|.
name|getTimeStampsOfLastAppliedOp
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getUnknownFields
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|private
name|int
name|memoizedHashCode
init|=
literal|0
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptorForType
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasAgeOfLastAppliedOp
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|AGEOFLASTAPPLIEDOP_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashLong
argument_list|(
name|getAgeOfLastAppliedOp
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasTimeStampsOfLastAppliedOp
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|TIMESTAMPSOFLASTAPPLIEDOP_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashLong
argument_list|(
name|getTimeStampsOfLastAppliedOp
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|getUnknownFields
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code ReplicationLoadSink}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSinkOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_ReplicationLoadSink_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_ReplicationLoadSink_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.protobuf.generated.ClusterStatusProtos.ReplicationLoadSink.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{         }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|ageOfLastAppliedOp_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|timeStampsOfLastAppliedOp_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_ReplicationLoadSink_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|ageOfLastAppliedOp_
operator|=
name|ageOfLastAppliedOp_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|timeStampsOfLastAppliedOp_
operator|=
name|timeStampsOfLastAppliedOp_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasAgeOfLastAppliedOp
argument_list|()
condition|)
block|{
name|setAgeOfLastAppliedOp
argument_list|(
name|other
operator|.
name|getAgeOfLastAppliedOp
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasTimeStampsOfLastAppliedOp
argument_list|()
condition|)
block|{
name|setTimeStampsOfLastAppliedOp
argument_list|(
name|other
operator|.
name|getTimeStampsOfLastAppliedOp
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasAgeOfLastAppliedOp
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasTimeStampsOfLastAppliedOp
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required uint64 ageOfLastAppliedOp = 1;
specifier|private
name|long
name|ageOfLastAppliedOp_
decl_stmt|;
comment|/**        *<code>required uint64 ageOfLastAppliedOp = 1;</code>        */
specifier|public
name|boolean
name|hasAgeOfLastAppliedOp
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required uint64 ageOfLastAppliedOp = 1;</code>        */
specifier|public
name|long
name|getAgeOfLastAppliedOp
parameter_list|()
block|{
return|return
name|ageOfLastAppliedOp_
return|;
block|}
comment|/**        *<code>required uint64 ageOfLastAppliedOp = 1;</code>        */
specifier|public
name|Builder
name|setAgeOfLastAppliedOp
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|ageOfLastAppliedOp_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required uint64 ageOfLastAppliedOp = 1;</code>        */
specifier|public
name|Builder
name|clearAgeOfLastAppliedOp
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|ageOfLastAppliedOp_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required uint64 timeStampsOfLastAppliedOp = 2;
specifier|private
name|long
name|timeStampsOfLastAppliedOp_
decl_stmt|;
comment|/**        *<code>required uint64 timeStampsOfLastAppliedOp = 2;</code>        */
specifier|public
name|boolean
name|hasTimeStampsOfLastAppliedOp
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>required uint64 timeStampsOfLastAppliedOp = 2;</code>        */
specifier|public
name|long
name|getTimeStampsOfLastAppliedOp
parameter_list|()
block|{
return|return
name|timeStampsOfLastAppliedOp_
return|;
block|}
comment|/**        *<code>required uint64 timeStampsOfLastAppliedOp = 2;</code>        */
specifier|public
name|Builder
name|setTimeStampsOfLastAppliedOp
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|timeStampsOfLastAppliedOp_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required uint64 timeStampsOfLastAppliedOp = 2;</code>        */
specifier|public
name|Builder
name|clearTimeStampsOfLastAppliedOp
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|timeStampsOfLastAppliedOp_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:ReplicationLoadSink)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|ReplicationLoadSink
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:ReplicationLoadSink)
block|}
specifier|public
interface|interface
name|ReplicationLoadSourceOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required string peerID = 1;
comment|/**      *<code>required string peerID = 1;</code>      */
name|boolean
name|hasPeerID
parameter_list|()
function_decl|;
comment|/**      *<code>required string peerID = 1;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getPeerID
parameter_list|()
function_decl|;
comment|/**      *<code>required string peerID = 1;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getPeerIDBytes
parameter_list|()
function_decl|;
comment|// required uint64 ageOfLastShippedOp = 2;
comment|/**      *<code>required uint64 ageOfLastShippedOp = 2;</code>      */
name|boolean
name|hasAgeOfLastShippedOp
parameter_list|()
function_decl|;
comment|/**      *<code>required uint64 ageOfLastShippedOp = 2;</code>      */
name|long
name|getAgeOfLastShippedOp
parameter_list|()
function_decl|;
comment|// required uint32 sizeOfLogQueue = 3;
comment|/**      *<code>required uint32 sizeOfLogQueue = 3;</code>      */
name|boolean
name|hasSizeOfLogQueue
parameter_list|()
function_decl|;
comment|/**      *<code>required uint32 sizeOfLogQueue = 3;</code>      */
name|int
name|getSizeOfLogQueue
parameter_list|()
function_decl|;
comment|// required uint64 timeStampOfLastShippedOp = 4;
comment|/**      *<code>required uint64 timeStampOfLastShippedOp = 4;</code>      */
name|boolean
name|hasTimeStampOfLastShippedOp
parameter_list|()
function_decl|;
comment|/**      *<code>required uint64 timeStampOfLastShippedOp = 4;</code>      */
name|long
name|getTimeStampOfLastShippedOp
parameter_list|()
function_decl|;
comment|// required uint64 replicationLag = 5;
comment|/**      *<code>required uint64 replicationLag = 5;</code>      */
name|boolean
name|hasReplicationLag
parameter_list|()
function_decl|;
comment|/**      *<code>required uint64 replicationLag = 5;</code>      */
name|long
name|getReplicationLag
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code ReplicationLoadSource}    */
specifier|public
specifier|static
specifier|final
class|class
name|ReplicationLoadSource
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|ReplicationLoadSourceOrBuilder
block|{
comment|// Use ReplicationLoadSource.newBuilder() to construct.
specifier|private
name|ReplicationLoadSource
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|ReplicationLoadSource
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|ReplicationLoadSource
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|ReplicationLoadSource
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|ReplicationLoadSource
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|ReplicationLoadSource
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|peerID_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|ageOfLastShippedOp_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|24
case|:
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|sizeOfLogQueue_
operator|=
name|input
operator|.
name|readUInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|32
case|:
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|timeStampOfLastShippedOp_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|40
case|:
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|replicationLag_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_ReplicationLoadSource_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_ReplicationLoadSource_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ReplicationLoadSource
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|ReplicationLoadSource
argument_list|>
argument_list|()
block|{
specifier|public
name|ReplicationLoadSource
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|ReplicationLoadSource
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ReplicationLoadSource
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string peerID = 1;
specifier|public
specifier|static
specifier|final
name|int
name|PEERID_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|peerID_
decl_stmt|;
comment|/**      *<code>required string peerID = 1;</code>      */
specifier|public
name|boolean
name|hasPeerID
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>required string peerID = 1;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getPeerID
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|peerID_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|peerID_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>required string peerID = 1;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getPeerIDBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|peerID_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|peerID_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// required uint64 ageOfLastShippedOp = 2;
specifier|public
specifier|static
specifier|final
name|int
name|AGEOFLASTSHIPPEDOP_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|long
name|ageOfLastShippedOp_
decl_stmt|;
comment|/**      *<code>required uint64 ageOfLastShippedOp = 2;</code>      */
specifier|public
name|boolean
name|hasAgeOfLastShippedOp
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>required uint64 ageOfLastShippedOp = 2;</code>      */
specifier|public
name|long
name|getAgeOfLastShippedOp
parameter_list|()
block|{
return|return
name|ageOfLastShippedOp_
return|;
block|}
comment|// required uint32 sizeOfLogQueue = 3;
specifier|public
specifier|static
specifier|final
name|int
name|SIZEOFLOGQUEUE_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|int
name|sizeOfLogQueue_
decl_stmt|;
comment|/**      *<code>required uint32 sizeOfLogQueue = 3;</code>      */
specifier|public
name|boolean
name|hasSizeOfLogQueue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<code>required uint32 sizeOfLogQueue = 3;</code>      */
specifier|public
name|int
name|getSizeOfLogQueue
parameter_list|()
block|{
return|return
name|sizeOfLogQueue_
return|;
block|}
comment|// required uint64 timeStampOfLastShippedOp = 4;
specifier|public
specifier|static
specifier|final
name|int
name|TIMESTAMPOFLASTSHIPPEDOP_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|long
name|timeStampOfLastShippedOp_
decl_stmt|;
comment|/**      *<code>required uint64 timeStampOfLastShippedOp = 4;</code>      */
specifier|public
name|boolean
name|hasTimeStampOfLastShippedOp
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**      *<code>required uint64 timeStampOfLastShippedOp = 4;</code>      */
specifier|public
name|long
name|getTimeStampOfLastShippedOp
parameter_list|()
block|{
return|return
name|timeStampOfLastShippedOp_
return|;
block|}
comment|// required uint64 replicationLag = 5;
specifier|public
specifier|static
specifier|final
name|int
name|REPLICATIONLAG_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|long
name|replicationLag_
decl_stmt|;
comment|/**      *<code>required uint64 replicationLag = 5;</code>      */
specifier|public
name|boolean
name|hasReplicationLag
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**      *<code>required uint64 replicationLag = 5;</code>      */
specifier|public
name|long
name|getReplicationLag
parameter_list|()
block|{
return|return
name|replicationLag_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|peerID_
operator|=
literal|""
expr_stmt|;
name|ageOfLastShippedOp_
operator|=
literal|0L
expr_stmt|;
name|sizeOfLogQueue_
operator|=
literal|0
expr_stmt|;
name|timeStampOfLastShippedOp_
operator|=
literal|0L
expr_stmt|;
name|replicationLag_
operator|=
literal|0L
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasPeerID
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasAgeOfLastShippedOp
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasSizeOfLogQueue
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasTimeStampOfLastShippedOp
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasReplicationLag
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|1
argument_list|,
name|getPeerIDBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|2
argument_list|,
name|ageOfLastShippedOp_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt32
argument_list|(
literal|3
argument_list|,
name|sizeOfLogQueue_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|4
argument_list|,
name|timeStampOfLastShippedOp_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|5
argument_list|,
name|replicationLag_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|1
argument_list|,
name|getPeerIDBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|2
argument_list|,
name|ageOfLastShippedOp_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt32Size
argument_list|(
literal|3
argument_list|,
name|sizeOfLogQueue_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|4
argument_list|,
name|timeStampOfLastShippedOp_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|5
argument_list|,
name|replicationLag_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasPeerID
argument_list|()
operator|==
name|other
operator|.
name|hasPeerID
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasPeerID
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getPeerID
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getPeerID
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasAgeOfLastShippedOp
argument_list|()
operator|==
name|other
operator|.
name|hasAgeOfLastShippedOp
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasAgeOfLastShippedOp
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getAgeOfLastShippedOp
argument_list|()
operator|==
name|other
operator|.
name|getAgeOfLastShippedOp
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasSizeOfLogQueue
argument_list|()
operator|==
name|other
operator|.
name|hasSizeOfLogQueue
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasSizeOfLogQueue
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getSizeOfLogQueue
argument_list|()
operator|==
name|other
operator|.
name|getSizeOfLogQueue
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasTimeStampOfLastShippedOp
argument_list|()
operator|==
name|other
operator|.
name|hasTimeStampOfLastShippedOp
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasTimeStampOfLastShippedOp
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getTimeStampOfLastShippedOp
argument_list|()
operator|==
name|other
operator|.
name|getTimeStampOfLastShippedOp
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasReplicationLag
argument_list|()
operator|==
name|other
operator|.
name|hasReplicationLag
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasReplicationLag
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getReplicationLag
argument_list|()
operator|==
name|other
operator|.
name|getReplicationLag
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getUnknownFields
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|private
name|int
name|memoizedHashCode
init|=
literal|0
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptorForType
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasPeerID
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|PEERID_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getPeerID
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasAgeOfLastShippedOp
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|AGEOFLASTSHIPPEDOP_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashLong
argument_list|(
name|getAgeOfLastShippedOp
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasSizeOfLogQueue
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|SIZEOFLOGQUEUE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getSizeOfLogQueue
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasTimeStampOfLastShippedOp
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|TIMESTAMPOFLASTSHIPPEDOP_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashLong
argument_list|(
name|getTimeStampOfLastShippedOp
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasReplicationLag
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|REPLICATIONLAG_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashLong
argument_list|(
name|getReplicationLag
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|getUnknownFields
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code ReplicationLoadSource}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSourceOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_ReplicationLoadSource_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_ReplicationLoadSource_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.protobuf.generated.ClusterStatusProtos.ReplicationLoadSource.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{         }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|peerID_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|ageOfLastShippedOp_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|sizeOfLogQueue_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|timeStampOfLastShippedOp_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|replicationLag_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_ReplicationLoadSource_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|peerID_
operator|=
name|peerID_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|ageOfLastShippedOp_
operator|=
name|ageOfLastShippedOp_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|sizeOfLogQueue_
operator|=
name|sizeOfLogQueue_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|result
operator|.
name|timeStampOfLastShippedOp_
operator|=
name|timeStampOfLastShippedOp_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|result
operator|.
name|replicationLag_
operator|=
name|replicationLag_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasPeerID
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|peerID_
operator|=
name|other
operator|.
name|peerID_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasAgeOfLastShippedOp
argument_list|()
condition|)
block|{
name|setAgeOfLastShippedOp
argument_list|(
name|other
operator|.
name|getAgeOfLastShippedOp
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasSizeOfLogQueue
argument_list|()
condition|)
block|{
name|setSizeOfLogQueue
argument_list|(
name|other
operator|.
name|getSizeOfLogQueue
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasTimeStampOfLastShippedOp
argument_list|()
condition|)
block|{
name|setTimeStampOfLastShippedOp
argument_list|(
name|other
operator|.
name|getTimeStampOfLastShippedOp
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasReplicationLag
argument_list|()
condition|)
block|{
name|setReplicationLag
argument_list|(
name|other
operator|.
name|getReplicationLag
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasPeerID
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasAgeOfLastShippedOp
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasSizeOfLogQueue
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasTimeStampOfLastShippedOp
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasReplicationLag
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required string peerID = 1;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|peerID_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>required string peerID = 1;</code>        */
specifier|public
name|boolean
name|hasPeerID
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required string peerID = 1;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getPeerID
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|peerID_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|peerID_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string peerID = 1;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getPeerIDBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|peerID_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|peerID_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>required string peerID = 1;</code>        */
specifier|public
name|Builder
name|setPeerID
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|peerID_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string peerID = 1;</code>        */
specifier|public
name|Builder
name|clearPeerID
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|peerID_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getPeerID
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required string peerID = 1;</code>        */
specifier|public
name|Builder
name|setPeerIDBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|peerID_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required uint64 ageOfLastShippedOp = 2;
specifier|private
name|long
name|ageOfLastShippedOp_
decl_stmt|;
comment|/**        *<code>required uint64 ageOfLastShippedOp = 2;</code>        */
specifier|public
name|boolean
name|hasAgeOfLastShippedOp
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>required uint64 ageOfLastShippedOp = 2;</code>        */
specifier|public
name|long
name|getAgeOfLastShippedOp
parameter_list|()
block|{
return|return
name|ageOfLastShippedOp_
return|;
block|}
comment|/**        *<code>required uint64 ageOfLastShippedOp = 2;</code>        */
specifier|public
name|Builder
name|setAgeOfLastShippedOp
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|ageOfLastShippedOp_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required uint64 ageOfLastShippedOp = 2;</code>        */
specifier|public
name|Builder
name|clearAgeOfLastShippedOp
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|ageOfLastShippedOp_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required uint32 sizeOfLogQueue = 3;
specifier|private
name|int
name|sizeOfLogQueue_
decl_stmt|;
comment|/**        *<code>required uint32 sizeOfLogQueue = 3;</code>        */
specifier|public
name|boolean
name|hasSizeOfLogQueue
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>required uint32 sizeOfLogQueue = 3;</code>        */
specifier|public
name|int
name|getSizeOfLogQueue
parameter_list|()
block|{
return|return
name|sizeOfLogQueue_
return|;
block|}
comment|/**        *<code>required uint32 sizeOfLogQueue = 3;</code>        */
specifier|public
name|Builder
name|setSizeOfLogQueue
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|sizeOfLogQueue_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required uint32 sizeOfLogQueue = 3;</code>        */
specifier|public
name|Builder
name|clearSizeOfLogQueue
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|sizeOfLogQueue_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required uint64 timeStampOfLastShippedOp = 4;
specifier|private
name|long
name|timeStampOfLastShippedOp_
decl_stmt|;
comment|/**        *<code>required uint64 timeStampOfLastShippedOp = 4;</code>        */
specifier|public
name|boolean
name|hasTimeStampOfLastShippedOp
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**        *<code>required uint64 timeStampOfLastShippedOp = 4;</code>        */
specifier|public
name|long
name|getTimeStampOfLastShippedOp
parameter_list|()
block|{
return|return
name|timeStampOfLastShippedOp_
return|;
block|}
comment|/**        *<code>required uint64 timeStampOfLastShippedOp = 4;</code>        */
specifier|public
name|Builder
name|setTimeStampOfLastShippedOp
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|timeStampOfLastShippedOp_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required uint64 timeStampOfLastShippedOp = 4;</code>        */
specifier|public
name|Builder
name|clearTimeStampOfLastShippedOp
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|timeStampOfLastShippedOp_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// required uint64 replicationLag = 5;
specifier|private
name|long
name|replicationLag_
decl_stmt|;
comment|/**        *<code>required uint64 replicationLag = 5;</code>        */
specifier|public
name|boolean
name|hasReplicationLag
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**        *<code>required uint64 replicationLag = 5;</code>        */
specifier|public
name|long
name|getReplicationLag
parameter_list|()
block|{
return|return
name|replicationLag_
return|;
block|}
comment|/**        *<code>required uint64 replicationLag = 5;</code>        */
specifier|public
name|Builder
name|setReplicationLag
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|replicationLag_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required uint64 replicationLag = 5;</code>        */
specifier|public
name|Builder
name|clearReplicationLag
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|replicationLag_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:ReplicationLoadSource)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|ReplicationLoadSource
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:ReplicationLoadSource)
block|}
specifier|public
interface|interface
name|ServerLoadOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// optional uint32 number_of_requests = 1;
comment|/**      *<code>optional uint32 number_of_requests = 1;</code>      *      *<pre>      ** Number of requests since last report.       *</pre>      */
name|boolean
name|hasNumberOfRequests
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint32 number_of_requests = 1;</code>      *      *<pre>      ** Number of requests since last report.       *</pre>      */
name|int
name|getNumberOfRequests
parameter_list|()
function_decl|;
comment|// optional uint32 total_number_of_requests = 2;
comment|/**      *<code>optional uint32 total_number_of_requests = 2;</code>      *      *<pre>      ** Total Number of requests from the start of the region server.       *</pre>      */
name|boolean
name|hasTotalNumberOfRequests
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint32 total_number_of_requests = 2;</code>      *      *<pre>      ** Total Number of requests from the start of the region server.       *</pre>      */
name|int
name|getTotalNumberOfRequests
parameter_list|()
function_decl|;
comment|// optional uint32 used_heap_MB = 3;
comment|/**      *<code>optional uint32 used_heap_MB = 3;</code>      *      *<pre>      ** the amount of used heap, in MB.       *</pre>      */
name|boolean
name|hasUsedHeapMB
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint32 used_heap_MB = 3;</code>      *      *<pre>      ** the amount of used heap, in MB.       *</pre>      */
name|int
name|getUsedHeapMB
parameter_list|()
function_decl|;
comment|// optional uint32 max_heap_MB = 4;
comment|/**      *<code>optional uint32 max_heap_MB = 4;</code>      *      *<pre>      ** the maximum allowable size of the heap, in MB.       *</pre>      */
name|boolean
name|hasMaxHeapMB
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint32 max_heap_MB = 4;</code>      *      *<pre>      ** the maximum allowable size of the heap, in MB.       *</pre>      */
name|int
name|getMaxHeapMB
parameter_list|()
function_decl|;
comment|// repeated .RegionLoad region_loads = 5;
comment|/**      *<code>repeated .RegionLoad region_loads = 5;</code>      *      *<pre>      ** Information on the load of individual regions.       *</pre>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
argument_list|>
name|getRegionLoadsList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .RegionLoad region_loads = 5;</code>      *      *<pre>      ** Information on the load of individual regions.       *</pre>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|getRegionLoads
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .RegionLoad region_loads = 5;</code>      *      *<pre>      ** Information on the load of individual regions.       *</pre>      */
name|int
name|getRegionLoadsCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .RegionLoad region_loads = 5;</code>      *      *<pre>      ** Information on the load of individual regions.       *</pre>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoadOrBuilder
argument_list|>
name|getRegionLoadsOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .RegionLoad region_loads = 5;</code>      *      *<pre>      ** Information on the load of individual regions.       *</pre>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoadOrBuilder
name|getRegionLoadsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|// repeated .Coprocessor coprocessors = 6;
comment|/**      *<code>repeated .Coprocessor coprocessors = 6;</code>      *      *<pre>      **      * Regionserver-level coprocessors, e.g., WALObserver implementations.      * Region-level coprocessors, on the other hand, are stored inside RegionLoad      * objects.      *</pre>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|>
name|getCoprocessorsList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Coprocessor coprocessors = 6;</code>      *      *<pre>      **      * Regionserver-level coprocessors, e.g., WALObserver implementations.      * Region-level coprocessors, on the other hand, are stored inside RegionLoad      * objects.      *</pre>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
name|getCoprocessors
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Coprocessor coprocessors = 6;</code>      *      *<pre>      **      * Regionserver-level coprocessors, e.g., WALObserver implementations.      * Region-level coprocessors, on the other hand, are stored inside RegionLoad      * objects.      *</pre>      */
name|int
name|getCoprocessorsCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Coprocessor coprocessors = 6;</code>      *      *<pre>      **      * Regionserver-level coprocessors, e.g., WALObserver implementations.      * Region-level coprocessors, on the other hand, are stored inside RegionLoad      * objects.      *</pre>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|CoprocessorOrBuilder
argument_list|>
name|getCoprocessorsOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Coprocessor coprocessors = 6;</code>      *      *<pre>      **      * Regionserver-level coprocessors, e.g., WALObserver implementations.      * Region-level coprocessors, on the other hand, are stored inside RegionLoad      * objects.      *</pre>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|CoprocessorOrBuilder
name|getCoprocessorsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|// optional uint64 report_start_time = 7;
comment|/**      *<code>optional uint64 report_start_time = 7;</code>      *      *<pre>      **      * Time when incremental (non-total) counts began being calculated (e.g. number_of_requests)      * time is measured as the difference, measured in milliseconds, between the current time      * and midnight, January 1, 1970 UTC.      *</pre>      */
name|boolean
name|hasReportStartTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint64 report_start_time = 7;</code>      *      *<pre>      **      * Time when incremental (non-total) counts began being calculated (e.g. number_of_requests)      * time is measured as the difference, measured in milliseconds, between the current time      * and midnight, January 1, 1970 UTC.      *</pre>      */
name|long
name|getReportStartTime
parameter_list|()
function_decl|;
comment|// optional uint64 report_end_time = 8;
comment|/**      *<code>optional uint64 report_end_time = 8;</code>      *      *<pre>      **      * Time when report was generated.      * time is measured as the difference, measured in milliseconds, between the current time      * and midnight, January 1, 1970 UTC.      *</pre>      */
name|boolean
name|hasReportEndTime
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint64 report_end_time = 8;</code>      *      *<pre>      **      * Time when report was generated.      * time is measured as the difference, measured in milliseconds, between the current time      * and midnight, January 1, 1970 UTC.      *</pre>      */
name|long
name|getReportEndTime
parameter_list|()
function_decl|;
comment|// optional uint32 info_server_port = 9;
comment|/**      *<code>optional uint32 info_server_port = 9;</code>      *      *<pre>      **      * The port number that this region server is hosing an info server on.      *</pre>      */
name|boolean
name|hasInfoServerPort
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint32 info_server_port = 9;</code>      *      *<pre>      **      * The port number that this region server is hosing an info server on.      *</pre>      */
name|int
name|getInfoServerPort
parameter_list|()
function_decl|;
comment|// repeated .ReplicationLoadSource replLoadSource = 10;
comment|/**      *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>      *      *<pre>      **      * The replicationLoadSource for the replication Source status of this region server.      *</pre>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
argument_list|>
name|getReplLoadSourceList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>      *      *<pre>      **      * The replicationLoadSource for the replication Source status of this region server.      *</pre>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|getReplLoadSource
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>      *      *<pre>      **      * The replicationLoadSource for the replication Source status of this region server.      *</pre>      */
name|int
name|getReplLoadSourceCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>      *      *<pre>      **      * The replicationLoadSource for the replication Source status of this region server.      *</pre>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSourceOrBuilder
argument_list|>
name|getReplLoadSourceOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>      *      *<pre>      **      * The replicationLoadSource for the replication Source status of this region server.      *</pre>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSourceOrBuilder
name|getReplLoadSourceOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|// optional .ReplicationLoadSink replLoadSink = 11;
comment|/**      *<code>optional .ReplicationLoadSink replLoadSink = 11;</code>      *      *<pre>      **      * The replicationLoadSink for the replication Sink status of this region server.      *</pre>      */
name|boolean
name|hasReplLoadSink
parameter_list|()
function_decl|;
comment|/**      *<code>optional .ReplicationLoadSink replLoadSink = 11;</code>      *      *<pre>      **      * The replicationLoadSink for the replication Sink status of this region server.      *</pre>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|getReplLoadSink
parameter_list|()
function_decl|;
comment|/**      *<code>optional .ReplicationLoadSink replLoadSink = 11;</code>      *      *<pre>      **      * The replicationLoadSink for the replication Sink status of this region server.      *</pre>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSinkOrBuilder
name|getReplLoadSinkOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code ServerLoad}    */
specifier|public
specifier|static
specifier|final
class|class
name|ServerLoad
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|ServerLoadOrBuilder
block|{
comment|// Use ServerLoad.newBuilder() to construct.
specifier|private
name|ServerLoad
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|ServerLoad
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|ServerLoad
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|ServerLoad
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|ServerLoad
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|ServerLoad
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|8
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|numberOfRequests_
operator|=
name|input
operator|.
name|readUInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|totalNumberOfRequests_
operator|=
name|input
operator|.
name|readUInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|24
case|:
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|usedHeapMB_
operator|=
name|input
operator|.
name|readUInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|32
case|:
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|maxHeapMB_
operator|=
name|input
operator|.
name|readUInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|42
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|regionLoads_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|regionLoads_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|50
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|coprocessors_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
name|coprocessors_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|56
case|:
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|reportStartTime_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|64
case|:
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|reportEndTime_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|72
case|:
block|{
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|infoServerPort_
operator|=
name|input
operator|.
name|readUInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|82
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|replLoadSource_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000200
expr_stmt|;
block|}
name|replLoadSource_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|90
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|replLoadSink_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|replLoadSink_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|replLoadSink_
argument_list|)
expr_stmt|;
name|replLoadSink_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|regionLoads_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|regionLoads_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|coprocessors_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|coprocessors_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|replLoadSource_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|replLoadSource_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_ServerLoad_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_ServerLoad_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ServerLoad
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|ServerLoad
argument_list|>
argument_list|()
block|{
specifier|public
name|ServerLoad
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|ServerLoad
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ServerLoad
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional uint32 number_of_requests = 1;
specifier|public
specifier|static
specifier|final
name|int
name|NUMBER_OF_REQUESTS_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|int
name|numberOfRequests_
decl_stmt|;
comment|/**      *<code>optional uint32 number_of_requests = 1;</code>      *      *<pre>      ** Number of requests since last report.       *</pre>      */
specifier|public
name|boolean
name|hasNumberOfRequests
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>optional uint32 number_of_requests = 1;</code>      *      *<pre>      ** Number of requests since last report.       *</pre>      */
specifier|public
name|int
name|getNumberOfRequests
parameter_list|()
block|{
return|return
name|numberOfRequests_
return|;
block|}
comment|// optional uint32 total_number_of_requests = 2;
specifier|public
specifier|static
specifier|final
name|int
name|TOTAL_NUMBER_OF_REQUESTS_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|int
name|totalNumberOfRequests_
decl_stmt|;
comment|/**      *<code>optional uint32 total_number_of_requests = 2;</code>      *      *<pre>      ** Total Number of requests from the start of the region server.       *</pre>      */
specifier|public
name|boolean
name|hasTotalNumberOfRequests
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>optional uint32 total_number_of_requests = 2;</code>      *      *<pre>      ** Total Number of requests from the start of the region server.       *</pre>      */
specifier|public
name|int
name|getTotalNumberOfRequests
parameter_list|()
block|{
return|return
name|totalNumberOfRequests_
return|;
block|}
comment|// optional uint32 used_heap_MB = 3;
specifier|public
specifier|static
specifier|final
name|int
name|USED_HEAP_MB_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|int
name|usedHeapMB_
decl_stmt|;
comment|/**      *<code>optional uint32 used_heap_MB = 3;</code>      *      *<pre>      ** the amount of used heap, in MB.       *</pre>      */
specifier|public
name|boolean
name|hasUsedHeapMB
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<code>optional uint32 used_heap_MB = 3;</code>      *      *<pre>      ** the amount of used heap, in MB.       *</pre>      */
specifier|public
name|int
name|getUsedHeapMB
parameter_list|()
block|{
return|return
name|usedHeapMB_
return|;
block|}
comment|// optional uint32 max_heap_MB = 4;
specifier|public
specifier|static
specifier|final
name|int
name|MAX_HEAP_MB_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|int
name|maxHeapMB_
decl_stmt|;
comment|/**      *<code>optional uint32 max_heap_MB = 4;</code>      *      *<pre>      ** the maximum allowable size of the heap, in MB.       *</pre>      */
specifier|public
name|boolean
name|hasMaxHeapMB
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**      *<code>optional uint32 max_heap_MB = 4;</code>      *      *<pre>      ** the maximum allowable size of the heap, in MB.       *</pre>      */
specifier|public
name|int
name|getMaxHeapMB
parameter_list|()
block|{
return|return
name|maxHeapMB_
return|;
block|}
comment|// repeated .RegionLoad region_loads = 5;
specifier|public
specifier|static
specifier|final
name|int
name|REGION_LOADS_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
argument_list|>
name|regionLoads_
decl_stmt|;
comment|/**      *<code>repeated .RegionLoad region_loads = 5;</code>      *      *<pre>      ** Information on the load of individual regions.       *</pre>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
argument_list|>
name|getRegionLoadsList
parameter_list|()
block|{
return|return
name|regionLoads_
return|;
block|}
comment|/**      *<code>repeated .RegionLoad region_loads = 5;</code>      *      *<pre>      ** Information on the load of individual regions.       *</pre>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoadOrBuilder
argument_list|>
name|getRegionLoadsOrBuilderList
parameter_list|()
block|{
return|return
name|regionLoads_
return|;
block|}
comment|/**      *<code>repeated .RegionLoad region_loads = 5;</code>      *      *<pre>      ** Information on the load of individual regions.       *</pre>      */
specifier|public
name|int
name|getRegionLoadsCount
parameter_list|()
block|{
return|return
name|regionLoads_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .RegionLoad region_loads = 5;</code>      *      *<pre>      ** Information on the load of individual regions.       *</pre>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|getRegionLoads
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|regionLoads_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .RegionLoad region_loads = 5;</code>      *      *<pre>      ** Information on the load of individual regions.       *</pre>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoadOrBuilder
name|getRegionLoadsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|regionLoads_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|// repeated .Coprocessor coprocessors = 6;
specifier|public
specifier|static
specifier|final
name|int
name|COPROCESSORS_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|>
name|coprocessors_
decl_stmt|;
comment|/**      *<code>repeated .Coprocessor coprocessors = 6;</code>      *      *<pre>      **      * Regionserver-level coprocessors, e.g., WALObserver implementations.      * Region-level coprocessors, on the other hand, are stored inside RegionLoad      * objects.      *</pre>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|>
name|getCoprocessorsList
parameter_list|()
block|{
return|return
name|coprocessors_
return|;
block|}
comment|/**      *<code>repeated .Coprocessor coprocessors = 6;</code>      *      *<pre>      **      * Regionserver-level coprocessors, e.g., WALObserver implementations.      * Region-level coprocessors, on the other hand, are stored inside RegionLoad      * objects.      *</pre>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|CoprocessorOrBuilder
argument_list|>
name|getCoprocessorsOrBuilderList
parameter_list|()
block|{
return|return
name|coprocessors_
return|;
block|}
comment|/**      *<code>repeated .Coprocessor coprocessors = 6;</code>      *      *<pre>      **      * Regionserver-level coprocessors, e.g., WALObserver implementations.      * Region-level coprocessors, on the other hand, are stored inside RegionLoad      * objects.      *</pre>      */
specifier|public
name|int
name|getCoprocessorsCount
parameter_list|()
block|{
return|return
name|coprocessors_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .Coprocessor coprocessors = 6;</code>      *      *<pre>      **      * Regionserver-level coprocessors, e.g., WALObserver implementations.      * Region-level coprocessors, on the other hand, are stored inside RegionLoad      * objects.      *</pre>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
name|getCoprocessors
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|coprocessors_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .Coprocessor coprocessors = 6;</code>      *      *<pre>      **      * Regionserver-level coprocessors, e.g., WALObserver implementations.      * Region-level coprocessors, on the other hand, are stored inside RegionLoad      * objects.      *</pre>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|CoprocessorOrBuilder
name|getCoprocessorsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|coprocessors_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|// optional uint64 report_start_time = 7;
specifier|public
specifier|static
specifier|final
name|int
name|REPORT_START_TIME_FIELD_NUMBER
init|=
literal|7
decl_stmt|;
specifier|private
name|long
name|reportStartTime_
decl_stmt|;
comment|/**      *<code>optional uint64 report_start_time = 7;</code>      *      *<pre>      **      * Time when incremental (non-total) counts began being calculated (e.g. number_of_requests)      * time is measured as the difference, measured in milliseconds, between the current time      * and midnight, January 1, 1970 UTC.      *</pre>      */
specifier|public
name|boolean
name|hasReportStartTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**      *<code>optional uint64 report_start_time = 7;</code>      *      *<pre>      **      * Time when incremental (non-total) counts began being calculated (e.g. number_of_requests)      * time is measured as the difference, measured in milliseconds, between the current time      * and midnight, January 1, 1970 UTC.      *</pre>      */
specifier|public
name|long
name|getReportStartTime
parameter_list|()
block|{
return|return
name|reportStartTime_
return|;
block|}
comment|// optional uint64 report_end_time = 8;
specifier|public
specifier|static
specifier|final
name|int
name|REPORT_END_TIME_FIELD_NUMBER
init|=
literal|8
decl_stmt|;
specifier|private
name|long
name|reportEndTime_
decl_stmt|;
comment|/**      *<code>optional uint64 report_end_time = 8;</code>      *      *<pre>      **      * Time when report was generated.      * time is measured as the difference, measured in milliseconds, between the current time      * and midnight, January 1, 1970 UTC.      *</pre>      */
specifier|public
name|boolean
name|hasReportEndTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**      *<code>optional uint64 report_end_time = 8;</code>      *      *<pre>      **      * Time when report was generated.      * time is measured as the difference, measured in milliseconds, between the current time      * and midnight, January 1, 1970 UTC.      *</pre>      */
specifier|public
name|long
name|getReportEndTime
parameter_list|()
block|{
return|return
name|reportEndTime_
return|;
block|}
comment|// optional uint32 info_server_port = 9;
specifier|public
specifier|static
specifier|final
name|int
name|INFO_SERVER_PORT_FIELD_NUMBER
init|=
literal|9
decl_stmt|;
specifier|private
name|int
name|infoServerPort_
decl_stmt|;
comment|/**      *<code>optional uint32 info_server_port = 9;</code>      *      *<pre>      **      * The port number that this region server is hosing an info server on.      *</pre>      */
specifier|public
name|boolean
name|hasInfoServerPort
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
return|;
block|}
comment|/**      *<code>optional uint32 info_server_port = 9;</code>      *      *<pre>      **      * The port number that this region server is hosing an info server on.      *</pre>      */
specifier|public
name|int
name|getInfoServerPort
parameter_list|()
block|{
return|return
name|infoServerPort_
return|;
block|}
comment|// repeated .ReplicationLoadSource replLoadSource = 10;
specifier|public
specifier|static
specifier|final
name|int
name|REPLLOADSOURCE_FIELD_NUMBER
init|=
literal|10
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
argument_list|>
name|replLoadSource_
decl_stmt|;
comment|/**      *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>      *      *<pre>      **      * The replicationLoadSource for the replication Source status of this region server.      *</pre>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
argument_list|>
name|getReplLoadSourceList
parameter_list|()
block|{
return|return
name|replLoadSource_
return|;
block|}
comment|/**      *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>      *      *<pre>      **      * The replicationLoadSource for the replication Source status of this region server.      *</pre>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSourceOrBuilder
argument_list|>
name|getReplLoadSourceOrBuilderList
parameter_list|()
block|{
return|return
name|replLoadSource_
return|;
block|}
comment|/**      *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>      *      *<pre>      **      * The replicationLoadSource for the replication Source status of this region server.      *</pre>      */
specifier|public
name|int
name|getReplLoadSourceCount
parameter_list|()
block|{
return|return
name|replLoadSource_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>      *      *<pre>      **      * The replicationLoadSource for the replication Source status of this region server.      *</pre>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|getReplLoadSource
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|replLoadSource_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>      *      *<pre>      **      * The replicationLoadSource for the replication Source status of this region server.      *</pre>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSourceOrBuilder
name|getReplLoadSourceOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|replLoadSource_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|// optional .ReplicationLoadSink replLoadSink = 11;
specifier|public
specifier|static
specifier|final
name|int
name|REPLLOADSINK_FIELD_NUMBER
init|=
literal|11
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|replLoadSink_
decl_stmt|;
comment|/**      *<code>optional .ReplicationLoadSink replLoadSink = 11;</code>      *      *<pre>      **      * The replicationLoadSink for the replication Sink status of this region server.      *</pre>      */
specifier|public
name|boolean
name|hasReplLoadSink
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
return|;
block|}
comment|/**      *<code>optional .ReplicationLoadSink replLoadSink = 11;</code>      *      *<pre>      **      * The replicationLoadSink for the replication Sink status of this region server.      *</pre>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|getReplLoadSink
parameter_list|()
block|{
return|return
name|replLoadSink_
return|;
block|}
comment|/**      *<code>optional .ReplicationLoadSink replLoadSink = 11;</code>      *      *<pre>      **      * The replicationLoadSink for the replication Sink status of this region server.      *</pre>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSinkOrBuilder
name|getReplLoadSinkOrBuilder
parameter_list|()
block|{
return|return
name|replLoadSink_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|numberOfRequests_
operator|=
literal|0
expr_stmt|;
name|totalNumberOfRequests_
operator|=
literal|0
expr_stmt|;
name|usedHeapMB_
operator|=
literal|0
expr_stmt|;
name|maxHeapMB_
operator|=
literal|0
expr_stmt|;
name|regionLoads_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|coprocessors_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|reportStartTime_
operator|=
literal|0L
expr_stmt|;
name|reportEndTime_
operator|=
literal|0L
expr_stmt|;
name|infoServerPort_
operator|=
literal|0
expr_stmt|;
name|replLoadSource_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|replLoadSink_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getRegionLoadsCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getRegionLoads
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getCoprocessorsCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getCoprocessors
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getReplLoadSourceCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getReplLoadSource
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasReplLoadSink
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getReplLoadSink
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt32
argument_list|(
literal|1
argument_list|,
name|numberOfRequests_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt32
argument_list|(
literal|2
argument_list|,
name|totalNumberOfRequests_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt32
argument_list|(
literal|3
argument_list|,
name|usedHeapMB_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt32
argument_list|(
literal|4
argument_list|,
name|maxHeapMB_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|regionLoads_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|5
argument_list|,
name|regionLoads_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|coprocessors_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|6
argument_list|,
name|coprocessors_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|7
argument_list|,
name|reportStartTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|8
argument_list|,
name|reportEndTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt32
argument_list|(
literal|9
argument_list|,
name|infoServerPort_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|replLoadSource_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|10
argument_list|,
name|replLoadSource_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|11
argument_list|,
name|replLoadSink_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt32Size
argument_list|(
literal|1
argument_list|,
name|numberOfRequests_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt32Size
argument_list|(
literal|2
argument_list|,
name|totalNumberOfRequests_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt32Size
argument_list|(
literal|3
argument_list|,
name|usedHeapMB_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt32Size
argument_list|(
literal|4
argument_list|,
name|maxHeapMB_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|regionLoads_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|5
argument_list|,
name|regionLoads_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|coprocessors_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|6
argument_list|,
name|coprocessors_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|7
argument_list|,
name|reportStartTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|8
argument_list|,
name|reportEndTime_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt32Size
argument_list|(
literal|9
argument_list|,
name|infoServerPort_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|replLoadSource_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|10
argument_list|,
name|replLoadSource_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|11
argument_list|,
name|replLoadSink_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasNumberOfRequests
argument_list|()
operator|==
name|other
operator|.
name|hasNumberOfRequests
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasNumberOfRequests
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getNumberOfRequests
argument_list|()
operator|==
name|other
operator|.
name|getNumberOfRequests
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasTotalNumberOfRequests
argument_list|()
operator|==
name|other
operator|.
name|hasTotalNumberOfRequests
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasTotalNumberOfRequests
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getTotalNumberOfRequests
argument_list|()
operator|==
name|other
operator|.
name|getTotalNumberOfRequests
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasUsedHeapMB
argument_list|()
operator|==
name|other
operator|.
name|hasUsedHeapMB
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasUsedHeapMB
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getUsedHeapMB
argument_list|()
operator|==
name|other
operator|.
name|getUsedHeapMB
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasMaxHeapMB
argument_list|()
operator|==
name|other
operator|.
name|hasMaxHeapMB
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasMaxHeapMB
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getMaxHeapMB
argument_list|()
operator|==
name|other
operator|.
name|getMaxHeapMB
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getRegionLoadsList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getRegionLoadsList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getCoprocessorsList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getCoprocessorsList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasReportStartTime
argument_list|()
operator|==
name|other
operator|.
name|hasReportStartTime
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasReportStartTime
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getReportStartTime
argument_list|()
operator|==
name|other
operator|.
name|getReportStartTime
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasReportEndTime
argument_list|()
operator|==
name|other
operator|.
name|hasReportEndTime
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasReportEndTime
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getReportEndTime
argument_list|()
operator|==
name|other
operator|.
name|getReportEndTime
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasInfoServerPort
argument_list|()
operator|==
name|other
operator|.
name|hasInfoServerPort
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasInfoServerPort
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getInfoServerPort
argument_list|()
operator|==
name|other
operator|.
name|getInfoServerPort
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getReplLoadSourceList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getReplLoadSourceList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasReplLoadSink
argument_list|()
operator|==
name|other
operator|.
name|hasReplLoadSink
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasReplLoadSink
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getReplLoadSink
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getReplLoadSink
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getUnknownFields
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|private
name|int
name|memoizedHashCode
init|=
literal|0
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptorForType
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasNumberOfRequests
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|NUMBER_OF_REQUESTS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getNumberOfRequests
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasTotalNumberOfRequests
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|TOTAL_NUMBER_OF_REQUESTS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getTotalNumberOfRequests
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasUsedHeapMB
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|USED_HEAP_MB_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getUsedHeapMB
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasMaxHeapMB
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|MAX_HEAP_MB_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getMaxHeapMB
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getRegionLoadsCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|REGION_LOADS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getRegionLoadsList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getCoprocessorsCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|COPROCESSORS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getCoprocessorsList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasReportStartTime
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|REPORT_START_TIME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashLong
argument_list|(
name|getReportStartTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasReportEndTime
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|REPORT_END_TIME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashLong
argument_list|(
name|getReportEndTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasInfoServerPort
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|INFO_SERVER_PORT_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getInfoServerPort
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getReplLoadSourceCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|REPLLOADSOURCE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getReplLoadSourceList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasReplLoadSink
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|REPLLOADSINK_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getReplLoadSink
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|getUnknownFields
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code ServerLoad}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoadOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_ServerLoad_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_ServerLoad_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.protobuf.generated.ClusterStatusProtos.ServerLoad.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getRegionLoadsFieldBuilder
argument_list|()
expr_stmt|;
name|getCoprocessorsFieldBuilder
argument_list|()
expr_stmt|;
name|getReplLoadSourceFieldBuilder
argument_list|()
expr_stmt|;
name|getReplLoadSinkFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|numberOfRequests_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|totalNumberOfRequests_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|usedHeapMB_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|maxHeapMB_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
if|if
condition|(
name|regionLoadsBuilder_
operator|==
literal|null
condition|)
block|{
name|regionLoads_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
block|}
else|else
block|{
name|regionLoadsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|coprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
name|coprocessors_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
block|}
else|else
block|{
name|coprocessorsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|reportStartTime_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|reportEndTime_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|infoServerPort_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
if|if
condition|(
name|replLoadSourceBuilder_
operator|==
literal|null
condition|)
block|{
name|replLoadSource_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
block|}
else|else
block|{
name|replLoadSourceBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|replLoadSinkBuilder_
operator|==
literal|null
condition|)
block|{
name|replLoadSink_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|replLoadSinkBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000400
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_ServerLoad_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|numberOfRequests_
operator|=
name|numberOfRequests_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|totalNumberOfRequests_
operator|=
name|totalNumberOfRequests_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|usedHeapMB_
operator|=
name|usedHeapMB_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|result
operator|.
name|maxHeapMB_
operator|=
name|maxHeapMB_
expr_stmt|;
if|if
condition|(
name|regionLoadsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|regionLoads_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|regionLoads_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|regionLoads_
operator|=
name|regionLoads_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|regionLoads_
operator|=
name|regionLoadsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|coprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|coprocessors_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|coprocessors_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|coprocessors_
operator|=
name|coprocessors_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|coprocessors_
operator|=
name|coprocessorsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|result
operator|.
name|reportStartTime_
operator|=
name|reportStartTime_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
name|result
operator|.
name|reportEndTime_
operator|=
name|reportEndTime_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000040
expr_stmt|;
block|}
name|result
operator|.
name|infoServerPort_
operator|=
name|infoServerPort_
expr_stmt|;
if|if
condition|(
name|replLoadSourceBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|replLoadSource_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|replLoadSource_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|replLoadSource_
operator|=
name|replLoadSource_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|replLoadSource_
operator|=
name|replLoadSourceBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000080
expr_stmt|;
block|}
if|if
condition|(
name|replLoadSinkBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|replLoadSink_
operator|=
name|replLoadSink_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|replLoadSink_
operator|=
name|replLoadSinkBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasNumberOfRequests
argument_list|()
condition|)
block|{
name|setNumberOfRequests
argument_list|(
name|other
operator|.
name|getNumberOfRequests
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasTotalNumberOfRequests
argument_list|()
condition|)
block|{
name|setTotalNumberOfRequests
argument_list|(
name|other
operator|.
name|getTotalNumberOfRequests
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasUsedHeapMB
argument_list|()
condition|)
block|{
name|setUsedHeapMB
argument_list|(
name|other
operator|.
name|getUsedHeapMB
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasMaxHeapMB
argument_list|()
condition|)
block|{
name|setMaxHeapMB
argument_list|(
name|other
operator|.
name|getMaxHeapMB
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|regionLoadsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|regionLoads_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|regionLoads_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|regionLoads_
operator|=
name|other
operator|.
name|regionLoads_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureRegionLoadsIsMutable
argument_list|()
expr_stmt|;
name|regionLoads_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|regionLoads_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|regionLoads_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|regionLoadsBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|regionLoadsBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|regionLoadsBuilder_
operator|=
literal|null
expr_stmt|;
name|regionLoads_
operator|=
name|other
operator|.
name|regionLoads_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|regionLoadsBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getRegionLoadsFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|regionLoadsBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|regionLoads_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|coprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|coprocessors_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|coprocessors_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|coprocessors_
operator|=
name|other
operator|.
name|coprocessors_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureCoprocessorsIsMutable
argument_list|()
expr_stmt|;
name|coprocessors_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|coprocessors_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|coprocessors_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|coprocessorsBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|coprocessorsBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|coprocessorsBuilder_
operator|=
literal|null
expr_stmt|;
name|coprocessors_
operator|=
name|other
operator|.
name|coprocessors_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|coprocessorsBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getCoprocessorsFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|coprocessorsBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|coprocessors_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|other
operator|.
name|hasReportStartTime
argument_list|()
condition|)
block|{
name|setReportStartTime
argument_list|(
name|other
operator|.
name|getReportStartTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasReportEndTime
argument_list|()
condition|)
block|{
name|setReportEndTime
argument_list|(
name|other
operator|.
name|getReportEndTime
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasInfoServerPort
argument_list|()
condition|)
block|{
name|setInfoServerPort
argument_list|(
name|other
operator|.
name|getInfoServerPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|replLoadSourceBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|replLoadSource_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|replLoadSource_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|replLoadSource_
operator|=
name|other
operator|.
name|replLoadSource_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureReplLoadSourceIsMutable
argument_list|()
expr_stmt|;
name|replLoadSource_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|replLoadSource_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|replLoadSource_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|replLoadSourceBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|replLoadSourceBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|replLoadSourceBuilder_
operator|=
literal|null
expr_stmt|;
name|replLoadSource_
operator|=
name|other
operator|.
name|replLoadSource_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
name|replLoadSourceBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getReplLoadSourceFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|replLoadSourceBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|replLoadSource_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|other
operator|.
name|hasReplLoadSink
argument_list|()
condition|)
block|{
name|mergeReplLoadSink
argument_list|(
name|other
operator|.
name|getReplLoadSink
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getRegionLoadsCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getRegionLoads
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getCoprocessorsCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getCoprocessors
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getReplLoadSourceCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getReplLoadSource
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasReplLoadSink
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getReplLoadSink
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional uint32 number_of_requests = 1;
specifier|private
name|int
name|numberOfRequests_
decl_stmt|;
comment|/**        *<code>optional uint32 number_of_requests = 1;</code>        *        *<pre>        ** Number of requests since last report.         *</pre>        */
specifier|public
name|boolean
name|hasNumberOfRequests
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional uint32 number_of_requests = 1;</code>        *        *<pre>        ** Number of requests since last report.         *</pre>        */
specifier|public
name|int
name|getNumberOfRequests
parameter_list|()
block|{
return|return
name|numberOfRequests_
return|;
block|}
comment|/**        *<code>optional uint32 number_of_requests = 1;</code>        *        *<pre>        ** Number of requests since last report.         *</pre>        */
specifier|public
name|Builder
name|setNumberOfRequests
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|numberOfRequests_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint32 number_of_requests = 1;</code>        *        *<pre>        ** Number of requests since last report.         *</pre>        */
specifier|public
name|Builder
name|clearNumberOfRequests
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|numberOfRequests_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint32 total_number_of_requests = 2;
specifier|private
name|int
name|totalNumberOfRequests_
decl_stmt|;
comment|/**        *<code>optional uint32 total_number_of_requests = 2;</code>        *        *<pre>        ** Total Number of requests from the start of the region server.         *</pre>        */
specifier|public
name|boolean
name|hasTotalNumberOfRequests
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional uint32 total_number_of_requests = 2;</code>        *        *<pre>        ** Total Number of requests from the start of the region server.         *</pre>        */
specifier|public
name|int
name|getTotalNumberOfRequests
parameter_list|()
block|{
return|return
name|totalNumberOfRequests_
return|;
block|}
comment|/**        *<code>optional uint32 total_number_of_requests = 2;</code>        *        *<pre>        ** Total Number of requests from the start of the region server.         *</pre>        */
specifier|public
name|Builder
name|setTotalNumberOfRequests
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|totalNumberOfRequests_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint32 total_number_of_requests = 2;</code>        *        *<pre>        ** Total Number of requests from the start of the region server.         *</pre>        */
specifier|public
name|Builder
name|clearTotalNumberOfRequests
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|totalNumberOfRequests_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint32 used_heap_MB = 3;
specifier|private
name|int
name|usedHeapMB_
decl_stmt|;
comment|/**        *<code>optional uint32 used_heap_MB = 3;</code>        *        *<pre>        ** the amount of used heap, in MB.         *</pre>        */
specifier|public
name|boolean
name|hasUsedHeapMB
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>optional uint32 used_heap_MB = 3;</code>        *        *<pre>        ** the amount of used heap, in MB.         *</pre>        */
specifier|public
name|int
name|getUsedHeapMB
parameter_list|()
block|{
return|return
name|usedHeapMB_
return|;
block|}
comment|/**        *<code>optional uint32 used_heap_MB = 3;</code>        *        *<pre>        ** the amount of used heap, in MB.         *</pre>        */
specifier|public
name|Builder
name|setUsedHeapMB
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|usedHeapMB_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint32 used_heap_MB = 3;</code>        *        *<pre>        ** the amount of used heap, in MB.         *</pre>        */
specifier|public
name|Builder
name|clearUsedHeapMB
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|usedHeapMB_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint32 max_heap_MB = 4;
specifier|private
name|int
name|maxHeapMB_
decl_stmt|;
comment|/**        *<code>optional uint32 max_heap_MB = 4;</code>        *        *<pre>        ** the maximum allowable size of the heap, in MB.         *</pre>        */
specifier|public
name|boolean
name|hasMaxHeapMB
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**        *<code>optional uint32 max_heap_MB = 4;</code>        *        *<pre>        ** the maximum allowable size of the heap, in MB.         *</pre>        */
specifier|public
name|int
name|getMaxHeapMB
parameter_list|()
block|{
return|return
name|maxHeapMB_
return|;
block|}
comment|/**        *<code>optional uint32 max_heap_MB = 4;</code>        *        *<pre>        ** the maximum allowable size of the heap, in MB.         *</pre>        */
specifier|public
name|Builder
name|setMaxHeapMB
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|maxHeapMB_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint32 max_heap_MB = 4;</code>        *        *<pre>        ** the maximum allowable size of the heap, in MB.         *</pre>        */
specifier|public
name|Builder
name|clearMaxHeapMB
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|maxHeapMB_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// repeated .RegionLoad region_loads = 5;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
argument_list|>
name|regionLoads_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureRegionLoadsIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|regionLoads_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
argument_list|>
argument_list|(
name|regionLoads_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoadOrBuilder
argument_list|>
name|regionLoadsBuilder_
decl_stmt|;
comment|/**        *<code>repeated .RegionLoad region_loads = 5;</code>        *        *<pre>        ** Information on the load of individual regions.         *</pre>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
argument_list|>
name|getRegionLoadsList
parameter_list|()
block|{
if|if
condition|(
name|regionLoadsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|regionLoads_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|regionLoadsBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .RegionLoad region_loads = 5;</code>        *        *<pre>        ** Information on the load of individual regions.         *</pre>        */
specifier|public
name|int
name|getRegionLoadsCount
parameter_list|()
block|{
if|if
condition|(
name|regionLoadsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|regionLoads_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|regionLoadsBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .RegionLoad region_loads = 5;</code>        *        *<pre>        ** Information on the load of individual regions.         *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|getRegionLoads
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|regionLoadsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|regionLoads_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|regionLoadsBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .RegionLoad region_loads = 5;</code>        *        *<pre>        ** Information on the load of individual regions.         *</pre>        */
specifier|public
name|Builder
name|setRegionLoads
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|value
parameter_list|)
block|{
if|if
condition|(
name|regionLoadsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRegionLoadsIsMutable
argument_list|()
expr_stmt|;
name|regionLoads_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionLoadsBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .RegionLoad region_loads = 5;</code>        *        *<pre>        ** Information on the load of individual regions.         *</pre>        */
specifier|public
name|Builder
name|setRegionLoads
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|regionLoadsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRegionLoadsIsMutable
argument_list|()
expr_stmt|;
name|regionLoads_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionLoadsBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .RegionLoad region_loads = 5;</code>        *        *<pre>        ** Information on the load of individual regions.         *</pre>        */
specifier|public
name|Builder
name|addRegionLoads
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|value
parameter_list|)
block|{
if|if
condition|(
name|regionLoadsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRegionLoadsIsMutable
argument_list|()
expr_stmt|;
name|regionLoads_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionLoadsBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .RegionLoad region_loads = 5;</code>        *        *<pre>        ** Information on the load of individual regions.         *</pre>        */
specifier|public
name|Builder
name|addRegionLoads
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
name|value
parameter_list|)
block|{
if|if
condition|(
name|regionLoadsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRegionLoadsIsMutable
argument_list|()
expr_stmt|;
name|regionLoads_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionLoadsBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .RegionLoad region_loads = 5;</code>        *        *<pre>        ** Information on the load of individual regions.         *</pre>        */
specifier|public
name|Builder
name|addRegionLoads
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|regionLoadsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRegionLoadsIsMutable
argument_list|()
expr_stmt|;
name|regionLoads_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionLoadsBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .RegionLoad region_loads = 5;</code>        *        *<pre>        ** Information on the load of individual regions.         *</pre>        */
specifier|public
name|Builder
name|addRegionLoads
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|regionLoadsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRegionLoadsIsMutable
argument_list|()
expr_stmt|;
name|regionLoads_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionLoadsBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .RegionLoad region_loads = 5;</code>        *        *<pre>        ** Information on the load of individual regions.         *</pre>        */
specifier|public
name|Builder
name|addAllRegionLoads
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|regionLoadsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRegionLoadsIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|regionLoads_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionLoadsBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .RegionLoad region_loads = 5;</code>        *        *<pre>        ** Information on the load of individual regions.         *</pre>        */
specifier|public
name|Builder
name|clearRegionLoads
parameter_list|()
block|{
if|if
condition|(
name|regionLoadsBuilder_
operator|==
literal|null
condition|)
block|{
name|regionLoads_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionLoadsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .RegionLoad region_loads = 5;</code>        *        *<pre>        ** Information on the load of individual regions.         *</pre>        */
specifier|public
name|Builder
name|removeRegionLoads
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|regionLoadsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRegionLoadsIsMutable
argument_list|()
expr_stmt|;
name|regionLoads_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionLoadsBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .RegionLoad region_loads = 5;</code>        *        *<pre>        ** Information on the load of individual regions.         *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|.
name|Builder
name|getRegionLoadsBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getRegionLoadsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .RegionLoad region_loads = 5;</code>        *        *<pre>        ** Information on the load of individual regions.         *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoadOrBuilder
name|getRegionLoadsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|regionLoadsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|regionLoads_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|regionLoadsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .RegionLoad region_loads = 5;</code>        *        *<pre>        ** Information on the load of individual regions.         *</pre>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoadOrBuilder
argument_list|>
name|getRegionLoadsOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|regionLoadsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|regionLoadsBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|regionLoads_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .RegionLoad region_loads = 5;</code>        *        *<pre>        ** Information on the load of individual regions.         *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|.
name|Builder
name|addRegionLoadsBuilder
parameter_list|()
block|{
return|return
name|getRegionLoadsFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .RegionLoad region_loads = 5;</code>        *        *<pre>        ** Information on the load of individual regions.         *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|.
name|Builder
name|addRegionLoadsBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getRegionLoadsFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .RegionLoad region_loads = 5;</code>        *        *<pre>        ** Information on the load of individual regions.         *</pre>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|.
name|Builder
argument_list|>
name|getRegionLoadsBuilderList
parameter_list|()
block|{
return|return
name|getRegionLoadsFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoadOrBuilder
argument_list|>
name|getRegionLoadsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|regionLoadsBuilder_
operator|==
literal|null
condition|)
block|{
name|regionLoadsBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoad
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionLoadOrBuilder
argument_list|>
argument_list|(
name|regionLoads_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|regionLoads_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|regionLoadsBuilder_
return|;
block|}
comment|// repeated .Coprocessor coprocessors = 6;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|>
name|coprocessors_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureCoprocessorsIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|coprocessors_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|>
argument_list|(
name|coprocessors_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|CoprocessorOrBuilder
argument_list|>
name|coprocessorsBuilder_
decl_stmt|;
comment|/**        *<code>repeated .Coprocessor coprocessors = 6;</code>        *        *<pre>        **        * Regionserver-level coprocessors, e.g., WALObserver implementations.        * Region-level coprocessors, on the other hand, are stored inside RegionLoad        * objects.        *</pre>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|>
name|getCoprocessorsList
parameter_list|()
block|{
if|if
condition|(
name|coprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|coprocessors_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|coprocessorsBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Coprocessor coprocessors = 6;</code>        *        *<pre>        **        * Regionserver-level coprocessors, e.g., WALObserver implementations.        * Region-level coprocessors, on the other hand, are stored inside RegionLoad        * objects.        *</pre>        */
specifier|public
name|int
name|getCoprocessorsCount
parameter_list|()
block|{
if|if
condition|(
name|coprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|coprocessors_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|coprocessorsBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Coprocessor coprocessors = 6;</code>        *        *<pre>        **        * Regionserver-level coprocessors, e.g., WALObserver implementations.        * Region-level coprocessors, on the other hand, are stored inside RegionLoad        * objects.        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
name|getCoprocessors
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|coprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|coprocessors_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|coprocessorsBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Coprocessor coprocessors = 6;</code>        *        *<pre>        **        * Regionserver-level coprocessors, e.g., WALObserver implementations.        * Region-level coprocessors, on the other hand, are stored inside RegionLoad        * objects.        *</pre>        */
specifier|public
name|Builder
name|setCoprocessors
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
name|value
parameter_list|)
block|{
if|if
condition|(
name|coprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureCoprocessorsIsMutable
argument_list|()
expr_stmt|;
name|coprocessors_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|coprocessorsBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Coprocessor coprocessors = 6;</code>        *        *<pre>        **        * Regionserver-level coprocessors, e.g., WALObserver implementations.        * Region-level coprocessors, on the other hand, are stored inside RegionLoad        * objects.        *</pre>        */
specifier|public
name|Builder
name|setCoprocessors
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|coprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureCoprocessorsIsMutable
argument_list|()
expr_stmt|;
name|coprocessors_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|coprocessorsBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Coprocessor coprocessors = 6;</code>        *        *<pre>        **        * Regionserver-level coprocessors, e.g., WALObserver implementations.        * Region-level coprocessors, on the other hand, are stored inside RegionLoad        * objects.        *</pre>        */
specifier|public
name|Builder
name|addCoprocessors
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
name|value
parameter_list|)
block|{
if|if
condition|(
name|coprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureCoprocessorsIsMutable
argument_list|()
expr_stmt|;
name|coprocessors_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|coprocessorsBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Coprocessor coprocessors = 6;</code>        *        *<pre>        **        * Regionserver-level coprocessors, e.g., WALObserver implementations.        * Region-level coprocessors, on the other hand, are stored inside RegionLoad        * objects.        *</pre>        */
specifier|public
name|Builder
name|addCoprocessors
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
name|value
parameter_list|)
block|{
if|if
condition|(
name|coprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureCoprocessorsIsMutable
argument_list|()
expr_stmt|;
name|coprocessors_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|coprocessorsBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Coprocessor coprocessors = 6;</code>        *        *<pre>        **        * Regionserver-level coprocessors, e.g., WALObserver implementations.        * Region-level coprocessors, on the other hand, are stored inside RegionLoad        * objects.        *</pre>        */
specifier|public
name|Builder
name|addCoprocessors
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|coprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureCoprocessorsIsMutable
argument_list|()
expr_stmt|;
name|coprocessors_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|coprocessorsBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Coprocessor coprocessors = 6;</code>        *        *<pre>        **        * Regionserver-level coprocessors, e.g., WALObserver implementations.        * Region-level coprocessors, on the other hand, are stored inside RegionLoad        * objects.        *</pre>        */
specifier|public
name|Builder
name|addCoprocessors
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|coprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureCoprocessorsIsMutable
argument_list|()
expr_stmt|;
name|coprocessors_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|coprocessorsBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Coprocessor coprocessors = 6;</code>        *        *<pre>        **        * Regionserver-level coprocessors, e.g., WALObserver implementations.        * Region-level coprocessors, on the other hand, are stored inside RegionLoad        * objects.        *</pre>        */
specifier|public
name|Builder
name|addAllCoprocessors
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|coprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureCoprocessorsIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|coprocessors_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|coprocessorsBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Coprocessor coprocessors = 6;</code>        *        *<pre>        **        * Regionserver-level coprocessors, e.g., WALObserver implementations.        * Region-level coprocessors, on the other hand, are stored inside RegionLoad        * objects.        *</pre>        */
specifier|public
name|Builder
name|clearCoprocessors
parameter_list|()
block|{
if|if
condition|(
name|coprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
name|coprocessors_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|coprocessorsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Coprocessor coprocessors = 6;</code>        *        *<pre>        **        * Regionserver-level coprocessors, e.g., WALObserver implementations.        * Region-level coprocessors, on the other hand, are stored inside RegionLoad        * objects.        *</pre>        */
specifier|public
name|Builder
name|removeCoprocessors
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|coprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureCoprocessorsIsMutable
argument_list|()
expr_stmt|;
name|coprocessors_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|coprocessorsBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Coprocessor coprocessors = 6;</code>        *        *<pre>        **        * Regionserver-level coprocessors, e.g., WALObserver implementations.        * Region-level coprocessors, on the other hand, are stored inside RegionLoad        * objects.        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|Builder
name|getCoprocessorsBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getCoprocessorsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Coprocessor coprocessors = 6;</code>        *        *<pre>        **        * Regionserver-level coprocessors, e.g., WALObserver implementations.        * Region-level coprocessors, on the other hand, are stored inside RegionLoad        * objects.        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|CoprocessorOrBuilder
name|getCoprocessorsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|coprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|coprocessors_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|coprocessorsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Coprocessor coprocessors = 6;</code>        *        *<pre>        **        * Regionserver-level coprocessors, e.g., WALObserver implementations.        * Region-level coprocessors, on the other hand, are stored inside RegionLoad        * objects.        *</pre>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|CoprocessorOrBuilder
argument_list|>
name|getCoprocessorsOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|coprocessorsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|coprocessorsBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|coprocessors_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Coprocessor coprocessors = 6;</code>        *        *<pre>        **        * Regionserver-level coprocessors, e.g., WALObserver implementations.        * Region-level coprocessors, on the other hand, are stored inside RegionLoad        * objects.        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|Builder
name|addCoprocessorsBuilder
parameter_list|()
block|{
return|return
name|getCoprocessorsFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Coprocessor coprocessors = 6;</code>        *        *<pre>        **        * Regionserver-level coprocessors, e.g., WALObserver implementations.        * Region-level coprocessors, on the other hand, are stored inside RegionLoad        * objects.        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|Builder
name|addCoprocessorsBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getCoprocessorsFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Coprocessor coprocessors = 6;</code>        *        *<pre>        **        * Regionserver-level coprocessors, e.g., WALObserver implementations.        * Region-level coprocessors, on the other hand, are stored inside RegionLoad        * objects.        *</pre>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|Builder
argument_list|>
name|getCoprocessorsBuilderList
parameter_list|()
block|{
return|return
name|getCoprocessorsFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|CoprocessorOrBuilder
argument_list|>
name|getCoprocessorsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|coprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
name|coprocessorsBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|CoprocessorOrBuilder
argument_list|>
argument_list|(
name|coprocessors_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|coprocessors_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|coprocessorsBuilder_
return|;
block|}
comment|// optional uint64 report_start_time = 7;
specifier|private
name|long
name|reportStartTime_
decl_stmt|;
comment|/**        *<code>optional uint64 report_start_time = 7;</code>        *        *<pre>        **        * Time when incremental (non-total) counts began being calculated (e.g. number_of_requests)        * time is measured as the difference, measured in milliseconds, between the current time        * and midnight, January 1, 1970 UTC.        *</pre>        */
specifier|public
name|boolean
name|hasReportStartTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
return|;
block|}
comment|/**        *<code>optional uint64 report_start_time = 7;</code>        *        *<pre>        **        * Time when incremental (non-total) counts began being calculated (e.g. number_of_requests)        * time is measured as the difference, measured in milliseconds, between the current time        * and midnight, January 1, 1970 UTC.        *</pre>        */
specifier|public
name|long
name|getReportStartTime
parameter_list|()
block|{
return|return
name|reportStartTime_
return|;
block|}
comment|/**        *<code>optional uint64 report_start_time = 7;</code>        *        *<pre>        **        * Time when incremental (non-total) counts began being calculated (e.g. number_of_requests)        * time is measured as the difference, measured in milliseconds, between the current time        * and midnight, January 1, 1970 UTC.        *</pre>        */
specifier|public
name|Builder
name|setReportStartTime
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|reportStartTime_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint64 report_start_time = 7;</code>        *        *<pre>        **        * Time when incremental (non-total) counts began being calculated (e.g. number_of_requests)        * time is measured as the difference, measured in milliseconds, between the current time        * and midnight, January 1, 1970 UTC.        *</pre>        */
specifier|public
name|Builder
name|clearReportStartTime
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|reportStartTime_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint64 report_end_time = 8;
specifier|private
name|long
name|reportEndTime_
decl_stmt|;
comment|/**        *<code>optional uint64 report_end_time = 8;</code>        *        *<pre>        **        * Time when report was generated.        * time is measured as the difference, measured in milliseconds, between the current time        * and midnight, January 1, 1970 UTC.        *</pre>        */
specifier|public
name|boolean
name|hasReportEndTime
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
return|;
block|}
comment|/**        *<code>optional uint64 report_end_time = 8;</code>        *        *<pre>        **        * Time when report was generated.        * time is measured as the difference, measured in milliseconds, between the current time        * and midnight, January 1, 1970 UTC.        *</pre>        */
specifier|public
name|long
name|getReportEndTime
parameter_list|()
block|{
return|return
name|reportEndTime_
return|;
block|}
comment|/**        *<code>optional uint64 report_end_time = 8;</code>        *        *<pre>        **        * Time when report was generated.        * time is measured as the difference, measured in milliseconds, between the current time        * and midnight, January 1, 1970 UTC.        *</pre>        */
specifier|public
name|Builder
name|setReportEndTime
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
name|reportEndTime_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint64 report_end_time = 8;</code>        *        *<pre>        **        * Time when report was generated.        * time is measured as the difference, measured in milliseconds, between the current time        * and midnight, January 1, 1970 UTC.        *</pre>        */
specifier|public
name|Builder
name|clearReportEndTime
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|reportEndTime_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint32 info_server_port = 9;
specifier|private
name|int
name|infoServerPort_
decl_stmt|;
comment|/**        *<code>optional uint32 info_server_port = 9;</code>        *        *<pre>        **        * The port number that this region server is hosing an info server on.        *</pre>        */
specifier|public
name|boolean
name|hasInfoServerPort
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
return|;
block|}
comment|/**        *<code>optional uint32 info_server_port = 9;</code>        *        *<pre>        **        * The port number that this region server is hosing an info server on.        *</pre>        */
specifier|public
name|int
name|getInfoServerPort
parameter_list|()
block|{
return|return
name|infoServerPort_
return|;
block|}
comment|/**        *<code>optional uint32 info_server_port = 9;</code>        *        *<pre>        **        * The port number that this region server is hosing an info server on.        *</pre>        */
specifier|public
name|Builder
name|setInfoServerPort
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
name|infoServerPort_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint32 info_server_port = 9;</code>        *        *<pre>        **        * The port number that this region server is hosing an info server on.        *</pre>        */
specifier|public
name|Builder
name|clearInfoServerPort
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
name|infoServerPort_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// repeated .ReplicationLoadSource replLoadSource = 10;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
argument_list|>
name|replLoadSource_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureReplLoadSourceIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|replLoadSource_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
argument_list|>
argument_list|(
name|replLoadSource_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSourceOrBuilder
argument_list|>
name|replLoadSourceBuilder_
decl_stmt|;
comment|/**        *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>        *        *<pre>        **        * The replicationLoadSource for the replication Source status of this region server.        *</pre>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
argument_list|>
name|getReplLoadSourceList
parameter_list|()
block|{
if|if
condition|(
name|replLoadSourceBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|replLoadSource_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|replLoadSourceBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>        *        *<pre>        **        * The replicationLoadSource for the replication Source status of this region server.        *</pre>        */
specifier|public
name|int
name|getReplLoadSourceCount
parameter_list|()
block|{
if|if
condition|(
name|replLoadSourceBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|replLoadSource_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|replLoadSourceBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>        *        *<pre>        **        * The replicationLoadSource for the replication Source status of this region server.        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|getReplLoadSource
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|replLoadSourceBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|replLoadSource_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|replLoadSourceBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>        *        *<pre>        **        * The replicationLoadSource for the replication Source status of this region server.        *</pre>        */
specifier|public
name|Builder
name|setReplLoadSource
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|value
parameter_list|)
block|{
if|if
condition|(
name|replLoadSourceBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureReplLoadSourceIsMutable
argument_list|()
expr_stmt|;
name|replLoadSource_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|replLoadSourceBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>        *        *<pre>        **        * The replicationLoadSource for the replication Source status of this region server.        *</pre>        */
specifier|public
name|Builder
name|setReplLoadSource
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|replLoadSourceBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureReplLoadSourceIsMutable
argument_list|()
expr_stmt|;
name|replLoadSource_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|replLoadSourceBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>        *        *<pre>        **        * The replicationLoadSource for the replication Source status of this region server.        *</pre>        */
specifier|public
name|Builder
name|addReplLoadSource
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|value
parameter_list|)
block|{
if|if
condition|(
name|replLoadSourceBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureReplLoadSourceIsMutable
argument_list|()
expr_stmt|;
name|replLoadSource_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|replLoadSourceBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>        *        *<pre>        **        * The replicationLoadSource for the replication Source status of this region server.        *</pre>        */
specifier|public
name|Builder
name|addReplLoadSource
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
name|value
parameter_list|)
block|{
if|if
condition|(
name|replLoadSourceBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureReplLoadSourceIsMutable
argument_list|()
expr_stmt|;
name|replLoadSource_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|replLoadSourceBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>        *        *<pre>        **        * The replicationLoadSource for the replication Source status of this region server.        *</pre>        */
specifier|public
name|Builder
name|addReplLoadSource
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|replLoadSourceBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureReplLoadSourceIsMutable
argument_list|()
expr_stmt|;
name|replLoadSource_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|replLoadSourceBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>        *        *<pre>        **        * The replicationLoadSource for the replication Source status of this region server.        *</pre>        */
specifier|public
name|Builder
name|addReplLoadSource
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|replLoadSourceBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureReplLoadSourceIsMutable
argument_list|()
expr_stmt|;
name|replLoadSource_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|replLoadSourceBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>        *        *<pre>        **        * The replicationLoadSource for the replication Source status of this region server.        *</pre>        */
specifier|public
name|Builder
name|addAllReplLoadSource
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|replLoadSourceBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureReplLoadSourceIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|replLoadSource_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|replLoadSourceBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>        *        *<pre>        **        * The replicationLoadSource for the replication Source status of this region server.        *</pre>        */
specifier|public
name|Builder
name|clearReplLoadSource
parameter_list|()
block|{
if|if
condition|(
name|replLoadSourceBuilder_
operator|==
literal|null
condition|)
block|{
name|replLoadSource_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|replLoadSourceBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>        *        *<pre>        **        * The replicationLoadSource for the replication Source status of this region server.        *</pre>        */
specifier|public
name|Builder
name|removeReplLoadSource
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|replLoadSourceBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureReplLoadSourceIsMutable
argument_list|()
expr_stmt|;
name|replLoadSource_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|replLoadSourceBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>        *        *<pre>        **        * The replicationLoadSource for the replication Source status of this region server.        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|.
name|Builder
name|getReplLoadSourceBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getReplLoadSourceFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>        *        *<pre>        **        * The replicationLoadSource for the replication Source status of this region server.        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSourceOrBuilder
name|getReplLoadSourceOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|replLoadSourceBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|replLoadSource_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|replLoadSourceBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>        *        *<pre>        **        * The replicationLoadSource for the replication Source status of this region server.        *</pre>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSourceOrBuilder
argument_list|>
name|getReplLoadSourceOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|replLoadSourceBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|replLoadSourceBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|replLoadSource_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>        *        *<pre>        **        * The replicationLoadSource for the replication Source status of this region server.        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|.
name|Builder
name|addReplLoadSourceBuilder
parameter_list|()
block|{
return|return
name|getReplLoadSourceFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>        *        *<pre>        **        * The replicationLoadSource for the replication Source status of this region server.        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|.
name|Builder
name|addReplLoadSourceBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getReplLoadSourceFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .ReplicationLoadSource replLoadSource = 10;</code>        *        *<pre>        **        * The replicationLoadSource for the replication Source status of this region server.        *</pre>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|.
name|Builder
argument_list|>
name|getReplLoadSourceBuilderList
parameter_list|()
block|{
return|return
name|getReplLoadSourceFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSourceOrBuilder
argument_list|>
name|getReplLoadSourceFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|replLoadSourceBuilder_
operator|==
literal|null
condition|)
block|{
name|replLoadSourceBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSource
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSourceOrBuilder
argument_list|>
argument_list|(
name|replLoadSource_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|replLoadSource_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|replLoadSourceBuilder_
return|;
block|}
comment|// optional .ReplicationLoadSink replLoadSink = 11;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|replLoadSink_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSinkOrBuilder
argument_list|>
name|replLoadSinkBuilder_
decl_stmt|;
comment|/**        *<code>optional .ReplicationLoadSink replLoadSink = 11;</code>        *        *<pre>        **        * The replicationLoadSink for the replication Sink status of this region server.        *</pre>        */
specifier|public
name|boolean
name|hasReplLoadSink
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
return|;
block|}
comment|/**        *<code>optional .ReplicationLoadSink replLoadSink = 11;</code>        *        *<pre>        **        * The replicationLoadSink for the replication Sink status of this region server.        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|getReplLoadSink
parameter_list|()
block|{
if|if
condition|(
name|replLoadSinkBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|replLoadSink_
return|;
block|}
else|else
block|{
return|return
name|replLoadSinkBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .ReplicationLoadSink replLoadSink = 11;</code>        *        *<pre>        **        * The replicationLoadSink for the replication Sink status of this region server.        *</pre>        */
specifier|public
name|Builder
name|setReplLoadSink
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|value
parameter_list|)
block|{
if|if
condition|(
name|replLoadSinkBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|replLoadSink_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|replLoadSinkBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .ReplicationLoadSink replLoadSink = 11;</code>        *        *<pre>        **        * The replicationLoadSink for the replication Sink status of this region server.        *</pre>        */
specifier|public
name|Builder
name|setReplLoadSink
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|replLoadSinkBuilder_
operator|==
literal|null
condition|)
block|{
name|replLoadSink_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|replLoadSinkBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .ReplicationLoadSink replLoadSink = 11;</code>        *        *<pre>        **        * The replicationLoadSink for the replication Sink status of this region server.        *</pre>        */
specifier|public
name|Builder
name|mergeReplLoadSink
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
name|value
parameter_list|)
block|{
if|if
condition|(
name|replLoadSinkBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
operator|&&
name|replLoadSink_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|replLoadSink_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|.
name|newBuilder
argument_list|(
name|replLoadSink_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|replLoadSink_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|replLoadSinkBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .ReplicationLoadSink replLoadSink = 11;</code>        *        *<pre>        **        * The replicationLoadSink for the replication Sink status of this region server.        *</pre>        */
specifier|public
name|Builder
name|clearReplLoadSink
parameter_list|()
block|{
if|if
condition|(
name|replLoadSinkBuilder_
operator|==
literal|null
condition|)
block|{
name|replLoadSink_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|replLoadSinkBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000400
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .ReplicationLoadSink replLoadSink = 11;</code>        *        *<pre>        **        * The replicationLoadSink for the replication Sink status of this region server.        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|.
name|Builder
name|getReplLoadSinkBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getReplLoadSinkFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .ReplicationLoadSink replLoadSink = 11;</code>        *        *<pre>        **        * The replicationLoadSink for the replication Sink status of this region server.        *</pre>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSinkOrBuilder
name|getReplLoadSinkOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|replLoadSinkBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|replLoadSinkBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|replLoadSink_
return|;
block|}
block|}
comment|/**        *<code>optional .ReplicationLoadSink replLoadSink = 11;</code>        *        *<pre>        **        * The replicationLoadSink for the replication Sink status of this region server.        *</pre>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSinkOrBuilder
argument_list|>
name|getReplLoadSinkFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|replLoadSinkBuilder_
operator|==
literal|null
condition|)
block|{
name|replLoadSinkBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSink
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ReplicationLoadSinkOrBuilder
argument_list|>
argument_list|(
name|replLoadSink_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|replLoadSink_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|replLoadSinkBuilder_
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:ServerLoad)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|ServerLoad
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:ServerLoad)
block|}
specifier|public
interface|interface
name|LiveServerInfoOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// required .ServerName server = 1;
comment|/**      *<code>required .ServerName server = 1;</code>      */
name|boolean
name|hasServer
parameter_list|()
function_decl|;
comment|/**      *<code>required .ServerName server = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|getServer
parameter_list|()
function_decl|;
comment|/**      *<code>required .ServerName server = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
name|getServerOrBuilder
parameter_list|()
function_decl|;
comment|// required .ServerLoad server_load = 2;
comment|/**      *<code>required .ServerLoad server_load = 2;</code>      */
name|boolean
name|hasServerLoad
parameter_list|()
function_decl|;
comment|/**      *<code>required .ServerLoad server_load = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|getServerLoad
parameter_list|()
function_decl|;
comment|/**      *<code>required .ServerLoad server_load = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoadOrBuilder
name|getServerLoadOrBuilder
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code LiveServerInfo}    */
specifier|public
specifier|static
specifier|final
class|class
name|LiveServerInfo
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|LiveServerInfoOrBuilder
block|{
comment|// Use LiveServerInfo.newBuilder() to construct.
specifier|private
name|LiveServerInfo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|LiveServerInfo
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|LiveServerInfo
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|LiveServerInfo
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|LiveServerInfo
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|LiveServerInfo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|server_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|server_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|server_
argument_list|)
expr_stmt|;
name|server_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|serverLoad_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|serverLoad_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|serverLoad_
argument_list|)
expr_stmt|;
name|serverLoad_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_LiveServerInfo_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_LiveServerInfo_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|LiveServerInfo
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|LiveServerInfo
argument_list|>
argument_list|()
block|{
specifier|public
name|LiveServerInfo
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|LiveServerInfo
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|LiveServerInfo
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required .ServerName server = 1;
specifier|public
specifier|static
specifier|final
name|int
name|SERVER_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|server_
decl_stmt|;
comment|/**      *<code>required .ServerName server = 1;</code>      */
specifier|public
name|boolean
name|hasServer
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>required .ServerName server = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|getServer
parameter_list|()
block|{
return|return
name|server_
return|;
block|}
comment|/**      *<code>required .ServerName server = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
name|getServerOrBuilder
parameter_list|()
block|{
return|return
name|server_
return|;
block|}
comment|// required .ServerLoad server_load = 2;
specifier|public
specifier|static
specifier|final
name|int
name|SERVER_LOAD_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|serverLoad_
decl_stmt|;
comment|/**      *<code>required .ServerLoad server_load = 2;</code>      */
specifier|public
name|boolean
name|hasServerLoad
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>required .ServerLoad server_load = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|getServerLoad
parameter_list|()
block|{
return|return
name|serverLoad_
return|;
block|}
comment|/**      *<code>required .ServerLoad server_load = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoadOrBuilder
name|getServerLoadOrBuilder
parameter_list|()
block|{
return|return
name|serverLoad_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|server_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|serverLoad_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
operator|!
name|hasServer
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasServerLoad
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getServer
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getServerLoad
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|server_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|serverLoad_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|server_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|serverLoad_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasServer
argument_list|()
operator|==
name|other
operator|.
name|hasServer
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasServer
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getServer
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getServer
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasServerLoad
argument_list|()
operator|==
name|other
operator|.
name|hasServerLoad
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasServerLoad
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getServerLoad
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getServerLoad
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getUnknownFields
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|private
name|int
name|memoizedHashCode
init|=
literal|0
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptorForType
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasServer
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|SERVER_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getServer
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasServerLoad
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|SERVER_LOAD_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getServerLoad
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|getUnknownFields
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code LiveServerInfo}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfoOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_LiveServerInfo_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_LiveServerInfo_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.protobuf.generated.ClusterStatusProtos.LiveServerInfo.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getServerFieldBuilder
argument_list|()
expr_stmt|;
name|getServerLoadFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|serverBuilder_
operator|==
literal|null
condition|)
block|{
name|server_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serverBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
if|if
condition|(
name|serverLoadBuilder_
operator|==
literal|null
condition|)
block|{
name|serverLoad_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serverLoadBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_LiveServerInfo_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
if|if
condition|(
name|serverBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|server_
operator|=
name|server_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|server_
operator|=
name|serverBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
if|if
condition|(
name|serverLoadBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|serverLoad_
operator|=
name|serverLoad_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|serverLoad_
operator|=
name|serverLoadBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasServer
argument_list|()
condition|)
block|{
name|mergeServer
argument_list|(
name|other
operator|.
name|getServer
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasServerLoad
argument_list|()
condition|)
block|{
name|mergeServerLoad
argument_list|(
name|other
operator|.
name|getServerLoad
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
operator|!
name|hasServer
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|hasServerLoad
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getServer
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|getServerLoad
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// required .ServerName server = 1;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|server_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
argument_list|>
name|serverBuilder_
decl_stmt|;
comment|/**        *<code>required .ServerName server = 1;</code>        */
specifier|public
name|boolean
name|hasServer
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>required .ServerName server = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|getServer
parameter_list|()
block|{
if|if
condition|(
name|serverBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|server_
return|;
block|}
else|else
block|{
return|return
name|serverBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>required .ServerName server = 1;</code>        */
specifier|public
name|Builder
name|setServer
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|value
parameter_list|)
block|{
if|if
condition|(
name|serverBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|server_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serverBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .ServerName server = 1;</code>        */
specifier|public
name|Builder
name|setServer
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|serverBuilder_
operator|==
literal|null
condition|)
block|{
name|server_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serverBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .ServerName server = 1;</code>        */
specifier|public
name|Builder
name|mergeServer
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|value
parameter_list|)
block|{
if|if
condition|(
name|serverBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
operator|&&
name|server_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|server_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|newBuilder
argument_list|(
name|server_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|server_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serverBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .ServerName server = 1;</code>        */
specifier|public
name|Builder
name|clearServer
parameter_list|()
block|{
if|if
condition|(
name|serverBuilder_
operator|==
literal|null
condition|)
block|{
name|server_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serverBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .ServerName server = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
name|getServerBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getServerFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>required .ServerName server = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
name|getServerOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|serverBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|serverBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|server_
return|;
block|}
block|}
comment|/**        *<code>required .ServerName server = 1;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
argument_list|>
name|getServerFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|serverBuilder_
operator|==
literal|null
condition|)
block|{
name|serverBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
argument_list|>
argument_list|(
name|server_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|server_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|serverBuilder_
return|;
block|}
comment|// required .ServerLoad server_load = 2;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|serverLoad_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoadOrBuilder
argument_list|>
name|serverLoadBuilder_
decl_stmt|;
comment|/**        *<code>required .ServerLoad server_load = 2;</code>        */
specifier|public
name|boolean
name|hasServerLoad
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>required .ServerLoad server_load = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|getServerLoad
parameter_list|()
block|{
if|if
condition|(
name|serverLoadBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|serverLoad_
return|;
block|}
else|else
block|{
return|return
name|serverLoadBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>required .ServerLoad server_load = 2;</code>        */
specifier|public
name|Builder
name|setServerLoad
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|value
parameter_list|)
block|{
if|if
condition|(
name|serverLoadBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|serverLoad_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serverLoadBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .ServerLoad server_load = 2;</code>        */
specifier|public
name|Builder
name|setServerLoad
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|serverLoadBuilder_
operator|==
literal|null
condition|)
block|{
name|serverLoad_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serverLoadBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .ServerLoad server_load = 2;</code>        */
specifier|public
name|Builder
name|mergeServerLoad
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
name|value
parameter_list|)
block|{
if|if
condition|(
name|serverLoadBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
operator|&&
name|serverLoad_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|serverLoad_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|.
name|newBuilder
argument_list|(
name|serverLoad_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serverLoad_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serverLoadBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .ServerLoad server_load = 2;</code>        */
specifier|public
name|Builder
name|clearServerLoad
parameter_list|()
block|{
if|if
condition|(
name|serverLoadBuilder_
operator|==
literal|null
condition|)
block|{
name|serverLoad_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|serverLoadBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>required .ServerLoad server_load = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|.
name|Builder
name|getServerLoadBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getServerLoadFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>required .ServerLoad server_load = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoadOrBuilder
name|getServerLoadOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|serverLoadBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|serverLoadBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|serverLoad_
return|;
block|}
block|}
comment|/**        *<code>required .ServerLoad server_load = 2;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoadOrBuilder
argument_list|>
name|getServerLoadFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|serverLoadBuilder_
operator|==
literal|null
condition|)
block|{
name|serverLoadBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoad
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ServerLoadOrBuilder
argument_list|>
argument_list|(
name|serverLoad_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|serverLoad_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|serverLoadBuilder_
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:LiveServerInfo)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|LiveServerInfo
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:LiveServerInfo)
block|}
specifier|public
interface|interface
name|ClusterStatusOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// optional .HBaseVersionFileContent hbase_version = 1;
comment|/**      *<code>optional .HBaseVersionFileContent hbase_version = 1;</code>      */
name|boolean
name|hasHbaseVersion
parameter_list|()
function_decl|;
comment|/**      *<code>optional .HBaseVersionFileContent hbase_version = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
name|getHbaseVersion
parameter_list|()
function_decl|;
comment|/**      *<code>optional .HBaseVersionFileContent hbase_version = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContentOrBuilder
name|getHbaseVersionOrBuilder
parameter_list|()
function_decl|;
comment|// repeated .LiveServerInfo live_servers = 2;
comment|/**      *<code>repeated .LiveServerInfo live_servers = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
argument_list|>
name|getLiveServersList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .LiveServerInfo live_servers = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|getLiveServers
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .LiveServerInfo live_servers = 2;</code>      */
name|int
name|getLiveServersCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .LiveServerInfo live_servers = 2;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfoOrBuilder
argument_list|>
name|getLiveServersOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .LiveServerInfo live_servers = 2;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfoOrBuilder
name|getLiveServersOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|// repeated .ServerName dead_servers = 3;
comment|/**      *<code>repeated .ServerName dead_servers = 3;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|>
name|getDeadServersList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .ServerName dead_servers = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|getDeadServers
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .ServerName dead_servers = 3;</code>      */
name|int
name|getDeadServersCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .ServerName dead_servers = 3;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
argument_list|>
name|getDeadServersOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .ServerName dead_servers = 3;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
name|getDeadServersOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|// repeated .RegionInTransition regions_in_transition = 4;
comment|/**      *<code>repeated .RegionInTransition regions_in_transition = 4;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
argument_list|>
name|getRegionsInTransitionList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .RegionInTransition regions_in_transition = 4;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|getRegionsInTransition
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .RegionInTransition regions_in_transition = 4;</code>      */
name|int
name|getRegionsInTransitionCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .RegionInTransition regions_in_transition = 4;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransitionOrBuilder
argument_list|>
name|getRegionsInTransitionOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .RegionInTransition regions_in_transition = 4;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransitionOrBuilder
name|getRegionsInTransitionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|// optional .ClusterId cluster_id = 5;
comment|/**      *<code>optional .ClusterId cluster_id = 5;</code>      */
name|boolean
name|hasClusterId
parameter_list|()
function_decl|;
comment|/**      *<code>optional .ClusterId cluster_id = 5;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
name|getClusterId
parameter_list|()
function_decl|;
comment|/**      *<code>optional .ClusterId cluster_id = 5;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterIdOrBuilder
name|getClusterIdOrBuilder
parameter_list|()
function_decl|;
comment|// repeated .Coprocessor master_coprocessors = 6;
comment|/**      *<code>repeated .Coprocessor master_coprocessors = 6;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|>
name|getMasterCoprocessorsList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Coprocessor master_coprocessors = 6;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
name|getMasterCoprocessors
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .Coprocessor master_coprocessors = 6;</code>      */
name|int
name|getMasterCoprocessorsCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Coprocessor master_coprocessors = 6;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|CoprocessorOrBuilder
argument_list|>
name|getMasterCoprocessorsOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .Coprocessor master_coprocessors = 6;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|CoprocessorOrBuilder
name|getMasterCoprocessorsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|// optional .ServerName master = 7;
comment|/**      *<code>optional .ServerName master = 7;</code>      */
name|boolean
name|hasMaster
parameter_list|()
function_decl|;
comment|/**      *<code>optional .ServerName master = 7;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|getMaster
parameter_list|()
function_decl|;
comment|/**      *<code>optional .ServerName master = 7;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
name|getMasterOrBuilder
parameter_list|()
function_decl|;
comment|// repeated .ServerName backup_masters = 8;
comment|/**      *<code>repeated .ServerName backup_masters = 8;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|>
name|getBackupMastersList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .ServerName backup_masters = 8;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|getBackupMasters
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .ServerName backup_masters = 8;</code>      */
name|int
name|getBackupMastersCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .ServerName backup_masters = 8;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
argument_list|>
name|getBackupMastersOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .ServerName backup_masters = 8;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
name|getBackupMastersOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|// optional bool balancer_on = 9;
comment|/**      *<code>optional bool balancer_on = 9;</code>      */
name|boolean
name|hasBalancerOn
parameter_list|()
function_decl|;
comment|/**      *<code>optional bool balancer_on = 9;</code>      */
name|boolean
name|getBalancerOn
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code ClusterStatus}    */
specifier|public
specifier|static
specifier|final
class|class
name|ClusterStatus
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|ClusterStatusOrBuilder
block|{
comment|// Use ClusterStatus.newBuilder() to construct.
specifier|private
name|ClusterStatus
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|ClusterStatus
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|ClusterStatus
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|ClusterStatus
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|ClusterStatus
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|ClusterStatus
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|hbaseVersion_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|hbaseVersion_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|hbaseVersion_
argument_list|)
expr_stmt|;
name|hbaseVersion_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
break|break;
block|}
case|case
literal|18
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|liveServers_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|liveServers_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|26
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|deadServers_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|deadServers_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|34
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|regionsInTransition_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|regionsInTransition_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|42
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|clusterId_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|clusterId_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|clusterId_
argument_list|)
expr_stmt|;
name|clusterId_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
break|break;
block|}
case|case
literal|50
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|masterCoprocessors_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
name|masterCoprocessors_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|58
case|:
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
name|subBuilder
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|subBuilder
operator|=
name|master_
operator|.
name|toBuilder
argument_list|()
expr_stmt|;
block|}
name|master_
operator|=
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
if|if
condition|(
name|subBuilder
operator|!=
literal|null
condition|)
block|{
name|subBuilder
operator|.
name|mergeFrom
argument_list|(
name|master_
argument_list|)
expr_stmt|;
name|master_
operator|=
name|subBuilder
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
break|break;
block|}
case|case
literal|66
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|backupMasters_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000080
expr_stmt|;
block|}
name|backupMasters_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
literal|72
case|:
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|balancerOn_
operator|=
name|input
operator|.
name|readBool
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|liveServers_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|liveServers_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|deadServers_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|deadServers_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|regionsInTransition_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|regionsInTransition_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|masterCoprocessors_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|masterCoprocessors_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|backupMasters_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|backupMasters_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_ClusterStatus_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_ClusterStatus_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ClusterStatus
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|ClusterStatus
argument_list|>
argument_list|()
block|{
specifier|public
name|ClusterStatus
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|ClusterStatus
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|ClusterStatus
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional .HBaseVersionFileContent hbase_version = 1;
specifier|public
specifier|static
specifier|final
name|int
name|HBASE_VERSION_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
name|hbaseVersion_
decl_stmt|;
comment|/**      *<code>optional .HBaseVersionFileContent hbase_version = 1;</code>      */
specifier|public
name|boolean
name|hasHbaseVersion
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>optional .HBaseVersionFileContent hbase_version = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
name|getHbaseVersion
parameter_list|()
block|{
return|return
name|hbaseVersion_
return|;
block|}
comment|/**      *<code>optional .HBaseVersionFileContent hbase_version = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContentOrBuilder
name|getHbaseVersionOrBuilder
parameter_list|()
block|{
return|return
name|hbaseVersion_
return|;
block|}
comment|// repeated .LiveServerInfo live_servers = 2;
specifier|public
specifier|static
specifier|final
name|int
name|LIVE_SERVERS_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
argument_list|>
name|liveServers_
decl_stmt|;
comment|/**      *<code>repeated .LiveServerInfo live_servers = 2;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
argument_list|>
name|getLiveServersList
parameter_list|()
block|{
return|return
name|liveServers_
return|;
block|}
comment|/**      *<code>repeated .LiveServerInfo live_servers = 2;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfoOrBuilder
argument_list|>
name|getLiveServersOrBuilderList
parameter_list|()
block|{
return|return
name|liveServers_
return|;
block|}
comment|/**      *<code>repeated .LiveServerInfo live_servers = 2;</code>      */
specifier|public
name|int
name|getLiveServersCount
parameter_list|()
block|{
return|return
name|liveServers_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .LiveServerInfo live_servers = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|getLiveServers
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|liveServers_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .LiveServerInfo live_servers = 2;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfoOrBuilder
name|getLiveServersOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|liveServers_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|// repeated .ServerName dead_servers = 3;
specifier|public
specifier|static
specifier|final
name|int
name|DEAD_SERVERS_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|>
name|deadServers_
decl_stmt|;
comment|/**      *<code>repeated .ServerName dead_servers = 3;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|>
name|getDeadServersList
parameter_list|()
block|{
return|return
name|deadServers_
return|;
block|}
comment|/**      *<code>repeated .ServerName dead_servers = 3;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
argument_list|>
name|getDeadServersOrBuilderList
parameter_list|()
block|{
return|return
name|deadServers_
return|;
block|}
comment|/**      *<code>repeated .ServerName dead_servers = 3;</code>      */
specifier|public
name|int
name|getDeadServersCount
parameter_list|()
block|{
return|return
name|deadServers_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .ServerName dead_servers = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|getDeadServers
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|deadServers_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .ServerName dead_servers = 3;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
name|getDeadServersOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|deadServers_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|// repeated .RegionInTransition regions_in_transition = 4;
specifier|public
specifier|static
specifier|final
name|int
name|REGIONS_IN_TRANSITION_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
argument_list|>
name|regionsInTransition_
decl_stmt|;
comment|/**      *<code>repeated .RegionInTransition regions_in_transition = 4;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
argument_list|>
name|getRegionsInTransitionList
parameter_list|()
block|{
return|return
name|regionsInTransition_
return|;
block|}
comment|/**      *<code>repeated .RegionInTransition regions_in_transition = 4;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransitionOrBuilder
argument_list|>
name|getRegionsInTransitionOrBuilderList
parameter_list|()
block|{
return|return
name|regionsInTransition_
return|;
block|}
comment|/**      *<code>repeated .RegionInTransition regions_in_transition = 4;</code>      */
specifier|public
name|int
name|getRegionsInTransitionCount
parameter_list|()
block|{
return|return
name|regionsInTransition_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .RegionInTransition regions_in_transition = 4;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|getRegionsInTransition
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|regionsInTransition_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .RegionInTransition regions_in_transition = 4;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransitionOrBuilder
name|getRegionsInTransitionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|regionsInTransition_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|// optional .ClusterId cluster_id = 5;
specifier|public
specifier|static
specifier|final
name|int
name|CLUSTER_ID_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
name|clusterId_
decl_stmt|;
comment|/**      *<code>optional .ClusterId cluster_id = 5;</code>      */
specifier|public
name|boolean
name|hasClusterId
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>optional .ClusterId cluster_id = 5;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
name|getClusterId
parameter_list|()
block|{
return|return
name|clusterId_
return|;
block|}
comment|/**      *<code>optional .ClusterId cluster_id = 5;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterIdOrBuilder
name|getClusterIdOrBuilder
parameter_list|()
block|{
return|return
name|clusterId_
return|;
block|}
comment|// repeated .Coprocessor master_coprocessors = 6;
specifier|public
specifier|static
specifier|final
name|int
name|MASTER_COPROCESSORS_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|>
name|masterCoprocessors_
decl_stmt|;
comment|/**      *<code>repeated .Coprocessor master_coprocessors = 6;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|>
name|getMasterCoprocessorsList
parameter_list|()
block|{
return|return
name|masterCoprocessors_
return|;
block|}
comment|/**      *<code>repeated .Coprocessor master_coprocessors = 6;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|CoprocessorOrBuilder
argument_list|>
name|getMasterCoprocessorsOrBuilderList
parameter_list|()
block|{
return|return
name|masterCoprocessors_
return|;
block|}
comment|/**      *<code>repeated .Coprocessor master_coprocessors = 6;</code>      */
specifier|public
name|int
name|getMasterCoprocessorsCount
parameter_list|()
block|{
return|return
name|masterCoprocessors_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .Coprocessor master_coprocessors = 6;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
name|getMasterCoprocessors
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|masterCoprocessors_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .Coprocessor master_coprocessors = 6;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|CoprocessorOrBuilder
name|getMasterCoprocessorsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|masterCoprocessors_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|// optional .ServerName master = 7;
specifier|public
specifier|static
specifier|final
name|int
name|MASTER_FIELD_NUMBER
init|=
literal|7
decl_stmt|;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|master_
decl_stmt|;
comment|/**      *<code>optional .ServerName master = 7;</code>      */
specifier|public
name|boolean
name|hasMaster
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<code>optional .ServerName master = 7;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|getMaster
parameter_list|()
block|{
return|return
name|master_
return|;
block|}
comment|/**      *<code>optional .ServerName master = 7;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
name|getMasterOrBuilder
parameter_list|()
block|{
return|return
name|master_
return|;
block|}
comment|// repeated .ServerName backup_masters = 8;
specifier|public
specifier|static
specifier|final
name|int
name|BACKUP_MASTERS_FIELD_NUMBER
init|=
literal|8
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|>
name|backupMasters_
decl_stmt|;
comment|/**      *<code>repeated .ServerName backup_masters = 8;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|>
name|getBackupMastersList
parameter_list|()
block|{
return|return
name|backupMasters_
return|;
block|}
comment|/**      *<code>repeated .ServerName backup_masters = 8;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
argument_list|>
name|getBackupMastersOrBuilderList
parameter_list|()
block|{
return|return
name|backupMasters_
return|;
block|}
comment|/**      *<code>repeated .ServerName backup_masters = 8;</code>      */
specifier|public
name|int
name|getBackupMastersCount
parameter_list|()
block|{
return|return
name|backupMasters_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .ServerName backup_masters = 8;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|getBackupMasters
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|backupMasters_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .ServerName backup_masters = 8;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
name|getBackupMastersOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|backupMasters_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|// optional bool balancer_on = 9;
specifier|public
specifier|static
specifier|final
name|int
name|BALANCER_ON_FIELD_NUMBER
init|=
literal|9
decl_stmt|;
specifier|private
name|boolean
name|balancerOn_
decl_stmt|;
comment|/**      *<code>optional bool balancer_on = 9;</code>      */
specifier|public
name|boolean
name|hasBalancerOn
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**      *<code>optional bool balancer_on = 9;</code>      */
specifier|public
name|boolean
name|getBalancerOn
parameter_list|()
block|{
return|return
name|balancerOn_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|hbaseVersion_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|liveServers_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|deadServers_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|regionsInTransition_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|clusterId_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|masterCoprocessors_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|master_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|backupMasters_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|balancerOn_
operator|=
literal|false
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
if|if
condition|(
name|hasHbaseVersion
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getHbaseVersion
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getLiveServersCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getLiveServers
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getDeadServersCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getDeadServers
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getRegionsInTransitionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getRegionsInTransition
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasClusterId
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getClusterId
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getMasterCoprocessorsCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getMasterCoprocessors
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasMaster
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getMaster
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getBackupMastersCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getBackupMasters
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|hbaseVersion_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|liveServers_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|2
argument_list|,
name|liveServers_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|deadServers_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|3
argument_list|,
name|deadServers_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|regionsInTransition_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|4
argument_list|,
name|regionsInTransition_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|5
argument_list|,
name|clusterId_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|masterCoprocessors_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|6
argument_list|,
name|masterCoprocessors_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|7
argument_list|,
name|master_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|backupMasters_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|8
argument_list|,
name|backupMasters_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|output
operator|.
name|writeBool
argument_list|(
literal|9
argument_list|,
name|balancerOn_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|hbaseVersion_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|liveServers_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|2
argument_list|,
name|liveServers_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|deadServers_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|3
argument_list|,
name|deadServers_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|regionsInTransition_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|4
argument_list|,
name|regionsInTransition_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|5
argument_list|,
name|clusterId_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|masterCoprocessors_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|6
argument_list|,
name|masterCoprocessors_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|7
argument_list|,
name|master_
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|backupMasters_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|8
argument_list|,
name|backupMasters_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBoolSize
argument_list|(
literal|9
argument_list|,
name|balancerOn_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasHbaseVersion
argument_list|()
operator|==
name|other
operator|.
name|hasHbaseVersion
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasHbaseVersion
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getHbaseVersion
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getHbaseVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getLiveServersList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getLiveServersList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getDeadServersList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getDeadServersList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getRegionsInTransitionList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getRegionsInTransitionList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasClusterId
argument_list|()
operator|==
name|other
operator|.
name|hasClusterId
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasClusterId
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getClusterId
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getClusterId
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getMasterCoprocessorsList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getMasterCoprocessorsList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasMaster
argument_list|()
operator|==
name|other
operator|.
name|hasMaster
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasMaster
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getMaster
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getMaster
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getBackupMastersList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getBackupMastersList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasBalancerOn
argument_list|()
operator|==
name|other
operator|.
name|hasBalancerOn
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasBalancerOn
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getBalancerOn
argument_list|()
operator|==
name|other
operator|.
name|getBalancerOn
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getUnknownFields
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|private
name|int
name|memoizedHashCode
init|=
literal|0
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptorForType
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasHbaseVersion
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|HBASE_VERSION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getHbaseVersion
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getLiveServersCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|LIVE_SERVERS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getLiveServersList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getDeadServersCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|DEAD_SERVERS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getDeadServersList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getRegionsInTransitionCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|REGIONS_IN_TRANSITION_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getRegionsInTransitionList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasClusterId
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|CLUSTER_ID_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getClusterId
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getMasterCoprocessorsCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|MASTER_COPROCESSORS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getMasterCoprocessorsList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasMaster
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|MASTER_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getMaster
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|getBackupMastersCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|BACKUP_MASTERS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getBackupMastersList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasBalancerOn
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|BALANCER_ON_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashBoolean
argument_list|(
name|getBalancerOn
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|getUnknownFields
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code ClusterStatus}      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatusOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_ClusterStatus_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_ClusterStatus_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.protobuf.generated.ClusterStatusProtos.ClusterStatus.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getHbaseVersionFieldBuilder
argument_list|()
expr_stmt|;
name|getLiveServersFieldBuilder
argument_list|()
expr_stmt|;
name|getDeadServersFieldBuilder
argument_list|()
expr_stmt|;
name|getRegionsInTransitionFieldBuilder
argument_list|()
expr_stmt|;
name|getClusterIdFieldBuilder
argument_list|()
expr_stmt|;
name|getMasterCoprocessorsFieldBuilder
argument_list|()
expr_stmt|;
name|getMasterFieldBuilder
argument_list|()
expr_stmt|;
name|getBackupMastersFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|hbaseVersionBuilder_
operator|==
literal|null
condition|)
block|{
name|hbaseVersion_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|hbaseVersionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
if|if
condition|(
name|liveServersBuilder_
operator|==
literal|null
condition|)
block|{
name|liveServers_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|liveServersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|deadServersBuilder_
operator|==
literal|null
condition|)
block|{
name|deadServers_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
else|else
block|{
name|deadServersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|regionsInTransitionBuilder_
operator|==
literal|null
condition|)
block|{
name|regionsInTransition_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
block|}
else|else
block|{
name|regionsInTransitionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|clusterIdBuilder_
operator|==
literal|null
condition|)
block|{
name|clusterId_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|clusterIdBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
if|if
condition|(
name|masterCoprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
name|masterCoprocessors_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
block|}
else|else
block|{
name|masterCoprocessorsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|masterBuilder_
operator|==
literal|null
condition|)
block|{
name|master_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|masterBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
if|if
condition|(
name|backupMastersBuilder_
operator|==
literal|null
condition|)
block|{
name|backupMasters_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
block|}
else|else
block|{
name|backupMastersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|balancerOn_
operator|=
literal|false
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|internal_static_ClusterStatus_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
if|if
condition|(
name|hbaseVersionBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|hbaseVersion_
operator|=
name|hbaseVersion_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|hbaseVersion_
operator|=
name|hbaseVersionBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|liveServersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|liveServers_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|liveServers_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|liveServers_
operator|=
name|liveServers_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|liveServers_
operator|=
name|liveServersBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|deadServersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|deadServers_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|deadServers_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|deadServers_
operator|=
name|deadServers_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|deadServers_
operator|=
name|deadServersBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|regionsInTransitionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|regionsInTransition_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|regionsInTransition_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|regionsInTransition_
operator|=
name|regionsInTransition_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|regionsInTransition_
operator|=
name|regionsInTransitionBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
if|if
condition|(
name|clusterIdBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|clusterId_
operator|=
name|clusterId_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|clusterId_
operator|=
name|clusterIdBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|masterCoprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|masterCoprocessors_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|masterCoprocessors_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|masterCoprocessors_
operator|=
name|masterCoprocessors_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|masterCoprocessors_
operator|=
name|masterCoprocessorsBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
if|if
condition|(
name|masterBuilder_
operator|==
literal|null
condition|)
block|{
name|result
operator|.
name|master_
operator|=
name|master_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|master_
operator|=
name|masterBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|backupMastersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|backupMasters_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|backupMasters_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|backupMasters_
operator|=
name|backupMasters_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|backupMasters_
operator|=
name|backupMastersBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|result
operator|.
name|balancerOn_
operator|=
name|balancerOn_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasHbaseVersion
argument_list|()
condition|)
block|{
name|mergeHbaseVersion
argument_list|(
name|other
operator|.
name|getHbaseVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|liveServersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|liveServers_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|liveServers_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|liveServers_
operator|=
name|other
operator|.
name|liveServers_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureLiveServersIsMutable
argument_list|()
expr_stmt|;
name|liveServers_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|liveServers_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|liveServers_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|liveServersBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|liveServersBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|liveServersBuilder_
operator|=
literal|null
expr_stmt|;
name|liveServers_
operator|=
name|other
operator|.
name|liveServers_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|liveServersBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getLiveServersFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|liveServersBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|liveServers_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|deadServersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|deadServers_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|deadServers_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|deadServers_
operator|=
name|other
operator|.
name|deadServers_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureDeadServersIsMutable
argument_list|()
expr_stmt|;
name|deadServers_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|deadServers_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|deadServers_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|deadServersBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|deadServersBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|deadServersBuilder_
operator|=
literal|null
expr_stmt|;
name|deadServers_
operator|=
name|other
operator|.
name|deadServers_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|deadServersBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getDeadServersFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|deadServersBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|deadServers_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|regionsInTransitionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|regionsInTransition_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|regionsInTransition_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|regionsInTransition_
operator|=
name|other
operator|.
name|regionsInTransition_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureRegionsInTransitionIsMutable
argument_list|()
expr_stmt|;
name|regionsInTransition_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|regionsInTransition_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|regionsInTransition_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|regionsInTransitionBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|regionsInTransitionBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|regionsInTransitionBuilder_
operator|=
literal|null
expr_stmt|;
name|regionsInTransition_
operator|=
name|other
operator|.
name|regionsInTransition_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|regionsInTransitionBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getRegionsInTransitionFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|regionsInTransitionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|regionsInTransition_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|other
operator|.
name|hasClusterId
argument_list|()
condition|)
block|{
name|mergeClusterId
argument_list|(
name|other
operator|.
name|getClusterId
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|masterCoprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|masterCoprocessors_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|masterCoprocessors_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|masterCoprocessors_
operator|=
name|other
operator|.
name|masterCoprocessors_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureMasterCoprocessorsIsMutable
argument_list|()
expr_stmt|;
name|masterCoprocessors_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|masterCoprocessors_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|masterCoprocessors_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|masterCoprocessorsBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|masterCoprocessorsBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|masterCoprocessorsBuilder_
operator|=
literal|null
expr_stmt|;
name|masterCoprocessors_
operator|=
name|other
operator|.
name|masterCoprocessors_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|masterCoprocessorsBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getMasterCoprocessorsFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|masterCoprocessorsBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|masterCoprocessors_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|other
operator|.
name|hasMaster
argument_list|()
condition|)
block|{
name|mergeMaster
argument_list|(
name|other
operator|.
name|getMaster
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|backupMastersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|backupMasters_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|backupMasters_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|backupMasters_
operator|=
name|other
operator|.
name|backupMasters_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureBackupMastersIsMutable
argument_list|()
expr_stmt|;
name|backupMasters_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|backupMasters_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|backupMasters_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|backupMastersBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|backupMastersBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|backupMastersBuilder_
operator|=
literal|null
expr_stmt|;
name|backupMasters_
operator|=
name|other
operator|.
name|backupMasters_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|backupMastersBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getBackupMastersFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|backupMastersBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|backupMasters_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|other
operator|.
name|hasBalancerOn
argument_list|()
condition|)
block|{
name|setBalancerOn
argument_list|(
name|other
operator|.
name|getBalancerOn
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
if|if
condition|(
name|hasHbaseVersion
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getHbaseVersion
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getLiveServersCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getLiveServers
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getDeadServersCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getDeadServers
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getRegionsInTransitionCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getRegionsInTransition
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasClusterId
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getClusterId
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getMasterCoprocessorsCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getMasterCoprocessors
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
if|if
condition|(
name|hasMaster
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|getMaster
argument_list|()
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getBackupMastersCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getBackupMasters
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|ClusterStatus
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional .HBaseVersionFileContent hbase_version = 1;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
name|hbaseVersion_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContentOrBuilder
argument_list|>
name|hbaseVersionBuilder_
decl_stmt|;
comment|/**        *<code>optional .HBaseVersionFileContent hbase_version = 1;</code>        */
specifier|public
name|boolean
name|hasHbaseVersion
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional .HBaseVersionFileContent hbase_version = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
name|getHbaseVersion
parameter_list|()
block|{
if|if
condition|(
name|hbaseVersionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|hbaseVersion_
return|;
block|}
else|else
block|{
return|return
name|hbaseVersionBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .HBaseVersionFileContent hbase_version = 1;</code>        */
specifier|public
name|Builder
name|setHbaseVersion
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
name|value
parameter_list|)
block|{
if|if
condition|(
name|hbaseVersionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|hbaseVersion_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|hbaseVersionBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .HBaseVersionFileContent hbase_version = 1;</code>        */
specifier|public
name|Builder
name|setHbaseVersion
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|hbaseVersionBuilder_
operator|==
literal|null
condition|)
block|{
name|hbaseVersion_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|hbaseVersionBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .HBaseVersionFileContent hbase_version = 1;</code>        */
specifier|public
name|Builder
name|mergeHbaseVersion
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
name|value
parameter_list|)
block|{
if|if
condition|(
name|hbaseVersionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
operator|&&
name|hbaseVersion_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|hbaseVersion_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
operator|.
name|newBuilder
argument_list|(
name|hbaseVersion_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|hbaseVersion_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|hbaseVersionBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .HBaseVersionFileContent hbase_version = 1;</code>        */
specifier|public
name|Builder
name|clearHbaseVersion
parameter_list|()
block|{
if|if
condition|(
name|hbaseVersionBuilder_
operator|==
literal|null
condition|)
block|{
name|hbaseVersion_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|hbaseVersionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .HBaseVersionFileContent hbase_version = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
operator|.
name|Builder
name|getHbaseVersionBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getHbaseVersionFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .HBaseVersionFileContent hbase_version = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContentOrBuilder
name|getHbaseVersionOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|hbaseVersionBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|hbaseVersionBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|hbaseVersion_
return|;
block|}
block|}
comment|/**        *<code>optional .HBaseVersionFileContent hbase_version = 1;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContentOrBuilder
argument_list|>
name|getHbaseVersionFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|hbaseVersionBuilder_
operator|==
literal|null
condition|)
block|{
name|hbaseVersionBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContent
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|HBaseVersionFileContentOrBuilder
argument_list|>
argument_list|(
name|hbaseVersion_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|hbaseVersion_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|hbaseVersionBuilder_
return|;
block|}
comment|// repeated .LiveServerInfo live_servers = 2;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
argument_list|>
name|liveServers_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureLiveServersIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|liveServers_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
argument_list|>
argument_list|(
name|liveServers_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfoOrBuilder
argument_list|>
name|liveServersBuilder_
decl_stmt|;
comment|/**        *<code>repeated .LiveServerInfo live_servers = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
argument_list|>
name|getLiveServersList
parameter_list|()
block|{
if|if
condition|(
name|liveServersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|liveServers_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|liveServersBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .LiveServerInfo live_servers = 2;</code>        */
specifier|public
name|int
name|getLiveServersCount
parameter_list|()
block|{
if|if
condition|(
name|liveServersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|liveServers_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|liveServersBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .LiveServerInfo live_servers = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|getLiveServers
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|liveServersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|liveServers_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|liveServersBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .LiveServerInfo live_servers = 2;</code>        */
specifier|public
name|Builder
name|setLiveServers
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|value
parameter_list|)
block|{
if|if
condition|(
name|liveServersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureLiveServersIsMutable
argument_list|()
expr_stmt|;
name|liveServers_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|liveServersBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .LiveServerInfo live_servers = 2;</code>        */
specifier|public
name|Builder
name|setLiveServers
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|liveServersBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureLiveServersIsMutable
argument_list|()
expr_stmt|;
name|liveServers_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|liveServersBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .LiveServerInfo live_servers = 2;</code>        */
specifier|public
name|Builder
name|addLiveServers
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|value
parameter_list|)
block|{
if|if
condition|(
name|liveServersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureLiveServersIsMutable
argument_list|()
expr_stmt|;
name|liveServers_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|liveServersBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .LiveServerInfo live_servers = 2;</code>        */
specifier|public
name|Builder
name|addLiveServers
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
name|value
parameter_list|)
block|{
if|if
condition|(
name|liveServersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureLiveServersIsMutable
argument_list|()
expr_stmt|;
name|liveServers_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|liveServersBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .LiveServerInfo live_servers = 2;</code>        */
specifier|public
name|Builder
name|addLiveServers
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|liveServersBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureLiveServersIsMutable
argument_list|()
expr_stmt|;
name|liveServers_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|liveServersBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .LiveServerInfo live_servers = 2;</code>        */
specifier|public
name|Builder
name|addLiveServers
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|liveServersBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureLiveServersIsMutable
argument_list|()
expr_stmt|;
name|liveServers_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|liveServersBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .LiveServerInfo live_servers = 2;</code>        */
specifier|public
name|Builder
name|addAllLiveServers
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|liveServersBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureLiveServersIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|liveServers_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|liveServersBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .LiveServerInfo live_servers = 2;</code>        */
specifier|public
name|Builder
name|clearLiveServers
parameter_list|()
block|{
if|if
condition|(
name|liveServersBuilder_
operator|==
literal|null
condition|)
block|{
name|liveServers_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|liveServersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .LiveServerInfo live_servers = 2;</code>        */
specifier|public
name|Builder
name|removeLiveServers
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|liveServersBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureLiveServersIsMutable
argument_list|()
expr_stmt|;
name|liveServers_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|liveServersBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .LiveServerInfo live_servers = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|.
name|Builder
name|getLiveServersBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getLiveServersFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .LiveServerInfo live_servers = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfoOrBuilder
name|getLiveServersOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|liveServersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|liveServers_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|liveServersBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .LiveServerInfo live_servers = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfoOrBuilder
argument_list|>
name|getLiveServersOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|liveServersBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|liveServersBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|liveServers_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .LiveServerInfo live_servers = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|.
name|Builder
name|addLiveServersBuilder
parameter_list|()
block|{
return|return
name|getLiveServersFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .LiveServerInfo live_servers = 2;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|.
name|Builder
name|addLiveServersBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getLiveServersFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .LiveServerInfo live_servers = 2;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|.
name|Builder
argument_list|>
name|getLiveServersBuilderList
parameter_list|()
block|{
return|return
name|getLiveServersFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfoOrBuilder
argument_list|>
name|getLiveServersFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|liveServersBuilder_
operator|==
literal|null
condition|)
block|{
name|liveServersBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfo
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|LiveServerInfoOrBuilder
argument_list|>
argument_list|(
name|liveServers_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|liveServers_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|liveServersBuilder_
return|;
block|}
comment|// repeated .ServerName dead_servers = 3;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|>
name|deadServers_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureDeadServersIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|deadServers_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|>
argument_list|(
name|deadServers_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
argument_list|>
name|deadServersBuilder_
decl_stmt|;
comment|/**        *<code>repeated .ServerName dead_servers = 3;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|>
name|getDeadServersList
parameter_list|()
block|{
if|if
condition|(
name|deadServersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|deadServers_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|deadServersBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .ServerName dead_servers = 3;</code>        */
specifier|public
name|int
name|getDeadServersCount
parameter_list|()
block|{
if|if
condition|(
name|deadServersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|deadServers_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|deadServersBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .ServerName dead_servers = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|getDeadServers
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|deadServersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|deadServers_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|deadServersBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .ServerName dead_servers = 3;</code>        */
specifier|public
name|Builder
name|setDeadServers
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|value
parameter_list|)
block|{
if|if
condition|(
name|deadServersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureDeadServersIsMutable
argument_list|()
expr_stmt|;
name|deadServers_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|deadServersBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ServerName dead_servers = 3;</code>        */
specifier|public
name|Builder
name|setDeadServers
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|deadServersBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureDeadServersIsMutable
argument_list|()
expr_stmt|;
name|deadServers_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|deadServersBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ServerName dead_servers = 3;</code>        */
specifier|public
name|Builder
name|addDeadServers
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|value
parameter_list|)
block|{
if|if
condition|(
name|deadServersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureDeadServersIsMutable
argument_list|()
expr_stmt|;
name|deadServers_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|deadServersBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ServerName dead_servers = 3;</code>        */
specifier|public
name|Builder
name|addDeadServers
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|value
parameter_list|)
block|{
if|if
condition|(
name|deadServersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureDeadServersIsMutable
argument_list|()
expr_stmt|;
name|deadServers_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|deadServersBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ServerName dead_servers = 3;</code>        */
specifier|public
name|Builder
name|addDeadServers
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|deadServersBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureDeadServersIsMutable
argument_list|()
expr_stmt|;
name|deadServers_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|deadServersBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ServerName dead_servers = 3;</code>        */
specifier|public
name|Builder
name|addDeadServers
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|deadServersBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureDeadServersIsMutable
argument_list|()
expr_stmt|;
name|deadServers_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|deadServersBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ServerName dead_servers = 3;</code>        */
specifier|public
name|Builder
name|addAllDeadServers
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|deadServersBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureDeadServersIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|deadServers_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|deadServersBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ServerName dead_servers = 3;</code>        */
specifier|public
name|Builder
name|clearDeadServers
parameter_list|()
block|{
if|if
condition|(
name|deadServersBuilder_
operator|==
literal|null
condition|)
block|{
name|deadServers_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|deadServersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ServerName dead_servers = 3;</code>        */
specifier|public
name|Builder
name|removeDeadServers
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|deadServersBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureDeadServersIsMutable
argument_list|()
expr_stmt|;
name|deadServers_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|deadServersBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ServerName dead_servers = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
name|getDeadServersBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getDeadServersFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .ServerName dead_servers = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
name|getDeadServersOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|deadServersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|deadServers_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|deadServersBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .ServerName dead_servers = 3;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
argument_list|>
name|getDeadServersOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|deadServersBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|deadServersBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|deadServers_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .ServerName dead_servers = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
name|addDeadServersBuilder
parameter_list|()
block|{
return|return
name|getDeadServersFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .ServerName dead_servers = 3;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
name|addDeadServersBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getDeadServersFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .ServerName dead_servers = 3;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
argument_list|>
name|getDeadServersBuilderList
parameter_list|()
block|{
return|return
name|getDeadServersFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
argument_list|>
name|getDeadServersFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|deadServersBuilder_
operator|==
literal|null
condition|)
block|{
name|deadServersBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
argument_list|>
argument_list|(
name|deadServers_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|deadServers_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|deadServersBuilder_
return|;
block|}
comment|// repeated .RegionInTransition regions_in_transition = 4;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
argument_list|>
name|regionsInTransition_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureRegionsInTransitionIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|regionsInTransition_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
argument_list|>
argument_list|(
name|regionsInTransition_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransitionOrBuilder
argument_list|>
name|regionsInTransitionBuilder_
decl_stmt|;
comment|/**        *<code>repeated .RegionInTransition regions_in_transition = 4;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
argument_list|>
name|getRegionsInTransitionList
parameter_list|()
block|{
if|if
condition|(
name|regionsInTransitionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|regionsInTransition_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|regionsInTransitionBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .RegionInTransition regions_in_transition = 4;</code>        */
specifier|public
name|int
name|getRegionsInTransitionCount
parameter_list|()
block|{
if|if
condition|(
name|regionsInTransitionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|regionsInTransition_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|regionsInTransitionBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .RegionInTransition regions_in_transition = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|getRegionsInTransition
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|regionsInTransitionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|regionsInTransition_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|regionsInTransitionBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .RegionInTransition regions_in_transition = 4;</code>        */
specifier|public
name|Builder
name|setRegionsInTransition
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|value
parameter_list|)
block|{
if|if
condition|(
name|regionsInTransitionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRegionsInTransitionIsMutable
argument_list|()
expr_stmt|;
name|regionsInTransition_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionsInTransitionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .RegionInTransition regions_in_transition = 4;</code>        */
specifier|public
name|Builder
name|setRegionsInTransition
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|regionsInTransitionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRegionsInTransitionIsMutable
argument_list|()
expr_stmt|;
name|regionsInTransition_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionsInTransitionBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .RegionInTransition regions_in_transition = 4;</code>        */
specifier|public
name|Builder
name|addRegionsInTransition
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|value
parameter_list|)
block|{
if|if
condition|(
name|regionsInTransitionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRegionsInTransitionIsMutable
argument_list|()
expr_stmt|;
name|regionsInTransition_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionsInTransitionBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .RegionInTransition regions_in_transition = 4;</code>        */
specifier|public
name|Builder
name|addRegionsInTransition
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
name|value
parameter_list|)
block|{
if|if
condition|(
name|regionsInTransitionBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureRegionsInTransitionIsMutable
argument_list|()
expr_stmt|;
name|regionsInTransition_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionsInTransitionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .RegionInTransition regions_in_transition = 4;</code>        */
specifier|public
name|Builder
name|addRegionsInTransition
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|regionsInTransitionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRegionsInTransitionIsMutable
argument_list|()
expr_stmt|;
name|regionsInTransition_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionsInTransitionBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .RegionInTransition regions_in_transition = 4;</code>        */
specifier|public
name|Builder
name|addRegionsInTransition
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|regionsInTransitionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRegionsInTransitionIsMutable
argument_list|()
expr_stmt|;
name|regionsInTransition_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionsInTransitionBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .RegionInTransition regions_in_transition = 4;</code>        */
specifier|public
name|Builder
name|addAllRegionsInTransition
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|regionsInTransitionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRegionsInTransitionIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|regionsInTransition_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionsInTransitionBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .RegionInTransition regions_in_transition = 4;</code>        */
specifier|public
name|Builder
name|clearRegionsInTransition
parameter_list|()
block|{
if|if
condition|(
name|regionsInTransitionBuilder_
operator|==
literal|null
condition|)
block|{
name|regionsInTransition_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionsInTransitionBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .RegionInTransition regions_in_transition = 4;</code>        */
specifier|public
name|Builder
name|removeRegionsInTransition
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|regionsInTransitionBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureRegionsInTransitionIsMutable
argument_list|()
expr_stmt|;
name|regionsInTransition_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|regionsInTransitionBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .RegionInTransition regions_in_transition = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|.
name|Builder
name|getRegionsInTransitionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getRegionsInTransitionFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .RegionInTransition regions_in_transition = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransitionOrBuilder
name|getRegionsInTransitionOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|regionsInTransitionBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|regionsInTransition_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|regionsInTransitionBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .RegionInTransition regions_in_transition = 4;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransitionOrBuilder
argument_list|>
name|getRegionsInTransitionOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|regionsInTransitionBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|regionsInTransitionBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|regionsInTransition_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .RegionInTransition regions_in_transition = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|.
name|Builder
name|addRegionsInTransitionBuilder
parameter_list|()
block|{
return|return
name|getRegionsInTransitionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .RegionInTransition regions_in_transition = 4;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|.
name|Builder
name|addRegionsInTransitionBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getRegionsInTransitionFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .RegionInTransition regions_in_transition = 4;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|.
name|Builder
argument_list|>
name|getRegionsInTransitionBuilderList
parameter_list|()
block|{
return|return
name|getRegionsInTransitionFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransitionOrBuilder
argument_list|>
name|getRegionsInTransitionFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|regionsInTransitionBuilder_
operator|==
literal|null
condition|)
block|{
name|regionsInTransitionBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransition
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterStatusProtos
operator|.
name|RegionInTransitionOrBuilder
argument_list|>
argument_list|(
name|regionsInTransition_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|regionsInTransition_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|regionsInTransitionBuilder_
return|;
block|}
comment|// optional .ClusterId cluster_id = 5;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
name|clusterId_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterIdOrBuilder
argument_list|>
name|clusterIdBuilder_
decl_stmt|;
comment|/**        *<code>optional .ClusterId cluster_id = 5;</code>        */
specifier|public
name|boolean
name|hasClusterId
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**        *<code>optional .ClusterId cluster_id = 5;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
name|getClusterId
parameter_list|()
block|{
if|if
condition|(
name|clusterIdBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|clusterId_
return|;
block|}
else|else
block|{
return|return
name|clusterIdBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .ClusterId cluster_id = 5;</code>        */
specifier|public
name|Builder
name|setClusterId
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
name|value
parameter_list|)
block|{
if|if
condition|(
name|clusterIdBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|clusterId_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|clusterIdBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .ClusterId cluster_id = 5;</code>        */
specifier|public
name|Builder
name|setClusterId
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|clusterIdBuilder_
operator|==
literal|null
condition|)
block|{
name|clusterId_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|clusterIdBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .ClusterId cluster_id = 5;</code>        */
specifier|public
name|Builder
name|mergeClusterId
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
name|value
parameter_list|)
block|{
if|if
condition|(
name|clusterIdBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
operator|&&
name|clusterId_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|clusterId_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
operator|.
name|newBuilder
argument_list|(
name|clusterId_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|clusterId_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|clusterIdBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .ClusterId cluster_id = 5;</code>        */
specifier|public
name|Builder
name|clearClusterId
parameter_list|()
block|{
if|if
condition|(
name|clusterIdBuilder_
operator|==
literal|null
condition|)
block|{
name|clusterId_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|clusterIdBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .ClusterId cluster_id = 5;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
operator|.
name|Builder
name|getClusterIdBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getClusterIdFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .ClusterId cluster_id = 5;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterIdOrBuilder
name|getClusterIdOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|clusterIdBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|clusterIdBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|clusterId_
return|;
block|}
block|}
comment|/**        *<code>optional .ClusterId cluster_id = 5;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterIdOrBuilder
argument_list|>
name|getClusterIdFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|clusterIdBuilder_
operator|==
literal|null
condition|)
block|{
name|clusterIdBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterId
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|ClusterIdOrBuilder
argument_list|>
argument_list|(
name|clusterId_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|clusterId_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|clusterIdBuilder_
return|;
block|}
comment|// repeated .Coprocessor master_coprocessors = 6;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|>
name|masterCoprocessors_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureMasterCoprocessorsIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|masterCoprocessors_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|>
argument_list|(
name|masterCoprocessors_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|CoprocessorOrBuilder
argument_list|>
name|masterCoprocessorsBuilder_
decl_stmt|;
comment|/**        *<code>repeated .Coprocessor master_coprocessors = 6;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|>
name|getMasterCoprocessorsList
parameter_list|()
block|{
if|if
condition|(
name|masterCoprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|masterCoprocessors_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|masterCoprocessorsBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Coprocessor master_coprocessors = 6;</code>        */
specifier|public
name|int
name|getMasterCoprocessorsCount
parameter_list|()
block|{
if|if
condition|(
name|masterCoprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|masterCoprocessors_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|masterCoprocessorsBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .Coprocessor master_coprocessors = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
name|getMasterCoprocessors
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|masterCoprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|masterCoprocessors_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|masterCoprocessorsBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Coprocessor master_coprocessors = 6;</code>        */
specifier|public
name|Builder
name|setMasterCoprocessors
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
name|value
parameter_list|)
block|{
if|if
condition|(
name|masterCoprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureMasterCoprocessorsIsMutable
argument_list|()
expr_stmt|;
name|masterCoprocessors_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|masterCoprocessorsBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Coprocessor master_coprocessors = 6;</code>        */
specifier|public
name|Builder
name|setMasterCoprocessors
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|masterCoprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMasterCoprocessorsIsMutable
argument_list|()
expr_stmt|;
name|masterCoprocessors_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|masterCoprocessorsBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Coprocessor master_coprocessors = 6;</code>        */
specifier|public
name|Builder
name|addMasterCoprocessors
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
name|value
parameter_list|)
block|{
if|if
condition|(
name|masterCoprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureMasterCoprocessorsIsMutable
argument_list|()
expr_stmt|;
name|masterCoprocessors_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|masterCoprocessorsBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Coprocessor master_coprocessors = 6;</code>        */
specifier|public
name|Builder
name|addMasterCoprocessors
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
name|value
parameter_list|)
block|{
if|if
condition|(
name|masterCoprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureMasterCoprocessorsIsMutable
argument_list|()
expr_stmt|;
name|masterCoprocessors_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|masterCoprocessorsBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Coprocessor master_coprocessors = 6;</code>        */
specifier|public
name|Builder
name|addMasterCoprocessors
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|masterCoprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMasterCoprocessorsIsMutable
argument_list|()
expr_stmt|;
name|masterCoprocessors_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|masterCoprocessorsBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Coprocessor master_coprocessors = 6;</code>        */
specifier|public
name|Builder
name|addMasterCoprocessors
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|masterCoprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMasterCoprocessorsIsMutable
argument_list|()
expr_stmt|;
name|masterCoprocessors_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|masterCoprocessorsBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Coprocessor master_coprocessors = 6;</code>        */
specifier|public
name|Builder
name|addAllMasterCoprocessors
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|masterCoprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMasterCoprocessorsIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|masterCoprocessors_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|masterCoprocessorsBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Coprocessor master_coprocessors = 6;</code>        */
specifier|public
name|Builder
name|clearMasterCoprocessors
parameter_list|()
block|{
if|if
condition|(
name|masterCoprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
name|masterCoprocessors_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|masterCoprocessorsBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Coprocessor master_coprocessors = 6;</code>        */
specifier|public
name|Builder
name|removeMasterCoprocessors
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|masterCoprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMasterCoprocessorsIsMutable
argument_list|()
expr_stmt|;
name|masterCoprocessors_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|masterCoprocessorsBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .Coprocessor master_coprocessors = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|Builder
name|getMasterCoprocessorsBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getMasterCoprocessorsFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Coprocessor master_coprocessors = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|CoprocessorOrBuilder
name|getMasterCoprocessorsOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|masterCoprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|masterCoprocessors_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|masterCoprocessorsBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Coprocessor master_coprocessors = 6;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|CoprocessorOrBuilder
argument_list|>
name|getMasterCoprocessorsOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|masterCoprocessorsBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|masterCoprocessorsBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|masterCoprocessors_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .Coprocessor master_coprocessors = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|Builder
name|addMasterCoprocessorsBuilder
parameter_list|()
block|{
return|return
name|getMasterCoprocessorsFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Coprocessor master_coprocessors = 6;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|Builder
name|addMasterCoprocessorsBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getMasterCoprocessorsFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .Coprocessor master_coprocessors = 6;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|Builder
argument_list|>
name|getMasterCoprocessorsBuilderList
parameter_list|()
block|{
return|return
name|getMasterCoprocessorsFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|CoprocessorOrBuilder
argument_list|>
name|getMasterCoprocessorsFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|masterCoprocessorsBuilder_
operator|==
literal|null
condition|)
block|{
name|masterCoprocessorsBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|Coprocessor
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|CoprocessorOrBuilder
argument_list|>
argument_list|(
name|masterCoprocessors_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|masterCoprocessors_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|masterCoprocessorsBuilder_
return|;
block|}
comment|// optional .ServerName master = 7;
specifier|private
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|master_
init|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|getDefaultInstance
argument_list|()
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
argument_list|>
name|masterBuilder_
decl_stmt|;
comment|/**        *<code>optional .ServerName master = 7;</code>        */
specifier|public
name|boolean
name|hasMaster
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
return|;
block|}
comment|/**        *<code>optional .ServerName master = 7;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|getMaster
parameter_list|()
block|{
if|if
condition|(
name|masterBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|master_
return|;
block|}
else|else
block|{
return|return
name|masterBuilder_
operator|.
name|getMessage
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>optional .ServerName master = 7;</code>        */
specifier|public
name|Builder
name|setMaster
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|value
parameter_list|)
block|{
if|if
condition|(
name|masterBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|master_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|masterBuilder_
operator|.
name|setMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .ServerName master = 7;</code>        */
specifier|public
name|Builder
name|setMaster
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|masterBuilder_
operator|==
literal|null
condition|)
block|{
name|master_
operator|=
name|builderForValue
operator|.
name|build
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|masterBuilder_
operator|.
name|setMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .ServerName master = 7;</code>        */
specifier|public
name|Builder
name|mergeMaster
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|value
parameter_list|)
block|{
if|if
condition|(
name|masterBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
operator|&&
name|master_
operator|!=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|getDefaultInstance
argument_list|()
condition|)
block|{
name|master_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|newBuilder
argument_list|(
name|master_
argument_list|)
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
operator|.
name|buildPartial
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|master_
operator|=
name|value
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|masterBuilder_
operator|.
name|mergeFrom
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .ServerName master = 7;</code>        */
specifier|public
name|Builder
name|clearMaster
parameter_list|()
block|{
if|if
condition|(
name|masterBuilder_
operator|==
literal|null
condition|)
block|{
name|master_
operator|=
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|masterBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional .ServerName master = 7;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
name|getMasterBuilder
parameter_list|()
block|{
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|getMasterFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|()
return|;
block|}
comment|/**        *<code>optional .ServerName master = 7;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
name|getMasterOrBuilder
parameter_list|()
block|{
if|if
condition|(
name|masterBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|masterBuilder_
operator|.
name|getMessageOrBuilder
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|master_
return|;
block|}
block|}
comment|/**        *<code>optional .ServerName master = 7;</code>        */
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
argument_list|>
name|getMasterFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|masterBuilder_
operator|==
literal|null
condition|)
block|{
name|masterBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|SingleFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
argument_list|>
argument_list|(
name|master_
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|master_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|masterBuilder_
return|;
block|}
comment|// repeated .ServerName backup_masters = 8;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|>
name|backupMasters_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureBackupMastersIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|backupMasters_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|>
argument_list|(
name|backupMasters_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
argument_list|>
name|backupMastersBuilder_
decl_stmt|;
comment|/**        *<code>repeated .ServerName backup_masters = 8;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|>
name|getBackupMastersList
parameter_list|()
block|{
if|if
condition|(
name|backupMastersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|backupMasters_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|backupMastersBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .ServerName backup_masters = 8;</code>        */
specifier|public
name|int
name|getBackupMastersCount
parameter_list|()
block|{
if|if
condition|(
name|backupMastersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|backupMasters_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|backupMastersBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .ServerName backup_masters = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|getBackupMasters
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|backupMastersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|backupMasters_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|backupMastersBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .ServerName backup_masters = 8;</code>        */
specifier|public
name|Builder
name|setBackupMasters
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|value
parameter_list|)
block|{
if|if
condition|(
name|backupMastersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureBackupMastersIsMutable
argument_list|()
expr_stmt|;
name|backupMasters_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|backupMastersBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ServerName backup_masters = 8;</code>        */
specifier|public
name|Builder
name|setBackupMasters
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|backupMastersBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureBackupMastersIsMutable
argument_list|()
expr_stmt|;
name|backupMasters_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|backupMastersBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ServerName backup_masters = 8;</code>        */
specifier|public
name|Builder
name|addBackupMasters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|value
parameter_list|)
block|{
if|if
condition|(
name|backupMastersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureBackupMastersIsMutable
argument_list|()
expr_stmt|;
name|backupMasters_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|backupMastersBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ServerName backup_masters = 8;</code>        */
specifier|public
name|Builder
name|addBackupMasters
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
name|value
parameter_list|)
block|{
if|if
condition|(
name|backupMastersBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureBackupMastersIsMutable
argument_list|()
expr_stmt|;
name|backupMasters_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|backupMastersBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ServerName backup_masters = 8;</code>        */
specifier|public
name|Builder
name|addBackupMasters
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|backupMastersBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureBackupMastersIsMutable
argument_list|()
expr_stmt|;
name|backupMasters_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|backupMastersBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ServerName backup_masters = 8;</code>        */
specifier|public
name|Builder
name|addBackupMasters
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|backupMastersBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureBackupMastersIsMutable
argument_list|()
expr_stmt|;
name|backupMasters_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|backupMastersBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ServerName backup_masters = 8;</code>        */
specifier|public
name|Builder
name|addAllBackupMasters
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|backupMastersBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureBackupMastersIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|backupMasters_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|backupMastersBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ServerName backup_masters = 8;</code>        */
specifier|public
name|Builder
name|clearBackupMasters
parameter_list|()
block|{
if|if
condition|(
name|backupMastersBuilder_
operator|==
literal|null
condition|)
block|{
name|backupMasters_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|backupMastersBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ServerName backup_masters = 8;</code>        */
specifier|public
name|Builder
name|removeBackupMasters
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|backupMastersBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureBackupMastersIsMutable
argument_list|()
expr_stmt|;
name|backupMasters_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|backupMastersBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .ServerName backup_masters = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
name|getBackupMastersBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getBackupMastersFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .ServerName backup_masters = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
name|getBackupMastersOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|backupMastersBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|backupMasters_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|backupMastersBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .ServerName backup_masters = 8;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
argument_list|>
name|getBackupMastersOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|backupMastersBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|backupMastersBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|backupMasters_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .ServerName backup_masters = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
name|addBackupMastersBuilder
parameter_list|()
block|{
return|return
name|getBackupMastersFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .ServerName backup_masters = 8;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
name|addBackupMastersBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getBackupMastersFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .ServerName backup_masters = 8;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
argument_list|>
name|getBackupMastersBuilderList
parameter_list|()
block|{
return|return
name|getBackupMastersFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
argument_list|>
name|getBackupMastersFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|backupMastersBuilder_
operator|==
literal|null
condition|)
block|{
name|backupMastersBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerName
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|ServerNameOrBuilder
argument_list|>
argument_list|(
name|backupMasters_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|backupMasters_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|backupMastersBuilder_
return|;
block|}
comment|// optional bool balancer_on = 9;
specifier|private
name|boolean
name|balancerOn_
decl_stmt|;
comment|/**        *<code>optional bool balancer_on = 9;</code>        */
specifier|public
name|boolean
name|hasBalancerOn
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
return|;
block|}
comment|/**        *<code>optional bool balancer_on = 9;</code>        */
specifier|public
name|boolean
name|getBalancerOn
parameter_list|()
block|{
return|return
name|balancerOn_
return|;
block|}
comment|/**        *<code>optional bool balancer_on = 9;</code>        */
specifier|public
name|Builder
name|setBalancerOn
parameter_list|(
name|boolean
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
name|balancerOn_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bool balancer_on = 9;</code>        */
specifier|public
name|Builder
name|clearBalancerOn
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
name|balancerOn_
operator|=
literal|false
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:ClusterStatus)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|ClusterStatus
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:ClusterStatus)
block|}
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_RegionState_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_RegionState_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_RegionInTransition_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_RegionInTransition_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_RegionLoad_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_RegionLoad_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_ReplicationLoadSink_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_ReplicationLoadSink_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_ReplicationLoadSource_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_ReplicationLoadSource_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_ServerLoad_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_ServerLoad_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_LiveServerInfo_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_LiveServerInfo_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_ClusterStatus_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_ClusterStatus_fieldAccessorTable
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|descriptor
return|;
block|}
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
name|descriptor
decl_stmt|;
static|static
block|{
name|java
operator|.
name|lang
operator|.
name|String
index|[]
name|descriptorData
init|=
block|{
literal|"\n\023ClusterStatus.proto\032\013HBase.proto\032\017Clus"
operator|+
literal|"terId.proto\032\010FS.proto\"\307\002\n\013RegionState\022 \n"
operator|+
literal|"\013region_info\030\001 \002(\0132\013.RegionInfo\022!\n\005state"
operator|+
literal|"\030\002 \002(\0162\022.RegionState.State\022\r\n\005stamp\030\003 \001("
operator|+
literal|"\004\"\343\001\n\005State\022\013\n\007OFFLINE\020\000\022\020\n\014PENDING_OPEN"
operator|+
literal|"\020\001\022\013\n\007OPENING\020\002\022\010\n\004OPEN\020\003\022\021\n\rPENDING_CLO"
operator|+
literal|"SE\020\004\022\013\n\007CLOSING\020\005\022\n\n\006CLOSED\020\006\022\r\n\tSPLITTI"
operator|+
literal|"NG\020\007\022\t\n\005SPLIT\020\010\022\017\n\013FAILED_OPEN\020\t\022\020\n\014FAIL"
operator|+
literal|"ED_CLOSE\020\n\022\013\n\007MERGING\020\013\022\n\n\006MERGED\020\014\022\021\n\rS"
operator|+
literal|"PLITTING_NEW\020\r\022\017\n\013MERGING_NEW\020\016\"X\n\022Regio"
block|,
literal|"nInTransition\022\036\n\004spec\030\001 \002(\0132\020.RegionSpec"
operator|+
literal|"ifier\022\"\n\014region_state\030\002 \002(\0132\014.RegionStat"
operator|+
literal|"e\"\214\004\n\nRegionLoad\022*\n\020region_specifier\030\001 \002"
operator|+
literal|"(\0132\020.RegionSpecifier\022\016\n\006stores\030\002 \001(\r\022\022\n\n"
operator|+
literal|"storefiles\030\003 \001(\r\022\"\n\032store_uncompressed_s"
operator|+
literal|"ize_MB\030\004 \001(\r\022\031\n\021storefile_size_MB\030\005 \001(\r\022"
operator|+
literal|"\030\n\020memstore_size_MB\030\006 \001(\r\022\037\n\027storefile_i"
operator|+
literal|"ndex_size_MB\030\007 \001(\r\022\033\n\023read_requests_coun"
operator|+
literal|"t\030\010 \001(\004\022\034\n\024write_requests_count\030\t \001(\004\022\034\n"
operator|+
literal|"\024total_compacting_KVs\030\n \001(\004\022\035\n\025current_c"
block|,
literal|"ompacted_KVs\030\013 \001(\004\022\032\n\022root_index_size_KB"
operator|+
literal|"\030\014 \001(\r\022\"\n\032total_static_index_size_KB\030\r \001"
operator|+
literal|"(\r\022\"\n\032total_static_bloom_size_KB\030\016 \001(\r\022\034"
operator|+
literal|"\n\024complete_sequence_id\030\017 \001(\004\022\025\n\rdata_loc"
operator|+
literal|"ality\030\020 \001(\002\022#\n\030last_major_compaction_ts\030"
operator|+
literal|"\021 \001(\004:\0010\"T\n\023ReplicationLoadSink\022\032\n\022ageOf"
operator|+
literal|"LastAppliedOp\030\001 \002(\004\022!\n\031timeStampsOfLastA"
operator|+
literal|"ppliedOp\030\002 \002(\004\"\225\001\n\025ReplicationLoadSource"
operator|+
literal|"\022\016\n\006peerID\030\001 \002(\t\022\032\n\022ageOfLastShippedOp\030\002"
operator|+
literal|" \002(\004\022\026\n\016sizeOfLogQueue\030\003 \002(\r\022 \n\030timeStam"
block|,
literal|"pOfLastShippedOp\030\004 \002(\004\022\026\n\016replicationLag"
operator|+
literal|"\030\005 \002(\004\"\346\002\n\nServerLoad\022\032\n\022number_of_reque"
operator|+
literal|"sts\030\001 \001(\r\022 \n\030total_number_of_requests\030\002 "
operator|+
literal|"\001(\r\022\024\n\014used_heap_MB\030\003 \001(\r\022\023\n\013max_heap_MB"
operator|+
literal|"\030\004 \001(\r\022!\n\014region_loads\030\005 \003(\0132\013.RegionLoa"
operator|+
literal|"d\022\"\n\014coprocessors\030\006 \003(\0132\014.Coprocessor\022\031\n"
operator|+
literal|"\021report_start_time\030\007 \001(\004\022\027\n\017report_end_t"
operator|+
literal|"ime\030\010 \001(\004\022\030\n\020info_server_port\030\t \001(\r\022.\n\016r"
operator|+
literal|"eplLoadSource\030\n \003(\0132\026.ReplicationLoadSou"
operator|+
literal|"rce\022*\n\014replLoadSink\030\013 \001(\0132\024.ReplicationL"
block|,
literal|"oadSink\"O\n\016LiveServerInfo\022\033\n\006server\030\001 \002("
operator|+
literal|"\0132\013.ServerName\022 \n\013server_load\030\002 \002(\0132\013.Se"
operator|+
literal|"rverLoad\"\340\002\n\rClusterStatus\022/\n\rhbase_vers"
operator|+
literal|"ion\030\001 \001(\0132\030.HBaseVersionFileContent\022%\n\014l"
operator|+
literal|"ive_servers\030\002 \003(\0132\017.LiveServerInfo\022!\n\014de"
operator|+
literal|"ad_servers\030\003 \003(\0132\013.ServerName\0222\n\025regions"
operator|+
literal|"_in_transition\030\004 \003(\0132\023.RegionInTransitio"
operator|+
literal|"n\022\036\n\ncluster_id\030\005 \001(\0132\n.ClusterId\022)\n\023mas"
operator|+
literal|"ter_coprocessors\030\006 \003(\0132\014.Coprocessor\022\033\n\006"
operator|+
literal|"master\030\007 \001(\0132\013.ServerName\022#\n\016backup_mast"
block|,
literal|"ers\030\010 \003(\0132\013.ServerName\022\023\n\013balancer_on\030\t "
operator|+
literal|"\001(\010BF\n*org.apache.hadoop.hbase.protobuf."
operator|+
literal|"generatedB\023ClusterStatusProtosH\001\240\001\001"
block|}
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
operator|.
name|InternalDescriptorAssigner
name|assigner
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
operator|.
name|InternalDescriptorAssigner
argument_list|()
block|{
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistry
name|assignDescriptors
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
name|root
parameter_list|)
block|{
name|descriptor
operator|=
name|root
expr_stmt|;
name|internal_static_RegionState_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|internal_static_RegionState_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_RegionState_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"RegionInfo"
block|,
literal|"State"
block|,
literal|"Stamp"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_RegionInTransition_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|internal_static_RegionInTransition_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_RegionInTransition_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Spec"
block|,
literal|"RegionState"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_RegionLoad_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|internal_static_RegionLoad_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_RegionLoad_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"RegionSpecifier"
block|,
literal|"Stores"
block|,
literal|"Storefiles"
block|,
literal|"StoreUncompressedSizeMB"
block|,
literal|"StorefileSizeMB"
block|,
literal|"MemstoreSizeMB"
block|,
literal|"StorefileIndexSizeMB"
block|,
literal|"ReadRequestsCount"
block|,
literal|"WriteRequestsCount"
block|,
literal|"TotalCompactingKVs"
block|,
literal|"CurrentCompactedKVs"
block|,
literal|"RootIndexSizeKB"
block|,
literal|"TotalStaticIndexSizeKB"
block|,
literal|"TotalStaticBloomSizeKB"
block|,
literal|"CompleteSequenceId"
block|,
literal|"DataLocality"
block|,
literal|"LastMajorCompactionTs"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_ReplicationLoadSink_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|internal_static_ReplicationLoadSink_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_ReplicationLoadSink_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"AgeOfLastAppliedOp"
block|,
literal|"TimeStampsOfLastAppliedOp"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_ReplicationLoadSource_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|internal_static_ReplicationLoadSource_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_ReplicationLoadSource_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"PeerID"
block|,
literal|"AgeOfLastShippedOp"
block|,
literal|"SizeOfLogQueue"
block|,
literal|"TimeStampOfLastShippedOp"
block|,
literal|"ReplicationLag"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_ServerLoad_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|internal_static_ServerLoad_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_ServerLoad_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"NumberOfRequests"
block|,
literal|"TotalNumberOfRequests"
block|,
literal|"UsedHeapMB"
block|,
literal|"MaxHeapMB"
block|,
literal|"RegionLoads"
block|,
literal|"Coprocessors"
block|,
literal|"ReportStartTime"
block|,
literal|"ReportEndTime"
block|,
literal|"InfoServerPort"
block|,
literal|"ReplLoadSource"
block|,
literal|"ReplLoadSink"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_LiveServerInfo_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|6
argument_list|)
expr_stmt|;
name|internal_static_LiveServerInfo_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_LiveServerInfo_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"Server"
block|,
literal|"ServerLoad"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_ClusterStatus_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|7
argument_list|)
expr_stmt|;
name|internal_static_ClusterStatus_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_ClusterStatus_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"HbaseVersion"
block|,
literal|"LiveServers"
block|,
literal|"DeadServers"
block|,
literal|"RegionsInTransition"
block|,
literal|"ClusterId"
block|,
literal|"MasterCoprocessors"
block|,
literal|"Master"
block|,
literal|"BackupMasters"
block|,
literal|"BalancerOn"
block|, }
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
operator|.
name|internalBuildGeneratedFileFrom
argument_list|(
name|descriptorData
argument_list|,
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
index|[]
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|getDescriptor
argument_list|()
block|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|ClusterIdProtos
operator|.
name|getDescriptor
argument_list|()
block|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|FSProtos
operator|.
name|getDescriptor
argument_list|()
block|,         }
argument_list|,
name|assigner
argument_list|)
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(outer_class_scope)
block|}
end_class

end_unit

