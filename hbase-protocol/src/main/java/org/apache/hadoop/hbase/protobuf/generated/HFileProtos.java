begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// Generated by the protocol buffer compiler.  DO NOT EDIT!
end_comment

begin_comment
comment|// source: HFile.proto
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
package|;
end_package

begin_class
specifier|public
specifier|final
class|class
name|HFileProtos
block|{
specifier|private
name|HFileProtos
parameter_list|()
block|{}
specifier|public
specifier|static
name|void
name|registerAllExtensions
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistry
name|registry
parameter_list|)
block|{   }
specifier|public
interface|interface
name|FileInfoProtoOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// repeated .BytesBytesPair map_entry = 1;
comment|/**      *<code>repeated .BytesBytesPair map_entry = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
argument_list|>
name|getMapEntryList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .BytesBytesPair map_entry = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
name|getMapEntry
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
comment|/**      *<code>repeated .BytesBytesPair map_entry = 1;</code>      */
name|int
name|getMapEntryCount
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .BytesBytesPair map_entry = 1;</code>      */
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPairOrBuilder
argument_list|>
name|getMapEntryOrBuilderList
parameter_list|()
function_decl|;
comment|/**      *<code>repeated .BytesBytesPair map_entry = 1;</code>      */
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPairOrBuilder
name|getMapEntryOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
function_decl|;
block|}
comment|/**    * Protobuf type {@code FileInfoProto}    *    *<pre>    * Map of name/values    *</pre>    */
specifier|public
specifier|static
specifier|final
class|class
name|FileInfoProto
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|FileInfoProtoOrBuilder
block|{
comment|// Use FileInfoProto.newBuilder() to construct.
specifier|private
name|FileInfoProto
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|FileInfoProto
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|FileInfoProto
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|FileInfoProto
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|FileInfoProto
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|FileInfoProto
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|10
case|:
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|mapEntry_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
argument_list|>
argument_list|()
expr_stmt|;
name|mutable_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|mapEntry_
operator|.
name|add
argument_list|(
name|input
operator|.
name|readMessage
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
operator|.
name|PARSER
argument_list|,
name|extensionRegistry
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
operator|(
operator|(
name|mutable_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|mapEntry_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|mapEntry_
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|internal_static_FileInfoProto_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|internal_static_FileInfoProto_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FileInfoProto
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|FileInfoProto
argument_list|>
argument_list|()
block|{
specifier|public
name|FileInfoProto
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|FileInfoProto
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FileInfoProto
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
comment|// repeated .BytesBytesPair map_entry = 1;
specifier|public
specifier|static
specifier|final
name|int
name|MAP_ENTRY_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
argument_list|>
name|mapEntry_
decl_stmt|;
comment|/**      *<code>repeated .BytesBytesPair map_entry = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
argument_list|>
name|getMapEntryList
parameter_list|()
block|{
return|return
name|mapEntry_
return|;
block|}
comment|/**      *<code>repeated .BytesBytesPair map_entry = 1;</code>      */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPairOrBuilder
argument_list|>
name|getMapEntryOrBuilderList
parameter_list|()
block|{
return|return
name|mapEntry_
return|;
block|}
comment|/**      *<code>repeated .BytesBytesPair map_entry = 1;</code>      */
specifier|public
name|int
name|getMapEntryCount
parameter_list|()
block|{
return|return
name|mapEntry_
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      *<code>repeated .BytesBytesPair map_entry = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
name|getMapEntry
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|mapEntry_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**      *<code>repeated .BytesBytesPair map_entry = 1;</code>      */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPairOrBuilder
name|getMapEntryOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|mapEntry_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|mapEntry_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getMapEntryCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getMapEntry
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
name|memoizedIsInitialized
operator|=
literal|0
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|mapEntry_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|output
operator|.
name|writeMessage
argument_list|(
literal|1
argument_list|,
name|mapEntry_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|mapEntry_
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeMessageSize
argument_list|(
literal|1
argument_list|,
name|mapEntry_
operator|.
name|get
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
name|getMapEntryList
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getMapEntryList
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|=
name|result
operator|&&
name|getUnknownFields
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|private
name|int
name|memoizedHashCode
init|=
literal|0
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptorForType
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|getMapEntryCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|MAP_ENTRY_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getMapEntryList
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|getUnknownFields
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code FileInfoProto}      *      *<pre>      * Map of name/values      *</pre>      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProtoOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|internal_static_FileInfoProto_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|internal_static_FileInfoProto_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.protobuf.generated.HFileProtos.FileInfoProto.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{
name|getMapEntryFieldBuilder
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|mapEntryBuilder_
operator|==
literal|null
condition|)
block|{
name|mapEntry_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|mapEntryBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|internal_static_FileInfoProto_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
if|if
condition|(
name|mapEntryBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|mapEntry_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|mapEntry_
argument_list|)
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
name|result
operator|.
name|mapEntry_
operator|=
name|mapEntry_
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|mapEntry_
operator|=
name|mapEntryBuilder_
operator|.
name|build
argument_list|()
expr_stmt|;
block|}
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|mapEntryBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|mapEntry_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|mapEntry_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|mapEntry_
operator|=
name|other
operator|.
name|mapEntry_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
block|}
else|else
block|{
name|ensureMapEntryIsMutable
argument_list|()
expr_stmt|;
name|mapEntry_
operator|.
name|addAll
argument_list|(
name|other
operator|.
name|mapEntry_
argument_list|)
expr_stmt|;
block|}
name|onChanged
argument_list|()
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|!
name|other
operator|.
name|mapEntry_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|mapEntryBuilder_
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|mapEntryBuilder_
operator|.
name|dispose
argument_list|()
expr_stmt|;
name|mapEntryBuilder_
operator|=
literal|null
expr_stmt|;
name|mapEntry_
operator|=
name|other
operator|.
name|mapEntry_
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|mapEntryBuilder_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|?
name|getMapEntryFieldBuilder
argument_list|()
else|:
literal|null
expr_stmt|;
block|}
else|else
block|{
name|mapEntryBuilder_
operator|.
name|addAllMessages
argument_list|(
name|other
operator|.
name|mapEntry_
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|getMapEntryCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
operator|!
name|getMapEntry
argument_list|(
name|i
argument_list|)
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileInfoProto
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// repeated .BytesBytesPair map_entry = 1;
specifier|private
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
argument_list|>
name|mapEntry_
init|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
decl_stmt|;
specifier|private
name|void
name|ensureMapEntryIsMutable
parameter_list|()
block|{
if|if
condition|(
operator|!
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|mapEntry_
operator|=
operator|new
name|java
operator|.
name|util
operator|.
name|ArrayList
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
argument_list|>
argument_list|(
name|mapEntry_
argument_list|)
expr_stmt|;
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPairOrBuilder
argument_list|>
name|mapEntryBuilder_
decl_stmt|;
comment|/**        *<code>repeated .BytesBytesPair map_entry = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
argument_list|>
name|getMapEntryList
parameter_list|()
block|{
if|if
condition|(
name|mapEntryBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|mapEntry_
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|mapEntryBuilder_
operator|.
name|getMessageList
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .BytesBytesPair map_entry = 1;</code>        */
specifier|public
name|int
name|getMapEntryCount
parameter_list|()
block|{
if|if
condition|(
name|mapEntryBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|mapEntry_
operator|.
name|size
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|mapEntryBuilder_
operator|.
name|getCount
argument_list|()
return|;
block|}
block|}
comment|/**        *<code>repeated .BytesBytesPair map_entry = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
name|getMapEntry
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|mapEntryBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|mapEntry_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|mapEntryBuilder_
operator|.
name|getMessage
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .BytesBytesPair map_entry = 1;</code>        */
specifier|public
name|Builder
name|setMapEntry
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
name|value
parameter_list|)
block|{
if|if
condition|(
name|mapEntryBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureMapEntryIsMutable
argument_list|()
expr_stmt|;
name|mapEntry_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|mapEntryBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .BytesBytesPair map_entry = 1;</code>        */
specifier|public
name|Builder
name|setMapEntry
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|mapEntryBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMapEntryIsMutable
argument_list|()
expr_stmt|;
name|mapEntry_
operator|.
name|set
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|mapEntryBuilder_
operator|.
name|setMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .BytesBytesPair map_entry = 1;</code>        */
specifier|public
name|Builder
name|addMapEntry
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
name|value
parameter_list|)
block|{
if|if
condition|(
name|mapEntryBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureMapEntryIsMutable
argument_list|()
expr_stmt|;
name|mapEntry_
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|mapEntryBuilder_
operator|.
name|addMessage
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .BytesBytesPair map_entry = 1;</code>        */
specifier|public
name|Builder
name|addMapEntry
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
name|value
parameter_list|)
block|{
if|if
condition|(
name|mapEntryBuilder_
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|ensureMapEntryIsMutable
argument_list|()
expr_stmt|;
name|mapEntry_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|mapEntryBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .BytesBytesPair map_entry = 1;</code>        */
specifier|public
name|Builder
name|addMapEntry
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|mapEntryBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMapEntryIsMutable
argument_list|()
expr_stmt|;
name|mapEntry_
operator|.
name|add
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|mapEntryBuilder_
operator|.
name|addMessage
argument_list|(
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .BytesBytesPair map_entry = 1;</code>        */
specifier|public
name|Builder
name|addMapEntry
parameter_list|(
name|int
name|index
parameter_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
operator|.
name|Builder
name|builderForValue
parameter_list|)
block|{
if|if
condition|(
name|mapEntryBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMapEntryIsMutable
argument_list|()
expr_stmt|;
name|mapEntry_
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|mapEntryBuilder_
operator|.
name|addMessage
argument_list|(
name|index
argument_list|,
name|builderForValue
operator|.
name|build
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .BytesBytesPair map_entry = 1;</code>        */
specifier|public
name|Builder
name|addAllMapEntry
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|Iterable
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
argument_list|>
name|values
parameter_list|)
block|{
if|if
condition|(
name|mapEntryBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMapEntryIsMutable
argument_list|()
expr_stmt|;
name|super
operator|.
name|addAll
argument_list|(
name|values
argument_list|,
name|mapEntry_
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|mapEntryBuilder_
operator|.
name|addAllMessages
argument_list|(
name|values
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .BytesBytesPair map_entry = 1;</code>        */
specifier|public
name|Builder
name|clearMapEntry
parameter_list|()
block|{
if|if
condition|(
name|mapEntryBuilder_
operator|==
literal|null
condition|)
block|{
name|mapEntry_
operator|=
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyList
argument_list|()
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|mapEntryBuilder_
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .BytesBytesPair map_entry = 1;</code>        */
specifier|public
name|Builder
name|removeMapEntry
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|mapEntryBuilder_
operator|==
literal|null
condition|)
block|{
name|ensureMapEntryIsMutable
argument_list|()
expr_stmt|;
name|mapEntry_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|mapEntryBuilder_
operator|.
name|remove
argument_list|(
name|index
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**        *<code>repeated .BytesBytesPair map_entry = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
operator|.
name|Builder
name|getMapEntryBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getMapEntryFieldBuilder
argument_list|()
operator|.
name|getBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .BytesBytesPair map_entry = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPairOrBuilder
name|getMapEntryOrBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
if|if
condition|(
name|mapEntryBuilder_
operator|==
literal|null
condition|)
block|{
return|return
name|mapEntry_
operator|.
name|get
argument_list|(
name|index
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|mapEntryBuilder_
operator|.
name|getMessageOrBuilder
argument_list|(
name|index
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .BytesBytesPair map_entry = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|?
extends|extends
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPairOrBuilder
argument_list|>
name|getMapEntryOrBuilderList
parameter_list|()
block|{
if|if
condition|(
name|mapEntryBuilder_
operator|!=
literal|null
condition|)
block|{
return|return
name|mapEntryBuilder_
operator|.
name|getMessageOrBuilderList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|mapEntry_
argument_list|)
return|;
block|}
block|}
comment|/**        *<code>repeated .BytesBytesPair map_entry = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
operator|.
name|Builder
name|addMapEntryBuilder
parameter_list|()
block|{
return|return
name|getMapEntryFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .BytesBytesPair map_entry = 1;</code>        */
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
operator|.
name|Builder
name|addMapEntryBuilder
parameter_list|(
name|int
name|index
parameter_list|)
block|{
return|return
name|getMapEntryFieldBuilder
argument_list|()
operator|.
name|addBuilder
argument_list|(
name|index
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
operator|.
name|getDefaultInstance
argument_list|()
argument_list|)
return|;
block|}
comment|/**        *<code>repeated .BytesBytesPair map_entry = 1;</code>        */
specifier|public
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
operator|.
name|Builder
argument_list|>
name|getMapEntryBuilderList
parameter_list|()
block|{
return|return
name|getMapEntryFieldBuilder
argument_list|()
operator|.
name|getBuilderList
argument_list|()
return|;
block|}
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPairOrBuilder
argument_list|>
name|getMapEntryFieldBuilder
parameter_list|()
block|{
if|if
condition|(
name|mapEntryBuilder_
operator|==
literal|null
condition|)
block|{
name|mapEntryBuilder_
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|RepeatedFieldBuilder
argument_list|<
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPair
operator|.
name|Builder
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|BytesBytesPairOrBuilder
argument_list|>
argument_list|(
name|mapEntry_
argument_list|,
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
argument_list|,
name|getParentForChildren
argument_list|()
argument_list|,
name|isClean
argument_list|()
argument_list|)
expr_stmt|;
name|mapEntry_
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|mapEntryBuilder_
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:FileInfoProto)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|FileInfoProto
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:FileInfoProto)
block|}
specifier|public
interface|interface
name|FileTrailerProtoOrBuilder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|MessageOrBuilder
block|{
comment|// optional uint64 file_info_offset = 1;
comment|/**      *<code>optional uint64 file_info_offset = 1;</code>      */
name|boolean
name|hasFileInfoOffset
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint64 file_info_offset = 1;</code>      */
name|long
name|getFileInfoOffset
parameter_list|()
function_decl|;
comment|// optional uint64 load_on_open_data_offset = 2;
comment|/**      *<code>optional uint64 load_on_open_data_offset = 2;</code>      */
name|boolean
name|hasLoadOnOpenDataOffset
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint64 load_on_open_data_offset = 2;</code>      */
name|long
name|getLoadOnOpenDataOffset
parameter_list|()
function_decl|;
comment|// optional uint64 uncompressed_data_index_size = 3;
comment|/**      *<code>optional uint64 uncompressed_data_index_size = 3;</code>      */
name|boolean
name|hasUncompressedDataIndexSize
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint64 uncompressed_data_index_size = 3;</code>      */
name|long
name|getUncompressedDataIndexSize
parameter_list|()
function_decl|;
comment|// optional uint64 total_uncompressed_bytes = 4;
comment|/**      *<code>optional uint64 total_uncompressed_bytes = 4;</code>      */
name|boolean
name|hasTotalUncompressedBytes
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint64 total_uncompressed_bytes = 4;</code>      */
name|long
name|getTotalUncompressedBytes
parameter_list|()
function_decl|;
comment|// optional uint32 data_index_count = 5;
comment|/**      *<code>optional uint32 data_index_count = 5;</code>      */
name|boolean
name|hasDataIndexCount
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint32 data_index_count = 5;</code>      */
name|int
name|getDataIndexCount
parameter_list|()
function_decl|;
comment|// optional uint32 meta_index_count = 6;
comment|/**      *<code>optional uint32 meta_index_count = 6;</code>      */
name|boolean
name|hasMetaIndexCount
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint32 meta_index_count = 6;</code>      */
name|int
name|getMetaIndexCount
parameter_list|()
function_decl|;
comment|// optional uint64 entry_count = 7;
comment|/**      *<code>optional uint64 entry_count = 7;</code>      */
name|boolean
name|hasEntryCount
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint64 entry_count = 7;</code>      */
name|long
name|getEntryCount
parameter_list|()
function_decl|;
comment|// optional uint32 num_data_index_levels = 8;
comment|/**      *<code>optional uint32 num_data_index_levels = 8;</code>      */
name|boolean
name|hasNumDataIndexLevels
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint32 num_data_index_levels = 8;</code>      */
name|int
name|getNumDataIndexLevels
parameter_list|()
function_decl|;
comment|// optional uint64 first_data_block_offset = 9;
comment|/**      *<code>optional uint64 first_data_block_offset = 9;</code>      */
name|boolean
name|hasFirstDataBlockOffset
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint64 first_data_block_offset = 9;</code>      */
name|long
name|getFirstDataBlockOffset
parameter_list|()
function_decl|;
comment|// optional uint64 last_data_block_offset = 10;
comment|/**      *<code>optional uint64 last_data_block_offset = 10;</code>      */
name|boolean
name|hasLastDataBlockOffset
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint64 last_data_block_offset = 10;</code>      */
name|long
name|getLastDataBlockOffset
parameter_list|()
function_decl|;
comment|// optional string comparator_class_name = 11;
comment|/**      *<code>optional string comparator_class_name = 11;</code>      */
name|boolean
name|hasComparatorClassName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string comparator_class_name = 11;</code>      */
name|java
operator|.
name|lang
operator|.
name|String
name|getComparatorClassName
parameter_list|()
function_decl|;
comment|/**      *<code>optional string comparator_class_name = 11;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getComparatorClassNameBytes
parameter_list|()
function_decl|;
comment|// optional uint32 compression_codec = 12;
comment|/**      *<code>optional uint32 compression_codec = 12;</code>      */
name|boolean
name|hasCompressionCodec
parameter_list|()
function_decl|;
comment|/**      *<code>optional uint32 compression_codec = 12;</code>      */
name|int
name|getCompressionCodec
parameter_list|()
function_decl|;
comment|// optional bytes encryption_key = 13;
comment|/**      *<code>optional bytes encryption_key = 13;</code>      */
name|boolean
name|hasEncryptionKey
parameter_list|()
function_decl|;
comment|/**      *<code>optional bytes encryption_key = 13;</code>      */
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getEncryptionKey
parameter_list|()
function_decl|;
block|}
comment|/**    * Protobuf type {@code FileTrailerProto}    *    *<pre>    * HFile file trailer    *</pre>    */
specifier|public
specifier|static
specifier|final
class|class
name|FileTrailerProto
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
implements|implements
name|FileTrailerProtoOrBuilder
block|{
comment|// Use FileTrailerProto.newBuilder() to construct.
specifier|private
name|FileTrailerProto
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|?
argument_list|>
name|builder
parameter_list|)
block|{
name|super
argument_list|(
name|builder
argument_list|)
expr_stmt|;
name|this
operator|.
name|unknownFields
operator|=
name|builder
operator|.
name|getUnknownFields
argument_list|()
expr_stmt|;
block|}
specifier|private
name|FileTrailerProto
parameter_list|(
name|boolean
name|noInit
parameter_list|)
block|{
name|this
operator|.
name|unknownFields
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|getDefaultInstance
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|FileTrailerProto
name|defaultInstance
decl_stmt|;
specifier|public
specifier|static
name|FileTrailerProto
name|getDefaultInstance
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|public
name|FileTrailerProto
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|defaultInstance
return|;
block|}
specifier|private
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|unknownFields
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
name|getUnknownFields
parameter_list|()
block|{
return|return
name|this
operator|.
name|unknownFields
return|;
block|}
specifier|private
name|FileTrailerProto
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
name|initFields
argument_list|()
expr_stmt|;
name|int
name|mutable_bitField0_
init|=
literal|0
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|Builder
name|unknownFields
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|UnknownFieldSet
operator|.
name|newBuilder
argument_list|()
decl_stmt|;
try|try
block|{
name|boolean
name|done
init|=
literal|false
decl_stmt|;
while|while
condition|(
operator|!
name|done
condition|)
block|{
name|int
name|tag
init|=
name|input
operator|.
name|readTag
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|tag
condition|)
block|{
case|case
literal|0
case|:
name|done
operator|=
literal|true
expr_stmt|;
break|break;
default|default:
block|{
if|if
condition|(
operator|!
name|parseUnknownField
argument_list|(
name|input
argument_list|,
name|unknownFields
argument_list|,
name|extensionRegistry
argument_list|,
name|tag
argument_list|)
condition|)
block|{
name|done
operator|=
literal|true
expr_stmt|;
block|}
break|break;
block|}
case|case
literal|8
case|:
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|fileInfoOffset_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|16
case|:
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|loadOnOpenDataOffset_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|24
case|:
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|uncompressedDataIndexSize_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|32
case|:
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|totalUncompressedBytes_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|40
case|:
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|dataIndexCount_
operator|=
name|input
operator|.
name|readUInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|48
case|:
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|metaIndexCount_
operator|=
name|input
operator|.
name|readUInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|56
case|:
block|{
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|entryCount_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|64
case|:
block|{
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
name|numDataIndexLevels_
operator|=
name|input
operator|.
name|readUInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|72
case|:
block|{
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
name|firstDataBlockOffset_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|80
case|:
block|{
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
name|lastDataBlockOffset_
operator|=
name|input
operator|.
name|readUInt64
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|90
case|:
block|{
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|comparatorClassName_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|96
case|:
block|{
name|bitField0_
operator||=
literal|0x00000800
expr_stmt|;
name|compressionCodec_
operator|=
name|input
operator|.
name|readUInt32
argument_list|()
expr_stmt|;
break|break;
block|}
case|case
literal|106
case|:
block|{
name|bitField0_
operator||=
literal|0x00001000
expr_stmt|;
name|encryptionKey_
operator|=
name|input
operator|.
name|readBytes
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
block|}
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
throw|throw
name|e
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
operator|.
name|setUnfinishedMessage
argument_list|(
name|this
argument_list|)
throw|;
block|}
finally|finally
block|{
name|this
operator|.
name|unknownFields
operator|=
name|unknownFields
operator|.
name|build
argument_list|()
expr_stmt|;
name|makeExtensionsImmutable
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|internal_static_FileTrailerProto_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|internal_static_FileTrailerProto_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FileTrailerProto
argument_list|>
name|PARSER
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|AbstractParser
argument_list|<
name|FileTrailerProto
argument_list|>
argument_list|()
block|{
specifier|public
name|FileTrailerProto
name|parsePartialFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
operator|new
name|FileTrailerProto
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
block|}
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Parser
argument_list|<
name|FileTrailerProto
argument_list|>
name|getParserForType
parameter_list|()
block|{
return|return
name|PARSER
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional uint64 file_info_offset = 1;
specifier|public
specifier|static
specifier|final
name|int
name|FILE_INFO_OFFSET_FIELD_NUMBER
init|=
literal|1
decl_stmt|;
specifier|private
name|long
name|fileInfoOffset_
decl_stmt|;
comment|/**      *<code>optional uint64 file_info_offset = 1;</code>      */
specifier|public
name|boolean
name|hasFileInfoOffset
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**      *<code>optional uint64 file_info_offset = 1;</code>      */
specifier|public
name|long
name|getFileInfoOffset
parameter_list|()
block|{
return|return
name|fileInfoOffset_
return|;
block|}
comment|// optional uint64 load_on_open_data_offset = 2;
specifier|public
specifier|static
specifier|final
name|int
name|LOAD_ON_OPEN_DATA_OFFSET_FIELD_NUMBER
init|=
literal|2
decl_stmt|;
specifier|private
name|long
name|loadOnOpenDataOffset_
decl_stmt|;
comment|/**      *<code>optional uint64 load_on_open_data_offset = 2;</code>      */
specifier|public
name|boolean
name|hasLoadOnOpenDataOffset
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**      *<code>optional uint64 load_on_open_data_offset = 2;</code>      */
specifier|public
name|long
name|getLoadOnOpenDataOffset
parameter_list|()
block|{
return|return
name|loadOnOpenDataOffset_
return|;
block|}
comment|// optional uint64 uncompressed_data_index_size = 3;
specifier|public
specifier|static
specifier|final
name|int
name|UNCOMPRESSED_DATA_INDEX_SIZE_FIELD_NUMBER
init|=
literal|3
decl_stmt|;
specifier|private
name|long
name|uncompressedDataIndexSize_
decl_stmt|;
comment|/**      *<code>optional uint64 uncompressed_data_index_size = 3;</code>      */
specifier|public
name|boolean
name|hasUncompressedDataIndexSize
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**      *<code>optional uint64 uncompressed_data_index_size = 3;</code>      */
specifier|public
name|long
name|getUncompressedDataIndexSize
parameter_list|()
block|{
return|return
name|uncompressedDataIndexSize_
return|;
block|}
comment|// optional uint64 total_uncompressed_bytes = 4;
specifier|public
specifier|static
specifier|final
name|int
name|TOTAL_UNCOMPRESSED_BYTES_FIELD_NUMBER
init|=
literal|4
decl_stmt|;
specifier|private
name|long
name|totalUncompressedBytes_
decl_stmt|;
comment|/**      *<code>optional uint64 total_uncompressed_bytes = 4;</code>      */
specifier|public
name|boolean
name|hasTotalUncompressedBytes
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**      *<code>optional uint64 total_uncompressed_bytes = 4;</code>      */
specifier|public
name|long
name|getTotalUncompressedBytes
parameter_list|()
block|{
return|return
name|totalUncompressedBytes_
return|;
block|}
comment|// optional uint32 data_index_count = 5;
specifier|public
specifier|static
specifier|final
name|int
name|DATA_INDEX_COUNT_FIELD_NUMBER
init|=
literal|5
decl_stmt|;
specifier|private
name|int
name|dataIndexCount_
decl_stmt|;
comment|/**      *<code>optional uint32 data_index_count = 5;</code>      */
specifier|public
name|boolean
name|hasDataIndexCount
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**      *<code>optional uint32 data_index_count = 5;</code>      */
specifier|public
name|int
name|getDataIndexCount
parameter_list|()
block|{
return|return
name|dataIndexCount_
return|;
block|}
comment|// optional uint32 meta_index_count = 6;
specifier|public
specifier|static
specifier|final
name|int
name|META_INDEX_COUNT_FIELD_NUMBER
init|=
literal|6
decl_stmt|;
specifier|private
name|int
name|metaIndexCount_
decl_stmt|;
comment|/**      *<code>optional uint32 meta_index_count = 6;</code>      */
specifier|public
name|boolean
name|hasMetaIndexCount
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**      *<code>optional uint32 meta_index_count = 6;</code>      */
specifier|public
name|int
name|getMetaIndexCount
parameter_list|()
block|{
return|return
name|metaIndexCount_
return|;
block|}
comment|// optional uint64 entry_count = 7;
specifier|public
specifier|static
specifier|final
name|int
name|ENTRY_COUNT_FIELD_NUMBER
init|=
literal|7
decl_stmt|;
specifier|private
name|long
name|entryCount_
decl_stmt|;
comment|/**      *<code>optional uint64 entry_count = 7;</code>      */
specifier|public
name|boolean
name|hasEntryCount
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
return|;
block|}
comment|/**      *<code>optional uint64 entry_count = 7;</code>      */
specifier|public
name|long
name|getEntryCount
parameter_list|()
block|{
return|return
name|entryCount_
return|;
block|}
comment|// optional uint32 num_data_index_levels = 8;
specifier|public
specifier|static
specifier|final
name|int
name|NUM_DATA_INDEX_LEVELS_FIELD_NUMBER
init|=
literal|8
decl_stmt|;
specifier|private
name|int
name|numDataIndexLevels_
decl_stmt|;
comment|/**      *<code>optional uint32 num_data_index_levels = 8;</code>      */
specifier|public
name|boolean
name|hasNumDataIndexLevels
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
return|;
block|}
comment|/**      *<code>optional uint32 num_data_index_levels = 8;</code>      */
specifier|public
name|int
name|getNumDataIndexLevels
parameter_list|()
block|{
return|return
name|numDataIndexLevels_
return|;
block|}
comment|// optional uint64 first_data_block_offset = 9;
specifier|public
specifier|static
specifier|final
name|int
name|FIRST_DATA_BLOCK_OFFSET_FIELD_NUMBER
init|=
literal|9
decl_stmt|;
specifier|private
name|long
name|firstDataBlockOffset_
decl_stmt|;
comment|/**      *<code>optional uint64 first_data_block_offset = 9;</code>      */
specifier|public
name|boolean
name|hasFirstDataBlockOffset
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
return|;
block|}
comment|/**      *<code>optional uint64 first_data_block_offset = 9;</code>      */
specifier|public
name|long
name|getFirstDataBlockOffset
parameter_list|()
block|{
return|return
name|firstDataBlockOffset_
return|;
block|}
comment|// optional uint64 last_data_block_offset = 10;
specifier|public
specifier|static
specifier|final
name|int
name|LAST_DATA_BLOCK_OFFSET_FIELD_NUMBER
init|=
literal|10
decl_stmt|;
specifier|private
name|long
name|lastDataBlockOffset_
decl_stmt|;
comment|/**      *<code>optional uint64 last_data_block_offset = 10;</code>      */
specifier|public
name|boolean
name|hasLastDataBlockOffset
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
return|;
block|}
comment|/**      *<code>optional uint64 last_data_block_offset = 10;</code>      */
specifier|public
name|long
name|getLastDataBlockOffset
parameter_list|()
block|{
return|return
name|lastDataBlockOffset_
return|;
block|}
comment|// optional string comparator_class_name = 11;
specifier|public
specifier|static
specifier|final
name|int
name|COMPARATOR_CLASS_NAME_FIELD_NUMBER
init|=
literal|11
decl_stmt|;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|comparatorClassName_
decl_stmt|;
comment|/**      *<code>optional string comparator_class_name = 11;</code>      */
specifier|public
name|boolean
name|hasComparatorClassName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
return|;
block|}
comment|/**      *<code>optional string comparator_class_name = 11;</code>      */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getComparatorClassName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|comparatorClassName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
else|else
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|bs
init|=
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
decl_stmt|;
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
name|bs
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
if|if
condition|(
name|bs
operator|.
name|isValidUtf8
argument_list|()
condition|)
block|{
name|comparatorClassName_
operator|=
name|s
expr_stmt|;
block|}
return|return
name|s
return|;
block|}
block|}
comment|/**      *<code>optional string comparator_class_name = 11;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getComparatorClassNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|comparatorClassName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|comparatorClassName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|// optional uint32 compression_codec = 12;
specifier|public
specifier|static
specifier|final
name|int
name|COMPRESSION_CODEC_FIELD_NUMBER
init|=
literal|12
decl_stmt|;
specifier|private
name|int
name|compressionCodec_
decl_stmt|;
comment|/**      *<code>optional uint32 compression_codec = 12;</code>      */
specifier|public
name|boolean
name|hasCompressionCodec
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
return|;
block|}
comment|/**      *<code>optional uint32 compression_codec = 12;</code>      */
specifier|public
name|int
name|getCompressionCodec
parameter_list|()
block|{
return|return
name|compressionCodec_
return|;
block|}
comment|// optional bytes encryption_key = 13;
specifier|public
specifier|static
specifier|final
name|int
name|ENCRYPTION_KEY_FIELD_NUMBER
init|=
literal|13
decl_stmt|;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|encryptionKey_
decl_stmt|;
comment|/**      *<code>optional bytes encryption_key = 13;</code>      */
specifier|public
name|boolean
name|hasEncryptionKey
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00001000
operator|)
operator|==
literal|0x00001000
operator|)
return|;
block|}
comment|/**      *<code>optional bytes encryption_key = 13;</code>      */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getEncryptionKey
parameter_list|()
block|{
return|return
name|encryptionKey_
return|;
block|}
specifier|private
name|void
name|initFields
parameter_list|()
block|{
name|fileInfoOffset_
operator|=
literal|0L
expr_stmt|;
name|loadOnOpenDataOffset_
operator|=
literal|0L
expr_stmt|;
name|uncompressedDataIndexSize_
operator|=
literal|0L
expr_stmt|;
name|totalUncompressedBytes_
operator|=
literal|0L
expr_stmt|;
name|dataIndexCount_
operator|=
literal|0
expr_stmt|;
name|metaIndexCount_
operator|=
literal|0
expr_stmt|;
name|entryCount_
operator|=
literal|0L
expr_stmt|;
name|numDataIndexLevels_
operator|=
literal|0
expr_stmt|;
name|firstDataBlockOffset_
operator|=
literal|0L
expr_stmt|;
name|lastDataBlockOffset_
operator|=
literal|0L
expr_stmt|;
name|comparatorClassName_
operator|=
literal|""
expr_stmt|;
name|compressionCodec_
operator|=
literal|0
expr_stmt|;
name|encryptionKey_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
expr_stmt|;
block|}
specifier|private
name|byte
name|memoizedIsInitialized
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
name|byte
name|isInitialized
init|=
name|memoizedIsInitialized
decl_stmt|;
if|if
condition|(
name|isInitialized
operator|!=
operator|-
literal|1
condition|)
return|return
name|isInitialized
operator|==
literal|1
return|;
name|memoizedIsInitialized
operator|=
literal|1
expr_stmt|;
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|writeTo
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
name|output
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|getSerializedSize
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|1
argument_list|,
name|fileInfoOffset_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|2
argument_list|,
name|loadOnOpenDataOffset_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|3
argument_list|,
name|uncompressedDataIndexSize_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|4
argument_list|,
name|totalUncompressedBytes_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt32
argument_list|(
literal|5
argument_list|,
name|dataIndexCount_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt32
argument_list|(
literal|6
argument_list|,
name|metaIndexCount_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|7
argument_list|,
name|entryCount_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt32
argument_list|(
literal|8
argument_list|,
name|numDataIndexLevels_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|9
argument_list|,
name|firstDataBlockOffset_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt64
argument_list|(
literal|10
argument_list|,
name|lastDataBlockOffset_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|11
argument_list|,
name|getComparatorClassNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
condition|)
block|{
name|output
operator|.
name|writeUInt32
argument_list|(
literal|12
argument_list|,
name|compressionCodec_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00001000
operator|)
operator|==
literal|0x00001000
operator|)
condition|)
block|{
name|output
operator|.
name|writeBytes
argument_list|(
literal|13
argument_list|,
name|encryptionKey_
argument_list|)
expr_stmt|;
block|}
name|getUnknownFields
argument_list|()
operator|.
name|writeTo
argument_list|(
name|output
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|memoizedSerializedSize
init|=
operator|-
literal|1
decl_stmt|;
specifier|public
name|int
name|getSerializedSize
parameter_list|()
block|{
name|int
name|size
init|=
name|memoizedSerializedSize
decl_stmt|;
if|if
condition|(
name|size
operator|!=
operator|-
literal|1
condition|)
return|return
name|size
return|;
name|size
operator|=
literal|0
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|1
argument_list|,
name|fileInfoOffset_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|2
argument_list|,
name|loadOnOpenDataOffset_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|3
argument_list|,
name|uncompressedDataIndexSize_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|4
argument_list|,
name|totalUncompressedBytes_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt32Size
argument_list|(
literal|5
argument_list|,
name|dataIndexCount_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt32Size
argument_list|(
literal|6
argument_list|,
name|metaIndexCount_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|7
argument_list|,
name|entryCount_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt32Size
argument_list|(
literal|8
argument_list|,
name|numDataIndexLevels_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|9
argument_list|,
name|firstDataBlockOffset_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt64Size
argument_list|(
literal|10
argument_list|,
name|lastDataBlockOffset_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|11
argument_list|,
name|getComparatorClassNameBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeUInt32Size
argument_list|(
literal|12
argument_list|,
name|compressionCodec_
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00001000
operator|)
operator|==
literal|0x00001000
operator|)
condition|)
block|{
name|size
operator|+=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedOutputStream
operator|.
name|computeBytesSize
argument_list|(
literal|13
argument_list|,
name|encryptionKey_
argument_list|)
expr_stmt|;
block|}
name|size
operator|+=
name|getUnknownFields
argument_list|()
operator|.
name|getSerializedSize
argument_list|()
expr_stmt|;
name|memoizedSerializedSize
operator|=
name|size
expr_stmt|;
return|return
name|size
return|;
block|}
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|0L
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|java
operator|.
name|lang
operator|.
name|Object
name|writeReplace
parameter_list|()
throws|throws
name|java
operator|.
name|io
operator|.
name|ObjectStreamException
block|{
return|return
name|super
operator|.
name|writeReplace
argument_list|()
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
specifier|final
name|java
operator|.
name|lang
operator|.
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
operator|)
condition|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
name|other
init|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
operator|)
name|obj
decl_stmt|;
name|boolean
name|result
init|=
literal|true
decl_stmt|;
name|result
operator|=
name|result
operator|&&
operator|(
name|hasFileInfoOffset
argument_list|()
operator|==
name|other
operator|.
name|hasFileInfoOffset
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasFileInfoOffset
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getFileInfoOffset
argument_list|()
operator|==
name|other
operator|.
name|getFileInfoOffset
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasLoadOnOpenDataOffset
argument_list|()
operator|==
name|other
operator|.
name|hasLoadOnOpenDataOffset
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasLoadOnOpenDataOffset
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getLoadOnOpenDataOffset
argument_list|()
operator|==
name|other
operator|.
name|getLoadOnOpenDataOffset
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasUncompressedDataIndexSize
argument_list|()
operator|==
name|other
operator|.
name|hasUncompressedDataIndexSize
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasUncompressedDataIndexSize
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getUncompressedDataIndexSize
argument_list|()
operator|==
name|other
operator|.
name|getUncompressedDataIndexSize
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasTotalUncompressedBytes
argument_list|()
operator|==
name|other
operator|.
name|hasTotalUncompressedBytes
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasTotalUncompressedBytes
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getTotalUncompressedBytes
argument_list|()
operator|==
name|other
operator|.
name|getTotalUncompressedBytes
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasDataIndexCount
argument_list|()
operator|==
name|other
operator|.
name|hasDataIndexCount
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasDataIndexCount
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getDataIndexCount
argument_list|()
operator|==
name|other
operator|.
name|getDataIndexCount
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasMetaIndexCount
argument_list|()
operator|==
name|other
operator|.
name|hasMetaIndexCount
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasMetaIndexCount
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getMetaIndexCount
argument_list|()
operator|==
name|other
operator|.
name|getMetaIndexCount
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasEntryCount
argument_list|()
operator|==
name|other
operator|.
name|hasEntryCount
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasEntryCount
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getEntryCount
argument_list|()
operator|==
name|other
operator|.
name|getEntryCount
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasNumDataIndexLevels
argument_list|()
operator|==
name|other
operator|.
name|hasNumDataIndexLevels
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasNumDataIndexLevels
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getNumDataIndexLevels
argument_list|()
operator|==
name|other
operator|.
name|getNumDataIndexLevels
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasFirstDataBlockOffset
argument_list|()
operator|==
name|other
operator|.
name|hasFirstDataBlockOffset
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasFirstDataBlockOffset
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getFirstDataBlockOffset
argument_list|()
operator|==
name|other
operator|.
name|getFirstDataBlockOffset
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasLastDataBlockOffset
argument_list|()
operator|==
name|other
operator|.
name|hasLastDataBlockOffset
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasLastDataBlockOffset
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getLastDataBlockOffset
argument_list|()
operator|==
name|other
operator|.
name|getLastDataBlockOffset
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasComparatorClassName
argument_list|()
operator|==
name|other
operator|.
name|hasComparatorClassName
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasComparatorClassName
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getComparatorClassName
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getComparatorClassName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasCompressionCodec
argument_list|()
operator|==
name|other
operator|.
name|hasCompressionCodec
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasCompressionCodec
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
operator|(
name|getCompressionCodec
argument_list|()
operator|==
name|other
operator|.
name|getCompressionCodec
argument_list|()
operator|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
operator|(
name|hasEncryptionKey
argument_list|()
operator|==
name|other
operator|.
name|hasEncryptionKey
argument_list|()
operator|)
expr_stmt|;
if|if
condition|(
name|hasEncryptionKey
argument_list|()
condition|)
block|{
name|result
operator|=
name|result
operator|&&
name|getEncryptionKey
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getEncryptionKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|result
operator|=
name|result
operator|&&
name|getUnknownFields
argument_list|()
operator|.
name|equals
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|private
name|int
name|memoizedHashCode
init|=
literal|0
decl_stmt|;
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
if|if
condition|(
name|memoizedHashCode
operator|!=
literal|0
condition|)
block|{
return|return
name|memoizedHashCode
return|;
block|}
name|int
name|hash
init|=
literal|41
decl_stmt|;
name|hash
operator|=
operator|(
literal|19
operator|*
name|hash
operator|)
operator|+
name|getDescriptorForType
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
if|if
condition|(
name|hasFileInfoOffset
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|FILE_INFO_OFFSET_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashLong
argument_list|(
name|getFileInfoOffset
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasLoadOnOpenDataOffset
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|LOAD_ON_OPEN_DATA_OFFSET_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashLong
argument_list|(
name|getLoadOnOpenDataOffset
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasUncompressedDataIndexSize
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|UNCOMPRESSED_DATA_INDEX_SIZE_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashLong
argument_list|(
name|getUncompressedDataIndexSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasTotalUncompressedBytes
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|TOTAL_UNCOMPRESSED_BYTES_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashLong
argument_list|(
name|getTotalUncompressedBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasDataIndexCount
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|DATA_INDEX_COUNT_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getDataIndexCount
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasMetaIndexCount
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|META_INDEX_COUNT_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getMetaIndexCount
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasEntryCount
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|ENTRY_COUNT_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashLong
argument_list|(
name|getEntryCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasNumDataIndexLevels
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|NUM_DATA_INDEX_LEVELS_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getNumDataIndexLevels
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasFirstDataBlockOffset
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|FIRST_DATA_BLOCK_OFFSET_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashLong
argument_list|(
name|getFirstDataBlockOffset
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasLastDataBlockOffset
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|LAST_DATA_BLOCK_OFFSET_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|hashLong
argument_list|(
name|getLastDataBlockOffset
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasComparatorClassName
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|COMPARATOR_CLASS_NAME_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getComparatorClassName
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasCompressionCodec
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|COMPRESSION_CODEC_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getCompressionCodec
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|hasEncryptionKey
argument_list|()
condition|)
block|{
name|hash
operator|=
operator|(
literal|37
operator|*
name|hash
operator|)
operator|+
name|ENCRYPTION_KEY_FIELD_NUMBER
expr_stmt|;
name|hash
operator|=
operator|(
literal|53
operator|*
name|hash
operator|)
operator|+
name|getEncryptionKey
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
block|}
name|hash
operator|=
operator|(
literal|29
operator|*
name|hash
operator|)
operator|+
name|getUnknownFields
argument_list|()
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|memoizedHashCode
operator|=
name|hash
expr_stmt|;
return|return
name|hash
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
name|parseFrom
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|data
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
name|parseFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
name|parseDelimitedFrom
parameter_list|(
name|java
operator|.
name|io
operator|.
name|InputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseDelimitedFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
name|parseFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
return|return
name|PARSER
operator|.
name|parseFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|()
block|{
return|return
name|Builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|newBuilderForType
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|()
return|;
block|}
specifier|public
specifier|static
name|Builder
name|newBuilder
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
name|prototype
parameter_list|)
block|{
return|return
name|newBuilder
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|prototype
argument_list|)
return|;
block|}
specifier|public
name|Builder
name|toBuilder
parameter_list|()
block|{
return|return
name|newBuilder
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|java
operator|.
name|lang
operator|.
name|Override
specifier|protected
name|Builder
name|newBuilderForType
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|Builder
name|builder
init|=
operator|new
name|Builder
argument_list|(
name|parent
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
comment|/**      * Protobuf type {@code FileTrailerProto}      *      *<pre>      * HFile file trailer      *</pre>      */
specifier|public
specifier|static
specifier|final
class|class
name|Builder
extends|extends
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|Builder
argument_list|<
name|Builder
argument_list|>
implements|implements
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProtoOrBuilder
block|{
specifier|public
specifier|static
specifier|final
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|internal_static_FileTrailerProto_descriptor
return|;
block|}
specifier|protected
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internalGetFieldAccessorTable
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|internal_static_FileTrailerProto_fieldAccessorTable
operator|.
name|ensureFieldAccessorsInitialized
argument_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
operator|.
name|class
argument_list|,
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
operator|.
name|Builder
operator|.
name|class
argument_list|)
return|;
block|}
comment|// Construct using org.apache.hadoop.hbase.protobuf.generated.HFileProtos.FileTrailerProto.newBuilder()
specifier|private
name|Builder
parameter_list|()
block|{
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Builder
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|BuilderParent
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|maybeForceBuilderInitialization
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|maybeForceBuilderInitialization
parameter_list|()
block|{
if|if
condition|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|alwaysUseFieldBuilders
condition|)
block|{         }
block|}
specifier|private
specifier|static
name|Builder
name|create
parameter_list|()
block|{
return|return
operator|new
name|Builder
argument_list|()
return|;
block|}
specifier|public
name|Builder
name|clear
parameter_list|()
block|{
name|super
operator|.
name|clear
argument_list|()
expr_stmt|;
name|fileInfoOffset_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|loadOnOpenDataOffset_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|uncompressedDataIndexSize_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|totalUncompressedBytes_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|dataIndexCount_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|metaIndexCount_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|entryCount_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|numDataIndexLevels_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|firstDataBlockOffset_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
name|lastDataBlockOffset_
operator|=
literal|0L
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
name|comparatorClassName_
operator|=
literal|""
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000400
operator|)
expr_stmt|;
name|compressionCodec_
operator|=
literal|0
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000800
operator|)
expr_stmt|;
name|encryptionKey_
operator|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
expr_stmt|;
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00001000
operator|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Builder
name|clone
parameter_list|()
block|{
return|return
name|create
argument_list|()
operator|.
name|mergeFrom
argument_list|(
name|buildPartial
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|getDescriptorForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|internal_static_FileTrailerProto_descriptor
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
name|getDefaultInstanceForType
parameter_list|()
block|{
return|return
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
operator|.
name|getDefaultInstance
argument_list|()
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
name|build
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
name|result
init|=
name|buildPartial
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|result
operator|.
name|isInitialized
argument_list|()
condition|)
block|{
throw|throw
name|newUninitializedMessageException
argument_list|(
name|result
argument_list|)
throw|;
block|}
return|return
name|result
return|;
block|}
specifier|public
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
name|buildPartial
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
name|result
init|=
operator|new
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
argument_list|(
name|this
argument_list|)
decl_stmt|;
name|int
name|from_bitField0_
init|=
name|bitField0_
decl_stmt|;
name|int
name|to_bitField0_
init|=
literal|0
decl_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000001
expr_stmt|;
block|}
name|result
operator|.
name|fileInfoOffset_
operator|=
name|fileInfoOffset_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000002
expr_stmt|;
block|}
name|result
operator|.
name|loadOnOpenDataOffset_
operator|=
name|loadOnOpenDataOffset_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000004
expr_stmt|;
block|}
name|result
operator|.
name|uncompressedDataIndexSize_
operator|=
name|uncompressedDataIndexSize_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000008
expr_stmt|;
block|}
name|result
operator|.
name|totalUncompressedBytes_
operator|=
name|totalUncompressedBytes_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000010
expr_stmt|;
block|}
name|result
operator|.
name|dataIndexCount_
operator|=
name|dataIndexCount_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000020
expr_stmt|;
block|}
name|result
operator|.
name|metaIndexCount_
operator|=
name|metaIndexCount_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000040
expr_stmt|;
block|}
name|result
operator|.
name|entryCount_
operator|=
name|entryCount_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000080
expr_stmt|;
block|}
name|result
operator|.
name|numDataIndexLevels_
operator|=
name|numDataIndexLevels_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000100
expr_stmt|;
block|}
name|result
operator|.
name|firstDataBlockOffset_
operator|=
name|firstDataBlockOffset_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000200
expr_stmt|;
block|}
name|result
operator|.
name|lastDataBlockOffset_
operator|=
name|lastDataBlockOffset_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000400
expr_stmt|;
block|}
name|result
operator|.
name|comparatorClassName_
operator|=
name|comparatorClassName_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00000800
expr_stmt|;
block|}
name|result
operator|.
name|compressionCodec_
operator|=
name|compressionCodec_
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|from_bitField0_
operator|&
literal|0x00001000
operator|)
operator|==
literal|0x00001000
operator|)
condition|)
block|{
name|to_bitField0_
operator||=
literal|0x00001000
expr_stmt|;
block|}
name|result
operator|.
name|encryptionKey_
operator|=
name|encryptionKey_
expr_stmt|;
name|result
operator|.
name|bitField0_
operator|=
name|to_bitField0_
expr_stmt|;
name|onBuilt
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Message
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|instanceof
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
condition|)
block|{
return|return
name|mergeFrom
argument_list|(
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
operator|)
name|other
argument_list|)
return|;
block|}
else|else
block|{
name|super
operator|.
name|mergeFrom
argument_list|(
name|other
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
name|other
parameter_list|)
block|{
if|if
condition|(
name|other
operator|==
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
operator|.
name|getDefaultInstance
argument_list|()
condition|)
return|return
name|this
return|;
if|if
condition|(
name|other
operator|.
name|hasFileInfoOffset
argument_list|()
condition|)
block|{
name|setFileInfoOffset
argument_list|(
name|other
operator|.
name|getFileInfoOffset
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasLoadOnOpenDataOffset
argument_list|()
condition|)
block|{
name|setLoadOnOpenDataOffset
argument_list|(
name|other
operator|.
name|getLoadOnOpenDataOffset
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasUncompressedDataIndexSize
argument_list|()
condition|)
block|{
name|setUncompressedDataIndexSize
argument_list|(
name|other
operator|.
name|getUncompressedDataIndexSize
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasTotalUncompressedBytes
argument_list|()
condition|)
block|{
name|setTotalUncompressedBytes
argument_list|(
name|other
operator|.
name|getTotalUncompressedBytes
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasDataIndexCount
argument_list|()
condition|)
block|{
name|setDataIndexCount
argument_list|(
name|other
operator|.
name|getDataIndexCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasMetaIndexCount
argument_list|()
condition|)
block|{
name|setMetaIndexCount
argument_list|(
name|other
operator|.
name|getMetaIndexCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasEntryCount
argument_list|()
condition|)
block|{
name|setEntryCount
argument_list|(
name|other
operator|.
name|getEntryCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasNumDataIndexLevels
argument_list|()
condition|)
block|{
name|setNumDataIndexLevels
argument_list|(
name|other
operator|.
name|getNumDataIndexLevels
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasFirstDataBlockOffset
argument_list|()
condition|)
block|{
name|setFirstDataBlockOffset
argument_list|(
name|other
operator|.
name|getFirstDataBlockOffset
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasLastDataBlockOffset
argument_list|()
condition|)
block|{
name|setLastDataBlockOffset
argument_list|(
name|other
operator|.
name|getLastDataBlockOffset
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasComparatorClassName
argument_list|()
condition|)
block|{
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|comparatorClassName_
operator|=
name|other
operator|.
name|comparatorClassName_
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasCompressionCodec
argument_list|()
condition|)
block|{
name|setCompressionCodec
argument_list|(
name|other
operator|.
name|getCompressionCodec
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|other
operator|.
name|hasEncryptionKey
argument_list|()
condition|)
block|{
name|setEncryptionKey
argument_list|(
name|other
operator|.
name|getEncryptionKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|mergeUnknownFields
argument_list|(
name|other
operator|.
name|getUnknownFields
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
specifier|final
name|boolean
name|isInitialized
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|Builder
name|mergeFrom
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|CodedInputStream
name|input
parameter_list|,
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistryLite
name|extensionRegistry
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
name|parsedMessage
init|=
literal|null
decl_stmt|;
try|try
block|{
name|parsedMessage
operator|=
name|PARSER
operator|.
name|parsePartialFrom
argument_list|(
name|input
argument_list|,
name|extensionRegistry
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|InvalidProtocolBufferException
name|e
parameter_list|)
block|{
name|parsedMessage
operator|=
operator|(
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HFileProtos
operator|.
name|FileTrailerProto
operator|)
name|e
operator|.
name|getUnfinishedMessage
argument_list|()
expr_stmt|;
throw|throw
name|e
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|parsedMessage
operator|!=
literal|null
condition|)
block|{
name|mergeFrom
argument_list|(
name|parsedMessage
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
specifier|private
name|int
name|bitField0_
decl_stmt|;
comment|// optional uint64 file_info_offset = 1;
specifier|private
name|long
name|fileInfoOffset_
decl_stmt|;
comment|/**        *<code>optional uint64 file_info_offset = 1;</code>        */
specifier|public
name|boolean
name|hasFileInfoOffset
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000001
operator|)
operator|==
literal|0x00000001
operator|)
return|;
block|}
comment|/**        *<code>optional uint64 file_info_offset = 1;</code>        */
specifier|public
name|long
name|getFileInfoOffset
parameter_list|()
block|{
return|return
name|fileInfoOffset_
return|;
block|}
comment|/**        *<code>optional uint64 file_info_offset = 1;</code>        */
specifier|public
name|Builder
name|setFileInfoOffset
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000001
expr_stmt|;
name|fileInfoOffset_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint64 file_info_offset = 1;</code>        */
specifier|public
name|Builder
name|clearFileInfoOffset
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000001
operator|)
expr_stmt|;
name|fileInfoOffset_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint64 load_on_open_data_offset = 2;
specifier|private
name|long
name|loadOnOpenDataOffset_
decl_stmt|;
comment|/**        *<code>optional uint64 load_on_open_data_offset = 2;</code>        */
specifier|public
name|boolean
name|hasLoadOnOpenDataOffset
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000002
operator|)
operator|==
literal|0x00000002
operator|)
return|;
block|}
comment|/**        *<code>optional uint64 load_on_open_data_offset = 2;</code>        */
specifier|public
name|long
name|getLoadOnOpenDataOffset
parameter_list|()
block|{
return|return
name|loadOnOpenDataOffset_
return|;
block|}
comment|/**        *<code>optional uint64 load_on_open_data_offset = 2;</code>        */
specifier|public
name|Builder
name|setLoadOnOpenDataOffset
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000002
expr_stmt|;
name|loadOnOpenDataOffset_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint64 load_on_open_data_offset = 2;</code>        */
specifier|public
name|Builder
name|clearLoadOnOpenDataOffset
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000002
operator|)
expr_stmt|;
name|loadOnOpenDataOffset_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint64 uncompressed_data_index_size = 3;
specifier|private
name|long
name|uncompressedDataIndexSize_
decl_stmt|;
comment|/**        *<code>optional uint64 uncompressed_data_index_size = 3;</code>        */
specifier|public
name|boolean
name|hasUncompressedDataIndexSize
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000004
operator|)
operator|==
literal|0x00000004
operator|)
return|;
block|}
comment|/**        *<code>optional uint64 uncompressed_data_index_size = 3;</code>        */
specifier|public
name|long
name|getUncompressedDataIndexSize
parameter_list|()
block|{
return|return
name|uncompressedDataIndexSize_
return|;
block|}
comment|/**        *<code>optional uint64 uncompressed_data_index_size = 3;</code>        */
specifier|public
name|Builder
name|setUncompressedDataIndexSize
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000004
expr_stmt|;
name|uncompressedDataIndexSize_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint64 uncompressed_data_index_size = 3;</code>        */
specifier|public
name|Builder
name|clearUncompressedDataIndexSize
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000004
operator|)
expr_stmt|;
name|uncompressedDataIndexSize_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint64 total_uncompressed_bytes = 4;
specifier|private
name|long
name|totalUncompressedBytes_
decl_stmt|;
comment|/**        *<code>optional uint64 total_uncompressed_bytes = 4;</code>        */
specifier|public
name|boolean
name|hasTotalUncompressedBytes
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000008
operator|)
operator|==
literal|0x00000008
operator|)
return|;
block|}
comment|/**        *<code>optional uint64 total_uncompressed_bytes = 4;</code>        */
specifier|public
name|long
name|getTotalUncompressedBytes
parameter_list|()
block|{
return|return
name|totalUncompressedBytes_
return|;
block|}
comment|/**        *<code>optional uint64 total_uncompressed_bytes = 4;</code>        */
specifier|public
name|Builder
name|setTotalUncompressedBytes
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000008
expr_stmt|;
name|totalUncompressedBytes_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint64 total_uncompressed_bytes = 4;</code>        */
specifier|public
name|Builder
name|clearTotalUncompressedBytes
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000008
operator|)
expr_stmt|;
name|totalUncompressedBytes_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint32 data_index_count = 5;
specifier|private
name|int
name|dataIndexCount_
decl_stmt|;
comment|/**        *<code>optional uint32 data_index_count = 5;</code>        */
specifier|public
name|boolean
name|hasDataIndexCount
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000010
operator|)
operator|==
literal|0x00000010
operator|)
return|;
block|}
comment|/**        *<code>optional uint32 data_index_count = 5;</code>        */
specifier|public
name|int
name|getDataIndexCount
parameter_list|()
block|{
return|return
name|dataIndexCount_
return|;
block|}
comment|/**        *<code>optional uint32 data_index_count = 5;</code>        */
specifier|public
name|Builder
name|setDataIndexCount
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000010
expr_stmt|;
name|dataIndexCount_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint32 data_index_count = 5;</code>        */
specifier|public
name|Builder
name|clearDataIndexCount
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000010
operator|)
expr_stmt|;
name|dataIndexCount_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint32 meta_index_count = 6;
specifier|private
name|int
name|metaIndexCount_
decl_stmt|;
comment|/**        *<code>optional uint32 meta_index_count = 6;</code>        */
specifier|public
name|boolean
name|hasMetaIndexCount
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000020
operator|)
operator|==
literal|0x00000020
operator|)
return|;
block|}
comment|/**        *<code>optional uint32 meta_index_count = 6;</code>        */
specifier|public
name|int
name|getMetaIndexCount
parameter_list|()
block|{
return|return
name|metaIndexCount_
return|;
block|}
comment|/**        *<code>optional uint32 meta_index_count = 6;</code>        */
specifier|public
name|Builder
name|setMetaIndexCount
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000020
expr_stmt|;
name|metaIndexCount_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint32 meta_index_count = 6;</code>        */
specifier|public
name|Builder
name|clearMetaIndexCount
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000020
operator|)
expr_stmt|;
name|metaIndexCount_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint64 entry_count = 7;
specifier|private
name|long
name|entryCount_
decl_stmt|;
comment|/**        *<code>optional uint64 entry_count = 7;</code>        */
specifier|public
name|boolean
name|hasEntryCount
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000040
operator|)
operator|==
literal|0x00000040
operator|)
return|;
block|}
comment|/**        *<code>optional uint64 entry_count = 7;</code>        */
specifier|public
name|long
name|getEntryCount
parameter_list|()
block|{
return|return
name|entryCount_
return|;
block|}
comment|/**        *<code>optional uint64 entry_count = 7;</code>        */
specifier|public
name|Builder
name|setEntryCount
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000040
expr_stmt|;
name|entryCount_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint64 entry_count = 7;</code>        */
specifier|public
name|Builder
name|clearEntryCount
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000040
operator|)
expr_stmt|;
name|entryCount_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint32 num_data_index_levels = 8;
specifier|private
name|int
name|numDataIndexLevels_
decl_stmt|;
comment|/**        *<code>optional uint32 num_data_index_levels = 8;</code>        */
specifier|public
name|boolean
name|hasNumDataIndexLevels
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000080
operator|)
operator|==
literal|0x00000080
operator|)
return|;
block|}
comment|/**        *<code>optional uint32 num_data_index_levels = 8;</code>        */
specifier|public
name|int
name|getNumDataIndexLevels
parameter_list|()
block|{
return|return
name|numDataIndexLevels_
return|;
block|}
comment|/**        *<code>optional uint32 num_data_index_levels = 8;</code>        */
specifier|public
name|Builder
name|setNumDataIndexLevels
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000080
expr_stmt|;
name|numDataIndexLevels_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint32 num_data_index_levels = 8;</code>        */
specifier|public
name|Builder
name|clearNumDataIndexLevels
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000080
operator|)
expr_stmt|;
name|numDataIndexLevels_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint64 first_data_block_offset = 9;
specifier|private
name|long
name|firstDataBlockOffset_
decl_stmt|;
comment|/**        *<code>optional uint64 first_data_block_offset = 9;</code>        */
specifier|public
name|boolean
name|hasFirstDataBlockOffset
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000100
operator|)
operator|==
literal|0x00000100
operator|)
return|;
block|}
comment|/**        *<code>optional uint64 first_data_block_offset = 9;</code>        */
specifier|public
name|long
name|getFirstDataBlockOffset
parameter_list|()
block|{
return|return
name|firstDataBlockOffset_
return|;
block|}
comment|/**        *<code>optional uint64 first_data_block_offset = 9;</code>        */
specifier|public
name|Builder
name|setFirstDataBlockOffset
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000100
expr_stmt|;
name|firstDataBlockOffset_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint64 first_data_block_offset = 9;</code>        */
specifier|public
name|Builder
name|clearFirstDataBlockOffset
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000100
operator|)
expr_stmt|;
name|firstDataBlockOffset_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint64 last_data_block_offset = 10;
specifier|private
name|long
name|lastDataBlockOffset_
decl_stmt|;
comment|/**        *<code>optional uint64 last_data_block_offset = 10;</code>        */
specifier|public
name|boolean
name|hasLastDataBlockOffset
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000200
operator|)
operator|==
literal|0x00000200
operator|)
return|;
block|}
comment|/**        *<code>optional uint64 last_data_block_offset = 10;</code>        */
specifier|public
name|long
name|getLastDataBlockOffset
parameter_list|()
block|{
return|return
name|lastDataBlockOffset_
return|;
block|}
comment|/**        *<code>optional uint64 last_data_block_offset = 10;</code>        */
specifier|public
name|Builder
name|setLastDataBlockOffset
parameter_list|(
name|long
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000200
expr_stmt|;
name|lastDataBlockOffset_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint64 last_data_block_offset = 10;</code>        */
specifier|public
name|Builder
name|clearLastDataBlockOffset
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000200
operator|)
expr_stmt|;
name|lastDataBlockOffset_
operator|=
literal|0L
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional string comparator_class_name = 11;
specifier|private
name|java
operator|.
name|lang
operator|.
name|Object
name|comparatorClassName_
init|=
literal|""
decl_stmt|;
comment|/**        *<code>optional string comparator_class_name = 11;</code>        */
specifier|public
name|boolean
name|hasComparatorClassName
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000400
operator|)
operator|==
literal|0x00000400
operator|)
return|;
block|}
comment|/**        *<code>optional string comparator_class_name = 11;</code>        */
specifier|public
name|java
operator|.
name|lang
operator|.
name|String
name|getComparatorClassName
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|comparatorClassName_
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|ref
operator|instanceof
name|java
operator|.
name|lang
operator|.
name|String
operator|)
condition|)
block|{
name|java
operator|.
name|lang
operator|.
name|String
name|s
init|=
operator|(
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
operator|)
operator|.
name|toStringUtf8
argument_list|()
decl_stmt|;
name|comparatorClassName_
operator|=
name|s
expr_stmt|;
return|return
name|s
return|;
block|}
else|else
block|{
return|return
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string comparator_class_name = 11;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getComparatorClassNameBytes
parameter_list|()
block|{
name|java
operator|.
name|lang
operator|.
name|Object
name|ref
init|=
name|comparatorClassName_
decl_stmt|;
if|if
condition|(
name|ref
operator|instanceof
name|String
condition|)
block|{
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|b
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|copyFromUtf8
argument_list|(
operator|(
name|java
operator|.
name|lang
operator|.
name|String
operator|)
name|ref
argument_list|)
decl_stmt|;
name|comparatorClassName_
operator|=
name|b
expr_stmt|;
return|return
name|b
return|;
block|}
else|else
block|{
return|return
operator|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|)
name|ref
return|;
block|}
block|}
comment|/**        *<code>optional string comparator_class_name = 11;</code>        */
specifier|public
name|Builder
name|setComparatorClassName
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|comparatorClassName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string comparator_class_name = 11;</code>        */
specifier|public
name|Builder
name|clearComparatorClassName
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000400
operator|)
expr_stmt|;
name|comparatorClassName_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getComparatorClassName
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional string comparator_class_name = 11;</code>        */
specifier|public
name|Builder
name|setComparatorClassNameBytes
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00000400
expr_stmt|;
name|comparatorClassName_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional uint32 compression_codec = 12;
specifier|private
name|int
name|compressionCodec_
decl_stmt|;
comment|/**        *<code>optional uint32 compression_codec = 12;</code>        */
specifier|public
name|boolean
name|hasCompressionCodec
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00000800
operator|)
operator|==
literal|0x00000800
operator|)
return|;
block|}
comment|/**        *<code>optional uint32 compression_codec = 12;</code>        */
specifier|public
name|int
name|getCompressionCodec
parameter_list|()
block|{
return|return
name|compressionCodec_
return|;
block|}
comment|/**        *<code>optional uint32 compression_codec = 12;</code>        */
specifier|public
name|Builder
name|setCompressionCodec
parameter_list|(
name|int
name|value
parameter_list|)
block|{
name|bitField0_
operator||=
literal|0x00000800
expr_stmt|;
name|compressionCodec_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional uint32 compression_codec = 12;</code>        */
specifier|public
name|Builder
name|clearCompressionCodec
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00000800
operator|)
expr_stmt|;
name|compressionCodec_
operator|=
literal|0
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// optional bytes encryption_key = 13;
specifier|private
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|encryptionKey_
init|=
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
operator|.
name|EMPTY
decl_stmt|;
comment|/**        *<code>optional bytes encryption_key = 13;</code>        */
specifier|public
name|boolean
name|hasEncryptionKey
parameter_list|()
block|{
return|return
operator|(
operator|(
name|bitField0_
operator|&
literal|0x00001000
operator|)
operator|==
literal|0x00001000
operator|)
return|;
block|}
comment|/**        *<code>optional bytes encryption_key = 13;</code>        */
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|getEncryptionKey
parameter_list|()
block|{
return|return
name|encryptionKey_
return|;
block|}
comment|/**        *<code>optional bytes encryption_key = 13;</code>        */
specifier|public
name|Builder
name|setEncryptionKey
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ByteString
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|()
throw|;
block|}
name|bitField0_
operator||=
literal|0x00001000
expr_stmt|;
name|encryptionKey_
operator|=
name|value
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**        *<code>optional bytes encryption_key = 13;</code>        */
specifier|public
name|Builder
name|clearEncryptionKey
parameter_list|()
block|{
name|bitField0_
operator|=
operator|(
name|bitField0_
operator|&
operator|~
literal|0x00001000
operator|)
expr_stmt|;
name|encryptionKey_
operator|=
name|getDefaultInstance
argument_list|()
operator|.
name|getEncryptionKey
argument_list|()
expr_stmt|;
name|onChanged
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|// @@protoc_insertion_point(builder_scope:FileTrailerProto)
block|}
static|static
block|{
name|defaultInstance
operator|=
operator|new
name|FileTrailerProto
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|defaultInstance
operator|.
name|initFields
argument_list|()
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(class_scope:FileTrailerProto)
block|}
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_FileInfoProto_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_FileInfoProto_fieldAccessorTable
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|Descriptor
name|internal_static_FileTrailerProto_descriptor
decl_stmt|;
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
name|internal_static_FileTrailerProto_fieldAccessorTable
decl_stmt|;
specifier|public
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
name|getDescriptor
parameter_list|()
block|{
return|return
name|descriptor
return|;
block|}
specifier|private
specifier|static
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
name|descriptor
decl_stmt|;
static|static
block|{
name|java
operator|.
name|lang
operator|.
name|String
index|[]
name|descriptorData
init|=
block|{
literal|"\n\013HFile.proto\032\013HBase.proto\"3\n\rFileInfoPr"
operator|+
literal|"oto\022\"\n\tmap_entry\030\001 \003(\0132\017.BytesBytesPair\""
operator|+
literal|"\221\003\n\020FileTrailerProto\022\030\n\020file_info_offset"
operator|+
literal|"\030\001 \001(\004\022 \n\030load_on_open_data_offset\030\002 \001(\004"
operator|+
literal|"\022$\n\034uncompressed_data_index_size\030\003 \001(\004\022 "
operator|+
literal|"\n\030total_uncompressed_bytes\030\004 \001(\004\022\030\n\020data"
operator|+
literal|"_index_count\030\005 \001(\r\022\030\n\020meta_index_count\030\006"
operator|+
literal|" \001(\r\022\023\n\013entry_count\030\007 \001(\004\022\035\n\025num_data_in"
operator|+
literal|"dex_levels\030\010 \001(\r\022\037\n\027first_data_block_off"
operator|+
literal|"set\030\t \001(\004\022\036\n\026last_data_block_offset\030\n \001("
block|,
literal|"\004\022\035\n\025comparator_class_name\030\013 \001(\t\022\031\n\021comp"
operator|+
literal|"ression_codec\030\014 \001(\r\022\026\n\016encryption_key\030\r "
operator|+
literal|"\001(\014BA\n*org.apache.hadoop.hbase.protobuf."
operator|+
literal|"generatedB\013HFileProtosH\001\210\001\001\240\001\001"
block|}
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
operator|.
name|InternalDescriptorAssigner
name|assigner
init|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
operator|.
name|InternalDescriptorAssigner
argument_list|()
block|{
specifier|public
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|ExtensionRegistry
name|assignDescriptors
parameter_list|(
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
name|root
parameter_list|)
block|{
name|descriptor
operator|=
name|root
expr_stmt|;
name|internal_static_FileInfoProto_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|internal_static_FileInfoProto_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_FileInfoProto_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"MapEntry"
block|, }
argument_list|)
expr_stmt|;
name|internal_static_FileTrailerProto_descriptor
operator|=
name|getDescriptor
argument_list|()
operator|.
name|getMessageTypes
argument_list|()
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|internal_static_FileTrailerProto_fieldAccessorTable
operator|=
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|GeneratedMessage
operator|.
name|FieldAccessorTable
argument_list|(
name|internal_static_FileTrailerProto_descriptor
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|String
index|[]
block|{
literal|"FileInfoOffset"
block|,
literal|"LoadOnOpenDataOffset"
block|,
literal|"UncompressedDataIndexSize"
block|,
literal|"TotalUncompressedBytes"
block|,
literal|"DataIndexCount"
block|,
literal|"MetaIndexCount"
block|,
literal|"EntryCount"
block|,
literal|"NumDataIndexLevels"
block|,
literal|"FirstDataBlockOffset"
block|,
literal|"LastDataBlockOffset"
block|,
literal|"ComparatorClassName"
block|,
literal|"CompressionCodec"
block|,
literal|"EncryptionKey"
block|, }
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
decl_stmt|;
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
operator|.
name|internalBuildGeneratedFileFrom
argument_list|(
name|descriptorData
argument_list|,
operator|new
name|com
operator|.
name|google
operator|.
name|protobuf
operator|.
name|Descriptors
operator|.
name|FileDescriptor
index|[]
block|{
name|org
operator|.
name|apache
operator|.
name|hadoop
operator|.
name|hbase
operator|.
name|protobuf
operator|.
name|generated
operator|.
name|HBaseProtos
operator|.
name|getDescriptor
argument_list|()
block|,         }
argument_list|,
name|assigner
argument_list|)
expr_stmt|;
block|}
comment|// @@protoc_insertion_point(outer_class_scope)
block|}
end_class

end_unit

